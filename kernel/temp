warning: unused import: `arch::asm`
 --> src/init.rs:5:12
  |
5 | use core::{arch::asm, sync::atomic::{AtomicBool, AtomicU64, Ordering}};
  |            ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `model_specific::GsBase` and `segmentation::GS`
  --> src/init.rs:11:25
   |
11 | use x86_64::registers::{model_specific::GsBase, segmentation::GS};
   |                         ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused imports: `MMAP_ANON_SIMPLE`, `PRINT_EXIT`, `PROCESS_TABLE`, `TEST_64_PRINT_EXIT`, `TEST_64_SIMPLE_EXIT`, `TEST_SYSCALL_PRINT`, `print_process_table`, `run_process_ring3`, `schedule_process`, `serial_println`, and `x2apic`
  --> src/init.rs:14:41
   |
14 | ...constants::processes::{FORK_SIMPLE, MMAP_ANON_SIMPLE, PRINT_EXIT, TEST_64_PRINT_EXIT, TEST_64_SIMPLE_EXIT, TEST_SYSCALL_PRINT}, debug, devices, events::{register_event_runner, run_loop, schedule_process, schedule_process_on}, interrupts::{self, idt, x2apic}, ...
   |                                        ^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^                                                             ^^^^^^^^^^^^^^^^                                                ^^^^^^
15 | ...    self,
16 | ...    process::{create_process, print_process_table, run_process_ring3, PROCESS_TABLE},
   |                                  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^
17 | ...}, serial_println, trace
   |       ^^^^^^^^^^^^^^

warning: unused import: `GsBase`
  --> src/interrupts/gdt.rs:18:36
   |
18 |     }, registers::model_specific::{GsBase, KernelGsBase}, structures::{
   |                                    ^^^^^^

warning: unused imports: `SYSCALL_FORK`, `SYSCALL_NANOSLEEP`, `fork::sys_fork`, and `sys_nanosleep`
  --> src/interrupts/idt.rs:23:113
   |
23 | ...:{SYSCALL_HANDLER, TIMER_VECTOR, TLB_SHOOTDOWN_VECTOR}, memory::PAGE_SIZE, syscalls::{SYSCALL_EXIT, SYSCALL_FORK, SYSCALL_MMAP, SYSCALL_NANOSLEEP, S...
   |                                                                                                        ^^^^^^^^^^^^                ^^^^^^^^^^^^^^^^^
...
30 | ...::{fork::sys_fork, mmap::sys_mmap, syscall_handlers::{sys_exit, sys_nanosleep, sys_print}},
   |       ^^^^^^^^^^^^^^                                               ^^^^^^^^^^^^^

warning: unused import: `serial_println`
  --> src/interrupts/x2apic.rs:10:88
   |
10 | ...NCY, MAX_CORES}, interrupts::gdt, serial_println, syscalls::syscall_handlers::sysc...
   |                                      ^^^^^^^^^^^^^^

warning: unused import: `VirtAddr`
  --> src/interrupts/x2apic.rs:15:96
   |
15 | ...ecific::{GsBase, KernelGsBase, Msr}, VirtAddr};
   |                                         ^^^^^^^^

warning: unused import: `super::gdt::TSSS`
  --> src/interrupts/x2apic.rs:17:5
   |
17 | use super::gdt::TSSS;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `serial_print`
 --> src/memory/bitmap_frame_allocator.rs:8:87
  |
8 | ...ZE, FULL_BITMAP_ENTRY, PAGE_SIZE}, serial_print, serial_println
  |                                       ^^^^^^^^^^^^

warning: unused import: `self`
 --> src/memory/heap.rs:7:33
  |
7 |         buddy_frame_allocator::{self, BuddyFrameAllocator},
  |                                 ^^^^

warning: unused import: `core::ptr::null`
 --> src/memory/paging.rs:5:5
  |
5 | use core::ptr::null;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `serial_println`
  --> src/memory/paging.rs:21:5
   |
21 |     serial_println,
   |     ^^^^^^^^^^^^^^

warning: unused import: `serial_println`
 --> src/processes/loader.rs:9:8
  |
9 |     }, serial_println,
  |        ^^^^^^^^^^^^^^

warning: unused import: `with_generic_allocator`
  --> src/processes/process.rs:18:83
   |
18 | ..., with_buddy_frame_allocator, with_generic_allocator}, HHDM_OFFSET, MAPPER
   |                                  ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `vec_deque::VecDeque`
  --> src/processes/process.rs:25:19
   |
25 |     collections::{vec_deque::VecDeque, BTreeMap},
   |                   ^^^^^^^^^^^^^^^^^^^

warning: unused import: `fmt::write`
  --> src/processes/process.rs:32:5
   |
32 |     fmt::write,
   |     ^^^^^^^^^^

warning: unused import: `Mutex`
  --> src/processes/process.rs:35:28
   |
35 | use spin::{rwlock::RwLock, Mutex};
   |                            ^^^^^

warning: unused import: `FrameDeallocator`
  --> src/processes/process.rs:38:26
   |
38 |     structures::paging::{FrameDeallocator, OffsetPageTable, PageTable, PhysFrame, Siz...
   |                          ^^^^^^^^^^^^^^^^

warning: unused import: `ptr`
 --> src/syscalls/fork.rs:1:12
  |
1 | use core::{ptr, sync::atomic::Ordering};
  |            ^^^

warning: unused import: `schedule_process`
 --> src/syscalls/fork.rs:9:42
  |
9 |     events::{current_running_event_info, schedule_process, schedule_process_on},
  |                                          ^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around `if` condition
   --> src/syscalls/fork.rs:212:12
    |
212 |         if (parent_entry.is_unused()) {
    |            ^                        ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
212 -         if (parent_entry.is_unused()) {
212 +         if parent_entry.is_unused() {
    |

warning: unused import: `interrupts::x2apic`
  --> src/syscalls/mmap.rs:12:5
   |
12 |     interrupts::x2apic,
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `arch::asm`
 --> src/syscalls/syscall_handlers.rs:1:12
  |
1 | use core::{arch::asm, ffi::CStr, i64, sync::atomic::AtomicI64};
  |            ^^^^^^^^^

warning: unused import: `crate::interrupts::x2apic`
  --> src/syscalls/syscall_handlers.rs:11:5
   |
11 | use crate::interrupts::x2apic;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/syscalls/syscall_handlers.rs:10:8
   |
10 | #[warn(unused)]
   |        ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused variable: `device`
   --> src/devices/pci.rs:243:23
    |
243 | pub fn print_pci_info(device: &DeviceInfo) {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_device`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `present_state`
   --> src/devices/sd_card.rs:793:13
    |
793 |         let present_state = unsafe { core::ptr::read_volatile(present_state_register...
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_present_state`

warning: unused variable: `core`
   --> src/interrupts/x2apic.rs:163:13
    |
163 |         let core = current_core_id();
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_core`

warning: unused variable: `child_virt`
   --> src/syscalls/fork.rs:204:9
    |
204 |     let child_virt = HHDM_OFFSET.as_u64() + child_frame.start_address().as_u64();
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_virt`

warning: unused variable: `addr`
   --> src/syscalls/mmap.rs:167:17
    |
167 | ...map(addr: u64, len: u64, prot: u64, flags: u64, fd: i64, offset: u64) -> Option<u...
    |        ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`

warning: constant `X2APIC_IA32_SYSENTER_CS` is never used
  --> src/interrupts/x2apic.rs:36:7
   |
36 | const X2APIC_IA32_SYSENTER_CS: u32 = 0x174;
   |       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `X2APIC_IA32_SYSENTER_ESP` is never used
  --> src/interrupts/x2apic.rs:37:7
   |
37 | const X2APIC_IA32_SYSENTER_ESP: u32 = 0x175;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `X2APIC_IA32_SYSENTER_EIP` is never used
  --> src/interrupts/x2apic.rs:38:7
   |
38 | const X2APIC_IA32_SYSENTER_EIP: u32 = 0x176;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `verify_page_table_walk` is never used
   --> src/syscalls/fork.rs:167:4
    |
167 | fn verify_page_table_walk(parent_pcb: &mut PCB, child_pcb: &mut PCB) {
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: function `recursive_walk` is never used
   --> src/syscalls/fork.rs:196:4
    |
196 | fn recursive_walk(
    |    ^^^^^^^^^^^^^^

warning: static `MMAP_ADDR` is never used
  --> src/syscalls/mmap.rs:18:8
   |
18 | static MMAP_ADDR: Mutex<u64> = Mutex::new(START_MMAP_ADDRESS);
   |        ^^^^^^^^^


taos:	file format elf64-x86-64

Disassembly of section .text:

ffffffff80000000 <<&T as core::fmt::Display>::fmt::ha7394c33b002fed6>:
ffffffff80000000: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80000003: e9 38 0a 02 00       	jmp	0xffffffff80020a40 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74>
ffffffff80000008: cc                   	int3
ffffffff80000009: cc                   	int3
ffffffff8000000a: cc                   	int3
ffffffff8000000b: cc                   	int3
ffffffff8000000c: cc                   	int3
ffffffff8000000d: cc                   	int3
ffffffff8000000e: cc                   	int3
ffffffff8000000f: cc                   	int3

ffffffff80000010 <_start>:
ffffffff80000010: 53                   	push	rbx
ffffffff80000011: 48 83 ec 60          	sub	rsp, 0x60
ffffffff80000015: e8 e6 f6 00 00       	call	0xffffffff8000f700 <taos::init::init::h50db611692509fc0>
ffffffff8000001a: 89 c3                	mov	ebx, eax
ffffffff8000001c: 48 8b 05 05 c4 03 00 	mov	rax, qword ptr [rip + 0x3c405] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80000023: 48 83 f8 04          	cmp	rax, 0x4
ffffffff80000027: 72 78                	jb	0xffffffff800000a1 <_start+0x91>
ffffffff80000029: 48 c7 44 24 30 18 20 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffddfe8
ffffffff80000032: 48 c7 44 24 38 01 00 00 00   	mov	qword ptr [rsp + 0x38], 0x1
ffffffff8000003b: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff80000044: 48 c7 44 24 40 08 00 00 00   	mov	qword ptr [rsp + 0x40], 0x8
ffffffff8000004d: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 0x48], 0x0
ffffffff80000056: 48 c7 c7 38 20 02 80 	mov	rdi, -0x7ffddfc8
ffffffff8000005d: e8 3e c7 01 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff80000062: 48 c7 44 24 08 64 20 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffddf9c
ffffffff8000006b: 48 c7 44 24 10 04 00 00 00   	mov	qword ptr [rsp + 0x10], 0x4
ffffffff80000074: 48 c7 44 24 18 64 20 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffddf9c
ffffffff8000007d: 48 c7 44 24 20 04 00 00 00   	mov	qword ptr [rsp + 0x20], 0x4
ffffffff80000086: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000008b: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80000090: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff80000095: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000009a: 31 c9                	xor	ecx, ecx
ffffffff8000009c: e8 bf c5 01 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff800000a1: 89 df                	mov	edi, ebx
ffffffff800000a3: e8 48 18 00 00       	call	0xffffffff800018f0 <taos::events::run_loop::hb7053eb66eece363>
ffffffff800000a8: cc                   	int3
ffffffff800000a9: cc                   	int3
ffffffff800000aa: cc                   	int3
ffffffff800000ab: cc                   	int3
ffffffff800000ac: cc                   	int3
ffffffff800000ad: cc                   	int3
ffffffff800000ae: cc                   	int3
ffffffff800000af: cc                   	int3

ffffffff800000b0 <rust_begin_unwind>:
ffffffff800000b0: 48 83 ec 48          	sub	rsp, 0x48
ffffffff800000b4: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff800000b8: 48 89 e0             	mov	rax, rsp
ffffffff800000bb: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800000c0: 48 c7 44 24 10 00 00 00 80   	mov	qword ptr [rsp + 0x10], -0x80000000
ffffffff800000c9: 48 c7 44 24 18 90 20 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffddf70
ffffffff800000d2: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff800000db: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff800000e4: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff800000e9: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800000ee: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff800000f7: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff800000fc: e8 0f 82 00 00       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000101: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80000110: f4                   	hlt
ffffffff80000111: eb fd                	jmp	0xffffffff80000110 <rust_begin_unwind+0x60>
ffffffff80000113: cc                   	int3
ffffffff80000114: cc                   	int3
ffffffff80000115: cc                   	int3
ffffffff80000116: cc                   	int3
ffffffff80000117: cc                   	int3
ffffffff80000118: cc                   	int3
ffffffff80000119: cc                   	int3
ffffffff8000011a: cc                   	int3
ffffffff8000011b: cc                   	int3
ffffffff8000011c: cc                   	int3
ffffffff8000011d: cc                   	int3
ffffffff8000011e: cc                   	int3
ffffffff8000011f: cc                   	int3

ffffffff80000120 <__rust_alloc_error_handler>:
ffffffff80000120: e9 ab da 01 00       	jmp	0xffffffff8001dbd0 <__rdl_oom>
ffffffff80000125: cc                   	int3
ffffffff80000126: cc                   	int3
ffffffff80000127: cc                   	int3
ffffffff80000128: cc                   	int3
ffffffff80000129: cc                   	int3
ffffffff8000012a: cc                   	int3
ffffffff8000012b: cc                   	int3
ffffffff8000012c: cc                   	int3
ffffffff8000012d: cc                   	int3
ffffffff8000012e: cc                   	int3
ffffffff8000012f: cc                   	int3

ffffffff80000130 <futures_task::waker::clone_arc_raw::h383eaec90afb9b79>:
ffffffff80000130: f0                   	lock
ffffffff80000131: 48 ff 47 f0          	inc	qword ptr [rdi - 0x10]
ffffffff80000135: 7e 0b                	jle	0xffffffff80000142 <futures_task::waker::clone_arc_raw::h383eaec90afb9b79+0x12>
ffffffff80000137: 48 c7 c0 b0 20 02 80 	mov	rax, -0x7ffddf50
ffffffff8000013e: 48 89 fa             	mov	rdx, rdi
ffffffff80000141: c3                   	ret
ffffffff80000142: 0f 0b                	ud2
ffffffff80000144: cc                   	int3
ffffffff80000145: cc                   	int3
ffffffff80000146: cc                   	int3
ffffffff80000147: cc                   	int3
ffffffff80000148: cc                   	int3
ffffffff80000149: cc                   	int3
ffffffff8000014a: cc                   	int3
ffffffff8000014b: cc                   	int3
ffffffff8000014c: cc                   	int3
ffffffff8000014d: cc                   	int3
ffffffff8000014e: cc                   	int3
ffffffff8000014f: cc                   	int3

ffffffff80000150 <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03>:
ffffffff80000150: 41 56                	push	r14
ffffffff80000152: 53                   	push	rbx
ffffffff80000153: 50                   	push	rax
ffffffff80000154: 48 89 fb             	mov	rbx, rdi
ffffffff80000157: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8000015b: 4c 8b 77 10          	mov	r14, qword ptr [rdi + 0x10]
ffffffff8000015f: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80000164: 31 c0                	xor	eax, eax
ffffffff80000166: f0                   	lock
ffffffff80000167: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff8000016c: 74 0e                	je	0xffffffff8000017c <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0x2c>
ffffffff8000016e: 66 90                	nop
ffffffff80000170: f3 90                	pause
ffffffff80000172: 31 c0                	xor	eax, eax
ffffffff80000174: f0                   	lock
ffffffff80000175: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff8000017a: 75 f4                	jne	0xffffffff80000170 <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0x20>
ffffffff8000017c: f0                   	lock
ffffffff8000017d: 48 ff 03             	inc	qword ptr [rbx]
ffffffff80000180: 0f 8e a6 00 00 00    	jle	0xffffffff8000022c <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0xdc>
ffffffff80000186: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff8000018a: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000018e: 48 39 c8             	cmp	rax, rcx
ffffffff80000191: 75 18                	jne	0xffffffff800001ab <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0x5b>
ffffffff80000193: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80000197: 48 c7 c6 08 21 02 80 	mov	rsi, -0x7ffddef8
ffffffff8000019e: e8 2d 29 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff800001a3: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff800001a7: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff800001ab: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff800001af: 48 01 c2             	add	rdx, rax
ffffffff800001b2: 31 f6                	xor	esi, esi
ffffffff800001b4: 48 39 ca             	cmp	rdx, rcx
ffffffff800001b7: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff800001bb: 48 29 ca             	sub	rdx, rcx
ffffffff800001be: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff800001c2: 48 89 1c d1          	mov	qword ptr [rcx + 8*rdx], rbx
ffffffff800001c6: 48 ff c0             	inc	rax
ffffffff800001c9: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff800001cd: f0                   	lock
ffffffff800001ce: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff800001d3: 4c 8b 73 18          	mov	r14, qword ptr [rbx + 0x18]
ffffffff800001d7: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800001dc: 31 c0                	xor	eax, eax
ffffffff800001de: f0                   	lock
ffffffff800001df: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff800001e4: 74 16                	je	0xffffffff800001fc <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0xac>
ffffffff800001e6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800001f0: f3 90                	pause
ffffffff800001f2: 31 c0                	xor	eax, eax
ffffffff800001f4: f0                   	lock
ffffffff800001f5: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff800001fa: 75 f4                	jne	0xffffffff800001f0 <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0xa0>
ffffffff800001fc: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80000200: 48 83 c3 20          	add	rbx, 0x20
ffffffff80000204: 48 89 de             	mov	rsi, rbx
ffffffff80000207: e8 44 23 01 00       	call	0xffffffff80012550 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c>
ffffffff8000020c: f0                   	lock
ffffffff8000020d: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff80000212: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff80000216: f0                   	lock
ffffffff80000217: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000021a: 75 08                	jne	0xffffffff80000224 <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03+0xd4>
ffffffff8000021c: 48 89 e7             	mov	rdi, rsp
ffffffff8000021f: e8 7c 2c 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000224: 48 83 c4 08          	add	rsp, 0x8
ffffffff80000228: 5b                   	pop	rbx
ffffffff80000229: 41 5e                	pop	r14
ffffffff8000022b: c3                   	ret
ffffffff8000022c: 0f 0b                	ud2
ffffffff8000022e: cc                   	int3
ffffffff8000022f: cc                   	int3

ffffffff80000230 <core::ptr::drop_in_place<taos::processes::process::run_process_ring3::{{closure}}>::h1859694b0e52ed43>:
ffffffff80000230: c3                   	ret
ffffffff80000231: cc                   	int3
ffffffff80000232: cc                   	int3
ffffffff80000233: cc                   	int3
ffffffff80000234: cc                   	int3
ffffffff80000235: cc                   	int3
ffffffff80000236: cc                   	int3
ffffffff80000237: cc                   	int3
ffffffff80000238: cc                   	int3
ffffffff80000239: cc                   	int3
ffffffff8000023a: cc                   	int3
ffffffff8000023b: cc                   	int3
ffffffff8000023c: cc                   	int3
ffffffff8000023d: cc                   	int3
ffffffff8000023e: cc                   	int3
ffffffff8000023f: cc                   	int3

ffffffff80000240 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804>:
ffffffff80000240: 55                   	push	rbp
ffffffff80000241: 41 57                	push	r15
ffffffff80000243: 41 56                	push	r14
ffffffff80000245: 41 55                	push	r13
ffffffff80000247: 41 54                	push	r12
ffffffff80000249: 53                   	push	rbx
ffffffff8000024a: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff80000251: 49 bf fc ff ff ff ff ff ff 7f	movabs	r15, 0x7ffffffffffffffc
ffffffff8000025b: 48 8b 4f 18          	mov	rcx, qword ptr [rdi + 0x18]
ffffffff8000025f: 48 8d 41 10          	lea	rax, [rcx + 0x10]
ffffffff80000263: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80000268: f0                   	lock
ffffffff80000269: 48 0f c1 51 10       	xadd	qword ptr [rcx + 0x10], rdx
ffffffff8000026e: 4c 39 fa             	cmp	rdx, r15
ffffffff80000271: 0f 87 e7 15 00 00    	ja	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff80000277: 48 89 fb             	mov	rbx, rdi
ffffffff8000027a: 4c 8d 67 60          	lea	r12, [rdi + 0x60]
ffffffff8000027e: 48 8d 77 48          	lea	rsi, [rdi + 0x48]
ffffffff80000282: 48 89 74 24 70       	mov	qword ptr [rsp + 0x70], rsi
ffffffff80000287: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff8000028d: bd ff 00 00 00       	mov	ebp, 0xff
ffffffff80000292: 4c 89 64 24 28       	mov	qword ptr [rsp + 0x28], r12
ffffffff80000297: eb 21                	jmp	0xffffffff800002ba <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x7a>
ffffffff80000299: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff800002a0: f0                   	lock
ffffffff800002a1: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff800002a5: f3 90                	pause
ffffffff800002a7: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800002ac: f0                   	lock
ffffffff800002ad: 48 0f c1 10          	xadd	qword ptr [rax], rdx
ffffffff800002b1: 4c 39 fa             	cmp	rdx, r15
ffffffff800002b4: 0f 87 a4 15 00 00    	ja	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff800002ba: f6 c2 03             	test	dl, 0x3
ffffffff800002bd: 75 e1                	jne	0xffffffff800002a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x60>
ffffffff800002bf: 48 83 79 30 00       	cmp	qword ptr [rcx + 0x30], 0x0
ffffffff800002c4: 0f 85 f1 00 00 00    	jne	0xffffffff800003bb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x17b>
ffffffff800002ca: f0                   	lock
ffffffff800002cb: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff800002cf: 48 8b 4b 20          	mov	rcx, qword ptr [rbx + 0x20]
ffffffff800002d3: 48 8d 41 10          	lea	rax, [rcx + 0x10]
ffffffff800002d7: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800002dc: f0                   	lock
ffffffff800002dd: 48 0f c1 51 10       	xadd	qword ptr [rcx + 0x10], rdx
ffffffff800002e2: 4c 39 fa             	cmp	rdx, r15
ffffffff800002e5: 0f 87 73 15 00 00    	ja	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff800002eb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800002f0: f6 c2 03             	test	dl, 0x3
ffffffff800002f3: 74 1b                	je	0xffffffff80000310 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd0>
ffffffff800002f5: f0                   	lock
ffffffff800002f6: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff800002fa: f3 90                	pause
ffffffff800002fc: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80000301: f0                   	lock
ffffffff80000302: 48 0f c1 10          	xadd	qword ptr [rax], rdx
ffffffff80000306: 4c 39 fa             	cmp	rdx, r15
ffffffff80000309: 76 e5                	jbe	0xffffffff800002f0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb0>
ffffffff8000030b: e9 4e 15 00 00       	jmp	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff80000310: 48 83 79 30 00       	cmp	qword ptr [rcx + 0x30], 0x0
ffffffff80000315: 0f 85 a0 00 00 00    	jne	0xffffffff800003bb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x17b>
ffffffff8000031b: f0                   	lock
ffffffff8000031c: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff80000320: 48 8b 4b 28          	mov	rcx, qword ptr [rbx + 0x28]
ffffffff80000324: 48 8d 41 10          	lea	rax, [rcx + 0x10]
ffffffff80000328: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8000032d: f0                   	lock
ffffffff8000032e: 48 0f c1 51 10       	xadd	qword ptr [rcx + 0x10], rdx
ffffffff80000333: 4c 39 fa             	cmp	rdx, r15
ffffffff80000336: 0f 87 22 15 00 00    	ja	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff8000033c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80000340: f6 c2 03             	test	dl, 0x3
ffffffff80000343: 74 1b                	je	0xffffffff80000360 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x120>
ffffffff80000345: f0                   	lock
ffffffff80000346: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff8000034a: f3 90                	pause
ffffffff8000034c: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80000351: f0                   	lock
ffffffff80000352: 48 0f c1 10          	xadd	qword ptr [rax], rdx
ffffffff80000356: 4c 39 fa             	cmp	rdx, r15
ffffffff80000359: 76 e5                	jbe	0xffffffff80000340 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x100>
ffffffff8000035b: e9 fe 14 00 00       	jmp	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff80000360: 48 83 79 30 00       	cmp	qword ptr [rcx + 0x30], 0x0
ffffffff80000365: 75 54                	jne	0xffffffff800003bb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x17b>
ffffffff80000367: f0                   	lock
ffffffff80000368: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff8000036c: 48 8b 4b 30          	mov	rcx, qword ptr [rbx + 0x30]
ffffffff80000370: 48 8d 41 10          	lea	rax, [rcx + 0x10]
ffffffff80000374: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80000379: f0                   	lock
ffffffff8000037a: 48 0f c1 51 10       	xadd	qword ptr [rcx + 0x10], rdx
ffffffff8000037f: 4c 39 fa             	cmp	rdx, r15
ffffffff80000382: 0f 87 d6 14 00 00    	ja	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff80000388: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80000390: f6 c2 03             	test	dl, 0x3
ffffffff80000393: 74 1b                	je	0xffffffff800003b0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x170>
ffffffff80000395: f0                   	lock
ffffffff80000396: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff8000039a: f3 90                	pause
ffffffff8000039c: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800003a1: f0                   	lock
ffffffff800003a2: 48 0f c1 10          	xadd	qword ptr [rax], rdx
ffffffff800003a6: 4c 39 fa             	cmp	rdx, r15
ffffffff800003a9: 76 e5                	jbe	0xffffffff80000390 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x150>
ffffffff800003ab: e9 ae 14 00 00       	jmp	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff800003b0: 48 83 79 30 00       	cmp	qword ptr [rcx + 0x30], 0x0
ffffffff800003b5: 0f 84 cb 0c 00 00    	je	0xffffffff80001086 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xe46>
ffffffff800003bb: f0                   	lock
ffffffff800003bc: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff800003c0: 48 83 7b 10 00       	cmp	qword ptr [rbx + 0x10], 0x0
ffffffff800003c5: 0f 84 df 03 00 00    	je	0xffffffff800007aa <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x56a>
ffffffff800003cb: 48 8b 4b 08          	mov	rcx, qword ptr [rbx + 0x8]
ffffffff800003cf: 48 8b 41 08          	mov	rax, qword ptr [rcx + 0x8]
ffffffff800003d3: 48 3b 43 70          	cmp	rax, qword ptr [rbx + 0x70]
ffffffff800003d7: 0f 87 cd 03 00 00    	ja	0xffffffff800007aa <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x56a>
ffffffff800003dd: 48 89 4c 24 68       	mov	qword ptr [rsp + 0x68], rcx
ffffffff800003e2: 4c 8b 21             	mov	r12, qword ptr [rcx]
ffffffff800003e5: f0                   	lock
ffffffff800003e6: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff800003ea: 0f 8e c1 14 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff800003f0: 4c 89 64 24 78       	mov	qword ptr [rsp + 0x78], r12
ffffffff800003f5: 4d 8b 74 24 10       	mov	r14, qword ptr [r12 + 0x10]
ffffffff800003fa: 31 c0                	xor	eax, eax
ffffffff800003fc: f0                   	lock
ffffffff800003fd: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff80000402: 74 18                	je	0xffffffff8000041c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1dc>
ffffffff80000404: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80000410: f3 90                	pause
ffffffff80000412: 31 c0                	xor	eax, eax
ffffffff80000414: f0                   	lock
ffffffff80000415: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff8000041a: 75 f4                	jne	0xffffffff80000410 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1d0>
ffffffff8000041c: f0                   	lock
ffffffff8000041d: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff80000421: 0f 8e 8a 14 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff80000427: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff8000042b: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000042f: 48 39 c8             	cmp	rax, rcx
ffffffff80000432: 75 18                	jne	0xffffffff8000044c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x20c>
ffffffff80000434: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80000438: 48 c7 c6 08 21 02 80 	mov	rsi, -0x7ffddef8
ffffffff8000043f: e8 8c 26 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80000444: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff80000448: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000044c: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff80000450: 48 01 c2             	add	rdx, rax
ffffffff80000453: 48 39 ca             	cmp	rdx, rcx
ffffffff80000456: be 00 00 00 00       	mov	esi, 0x0
ffffffff8000045b: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff8000045f: 48 29 ca             	sub	rdx, rcx
ffffffff80000462: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff80000466: 4c 89 24 d1          	mov	qword ptr [rcx + 8*rdx], r12
ffffffff8000046a: 48 ff c0             	inc	rax
ffffffff8000046d: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff80000471: f0                   	lock
ffffffff80000472: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff80000477: 4d 8b 74 24 18       	mov	r14, qword ptr [r12 + 0x18]
ffffffff8000047c: 31 c0                	xor	eax, eax
ffffffff8000047e: f0                   	lock
ffffffff8000047f: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff80000484: 74 16                	je	0xffffffff8000049c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x25c>
ffffffff80000486: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80000490: f3 90                	pause
ffffffff80000492: 31 c0                	xor	eax, eax
ffffffff80000494: f0                   	lock
ffffffff80000495: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff8000049a: 75 f4                	jne	0xffffffff80000490 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x250>
ffffffff8000049c: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff800004a0: 48 85 c0             	test	rax, rax
ffffffff800004a3: 0f 84 3e 01 00 00    	je	0xffffffff800005e7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3a7>
ffffffff800004a9: 4d 8d 56 18          	lea	r10, [r14 + 0x18]
ffffffff800004ad: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff800004b1: 49 8b 54 24 20       	mov	rdx, qword ptr [r12 + 0x20]
ffffffff800004b6: 0f b7 78 62          	movzx	edi, word ptr [rax + 0x62]
ffffffff800004ba: 41 89 f8             	mov	r8d, edi
ffffffff800004bd: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff800004c1: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff800004c8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800004d0: 4d 85 c0             	test	r8, r8
ffffffff800004d3: 74 3b                	je	0xffffffff80000510 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x2d0>
ffffffff800004d5: 45 31 c9             	xor	r9d, r9d
ffffffff800004d8: 48 39 54 f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rdx
ffffffff800004dd: 41 0f 95 c1          	setne	r9b
ffffffff800004e1: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff800004e5: 48 ff c6             	inc	rsi
ffffffff800004e8: 49 83 c0 f8          	add	r8, -0x8
ffffffff800004ec: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff800004f0: 74 de                	je	0xffffffff800004d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x290>
ffffffff800004f2: 41 0f b6 f9          	movzx	edi, r9b
ffffffff800004f6: 85 ff                	test	edi, edi
ffffffff800004f8: 74 2a                	je	0xffffffff80000524 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x2e4>
ffffffff800004fa: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800004fe: 73 1d                	jae	0xffffffff8000051d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x2dd>
ffffffff80000500: e9 e2 00 00 00       	jmp	0xffffffff800005e7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3a7>
ffffffff80000505: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80000510: 48 89 fe             	mov	rsi, rdi
ffffffff80000513: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80000517: 0f 82 ca 00 00 00    	jb	0xffffffff800005e7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3a7>
ffffffff8000051d: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff80000522: eb 92                	jmp	0xffffffff800004b6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x276>
ffffffff80000524: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80000529: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8000052e: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff80000533: 4c 89 54 24 20       	mov	qword ptr [rsp + 0x20], r10
ffffffff80000538: c6 44 24 30 00       	mov	byte ptr [rsp + 0x30], 0x0
ffffffff8000053d: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80000542: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff80000547: 48 8d 54 24 30       	lea	rdx, [rsp + 0x30]
ffffffff8000054c: 4c 89 54 24 60       	mov	qword ptr [rsp + 0x60], r10
ffffffff80000551: e8 0a 75 00 00       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff80000556: 49 ff 4e 28          	dec	qword ptr [r14 + 0x28]
ffffffff8000055a: 80 7c 24 30 00       	cmp	byte ptr [rsp + 0x30], 0x0
ffffffff8000055f: 0f 84 82 00 00 00    	je	0xffffffff800005e7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3a7>
ffffffff80000565: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8000056a: 48 8b 30             	mov	rsi, qword ptr [rax]
ffffffff8000056d: 48 85 f6             	test	rsi, rsi
ffffffff80000570: 0f 84 55 13 00 00    	je	0xffffffff800018cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x168b>
ffffffff80000576: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8000057a: 48 85 c0             	test	rax, rax
ffffffff8000057d: 0f 84 16 13 00 00    	je	0xffffffff80001899 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1659>
ffffffff80000583: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff80000587: 49 89 4e 18          	mov	qword ptr [r14 + 0x18], rcx
ffffffff8000058b: 48 ff c8             	dec	rax
ffffffff8000058e: 49 89 46 20          	mov	qword ptr [r14 + 0x20], rax
ffffffff80000592: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff80000599: 31 c0                	xor	eax, eax
ffffffff8000059b: b1 01                	mov	cl, 0x1
ffffffff8000059d: eb 03                	jmp	0xffffffff800005a2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x362>
ffffffff8000059f: 90                   	nop
ffffffff800005a0: 31 c0                	xor	eax, eax
ffffffff800005a2: f0                   	lock
ffffffff800005a3: 0f b0 0d 56 aa 02 00 	cmpxchg	byte ptr [rip + 0x2aa56], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800005aa: 74 1e                	je	0xffffffff800005ca <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x38a>
ffffffff800005ac: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800005b0: 0f b6 05 49 aa 02 00 	movzx	eax, byte ptr [rip + 0x2aa49] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800005b7: 84 c0                	test	al, al
ffffffff800005b9: 74 e5                	je	0xffffffff800005a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x360>
ffffffff800005bb: f3 90                	pause
ffffffff800005bd: 0f b6 05 3c aa 02 00 	movzx	eax, byte ptr [rip + 0x2aa3c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800005c4: 84 c0                	test	al, al
ffffffff800005c6: 75 f3                	jne	0xffffffff800005bb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x37b>
ffffffff800005c8: eb d6                	jmp	0xffffffff800005a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x360>
ffffffff800005ca: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800005cf: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff800005d4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800005db: e8 10 c2 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800005e0: c6 05 19 aa 02 00 00 	mov	byte ptr [rip + 0x2aa19], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800005e7: f0                   	lock
ffffffff800005e8: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff800005ed: f0                   	lock
ffffffff800005ee: 49 ff 0c 24          	dec	qword ptr [r12]
ffffffff800005f2: 75 0a                	jne	0xffffffff800005fe <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3be>
ffffffff800005f4: 48 8d 7c 24 78       	lea	rdi, [rsp + 0x78]
ffffffff800005f9: e8 a2 28 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff800005fe: 4c 8b 63 38          	mov	r12, qword ptr [rbx + 0x38]
ffffffff80000602: 31 c0                	xor	eax, eax
ffffffff80000604: f0                   	lock
ffffffff80000605: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff8000060b: 74 10                	je	0xffffffff8000061d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3dd>
ffffffff8000060d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80000610: f3 90                	pause
ffffffff80000612: 31 c0                	xor	eax, eax
ffffffff80000614: f0                   	lock
ffffffff80000615: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff8000061b: 75 f3                	jne	0xffffffff80000610 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x3d0>
ffffffff8000061d: 49 8b 44 24 18       	mov	rax, qword ptr [r12 + 0x18]
ffffffff80000622: 48 85 c0             	test	rax, rax
ffffffff80000625: 0f 84 4c 01 00 00    	je	0xffffffff80000777 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x537>
ffffffff8000062b: 4d 8d 74 24 18       	lea	r14, [r12 + 0x18]
ffffffff80000630: 48 8b 4c 24 68       	mov	rcx, qword ptr [rsp + 0x68]
ffffffff80000635: 48 8b 09             	mov	rcx, qword ptr [rcx]
ffffffff80000638: 48 8b 51 20          	mov	rdx, qword ptr [rcx + 0x20]
ffffffff8000063c: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff80000641: 0f b7 78 62          	movzx	edi, word ptr [rax + 0x62]
ffffffff80000645: 41 89 f8             	mov	r8d, edi
ffffffff80000648: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff8000064c: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff80000653: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80000660: 4d 85 c0             	test	r8, r8
ffffffff80000663: 74 3b                	je	0xffffffff800006a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x460>
ffffffff80000665: 45 31 c9             	xor	r9d, r9d
ffffffff80000668: 48 39 54 f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rdx
ffffffff8000066d: 41 0f 95 c1          	setne	r9b
ffffffff80000671: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff80000675: 48 ff c6             	inc	rsi
ffffffff80000678: 49 83 c0 f8          	add	r8, -0x8
ffffffff8000067c: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff80000680: 74 de                	je	0xffffffff80000660 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x420>
ffffffff80000682: 41 0f b6 f9          	movzx	edi, r9b
ffffffff80000686: 85 ff                	test	edi, edi
ffffffff80000688: 74 2a                	je	0xffffffff800006b4 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x474>
ffffffff8000068a: 48 83 e9 01          	sub	rcx, 0x1
ffffffff8000068e: 73 1d                	jae	0xffffffff800006ad <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x46d>
ffffffff80000690: e9 e2 00 00 00       	jmp	0xffffffff80000777 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x537>
ffffffff80000695: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800006a0: 48 89 fe             	mov	rsi, rdi
ffffffff800006a3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800006a7: 0f 82 ca 00 00 00    	jb	0xffffffff80000777 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x537>
ffffffff800006ad: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff800006b2: eb 8d                	jmp	0xffffffff80000641 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x401>
ffffffff800006b4: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800006b9: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff800006be: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff800006c3: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff800006c8: c6 44 24 78 00       	mov	byte ptr [rsp + 0x78], 0x0
ffffffff800006cd: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff800006d2: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff800006d7: 48 8d 54 24 78       	lea	rdx, [rsp + 0x78]
ffffffff800006dc: e8 7f 73 00 00       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff800006e1: 49 ff 4c 24 28       	dec	qword ptr [r12 + 0x28]
ffffffff800006e6: 80 7c 24 78 00       	cmp	byte ptr [rsp + 0x78], 0x0
ffffffff800006eb: 0f 84 86 00 00 00    	je	0xffffffff80000777 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x537>
ffffffff800006f1: 49 8b 36             	mov	rsi, qword ptr [r14]
ffffffff800006f4: 48 85 f6             	test	rsi, rsi
ffffffff800006f7: 0f 84 ce 11 00 00    	je	0xffffffff800018cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x168b>
ffffffff800006fd: 49 8b 44 24 20       	mov	rax, qword ptr [r12 + 0x20]
ffffffff80000702: 48 85 c0             	test	rax, rax
ffffffff80000705: 0f 84 8e 11 00 00    	je	0xffffffff80001899 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1659>
ffffffff8000070b: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff8000070f: 49 89 4c 24 18       	mov	qword ptr [r12 + 0x18], rcx
ffffffff80000714: 48 ff c8             	dec	rax
ffffffff80000717: 49 89 44 24 20       	mov	qword ptr [r12 + 0x20], rax
ffffffff8000071c: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff80000723: 31 c0                	xor	eax, eax
ffffffff80000725: b1 01                	mov	cl, 0x1
ffffffff80000727: eb 09                	jmp	0xffffffff80000732 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x4f2>
ffffffff80000729: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80000730: 31 c0                	xor	eax, eax
ffffffff80000732: f0                   	lock
ffffffff80000733: 0f b0 0d c6 a8 02 00 	cmpxchg	byte ptr [rip + 0x2a8c6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000073a: 74 1e                	je	0xffffffff8000075a <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x51a>
ffffffff8000073c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80000740: 0f b6 05 b9 a8 02 00 	movzx	eax, byte ptr [rip + 0x2a8b9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80000747: 84 c0                	test	al, al
ffffffff80000749: 74 e5                	je	0xffffffff80000730 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x4f0>
ffffffff8000074b: f3 90                	pause
ffffffff8000074d: 0f b6 05 ac a8 02 00 	movzx	eax, byte ptr [rip + 0x2a8ac] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80000754: 84 c0                	test	al, al
ffffffff80000756: 75 f3                	jne	0xffffffff8000074b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x50b>
ffffffff80000758: eb d6                	jmp	0xffffffff80000730 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x4f0>
ffffffff8000075a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8000075f: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80000764: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000076b: e8 80 c0 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80000770: c6 05 89 a8 02 00 00 	mov	byte ptr [rip + 0x2a889], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80000777: f0                   	lock
ffffffff80000778: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff8000077e: 48 89 df             	mov	rdi, rbx
ffffffff80000781: e8 8a 14 01 00       	call	0xffffffff80011c10 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901>
ffffffff80000786: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8000078b: 48 89 54 24 48       	mov	qword ptr [rsp + 0x48], rdx
ffffffff80000790: 48 85 c0             	test	rax, rax
ffffffff80000793: 74 10                	je	0xffffffff800007a5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x565>
ffffffff80000795: f0                   	lock
ffffffff80000796: 48 ff 08             	dec	qword ptr [rax]
ffffffff80000799: 75 0a                	jne	0xffffffff800007a5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x565>
ffffffff8000079b: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff800007a0: e8 fb 26 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff800007a5: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff800007aa: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff800007b3: 48 8b 43 20          	mov	rax, qword ptr [rbx + 0x20]
ffffffff800007b7: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800007bc: f0                   	lock
ffffffff800007bd: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800007c2: 4c 39 f9             	cmp	rcx, r15
ffffffff800007c5: 0f 87 75 10 00 00    	ja	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800007cb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800007d0: f6 c1 03             	test	cl, 0x3
ffffffff800007d3: 74 1d                	je	0xffffffff800007f2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x5b2>
ffffffff800007d5: f0                   	lock
ffffffff800007d6: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800007db: f3 90                	pause
ffffffff800007dd: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800007e2: f0                   	lock
ffffffff800007e3: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800007e8: 4c 39 f9             	cmp	rcx, r15
ffffffff800007eb: 76 e3                	jbe	0xffffffff800007d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x590>
ffffffff800007ed: e9 4e 10 00 00       	jmp	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800007f2: 48 83 78 30 00       	cmp	qword ptr [rax + 0x30], 0x0
ffffffff800007f7: 0f 84 5e 01 00 00    	je	0xffffffff8000095b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x71b>
ffffffff800007fd: 48 8b 48 28          	mov	rcx, qword ptr [rax + 0x28]
ffffffff80000801: 48 8b 50 18          	mov	rdx, qword ptr [rax + 0x18]
ffffffff80000805: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff80000809: 48 39 d1             	cmp	rcx, rdx
ffffffff8000080c: bf 00 00 00 00       	mov	edi, 0x0
ffffffff80000811: 48 0f 43 fa          	cmovae	rdi, rdx
ffffffff80000815: 48 29 f9             	sub	rcx, rdi
ffffffff80000818: 48 8b 0c ce          	mov	rcx, qword ptr [rsi + 8*rcx]
ffffffff8000081c: 48 8b 49 48          	mov	rcx, qword ptr [rcx + 0x48]
ffffffff80000820: f0                   	lock
ffffffff80000821: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000826: 48 83 c1 05          	add	rcx, 0x5
ffffffff8000082a: 48 3b 4b 68          	cmp	rcx, qword ptr [rbx + 0x68]
ffffffff8000082e: 0f 87 35 01 00 00    	ja	0xffffffff80000969 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x729>
ffffffff80000834: 48 8b 4b 20          	mov	rcx, qword ptr [rbx + 0x20]
ffffffff80000838: 31 c0                	xor	eax, eax
ffffffff8000083a: f0                   	lock
ffffffff8000083b: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000840: 74 1a                	je	0xffffffff8000085c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x61c>
ffffffff80000842: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80000850: f3 90                	pause
ffffffff80000852: 31 c0                	xor	eax, eax
ffffffff80000854: f0                   	lock
ffffffff80000855: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff8000085a: 75 f4                	jne	0xffffffff80000850 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x610>
ffffffff8000085c: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000860: 48 85 c0             	test	rax, rax
ffffffff80000863: 0f 84 fa 00 00 00    	je	0xffffffff80000963 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x723>
ffffffff80000869: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff8000086d: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000871: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000875: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000879: 48 39 fe             	cmp	rsi, rdi
ffffffff8000087c: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000881: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000885: 48 f7 de             	neg	rsi
ffffffff80000888: 48 01 d6             	add	rsi, rdx
ffffffff8000088b: 48 ff c6             	inc	rsi
ffffffff8000088e: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000892: 48 ff c8             	dec	rax
ffffffff80000895: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000899: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff8000089d: f0                   	lock
ffffffff8000089e: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff800008a3: 4c 8b 63 18          	mov	r12, qword ptr [rbx + 0x18]
ffffffff800008a7: f0                   	lock
ffffffff800008a8: 49 ff 06             	inc	qword ptr [r14]
ffffffff800008ab: 0f 8e 00 10 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff800008b1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff800008c0: 31 c0                	xor	eax, eax
ffffffff800008c2: f0                   	lock
ffffffff800008c3: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff800008c9: 74 0d                	je	0xffffffff800008d8 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x698>
ffffffff800008cb: f3 90                	pause
ffffffff800008cd: 31 c0                	xor	eax, eax
ffffffff800008cf: f0                   	lock
ffffffff800008d0: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff800008d6: 75 f3                	jne	0xffffffff800008cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x68b>
ffffffff800008d8: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff800008dd: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff800008e2: 48 39 c8             	cmp	rax, rcx
ffffffff800008e5: 75 1b                	jne	0xffffffff80000902 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x6c2>
ffffffff800008e7: 49 8d 7c 24 18       	lea	rdi, [r12 + 0x18]
ffffffff800008ec: 48 c7 c6 98 21 02 80 	mov	rsi, -0x7ffdde68
ffffffff800008f3: e8 d8 21 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff800008f8: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff800008fd: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80000902: 49 8b 54 24 28       	mov	rdx, qword ptr [r12 + 0x28]
ffffffff80000907: 48 01 c2             	add	rdx, rax
ffffffff8000090a: 48 39 ca             	cmp	rdx, rcx
ffffffff8000090d: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000912: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff80000916: 48 29 ca             	sub	rdx, rcx
ffffffff80000919: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff8000091e: 4c 89 34 d1          	mov	qword ptr [rcx + 8*rdx], r14
ffffffff80000922: 48 ff c0             	inc	rax
ffffffff80000925: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff8000092a: f0                   	lock
ffffffff8000092b: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff80000931: 31 c0                	xor	eax, eax
ffffffff80000933: 49 87 46 40          	xchg	qword ptr [r14 + 0x40], rax
ffffffff80000937: 48 8b 43 68          	mov	rax, qword ptr [rbx + 0x68]
ffffffff8000093b: 49 87 46 48          	xchg	qword ptr [r14 + 0x48], rax
ffffffff8000093f: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff80000944: f0                   	lock
ffffffff80000945: 49 ff 0e             	dec	qword ptr [r14]
ffffffff80000948: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff8000094d: 75 1a                	jne	0xffffffff80000969 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x729>
ffffffff8000094f: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80000954: e8 47 25 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000959: eb 0e                	jmp	0xffffffff80000969 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x729>
ffffffff8000095b: f0                   	lock
ffffffff8000095c: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000961: eb 06                	jmp	0xffffffff80000969 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x729>
ffffffff80000963: f0                   	lock
ffffffff80000964: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000969: 48 8b 43 28          	mov	rax, qword ptr [rbx + 0x28]
ffffffff8000096d: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80000972: f0                   	lock
ffffffff80000973: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff80000978: 4c 39 f9             	cmp	rcx, r15
ffffffff8000097b: 0f 87 bf 0e 00 00    	ja	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff80000981: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80000990: f6 c1 03             	test	cl, 0x3
ffffffff80000993: 74 1d                	je	0xffffffff800009b2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x772>
ffffffff80000995: f0                   	lock
ffffffff80000996: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000099b: f3 90                	pause
ffffffff8000099d: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800009a2: f0                   	lock
ffffffff800009a3: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800009a8: 4c 39 f9             	cmp	rcx, r15
ffffffff800009ab: 76 e3                	jbe	0xffffffff80000990 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x750>
ffffffff800009ad: e9 8e 0e 00 00       	jmp	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800009b2: 48 83 78 30 00       	cmp	qword ptr [rax + 0x30], 0x0
ffffffff800009b7: 0f 84 61 01 00 00    	je	0xffffffff80000b1e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8de>
ffffffff800009bd: 48 8b 48 28          	mov	rcx, qword ptr [rax + 0x28]
ffffffff800009c1: 48 8b 50 18          	mov	rdx, qword ptr [rax + 0x18]
ffffffff800009c5: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff800009c9: 48 39 d1             	cmp	rcx, rdx
ffffffff800009cc: bf 00 00 00 00       	mov	edi, 0x0
ffffffff800009d1: 48 0f 43 fa          	cmovae	rdi, rdx
ffffffff800009d5: 48 29 f9             	sub	rcx, rdi
ffffffff800009d8: 48 8b 0c ce          	mov	rcx, qword ptr [rsi + 8*rcx]
ffffffff800009dc: 48 8b 49 48          	mov	rcx, qword ptr [rcx + 0x48]
ffffffff800009e0: f0                   	lock
ffffffff800009e1: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800009e6: 48 83 c1 05          	add	rcx, 0x5
ffffffff800009ea: 48 3b 4b 68          	cmp	rcx, qword ptr [rbx + 0x68]
ffffffff800009ee: 0f 87 38 01 00 00    	ja	0xffffffff80000b2c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8ec>
ffffffff800009f4: 48 8b 4b 28          	mov	rcx, qword ptr [rbx + 0x28]
ffffffff800009f8: 31 c0                	xor	eax, eax
ffffffff800009fa: f0                   	lock
ffffffff800009fb: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000a00: 74 1a                	je	0xffffffff80000a1c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x7dc>
ffffffff80000a02: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80000a10: f3 90                	pause
ffffffff80000a12: 31 c0                	xor	eax, eax
ffffffff80000a14: f0                   	lock
ffffffff80000a15: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000a1a: 75 f4                	jne	0xffffffff80000a10 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x7d0>
ffffffff80000a1c: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000a20: 48 85 c0             	test	rax, rax
ffffffff80000a23: 0f 84 fd 00 00 00    	je	0xffffffff80000b26 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8e6>
ffffffff80000a29: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff80000a2d: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000a31: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000a35: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000a39: 48 39 fe             	cmp	rsi, rdi
ffffffff80000a3c: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000a41: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000a45: 48 f7 de             	neg	rsi
ffffffff80000a48: 48 01 d6             	add	rsi, rdx
ffffffff80000a4b: 48 ff c6             	inc	rsi
ffffffff80000a4e: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000a52: 48 ff c8             	dec	rax
ffffffff80000a55: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000a59: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff80000a5d: f0                   	lock
ffffffff80000a5e: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000a63: 4c 8b 63 20          	mov	r12, qword ptr [rbx + 0x20]
ffffffff80000a67: f0                   	lock
ffffffff80000a68: 49 ff 06             	inc	qword ptr [r14]
ffffffff80000a6b: 0f 8e 40 0e 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff80000a71: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80000a80: 31 c0                	xor	eax, eax
ffffffff80000a82: f0                   	lock
ffffffff80000a83: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff80000a89: 74 0d                	je	0xffffffff80000a98 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x858>
ffffffff80000a8b: f3 90                	pause
ffffffff80000a8d: 31 c0                	xor	eax, eax
ffffffff80000a8f: f0                   	lock
ffffffff80000a90: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff80000a96: 75 f3                	jne	0xffffffff80000a8b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x84b>
ffffffff80000a98: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80000a9d: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80000aa2: 48 39 c8             	cmp	rax, rcx
ffffffff80000aa5: 75 1b                	jne	0xffffffff80000ac2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x882>
ffffffff80000aa7: 49 8d 7c 24 18       	lea	rdi, [r12 + 0x18]
ffffffff80000aac: 48 c7 c6 98 21 02 80 	mov	rsi, -0x7ffdde68
ffffffff80000ab3: e8 18 20 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80000ab8: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80000abd: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80000ac2: 49 8b 54 24 28       	mov	rdx, qword ptr [r12 + 0x28]
ffffffff80000ac7: 48 01 c2             	add	rdx, rax
ffffffff80000aca: 48 39 ca             	cmp	rdx, rcx
ffffffff80000acd: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000ad2: 48 0f 43 f1          	cmovae	rsi, rcx
ffffffff80000ad6: 48 29 f2             	sub	rdx, rsi
ffffffff80000ad9: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff80000ade: 4c 89 34 d1          	mov	qword ptr [rcx + 8*rdx], r14
ffffffff80000ae2: 48 ff c0             	inc	rax
ffffffff80000ae5: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff80000aea: f0                   	lock
ffffffff80000aeb: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff80000af1: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80000af6: 49 87 46 40          	xchg	qword ptr [r14 + 0x40], rax
ffffffff80000afa: 48 8b 43 68          	mov	rax, qword ptr [rbx + 0x68]
ffffffff80000afe: 49 87 46 48          	xchg	qword ptr [r14 + 0x48], rax
ffffffff80000b02: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff80000b07: f0                   	lock
ffffffff80000b08: 49 ff 0e             	dec	qword ptr [r14]
ffffffff80000b0b: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff80000b10: 75 1a                	jne	0xffffffff80000b2c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8ec>
ffffffff80000b12: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80000b17: e8 84 23 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000b1c: eb 0e                	jmp	0xffffffff80000b2c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8ec>
ffffffff80000b1e: f0                   	lock
ffffffff80000b1f: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000b24: eb 06                	jmp	0xffffffff80000b2c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x8ec>
ffffffff80000b26: f0                   	lock
ffffffff80000b27: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000b2c: 48 8b 43 30          	mov	rax, qword ptr [rbx + 0x30]
ffffffff80000b30: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80000b35: f0                   	lock
ffffffff80000b36: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff80000b3b: 4c 39 f9             	cmp	rcx, r15
ffffffff80000b3e: 0f 87 fc 0c 00 00    	ja	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff80000b44: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80000b50: f6 c1 03             	test	cl, 0x3
ffffffff80000b53: 74 1d                	je	0xffffffff80000b72 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x932>
ffffffff80000b55: f0                   	lock
ffffffff80000b56: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000b5b: f3 90                	pause
ffffffff80000b5d: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80000b62: f0                   	lock
ffffffff80000b63: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff80000b68: 4c 39 f9             	cmp	rcx, r15
ffffffff80000b6b: 76 e3                	jbe	0xffffffff80000b50 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x910>
ffffffff80000b6d: e9 ce 0c 00 00       	jmp	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff80000b72: 48 83 78 30 00       	cmp	qword ptr [rax + 0x30], 0x0
ffffffff80000b77: 0f 84 65 01 00 00    	je	0xffffffff80000ce2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xaa2>
ffffffff80000b7d: 48 8b 48 28          	mov	rcx, qword ptr [rax + 0x28]
ffffffff80000b81: 48 8b 50 18          	mov	rdx, qword ptr [rax + 0x18]
ffffffff80000b85: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff80000b89: 48 39 d1             	cmp	rcx, rdx
ffffffff80000b8c: bf 00 00 00 00       	mov	edi, 0x0
ffffffff80000b91: 48 0f 43 fa          	cmovae	rdi, rdx
ffffffff80000b95: 48 29 f9             	sub	rcx, rdi
ffffffff80000b98: 48 8b 0c ce          	mov	rcx, qword ptr [rsi + 8*rcx]
ffffffff80000b9c: 48 8b 49 48          	mov	rcx, qword ptr [rcx + 0x48]
ffffffff80000ba0: f0                   	lock
ffffffff80000ba1: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000ba6: 48 83 c1 05          	add	rcx, 0x5
ffffffff80000baa: 48 3b 4b 68          	cmp	rcx, qword ptr [rbx + 0x68]
ffffffff80000bae: 0f 87 28 01 00 00    	ja	0xffffffff80000cdc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xa9c>
ffffffff80000bb4: 48 8b 4b 30          	mov	rcx, qword ptr [rbx + 0x30]
ffffffff80000bb8: 31 c0                	xor	eax, eax
ffffffff80000bba: f0                   	lock
ffffffff80000bbb: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000bc0: 74 1a                	je	0xffffffff80000bdc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x99c>
ffffffff80000bc2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80000bd0: f3 90                	pause
ffffffff80000bd2: 31 c0                	xor	eax, eax
ffffffff80000bd4: f0                   	lock
ffffffff80000bd5: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000bda: 75 f4                	jne	0xffffffff80000bd0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x990>
ffffffff80000bdc: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000be0: 48 85 c0             	test	rax, rax
ffffffff80000be3: 0f 84 05 01 00 00    	je	0xffffffff80000cee <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xaae>
ffffffff80000be9: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff80000bed: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000bf1: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000bf5: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000bf9: 48 39 fe             	cmp	rsi, rdi
ffffffff80000bfc: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000c01: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000c05: 48 f7 de             	neg	rsi
ffffffff80000c08: 48 01 d6             	add	rsi, rdx
ffffffff80000c0b: 48 ff c6             	inc	rsi
ffffffff80000c0e: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000c12: 48 ff c8             	dec	rax
ffffffff80000c15: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000c19: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff80000c1d: f0                   	lock
ffffffff80000c1e: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000c23: 4c 8b 63 28          	mov	r12, qword ptr [rbx + 0x28]
ffffffff80000c27: f0                   	lock
ffffffff80000c28: 49 ff 06             	inc	qword ptr [r14]
ffffffff80000c2b: 0f 8e 80 0c 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff80000c31: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80000c40: 31 c0                	xor	eax, eax
ffffffff80000c42: f0                   	lock
ffffffff80000c43: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff80000c49: 74 0d                	je	0xffffffff80000c58 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xa18>
ffffffff80000c4b: f3 90                	pause
ffffffff80000c4d: 31 c0                	xor	eax, eax
ffffffff80000c4f: f0                   	lock
ffffffff80000c50: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff80000c56: 75 f3                	jne	0xffffffff80000c4b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xa0b>
ffffffff80000c58: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80000c5d: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80000c62: 48 39 c8             	cmp	rax, rcx
ffffffff80000c65: 75 1b                	jne	0xffffffff80000c82 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xa42>
ffffffff80000c67: 49 8d 7c 24 18       	lea	rdi, [r12 + 0x18]
ffffffff80000c6c: 48 c7 c6 98 21 02 80 	mov	rsi, -0x7ffdde68
ffffffff80000c73: e8 58 1e 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80000c78: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80000c7d: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80000c82: 49 8b 54 24 28       	mov	rdx, qword ptr [r12 + 0x28]
ffffffff80000c87: 48 01 c2             	add	rdx, rax
ffffffff80000c8a: 48 39 ca             	cmp	rdx, rcx
ffffffff80000c8d: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000c92: 48 0f 43 f1          	cmovae	rsi, rcx
ffffffff80000c96: 48 29 f2             	sub	rdx, rsi
ffffffff80000c99: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff80000c9e: 4c 89 34 d1          	mov	qword ptr [rcx + 8*rdx], r14
ffffffff80000ca2: 48 ff c0             	inc	rax
ffffffff80000ca5: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff80000caa: f0                   	lock
ffffffff80000cab: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff80000cb1: b8 02 00 00 00       	mov	eax, 0x2
ffffffff80000cb6: 49 87 46 40          	xchg	qword ptr [r14 + 0x40], rax
ffffffff80000cba: 48 8b 43 68          	mov	rax, qword ptr [rbx + 0x68]
ffffffff80000cbe: 49 87 46 48          	xchg	qword ptr [r14 + 0x48], rax
ffffffff80000cc2: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff80000cc7: f0                   	lock
ffffffff80000cc8: 49 ff 0e             	dec	qword ptr [r14]
ffffffff80000ccb: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff80000cd0: 75 0a                	jne	0xffffffff80000cdc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xa9c>
ffffffff80000cd2: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80000cd7: e8 c4 21 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000cdc: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80000ce0: eb 20                	jmp	0xffffffff80000d02 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xac2>
ffffffff80000ce2: f0                   	lock
ffffffff80000ce3: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80000ce8: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80000cec: eb 14                	jmp	0xffffffff80000d02 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xac2>
ffffffff80000cee: f0                   	lock
ffffffff80000cef: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000cf4: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80000cf8: eb 08                	jmp	0xffffffff80000d02 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xac2>
ffffffff80000cfa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80000d00: f3 90                	pause
ffffffff80000d02: 31 c0                	xor	eax, eax
ffffffff80000d04: f0                   	lock
ffffffff80000d05: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000d0a: 75 f4                	jne	0xffffffff80000d00 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xac0>
ffffffff80000d0c: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000d10: 48 85 c0             	test	rax, rax
ffffffff80000d13: 74 46                	je	0xffffffff80000d5b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb1b>
ffffffff80000d15: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff80000d19: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000d1d: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000d21: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000d25: 48 39 fe             	cmp	rsi, rdi
ffffffff80000d28: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000d2d: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000d31: 48 f7 de             	neg	rsi
ffffffff80000d34: 48 01 d6             	add	rsi, rdx
ffffffff80000d37: 48 ff c6             	inc	rsi
ffffffff80000d3a: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000d3e: 48 ff c8             	dec	rax
ffffffff80000d41: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000d45: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff80000d49: f0                   	lock
ffffffff80000d4a: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000d4f: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000d54: 48 85 c0             	test	rax, rax
ffffffff80000d57: 75 15                	jne	0xffffffff80000d6e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb2e>
ffffffff80000d59: eb 23                	jmp	0xffffffff80000d7e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb3e>
ffffffff80000d5b: 45 31 f6             	xor	r14d, r14d
ffffffff80000d5e: f0                   	lock
ffffffff80000d5f: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000d64: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000d69: 48 85 c0             	test	rax, rax
ffffffff80000d6c: 74 10                	je	0xffffffff80000d7e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb3e>
ffffffff80000d6e: f0                   	lock
ffffffff80000d6f: 48 ff 08             	dec	qword ptr [rax]
ffffffff80000d72: 75 0a                	jne	0xffffffff80000d7e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb3e>
ffffffff80000d74: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80000d79: e8 22 21 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000d7e: 4c 89 74 24 08       	mov	qword ptr [rsp + 0x8], r14
ffffffff80000d83: 4d 85 f6             	test	r14, r14
ffffffff80000d86: 0f 85 40 01 00 00    	jne	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80000d8c: 48 8b 4b 20          	mov	rcx, qword ptr [rbx + 0x20]
ffffffff80000d90: 31 c0                	xor	eax, eax
ffffffff80000d92: f0                   	lock
ffffffff80000d93: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000d98: 74 12                	je	0xffffffff80000dac <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb6c>
ffffffff80000d9a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80000da0: f3 90                	pause
ffffffff80000da2: 31 c0                	xor	eax, eax
ffffffff80000da4: f0                   	lock
ffffffff80000da5: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000daa: 75 f4                	jne	0xffffffff80000da0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xb60>
ffffffff80000dac: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000db0: 48 85 c0             	test	rax, rax
ffffffff80000db3: 74 46                	je	0xffffffff80000dfb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xbbb>
ffffffff80000db5: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff80000db9: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000dbd: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000dc1: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000dc5: 48 39 fe             	cmp	rsi, rdi
ffffffff80000dc8: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000dcd: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000dd1: 48 f7 de             	neg	rsi
ffffffff80000dd4: 48 01 d6             	add	rsi, rdx
ffffffff80000dd7: 48 ff c6             	inc	rsi
ffffffff80000dda: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000dde: 48 ff c8             	dec	rax
ffffffff80000de1: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000de5: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff80000de9: f0                   	lock
ffffffff80000dea: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000def: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000df4: 48 85 c0             	test	rax, rax
ffffffff80000df7: 75 15                	jne	0xffffffff80000e0e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xbce>
ffffffff80000df9: eb 23                	jmp	0xffffffff80000e1e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xbde>
ffffffff80000dfb: 45 31 f6             	xor	r14d, r14d
ffffffff80000dfe: f0                   	lock
ffffffff80000dff: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000e04: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000e09: 48 85 c0             	test	rax, rax
ffffffff80000e0c: 74 10                	je	0xffffffff80000e1e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xbde>
ffffffff80000e0e: f0                   	lock
ffffffff80000e0f: 48 ff 08             	dec	qword ptr [rax]
ffffffff80000e12: 75 0a                	jne	0xffffffff80000e1e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xbde>
ffffffff80000e14: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80000e19: e8 82 20 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000e1e: 4c 89 74 24 08       	mov	qword ptr [rsp + 0x8], r14
ffffffff80000e23: 4d 85 f6             	test	r14, r14
ffffffff80000e26: 0f 85 a0 00 00 00    	jne	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80000e2c: 48 8b 4b 28          	mov	rcx, qword ptr [rbx + 0x28]
ffffffff80000e30: 31 c0                	xor	eax, eax
ffffffff80000e32: f0                   	lock
ffffffff80000e33: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000e38: 74 12                	je	0xffffffff80000e4c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc0c>
ffffffff80000e3a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80000e40: f3 90                	pause
ffffffff80000e42: 31 c0                	xor	eax, eax
ffffffff80000e44: f0                   	lock
ffffffff80000e45: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff80000e4a: 75 f4                	jne	0xffffffff80000e40 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc00>
ffffffff80000e4c: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80000e50: 48 85 c0             	test	rax, rax
ffffffff80000e53: 74 46                	je	0xffffffff80000e9b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc5b>
ffffffff80000e55: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff80000e59: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80000e5d: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80000e61: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80000e65: 48 39 fe             	cmp	rsi, rdi
ffffffff80000e68: be 00 00 00 00       	mov	esi, 0x0
ffffffff80000e6d: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80000e71: 48 f7 de             	neg	rsi
ffffffff80000e74: 48 01 d6             	add	rsi, rdx
ffffffff80000e77: 48 ff c6             	inc	rsi
ffffffff80000e7a: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80000e7e: 48 ff c8             	dec	rax
ffffffff80000e81: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80000e85: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff80000e89: f0                   	lock
ffffffff80000e8a: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000e8f: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000e94: 48 85 c0             	test	rax, rax
ffffffff80000e97: 75 15                	jne	0xffffffff80000eae <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc6e>
ffffffff80000e99: eb 23                	jmp	0xffffffff80000ebe <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc7e>
ffffffff80000e9b: 45 31 f6             	xor	r14d, r14d
ffffffff80000e9e: f0                   	lock
ffffffff80000e9f: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80000ea4: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80000ea9: 48 85 c0             	test	rax, rax
ffffffff80000eac: 74 10                	je	0xffffffff80000ebe <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc7e>
ffffffff80000eae: f0                   	lock
ffffffff80000eaf: 48 ff 08             	dec	qword ptr [rax]
ffffffff80000eb2: 75 0a                	jne	0xffffffff80000ebe <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc7e>
ffffffff80000eb4: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80000eb9: e8 e2 1f 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000ebe: 4c 89 74 24 08       	mov	qword ptr [rsp + 0x8], r14
ffffffff80000ec3: 4d 85 f6             	test	r14, r14
ffffffff80000ec6: 0f 84 42 01 00 00    	je	0xffffffff8000100e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xdce>
ffffffff80000ecc: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff80000ed0: 48 85 c0             	test	rax, rax
ffffffff80000ed3: 74 0e                	je	0xffffffff80000ee3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xca3>
ffffffff80000ed5: f0                   	lock
ffffffff80000ed6: 48 ff 08             	dec	qword ptr [rax]
ffffffff80000ed9: 75 08                	jne	0xffffffff80000ee3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xca3>
ffffffff80000edb: 4c 89 e7             	mov	rdi, r12
ffffffff80000ede: e8 bd 1f 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80000ee3: 4d 89 34 24          	mov	qword ptr [r12], r14
ffffffff80000ee7: 4d 85 f6             	test	r14, r14
ffffffff80000eea: 0f 84 c3 09 00 00    	je	0xffffffff800018b3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1673>
ffffffff80000ef0: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff80000ef4: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80000ef9: f0                   	lock
ffffffff80000efa: 48 0f c1 4b 40       	xadd	qword ptr [rbx + 0x40], rcx
ffffffff80000eff: 4c 39 f9             	cmp	rcx, r15
ffffffff80000f02: 0f 87 73 09 00 00    	ja	0xffffffff8000187b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x163b>
ffffffff80000f08: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80000f10: f6 c1 03             	test	cl, 0x3
ffffffff80000f13: 74 1d                	je	0xffffffff80000f32 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xcf2>
ffffffff80000f15: f0                   	lock
ffffffff80000f16: 48 83 6b 40 04       	sub	qword ptr [rbx + 0x40], 0x4
ffffffff80000f1b: f3 90                	pause
ffffffff80000f1d: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80000f22: f0                   	lock
ffffffff80000f23: 48 0f c1 4b 40       	xadd	qword ptr [rbx + 0x40], rcx
ffffffff80000f28: 4c 39 f9             	cmp	rcx, r15
ffffffff80000f2b: 76 e3                	jbe	0xffffffff80000f10 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xcd0>
ffffffff80000f2d: e9 49 09 00 00       	jmp	0xffffffff8000187b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x163b>
ffffffff80000f32: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff80000f37: 48 8b 09             	mov	rcx, qword ptr [rcx]
ffffffff80000f3a: 48 85 c9             	test	rcx, rcx
ffffffff80000f3d: 0f 84 c0 00 00 00    	je	0xffffffff80001003 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xdc3>
ffffffff80000f43: 48 8b 53 50          	mov	rdx, qword ptr [rbx + 0x50]
ffffffff80000f47: 0f b7 79 62          	movzx	edi, word ptr [rcx + 0x62]
ffffffff80000f4b: 41 89 f8             	mov	r8d, edi
ffffffff80000f4e: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff80000f52: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff80000f59: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80000f60: 4d 85 c0             	test	r8, r8
ffffffff80000f63: 74 3b                	je	0xffffffff80000fa0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd60>
ffffffff80000f65: 45 31 c9             	xor	r9d, r9d
ffffffff80000f68: 48 39 44 f1 10       	cmp	qword ptr [rcx + 8*rsi + 0x10], rax
ffffffff80000f6d: 41 0f 95 c1          	setne	r9b
ffffffff80000f71: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff80000f75: 48 ff c6             	inc	rsi
ffffffff80000f78: 49 83 c0 f8          	add	r8, -0x8
ffffffff80000f7c: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff80000f80: 74 de                	je	0xffffffff80000f60 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd20>
ffffffff80000f82: 41 0f b6 f9          	movzx	edi, r9b
ffffffff80000f86: 85 ff                	test	edi, edi
ffffffff80000f88: 74 26                	je	0xffffffff80000fb0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd70>
ffffffff80000f8a: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80000f8e: 73 19                	jae	0xffffffff80000fa9 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd69>
ffffffff80000f90: eb 71                	jmp	0xffffffff80001003 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xdc3>
ffffffff80000f92: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80000fa0: 48 89 fe             	mov	rsi, rdi
ffffffff80000fa3: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80000fa7: 72 5a                	jb	0xffffffff80001003 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xdc3>
ffffffff80000fa9: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80000fae: eb 97                	jmp	0xffffffff80000f47 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xd07>
ffffffff80000fb0: f0                   	lock
ffffffff80000fb1: 48 83 6b 40 04       	sub	qword ptr [rbx + 0x40], 0x4
ffffffff80000fb6: 48 ff 43 68          	inc	qword ptr [rbx + 0x68]
ffffffff80000fba: 4c 8b 73 60          	mov	r14, qword ptr [rbx + 0x60]
ffffffff80000fbe: 49 8d 46 10          	lea	rax, [r14 + 0x10]
ffffffff80000fc2: 48 c7 44 24 30 b0 20 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffddf50
ffffffff80000fcb: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80000fd0: 48 8d 44 24 30       	lea	rax, [rsp + 0x30]
ffffffff80000fd5: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff80000fda: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff80000fe2: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80000fee: 31 c0                	xor	eax, eax
ffffffff80000ff0: b1 01                	mov	cl, 0x1
ffffffff80000ff2: f0                   	lock
ffffffff80000ff3: 41 0f b0 4e 28       	cmpxchg	byte ptr [r14 + 0x28], cl
ffffffff80000ff8: 0f 85 74 04 00 00    	jne	0xffffffff80001472 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1232>
ffffffff80000ffe: e9 82 04 00 00       	jmp	0xffffffff80001485 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1245>
ffffffff80001003: f0                   	lock
ffffffff80001004: 48 83 6b 40 04       	sub	qword ptr [rbx + 0x40], 0x4
ffffffff80001009: e9 7e 07 00 00       	jmp	0xffffffff8000178c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x154c>
ffffffff8000100e: 48 8b 4b 30          	mov	rcx, qword ptr [rbx + 0x30]
ffffffff80001012: 31 c0                	xor	eax, eax
ffffffff80001014: f0                   	lock
ffffffff80001015: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff8000101a: 74 10                	je	0xffffffff8000102c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xdec>
ffffffff8000101c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001020: f3 90                	pause
ffffffff80001022: 31 c0                	xor	eax, eax
ffffffff80001024: f0                   	lock
ffffffff80001025: 4c 0f b1 69 10       	cmpxchg	qword ptr [rcx + 0x10], r13
ffffffff8000102a: 75 f4                	jne	0xffffffff80001020 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xde0>
ffffffff8000102c: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff80001030: 48 85 c0             	test	rax, rax
ffffffff80001033: 0f 84 f7 01 00 00    	je	0xffffffff80001230 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xff0>
ffffffff80001039: 48 8b 51 28          	mov	rdx, qword ptr [rcx + 0x28]
ffffffff8000103d: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80001041: 48 8b 79 18          	mov	rdi, qword ptr [rcx + 0x18]
ffffffff80001045: 4c 8b 41 20          	mov	r8, qword ptr [rcx + 0x20]
ffffffff80001049: 48 39 fe             	cmp	rsi, rdi
ffffffff8000104c: be 00 00 00 00       	mov	esi, 0x0
ffffffff80001051: 48 0f 43 f7          	cmovae	rsi, rdi
ffffffff80001055: 48 f7 de             	neg	rsi
ffffffff80001058: 48 01 d6             	add	rsi, rdx
ffffffff8000105b: 48 ff c6             	inc	rsi
ffffffff8000105e: 48 89 71 28          	mov	qword ptr [rcx + 0x28], rsi
ffffffff80001062: 48 ff c8             	dec	rax
ffffffff80001065: 48 89 41 30          	mov	qword ptr [rcx + 0x30], rax
ffffffff80001069: 4d 8b 34 d0          	mov	r14, qword ptr [r8 + 8*rdx]
ffffffff8000106d: f0                   	lock
ffffffff8000106e: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80001073: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80001078: 48 85 c0             	test	rax, rax
ffffffff8000107b: 0f 85 c6 01 00 00    	jne	0xffffffff80001247 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1007>
ffffffff80001081: e9 46 fe ff ff       	jmp	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80001086: f0                   	lock
ffffffff80001087: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff8000108b: 48 8b 43 38          	mov	rax, qword ptr [rbx + 0x38]
ffffffff8000108f: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80001094: f0                   	lock
ffffffff80001095: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff8000109a: 4c 39 f9             	cmp	rcx, r15
ffffffff8000109d: 0f 87 9d 07 00 00    	ja	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800010a3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800010b0: f6 c1 03             	test	cl, 0x3
ffffffff800010b3: 74 1d                	je	0xffffffff800010d2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xe92>
ffffffff800010b5: f0                   	lock
ffffffff800010b6: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800010bb: f3 90                	pause
ffffffff800010bd: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800010c2: f0                   	lock
ffffffff800010c3: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800010c8: 4c 39 f9             	cmp	rcx, r15
ffffffff800010cb: 76 e3                	jbe	0xffffffff800010b0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xe70>
ffffffff800010cd: e9 6e 07 00 00       	jmp	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800010d2: 48 8b 48 28          	mov	rcx, qword ptr [rax + 0x28]
ffffffff800010d6: f0                   	lock
ffffffff800010d7: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800010dc: 48 85 c9             	test	rcx, rcx
ffffffff800010df: 0f 84 54 07 00 00    	je	0xffffffff80001839 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15f9>
ffffffff800010e5: 48 83 7b 10 00       	cmp	qword ptr [rbx + 0x10], 0x0
ffffffff800010ea: 0f 84 49 07 00 00    	je	0xffffffff80001839 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15f9>
ffffffff800010f0: 48 8b 4b 08          	mov	rcx, qword ptr [rbx + 0x8]
ffffffff800010f4: 48 8b 41 08          	mov	rax, qword ptr [rcx + 0x8]
ffffffff800010f8: 48 3b 43 70          	cmp	rax, qword ptr [rbx + 0x70]
ffffffff800010fc: 0f 87 37 07 00 00    	ja	0xffffffff80001839 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15f9>
ffffffff80001102: 48 89 4c 24 68       	mov	qword ptr [rsp + 0x68], rcx
ffffffff80001107: 4c 8b 21             	mov	r12, qword ptr [rcx]
ffffffff8000110a: f0                   	lock
ffffffff8000110b: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff8000110f: 0f 8e 9c 07 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff80001115: 4c 89 64 24 78       	mov	qword ptr [rsp + 0x78], r12
ffffffff8000111a: 4d 8b 74 24 10       	mov	r14, qword ptr [r12 + 0x10]
ffffffff8000111f: 31 c0                	xor	eax, eax
ffffffff80001121: f0                   	lock
ffffffff80001122: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff80001127: 74 13                	je	0xffffffff8000113c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xefc>
ffffffff80001129: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80001130: f3 90                	pause
ffffffff80001132: 31 c0                	xor	eax, eax
ffffffff80001134: f0                   	lock
ffffffff80001135: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff8000113a: 75 f4                	jne	0xffffffff80001130 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xef0>
ffffffff8000113c: f0                   	lock
ffffffff8000113d: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff80001141: 0f 8e 6a 07 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff80001147: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff8000114b: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000114f: 48 39 c8             	cmp	rax, rcx
ffffffff80001152: 75 18                	jne	0xffffffff8000116c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xf2c>
ffffffff80001154: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80001158: 48 c7 c6 08 21 02 80 	mov	rsi, -0x7ffddef8
ffffffff8000115f: e8 6c 19 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80001164: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff80001168: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000116c: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff80001170: 48 01 c2             	add	rdx, rax
ffffffff80001173: 48 39 ca             	cmp	rdx, rcx
ffffffff80001176: be 00 00 00 00       	mov	esi, 0x0
ffffffff8000117b: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff8000117f: 48 29 ca             	sub	rdx, rcx
ffffffff80001182: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff80001186: 4c 89 24 d1          	mov	qword ptr [rcx + 8*rdx], r12
ffffffff8000118a: 48 ff c0             	inc	rax
ffffffff8000118d: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff80001191: f0                   	lock
ffffffff80001192: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff80001197: 4d 8b 74 24 18       	mov	r14, qword ptr [r12 + 0x18]
ffffffff8000119c: 31 c0                	xor	eax, eax
ffffffff8000119e: f0                   	lock
ffffffff8000119f: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff800011a4: 74 16                	je	0xffffffff800011bc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xf7c>
ffffffff800011a6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800011b0: f3 90                	pause
ffffffff800011b2: 31 c0                	xor	eax, eax
ffffffff800011b4: f0                   	lock
ffffffff800011b5: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff800011ba: 75 f4                	jne	0xffffffff800011b0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xf70>
ffffffff800011bc: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff800011c0: 48 85 c0             	test	rax, rax
ffffffff800011c3: 0f 84 5e 01 00 00    	je	0xffffffff80001327 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10e7>
ffffffff800011c9: 4d 8d 56 18          	lea	r10, [r14 + 0x18]
ffffffff800011cd: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff800011d1: 49 8b 54 24 20       	mov	rdx, qword ptr [r12 + 0x20]
ffffffff800011d6: 0f b7 78 62          	movzx	edi, word ptr [rax + 0x62]
ffffffff800011da: 41 89 f8             	mov	r8d, edi
ffffffff800011dd: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff800011e1: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff800011e8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800011f0: 4d 85 c0             	test	r8, r8
ffffffff800011f3: 74 27                	je	0xffffffff8000121c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xfdc>
ffffffff800011f5: 45 31 c9             	xor	r9d, r9d
ffffffff800011f8: 48 39 54 f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rdx
ffffffff800011fd: 41 0f 95 c1          	setne	r9b
ffffffff80001201: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff80001205: 48 ff c6             	inc	rsi
ffffffff80001208: 49 83 c0 f8          	add	r8, -0x8
ffffffff8000120c: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff80001210: 74 de                	je	0xffffffff800011f0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xfb0>
ffffffff80001212: 41 0f b6 f9          	movzx	edi, r9b
ffffffff80001216: 85 ff                	test	edi, edi
ffffffff80001218: 74 46                	je	0xffffffff80001260 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1020>
ffffffff8000121a: eb 03                	jmp	0xffffffff8000121f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xfdf>
ffffffff8000121c: 48 89 fe             	mov	rsi, rdi
ffffffff8000121f: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80001223: 0f 82 fe 00 00 00    	jb	0xffffffff80001327 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10e7>
ffffffff80001229: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff8000122e: eb a6                	jmp	0xffffffff800011d6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xf96>
ffffffff80001230: 45 31 f6             	xor	r14d, r14d
ffffffff80001233: f0                   	lock
ffffffff80001234: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff80001239: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000123e: 48 85 c0             	test	rax, rax
ffffffff80001241: 0f 84 85 fc ff ff    	je	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80001247: f0                   	lock
ffffffff80001248: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000124b: 0f 85 7b fc ff ff    	jne	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80001251: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80001256: e8 45 1c 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff8000125b: e9 6c fc ff ff       	jmp	0xffffffff80000ecc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0xc8c>
ffffffff80001260: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80001265: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8000126a: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff8000126f: 4c 89 54 24 20       	mov	qword ptr [rsp + 0x20], r10
ffffffff80001274: c6 44 24 30 00       	mov	byte ptr [rsp + 0x30], 0x0
ffffffff80001279: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff8000127e: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff80001283: 48 8d 54 24 30       	lea	rdx, [rsp + 0x30]
ffffffff80001288: 4c 89 54 24 60       	mov	qword ptr [rsp + 0x60], r10
ffffffff8000128d: e8 ce 67 00 00       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff80001292: 49 ff 4e 28          	dec	qword ptr [r14 + 0x28]
ffffffff80001296: 80 7c 24 30 00       	cmp	byte ptr [rsp + 0x30], 0x0
ffffffff8000129b: 0f 84 86 00 00 00    	je	0xffffffff80001327 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10e7>
ffffffff800012a1: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff800012a6: 48 8b 30             	mov	rsi, qword ptr [rax]
ffffffff800012a9: 48 85 f6             	test	rsi, rsi
ffffffff800012ac: 0f 84 19 06 00 00    	je	0xffffffff800018cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x168b>
ffffffff800012b2: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff800012b6: 48 85 c0             	test	rax, rax
ffffffff800012b9: 0f 84 da 05 00 00    	je	0xffffffff80001899 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1659>
ffffffff800012bf: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff800012c3: 49 89 4e 18          	mov	qword ptr [r14 + 0x18], rcx
ffffffff800012c7: 48 ff c8             	dec	rax
ffffffff800012ca: 49 89 46 20          	mov	qword ptr [r14 + 0x20], rax
ffffffff800012ce: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff800012d5: 31 c0                	xor	eax, eax
ffffffff800012d7: b1 01                	mov	cl, 0x1
ffffffff800012d9: eb 02                	jmp	0xffffffff800012dd <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x109d>
ffffffff800012db: 31 c0                	xor	eax, eax
ffffffff800012dd: f0                   	lock
ffffffff800012de: 0f b0 0d 1b 9d 02 00 	cmpxchg	byte ptr [rip + 0x29d1b], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800012e5: 74 23                	je	0xffffffff8000130a <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10ca>
ffffffff800012e7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff800012f0: 0f b6 05 09 9d 02 00 	movzx	eax, byte ptr [rip + 0x29d09] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800012f7: 84 c0                	test	al, al
ffffffff800012f9: 74 e0                	je	0xffffffff800012db <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x109b>
ffffffff800012fb: f3 90                	pause
ffffffff800012fd: 0f b6 05 fc 9c 02 00 	movzx	eax, byte ptr [rip + 0x29cfc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001304: 84 c0                	test	al, al
ffffffff80001306: 75 f3                	jne	0xffffffff800012fb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10bb>
ffffffff80001308: eb d1                	jmp	0xffffffff800012db <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x109b>
ffffffff8000130a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8000130f: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80001314: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000131b: e8 d0 b4 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80001320: c6 05 d9 9c 02 00 00 	mov	byte ptr [rip + 0x29cd9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001327: f0                   	lock
ffffffff80001328: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff8000132d: f0                   	lock
ffffffff8000132e: 49 ff 0c 24          	dec	qword ptr [r12]
ffffffff80001332: 75 0a                	jne	0xffffffff8000133e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x10fe>
ffffffff80001334: 48 8d 7c 24 78       	lea	rdi, [rsp + 0x78]
ffffffff80001339: e8 62 1b 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff8000133e: 4c 8b 63 38          	mov	r12, qword ptr [rbx + 0x38]
ffffffff80001342: 31 c0                	xor	eax, eax
ffffffff80001344: f0                   	lock
ffffffff80001345: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff8000134b: 74 10                	je	0xffffffff8000135d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x111d>
ffffffff8000134d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80001350: f3 90                	pause
ffffffff80001352: 31 c0                	xor	eax, eax
ffffffff80001354: f0                   	lock
ffffffff80001355: 4d 0f b1 6c 24 10    	cmpxchg	qword ptr [r12 + 0x10], r13
ffffffff8000135b: 75 f3                	jne	0xffffffff80001350 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1110>
ffffffff8000135d: 49 8b 44 24 18       	mov	rax, qword ptr [r12 + 0x18]
ffffffff80001362: 48 85 c0             	test	rax, rax
ffffffff80001365: 0f 84 9b 04 00 00    	je	0xffffffff80001806 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15c6>
ffffffff8000136b: 4d 8d 74 24 18       	lea	r14, [r12 + 0x18]
ffffffff80001370: 48 8b 4c 24 68       	mov	rcx, qword ptr [rsp + 0x68]
ffffffff80001375: 48 8b 09             	mov	rcx, qword ptr [rcx]
ffffffff80001378: 48 8b 51 20          	mov	rdx, qword ptr [rcx + 0x20]
ffffffff8000137c: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff80001381: 0f b7 78 62          	movzx	edi, word ptr [rax + 0x62]
ffffffff80001385: 41 89 f8             	mov	r8d, edi
ffffffff80001388: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff8000138c: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff80001393: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800013a0: 4d 85 c0             	test	r8, r8
ffffffff800013a3: 74 27                	je	0xffffffff800013cc <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x118c>
ffffffff800013a5: 45 31 c9             	xor	r9d, r9d
ffffffff800013a8: 48 39 54 f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rdx
ffffffff800013ad: 41 0f 95 c1          	setne	r9b
ffffffff800013b1: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff800013b5: 48 ff c6             	inc	rsi
ffffffff800013b8: 49 83 c0 f8          	add	r8, -0x8
ffffffff800013bc: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff800013c0: 74 de                	je	0xffffffff800013a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1160>
ffffffff800013c2: 41 0f b6 f9          	movzx	edi, r9b
ffffffff800013c6: 85 ff                	test	edi, edi
ffffffff800013c8: 74 16                	je	0xffffffff800013e0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x11a0>
ffffffff800013ca: eb 03                	jmp	0xffffffff800013cf <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x118f>
ffffffff800013cc: 48 89 fe             	mov	rsi, rdi
ffffffff800013cf: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800013d3: 0f 82 2d 04 00 00    	jb	0xffffffff80001806 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15c6>
ffffffff800013d9: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff800013de: eb a1                	jmp	0xffffffff80001381 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1141>
ffffffff800013e0: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800013e5: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff800013ea: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff800013ef: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff800013f4: c6 44 24 78 00       	mov	byte ptr [rsp + 0x78], 0x0
ffffffff800013f9: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff800013fe: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff80001403: 48 8d 54 24 78       	lea	rdx, [rsp + 0x78]
ffffffff80001408: e8 53 66 00 00       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff8000140d: 49 ff 4c 24 28       	dec	qword ptr [r12 + 0x28]
ffffffff80001412: 80 7c 24 78 00       	cmp	byte ptr [rsp + 0x78], 0x0
ffffffff80001417: 0f 84 e9 03 00 00    	je	0xffffffff80001806 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15c6>
ffffffff8000141d: 49 8b 36             	mov	rsi, qword ptr [r14]
ffffffff80001420: 48 85 f6             	test	rsi, rsi
ffffffff80001423: 0f 84 a2 04 00 00    	je	0xffffffff800018cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x168b>
ffffffff80001429: 49 8b 44 24 20       	mov	rax, qword ptr [r12 + 0x20]
ffffffff8000142e: 48 85 c0             	test	rax, rax
ffffffff80001431: 0f 84 62 04 00 00    	je	0xffffffff80001899 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1659>
ffffffff80001437: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff8000143b: 49 89 4c 24 18       	mov	qword ptr [r12 + 0x18], rcx
ffffffff80001440: 48 ff c8             	dec	rax
ffffffff80001443: 49 89 44 24 20       	mov	qword ptr [r12 + 0x20], rax
ffffffff80001448: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff8000144f: 31 c0                	xor	eax, eax
ffffffff80001451: b1 01                	mov	cl, 0x1
ffffffff80001453: f0                   	lock
ffffffff80001454: 0f b0 0d a5 9b 02 00 	cmpxchg	byte ptr [rip + 0x29ba5], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000145b: 0f 85 71 03 00 00    	jne	0xffffffff800017d2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1592>
ffffffff80001461: e9 83 03 00 00       	jmp	0xffffffff800017e9 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15a9>
ffffffff80001466: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80001470: f3 90                	pause
ffffffff80001472: 41 0f b6 46 28       	movzx	eax, byte ptr [r14 + 0x28]
ffffffff80001477: 84 c0                	test	al, al
ffffffff80001479: 75 f5                	jne	0xffffffff80001470 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1230>
ffffffff8000147b: 31 c0                	xor	eax, eax
ffffffff8000147d: f0                   	lock
ffffffff8000147e: 41 0f b0 4e 28       	cmpxchg	byte ptr [r14 + 0x28], cl
ffffffff80001483: 75 ed                	jne	0xffffffff80001472 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1232>
ffffffff80001485: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff80001489: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8000148d: 48 8d 74 24 78       	lea	rsi, [rsp + 0x78]
ffffffff80001492: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff80001495: 41 c6 46 28 00       	mov	byte ptr [r14 + 0x28], 0x0
ffffffff8000149a: 84 c0                	test	al, al
ffffffff8000149c: 74 62                	je	0xffffffff80001500 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x12c0>
ffffffff8000149e: 48 8b 43 60          	mov	rax, qword ptr [rbx + 0x60]
ffffffff800014a2: 48 8b 4b 68          	mov	rcx, qword ptr [rbx + 0x68]
ffffffff800014a6: 48 87 48 48          	xchg	qword ptr [rax + 0x48], rcx
ffffffff800014aa: 48 8b 43 38          	mov	rax, qword ptr [rbx + 0x38]
ffffffff800014ae: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800014b3: f0                   	lock
ffffffff800014b4: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800014b9: 4c 39 f9             	cmp	rcx, r15
ffffffff800014bc: 0f 87 7e 03 00 00    	ja	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800014c2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff800014d0: f6 c1 03             	test	cl, 0x3
ffffffff800014d3: 0f 84 bb 00 00 00    	je	0xffffffff80001594 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1354>
ffffffff800014d9: f0                   	lock
ffffffff800014da: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800014df: f3 90                	pause
ffffffff800014e1: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff800014e6: f0                   	lock
ffffffff800014e7: 48 0f c1 48 10       	xadd	qword ptr [rax + 0x10], rcx
ffffffff800014ec: 4c 39 f9             	cmp	rcx, r15
ffffffff800014ef: 76 df                	jbe	0xffffffff800014d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1290>
ffffffff800014f1: e9 4a 03 00 00       	jmp	0xffffffff80001840 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1600>
ffffffff800014f6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80001500: 31 c0                	xor	eax, eax
ffffffff80001502: f0                   	lock
ffffffff80001503: 4c 0f b1 6b 40       	cmpxchg	qword ptr [rbx + 0x40], r13
ffffffff80001508: 74 04                	je	0xffffffff8000150e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x12ce>
ffffffff8000150a: f3 90                	pause
ffffffff8000150c: eb f2                	jmp	0xffffffff80001500 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x12c0>
ffffffff8000150e: 48 8b 44 24 70       	mov	rax, qword ptr [rsp + 0x70]
ffffffff80001513: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff80001516: 48 85 c0             	test	rax, rax
ffffffff80001519: 0f 84 67 02 00 00    	je	0xffffffff80001786 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1546>
ffffffff8000151f: 49 8b 14 24          	mov	rdx, qword ptr [r12]
ffffffff80001523: 48 8b 4b 50          	mov	rcx, qword ptr [rbx + 0x50]
ffffffff80001527: 48 8b 52 20          	mov	rdx, qword ptr [rdx + 0x20]
ffffffff8000152b: 0f b7 78 62          	movzx	edi, word ptr [rax + 0x62]
ffffffff8000152f: 41 89 f8             	mov	r8d, edi
ffffffff80001532: 41 c1 e0 03          	shl	r8d, 0x3
ffffffff80001536: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff8000153d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80001540: 4d 85 c0             	test	r8, r8
ffffffff80001543: 74 3b                	je	0xffffffff80001580 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1340>
ffffffff80001545: 45 31 c9             	xor	r9d, r9d
ffffffff80001548: 48 39 54 f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rdx
ffffffff8000154d: 41 0f 95 c1          	setne	r9b
ffffffff80001551: 44 0f 47 cd          	cmova	r9d, ebp
ffffffff80001555: 48 ff c6             	inc	rsi
ffffffff80001558: 49 83 c0 f8          	add	r8, -0x8
ffffffff8000155c: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff80001560: 74 de                	je	0xffffffff80001540 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1300>
ffffffff80001562: 41 0f b6 f9          	movzx	edi, r9b
ffffffff80001566: 85 ff                	test	edi, edi
ffffffff80001568: 0f 84 a6 00 00 00    	je	0xffffffff80001614 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x13d4>
ffffffff8000156e: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80001572: 73 19                	jae	0xffffffff8000158d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x134d>
ffffffff80001574: e9 0d 02 00 00       	jmp	0xffffffff80001786 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1546>
ffffffff80001579: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80001580: 48 89 fe             	mov	rsi, rdi
ffffffff80001583: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80001587: 0f 82 f9 01 00 00    	jb	0xffffffff80001786 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1546>
ffffffff8000158d: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff80001592: eb 97                	jmp	0xffffffff8000152b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x12eb>
ffffffff80001594: 48 8b 48 18          	mov	rcx, qword ptr [rax + 0x18]
ffffffff80001598: 48 85 c9             	test	rcx, rcx
ffffffff8000159b: 0f 84 05 01 00 00    	je	0xffffffff800016a6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1466>
ffffffff800015a1: 49 8b 34 24          	mov	rsi, qword ptr [r12]
ffffffff800015a5: 48 8b 50 20          	mov	rdx, qword ptr [rax + 0x20]
ffffffff800015a9: 48 8b 76 20          	mov	rsi, qword ptr [rsi + 0x20]
ffffffff800015ad: 44 0f b7 41 62       	movzx	r8d, word ptr [rcx + 0x62]
ffffffff800015b2: 45 89 c1             	mov	r9d, r8d
ffffffff800015b5: 41 c1 e1 03          	shl	r9d, 0x3
ffffffff800015b9: 48 c7 c7 ff ff ff ff 	mov	rdi, -0x1
ffffffff800015c0: 4d 85 c9             	test	r9, r9
ffffffff800015c3: 74 3b                	je	0xffffffff80001600 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x13c0>
ffffffff800015c5: 45 31 d2             	xor	r10d, r10d
ffffffff800015c8: 48 39 74 f9 10       	cmp	qword ptr [rcx + 8*rdi + 0x10], rsi
ffffffff800015cd: 41 0f 95 c2          	setne	r10b
ffffffff800015d1: 44 0f 47 d5          	cmova	r10d, ebp
ffffffff800015d5: 48 ff c7             	inc	rdi
ffffffff800015d8: 49 83 c1 f8          	add	r9, -0x8
ffffffff800015dc: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff800015e0: 74 de                	je	0xffffffff800015c0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1380>
ffffffff800015e2: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff800015e6: 45 85 c0             	test	r8d, r8d
ffffffff800015e9: 0f 84 ac 00 00 00    	je	0xffffffff8000169b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x145b>
ffffffff800015ef: 48 83 ea 01          	sub	rdx, 0x1
ffffffff800015f3: 73 18                	jae	0xffffffff8000160d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x13cd>
ffffffff800015f5: e9 ac 00 00 00       	jmp	0xffffffff800016a6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1466>
ffffffff800015fa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80001600: 4c 89 c7             	mov	rdi, r8
ffffffff80001603: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80001607: 0f 82 99 00 00 00    	jb	0xffffffff800016a6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1466>
ffffffff8000160d: 48 8b 4c f9 68       	mov	rcx, qword ptr [rcx + 8*rdi + 0x68]
ffffffff80001612: eb 99                	jmp	0xffffffff800015ad <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x136d>
ffffffff80001614: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80001619: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8000161e: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff80001623: 4c 8b 74 24 70       	mov	r14, qword ptr [rsp + 0x70]
ffffffff80001628: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff8000162d: c6 44 24 07 00       	mov	byte ptr [rsp + 0x7], 0x0
ffffffff80001632: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80001637: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8000163c: 48 8d 54 24 07       	lea	rdx, [rsp + 0x7]
ffffffff80001641: e8 1a 64 00 00       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff80001646: 48 ff 4b 58          	dec	qword ptr [rbx + 0x58]
ffffffff8000164a: 80 7c 24 07 00       	cmp	byte ptr [rsp + 0x7], 0x0
ffffffff8000164f: 0f 84 31 01 00 00    	je	0xffffffff80001786 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1546>
ffffffff80001655: 49 8b 36             	mov	rsi, qword ptr [r14]
ffffffff80001658: 48 85 f6             	test	rsi, rsi
ffffffff8000165b: 0f 84 6a 02 00 00    	je	0xffffffff800018cb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x168b>
ffffffff80001661: 48 8b 43 50          	mov	rax, qword ptr [rbx + 0x50]
ffffffff80001665: 48 85 c0             	test	rax, rax
ffffffff80001668: 0f 84 2b 02 00 00    	je	0xffffffff80001899 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1659>
ffffffff8000166e: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff80001672: 48 89 4b 48          	mov	qword ptr [rbx + 0x48], rcx
ffffffff80001676: 48 ff c8             	dec	rax
ffffffff80001679: 48 89 43 50          	mov	qword ptr [rbx + 0x50], rax
ffffffff8000167d: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff80001684: 31 c0                	xor	eax, eax
ffffffff80001686: b1 01                	mov	cl, 0x1
ffffffff80001688: f0                   	lock
ffffffff80001689: 0f b0 0d 70 99 02 00 	cmpxchg	byte ptr [rip + 0x29970], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001690: 0f 85 bc 00 00 00    	jne	0xffffffff80001752 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1512>
ffffffff80001696: e9 ce 00 00 00       	jmp	0xffffffff80001769 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1529>
ffffffff8000169b: f0                   	lock
ffffffff8000169c: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800016a1: e9 e6 00 00 00       	jmp	0xffffffff8000178c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x154c>
ffffffff800016a6: f0                   	lock
ffffffff800016a7: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff800016ac: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff800016b0: 48 8b 78 40          	mov	rdi, qword ptr [rax + 0x40]
ffffffff800016b4: 48 83 ff 03          	cmp	rdi, 0x3
ffffffff800016b8: 0f 87 19 02 00 00    	ja	0xffffffff800018d7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1697>
ffffffff800016be: 4c 8b 74 fb 18       	mov	r14, qword ptr [rbx + 8*rdi + 0x18]
ffffffff800016c3: f0                   	lock
ffffffff800016c4: 48 ff 00             	inc	qword ptr [rax]
ffffffff800016c7: 0f 8e e4 01 00 00    	jle	0xffffffff800018b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1671>
ffffffff800016cd: 4d 8b 24 24          	mov	r12, qword ptr [r12]
ffffffff800016d1: 31 c0                	xor	eax, eax
ffffffff800016d3: f0                   	lock
ffffffff800016d4: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff800016d9: 74 11                	je	0xffffffff800016ec <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x14ac>
ffffffff800016db: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800016e0: f3 90                	pause
ffffffff800016e2: 31 c0                	xor	eax, eax
ffffffff800016e4: f0                   	lock
ffffffff800016e5: 4d 0f b1 6e 10       	cmpxchg	qword ptr [r14 + 0x10], r13
ffffffff800016ea: 75 f4                	jne	0xffffffff800016e0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x14a0>
ffffffff800016ec: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff800016f0: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff800016f4: 48 39 c8             	cmp	rax, rcx
ffffffff800016f7: 75 18                	jne	0xffffffff80001711 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x14d1>
ffffffff800016f9: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff800016fd: 48 c7 c6 98 21 02 80 	mov	rsi, -0x7ffdde68
ffffffff80001704: e8 c7 13 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80001709: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff8000170d: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff80001711: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff80001715: 48 01 c2             	add	rdx, rax
ffffffff80001718: 48 39 ca             	cmp	rdx, rcx
ffffffff8000171b: be 00 00 00 00       	mov	esi, 0x0
ffffffff80001720: 48 0f 43 f1          	cmovae	rsi, rcx
ffffffff80001724: 48 29 f2             	sub	rdx, rsi
ffffffff80001727: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff8000172b: 4c 89 24 d1          	mov	qword ptr [rcx + 8*rdx], r12
ffffffff8000172f: 48 ff c0             	inc	rax
ffffffff80001732: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff80001736: f0                   	lock
ffffffff80001737: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff8000173c: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff80001741: eb 49                	jmp	0xffffffff8000178c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x154c>
ffffffff80001743: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80001750: f3 90                	pause
ffffffff80001752: 0f b6 05 a7 98 02 00 	movzx	eax, byte ptr [rip + 0x298a7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001759: 84 c0                	test	al, al
ffffffff8000175b: 75 f3                	jne	0xffffffff80001750 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1510>
ffffffff8000175d: 31 c0                	xor	eax, eax
ffffffff8000175f: f0                   	lock
ffffffff80001760: 0f b0 0d 99 98 02 00 	cmpxchg	byte ptr [rip + 0x29899], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001767: 75 e9                	jne	0xffffffff80001752 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1512>
ffffffff80001769: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8000176e: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80001773: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000177a: e8 71 b0 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000177f: c6 05 7a 98 02 00 00 	mov	byte ptr [rip + 0x2987a], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001786: f0                   	lock
ffffffff80001787: 48 83 63 40 fc       	and	qword ptr [rbx + 0x40], -0x4
ffffffff8000178c: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff80001790: 48 85 c0             	test	rax, rax
ffffffff80001793: 74 0e                	je	0xffffffff800017a3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1563>
ffffffff80001795: f0                   	lock
ffffffff80001796: 48 ff 08             	dec	qword ptr [rax]
ffffffff80001799: 75 08                	jne	0xffffffff800017a3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1563>
ffffffff8000179b: 4c 89 e7             	mov	rdi, r12
ffffffff8000179e: e8 fd 16 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff800017a3: 49 c7 04 24 00 00 00 00      	mov	qword ptr [r12], 0x0
ffffffff800017ab: fb                   	sti
ffffffff800017ac: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff800017b0: 48 8d 41 10          	lea	rax, [rcx + 0x10]
ffffffff800017b4: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800017b9: f0                   	lock
ffffffff800017ba: 48 0f c1 51 10       	xadd	qword ptr [rcx + 0x10], rdx
ffffffff800017bf: 4c 39 fa             	cmp	rdx, r15
ffffffff800017c2: 0f 86 f2 ea ff ff    	jbe	0xffffffff800002ba <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x7a>
ffffffff800017c8: e9 91 00 00 00       	jmp	0xffffffff8000185e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x161e>
ffffffff800017cd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff800017d0: f3 90                	pause
ffffffff800017d2: 0f b6 05 27 98 02 00 	movzx	eax, byte ptr [rip + 0x29827] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800017d9: 84 c0                	test	al, al
ffffffff800017db: 75 f3                	jne	0xffffffff800017d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1590>
ffffffff800017dd: 31 c0                	xor	eax, eax
ffffffff800017df: f0                   	lock
ffffffff800017e0: 0f b0 0d 19 98 02 00 	cmpxchg	byte ptr [rip + 0x29819], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800017e7: 75 e9                	jne	0xffffffff800017d2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x1592>
ffffffff800017e9: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800017ee: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff800017f3: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800017fa: e8 f1 af 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800017ff: c6 05 fa 97 02 00 00 	mov	byte ptr [rip + 0x297fa], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001806: f0                   	lock
ffffffff80001807: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff8000180d: 48 89 df             	mov	rdi, rbx
ffffffff80001810: e8 fb 03 01 00       	call	0xffffffff80011c10 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901>
ffffffff80001815: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8000181a: 48 89 54 24 48       	mov	qword ptr [rsp + 0x48], rdx
ffffffff8000181f: 48 85 c0             	test	rax, rax
ffffffff80001822: 74 10                	je	0xffffffff80001834 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15f4>
ffffffff80001824: f0                   	lock
ffffffff80001825: 48 ff 08             	dec	qword ptr [rax]
ffffffff80001828: 75 0a                	jne	0xffffffff80001834 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x15f4>
ffffffff8000182a: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff8000182f: e8 6c 16 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80001834: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff80001839: fb                   	sti
ffffffff8000183a: f4                   	hlt
ffffffff8000183b: e9 6c ff ff ff       	jmp	0xffffffff800017ac <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804+0x156c>
ffffffff80001840: f0                   	lock
ffffffff80001841: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80001846: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff8000184b: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80001852: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80001859: e8 92 f8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000185e: f0                   	lock
ffffffff8000185f: 48 83 28 04          	sub	qword ptr [rax], 0x4
ffffffff80001863: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80001868: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff8000186f: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80001876: e8 75 f8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000187b: f0                   	lock
ffffffff8000187c: 48 83 6b 40 04       	sub	qword ptr [rbx + 0x40], 0x4
ffffffff80001881: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80001886: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff8000188d: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80001894: e8 57 f8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80001899: be 21 00 00 00       	mov	esi, 0x21
ffffffff8000189e: 48 c7 c7 50 26 02 80 	mov	rdi, -0x7ffdd9b0
ffffffff800018a5: 48 c7 c2 78 26 02 80 	mov	rdx, -0x7ffdd988
ffffffff800018ac: e8 3f f8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800018b1: 0f 0b                	ud2
ffffffff800018b3: be 2e 00 00 00       	mov	esi, 0x2e
ffffffff800018b8: 48 c7 c7 20 21 02 80 	mov	rdi, -0x7ffddee0
ffffffff800018bf: 48 c7 c2 68 21 02 80 	mov	rdx, -0x7ffdde98
ffffffff800018c6: e8 95 fd 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800018cb: 48 c7 c7 60 74 02 80 	mov	rdi, -0x7ffd8ba0
ffffffff800018d2: e8 69 fd 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800018d7: be 04 00 00 00       	mov	esi, 0x4
ffffffff800018dc: 48 c7 c2 80 21 02 80 	mov	rdx, -0x7ffdde80
ffffffff800018e3: e8 a9 f8 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800018e8: cc                   	int3
ffffffff800018e9: cc                   	int3
ffffffff800018ea: cc                   	int3
ffffffff800018eb: cc                   	int3
ffffffff800018ec: cc                   	int3
ffffffff800018ed: cc                   	int3
ffffffff800018ee: cc                   	int3
ffffffff800018ef: cc                   	int3

ffffffff800018f0 <taos::events::run_loop::hb7053eb66eece363>:
ffffffff800018f0: 50                   	push	rax
ffffffff800018f1: 48 b8 fc ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffffc
ffffffff800018fb: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80001900: f0                   	lock
ffffffff80001901: 48 0f c1 0d e7 98 02 00      	xadd	qword ptr [rip + 0x298e7], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001909: 48 39 c1             	cmp	rcx, rax
ffffffff8000190c: 77 25                	ja	0xffffffff80001933 <taos::events::run_loop::hb7053eb66eece363+0x43>
ffffffff8000190e: 66 90                	nop
ffffffff80001910: f6 c1 03             	test	cl, 0x3
ffffffff80001913: 74 3f                	je	0xffffffff80001954 <taos::events::run_loop::hb7053eb66eece363+0x64>
ffffffff80001915: f0                   	lock
ffffffff80001916: 48 83 2d d2 98 02 00 04      	sub	qword ptr [rip + 0x298d2], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000191e: f3 90                	pause
ffffffff80001920: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80001925: f0                   	lock
ffffffff80001926: 48 0f c1 0d c2 98 02 00      	xadd	qword ptr [rip + 0x298c2], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000192e: 48 39 c1             	cmp	rcx, rax
ffffffff80001931: 76 dd                	jbe	0xffffffff80001910 <taos::events::run_loop::hb7053eb66eece363+0x20>
ffffffff80001933: f0                   	lock
ffffffff80001934: 48 83 2d b4 98 02 00 04      	sub	qword ptr [rip + 0x298b4], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000193c: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80001941: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80001948: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff8000194f: e8 9c f7 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80001954: 48 8b 05 9d 98 02 00 	mov	rax, qword ptr [rip + 0x2989d] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff8000195b: 48 85 c0             	test	rax, rax
ffffffff8000195e: 75 18                	jne	0xffffffff80001978 <taos::events::run_loop::hb7053eb66eece363+0x88>
ffffffff80001960: be 0f 00 00 00       	mov	esi, 0xf
ffffffff80001965: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff8000196c: 48 c7 c2 d0 21 02 80 	mov	rdx, -0x7ffdde30
ffffffff80001973: e8 e8 fc 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80001978: 48 8b 0d 81 98 02 00 	mov	rcx, qword ptr [rip + 0x29881] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff8000197f: ba ff 00 00 00       	mov	edx, 0xff
ffffffff80001984: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80001990: 44 0f b7 80 b6 05 00 00      	movzx	r8d, word ptr [rax + 0x5b6]
ffffffff80001998: 45 89 c2             	mov	r10d, r8d
ffffffff8000199b: 41 c1 e2 07          	shl	r10d, 0x7
ffffffff8000199f: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff800019a6: 45 31 c9             	xor	r9d, r9d
ffffffff800019a9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff800019b0: 4d 89 d3             	mov	r11, r10
ffffffff800019b3: 4d 01 cb             	add	r11, r9
ffffffff800019b6: 74 38                	je	0xffffffff800019f0 <taos::events::run_loop::hb7053eb66eece363+0x100>
ffffffff800019b8: 45 31 db             	xor	r11d, r11d
ffffffff800019bb: 39 bc b0 8c 05 00 00 	cmp	dword ptr [rax + 4*rsi + 0x58c], edi
ffffffff800019c2: 41 0f 95 c3          	setne	r11b
ffffffff800019c6: 44 0f 47 da          	cmova	r11d, edx
ffffffff800019ca: 49 83 c1 80          	add	r9, -0x80
ffffffff800019ce: 48 ff c6             	inc	rsi
ffffffff800019d1: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff800019d5: 74 d9                	je	0xffffffff800019b0 <taos::events::run_loop::hb7053eb66eece363+0xc0>
ffffffff800019d7: 45 0f b6 c3          	movzx	r8d, r11b
ffffffff800019db: 41 81 f8 ff 00 00 00 	cmp	r8d, 0xff
ffffffff800019e2: 74 0f                	je	0xffffffff800019f3 <taos::events::run_loop::hb7053eb66eece363+0x103>
ffffffff800019e4: eb 21                	jmp	0xffffffff80001a07 <taos::events::run_loop::hb7053eb66eece363+0x117>
ffffffff800019e6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800019f0: 4c 89 c6             	mov	rsi, r8
ffffffff800019f3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800019f7: 0f 82 63 ff ff ff    	jb	0xffffffff80001960 <taos::events::run_loop::hb7053eb66eece363+0x70>
ffffffff800019fd: 48 8b 84 f0 b8 05 00 00      	mov	rax, qword ptr [rax + 8*rsi + 0x5b8]
ffffffff80001a05: eb 89                	jmp	0xffffffff80001990 <taos::events::run_loop::hb7053eb66eece363+0xa0>
ffffffff80001a07: 4c 29 c8             	sub	rax, r9
ffffffff80001a0a: 48 83 c0 88          	add	rax, -0x78
ffffffff80001a0e: 48 89 c7             	mov	rdi, rax
ffffffff80001a11: e8 2a e8 ff ff       	call	0xffffffff80000240 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::h46fcca300fa87969.llvm.4738937846055189804>
ffffffff80001a16: cc                   	int3
ffffffff80001a17: cc                   	int3
ffffffff80001a18: cc                   	int3
ffffffff80001a19: cc                   	int3
ffffffff80001a1a: cc                   	int3
ffffffff80001a1b: cc                   	int3
ffffffff80001a1c: cc                   	int3
ffffffff80001a1d: cc                   	int3
ffffffff80001a1e: cc                   	int3
ffffffff80001a1f: cc                   	int3

ffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>:
ffffffff80001a20: 55                   	push	rbp
ffffffff80001a21: 41 57                	push	r15
ffffffff80001a23: 41 56                	push	r14
ffffffff80001a25: 41 55                	push	r13
ffffffff80001a27: 41 54                	push	r12
ffffffff80001a29: 53                   	push	rbx
ffffffff80001a2a: 48 83 ec 18          	sub	rsp, 0x18
ffffffff80001a2e: 48 b8 fc ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffffc
ffffffff80001a38: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80001a3d: f0                   	lock
ffffffff80001a3e: 48 0f c1 0d aa 97 02 00      	xadd	qword ptr [rip + 0x297aa], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001a46: 48 39 c1             	cmp	rcx, rax
ffffffff80001a49: 77 28                	ja	0xffffffff80001a73 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x53>
ffffffff80001a4b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80001a50: f6 c1 03             	test	cl, 0x3
ffffffff80001a53: 74 3f                	je	0xffffffff80001a94 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x74>
ffffffff80001a55: f0                   	lock
ffffffff80001a56: 48 83 2d 92 97 02 00 04      	sub	qword ptr [rip + 0x29792], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001a5e: f3 90                	pause
ffffffff80001a60: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80001a65: f0                   	lock
ffffffff80001a66: 48 0f c1 0d 82 97 02 00      	xadd	qword ptr [rip + 0x29782], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001a6e: 48 39 c1             	cmp	rcx, rax
ffffffff80001a71: 76 dd                	jbe	0xffffffff80001a50 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x30>
ffffffff80001a73: f0                   	lock
ffffffff80001a74: 48 83 2d 74 97 02 00 04      	sub	qword ptr [rip + 0x29774], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001a7c: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80001a81: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80001a88: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80001a8f: e8 5c f6 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80001a94: 48 8b 05 5d 97 02 00 	mov	rax, qword ptr [rip + 0x2975d] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff80001a9b: 48 85 c0             	test	rax, rax
ffffffff80001a9e: 0f 84 da 02 00 00    	je	0xffffffff80001d7e <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x35e>
ffffffff80001aa4: 48 8b 0d 55 97 02 00 	mov	rcx, qword ptr [rip + 0x29755] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff80001aab: 8b 17                	mov	edx, dword ptr [rdi]
ffffffff80001aad: bf ff 00 00 00       	mov	edi, 0xff
ffffffff80001ab2: 44 0f b7 88 b6 05 00 00      	movzx	r9d, word ptr [rax + 0x5b6]
ffffffff80001aba: 48 8d 58 d0          	lea	rbx, [rax - 0x30]
ffffffff80001abe: 45 89 ca             	mov	r10d, r9d
ffffffff80001ac1: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff80001ac5: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff80001acc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001ad0: 4d 85 d2             	test	r10, r10
ffffffff80001ad3: 74 3b                	je	0xffffffff80001b10 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0xf0>
ffffffff80001ad5: 45 31 db             	xor	r11d, r11d
ffffffff80001ad8: 42 39 94 80 8c 05 00 00      	cmp	dword ptr [rax + 4*r8 + 0x58c], edx
ffffffff80001ae0: 41 0f 95 c3          	setne	r11b
ffffffff80001ae4: 44 0f 47 df          	cmova	r11d, edi
ffffffff80001ae8: 48 83 eb 80          	sub	rbx, -0x80
ffffffff80001aec: 49 ff c0             	inc	r8
ffffffff80001aef: 49 83 c2 fc          	add	r10, -0x4
ffffffff80001af3: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80001af7: 74 d7                	je	0xffffffff80001ad0 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0xb0>
ffffffff80001af9: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff80001afd: 45 85 c9             	test	r9d, r9d
ffffffff80001b00: 74 25                	je	0xffffffff80001b27 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x107>
ffffffff80001b02: eb 0f                	jmp	0xffffffff80001b13 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0xf3>
ffffffff80001b04: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80001b10: 4d 89 c8             	mov	r8, r9
ffffffff80001b13: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80001b17: 0f 82 61 02 00 00    	jb	0xffffffff80001d7e <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x35e>
ffffffff80001b1d: 4a 8b 84 c0 b8 05 00 00      	mov	rax, qword ptr [rax + 8*r8 + 0x5b8]
ffffffff80001b25: eb 8b                	jmp	0xffffffff80001ab2 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x92>
ffffffff80001b27: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80001b2c: 31 c0                	xor	eax, eax
ffffffff80001b2e: f0                   	lock
ffffffff80001b2f: 48 0f b1 4b b0       	cmpxchg	qword ptr [rbx - 0x50], rcx
ffffffff80001b34: 74 16                	je	0xffffffff80001b4c <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x12c>
ffffffff80001b36: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80001b40: f3 90                	pause
ffffffff80001b42: 31 c0                	xor	eax, eax
ffffffff80001b44: f0                   	lock
ffffffff80001b45: 48 0f b1 4b b0       	cmpxchg	qword ptr [rbx - 0x50], rcx
ffffffff80001b4a: 75 f4                	jne	0xffffffff80001b40 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x120>
ffffffff80001b4c: 44 8b 36             	mov	r14d, dword ptr [rsi]
ffffffff80001b4f: 4c 8b 63 e8          	mov	r12, qword ptr [rbx - 0x18]
ffffffff80001b53: f0                   	lock
ffffffff80001b54: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff80001b58: 0f 8e 38 02 00 00    	jle	0xffffffff80001d96 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x376>
ffffffff80001b5e: 4c 8b 6b f0          	mov	r13, qword ptr [rbx - 0x10]
ffffffff80001b62: f0                   	lock
ffffffff80001b63: 49 ff 45 00          	inc	qword ptr [r13]
ffffffff80001b67: 0f 8e 29 02 00 00    	jle	0xffffffff80001d96 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x376>
ffffffff80001b6d: 48 8b 6b 20          	mov	rbp, qword ptr [rbx + 0x20]
ffffffff80001b71: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80001b76: f0                   	lock
ffffffff80001b77: 48 0f c1 05 69 96 02 00      	xadd	qword ptr [rip + 0x29669], rax # 0xffffffff8002b1e8 <taos::events::EventId::init::NEXT_ID::h234366d99e473b5a>
ffffffff80001b7f: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80001b84: 0f b6 05 56 96 02 00 	movzx	eax, byte ptr [rip + 0x29656] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001b8b: b1 01                	mov	cl, 0x1
ffffffff80001b8d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80001b90: 31 c0                	xor	eax, eax
ffffffff80001b92: f0                   	lock
ffffffff80001b93: 0f b0 0d 66 94 02 00 	cmpxchg	byte ptr [rip + 0x29466], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001b9a: 75 06                	jne	0xffffffff80001ba2 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x182>
ffffffff80001b9c: eb 11                	jmp	0xffffffff80001baf <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x18f>
ffffffff80001b9e: 66 90                	nop
ffffffff80001ba0: f3 90                	pause
ffffffff80001ba2: 0f b6 05 57 94 02 00 	movzx	eax, byte ptr [rip + 0x29457] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001ba9: 84 c0                	test	al, al
ffffffff80001bab: 75 f3                	jne	0xffffffff80001ba0 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x180>
ffffffff80001bad: eb e1                	jmp	0xffffffff80001b90 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x170>
ffffffff80001baf: be 04 00 00 00       	mov	esi, 0x4
ffffffff80001bb4: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80001bb9: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001bc0: e8 8b ae 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001bc5: c6 05 34 94 02 00 00 	mov	byte ptr [rip + 0x29434], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001bcc: 48 85 c0             	test	rax, rax
ffffffff80001bcf: 0f 84 c3 01 00 00    	je	0xffffffff80001d98 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x378>
ffffffff80001bd5: 49 89 c7             	mov	r15, rax
ffffffff80001bd8: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff80001bdb: 0f b6 05 ff 95 02 00 	movzx	eax, byte ptr [rip + 0x295ff] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001be2: b1 01                	mov	cl, 0x1
ffffffff80001be4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80001bf0: 31 c0                	xor	eax, eax
ffffffff80001bf2: f0                   	lock
ffffffff80001bf3: 0f b0 0d 06 94 02 00 	cmpxchg	byte ptr [rip + 0x29406], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001bfa: 74 1e                	je	0xffffffff80001c1a <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x1fa>
ffffffff80001bfc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001c00: 0f b6 05 f9 93 02 00 	movzx	eax, byte ptr [rip + 0x293f9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001c07: 84 c0                	test	al, al
ffffffff80001c09: 74 e5                	je	0xffffffff80001bf0 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x1d0>
ffffffff80001c0b: f3 90                	pause
ffffffff80001c0d: 0f b6 05 ec 93 02 00 	movzx	eax, byte ptr [rip + 0x293ec] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001c14: 84 c0                	test	al, al
ffffffff80001c16: 75 f3                	jne	0xffffffff80001c0b <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x1eb>
ffffffff80001c18: eb d6                	jmp	0xffffffff80001bf0 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x1d0>
ffffffff80001c1a: 4c 89 74 24 08       	mov	qword ptr [rsp + 0x8], r14
ffffffff80001c1f: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001c24: ba 58 00 00 00       	mov	edx, 0x58
ffffffff80001c29: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001c30: e8 1b ae 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001c35: c6 05 c4 93 02 00 00 	mov	byte ptr [rip + 0x293c4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001c3c: 48 85 c0             	test	rax, rax
ffffffff80001c3f: 0f 84 62 01 00 00    	je	0xffffffff80001da7 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x387>
ffffffff80001c45: 49 89 c6             	mov	r14, rax
ffffffff80001c48: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80001c4f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80001c57: 4c 89 60 10          	mov	qword ptr [rax + 0x10], r12
ffffffff80001c5b: 4c 89 68 18          	mov	qword ptr [rax + 0x18], r13
ffffffff80001c5f: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80001c64: 49 89 46 20          	mov	qword ptr [r14 + 0x20], rax
ffffffff80001c68: 49 c7 46 28 00 00 00 00      	mov	qword ptr [r14 + 0x28], 0x0
ffffffff80001c70: 4d 89 7e 30          	mov	qword ptr [r14 + 0x30], r15
ffffffff80001c74: 49 c7 46 38 d0 20 02 80      	mov	qword ptr [r14 + 0x38], -0x7ffddf30
ffffffff80001c7c: 49 c7 46 40 03 00 00 00      	mov	qword ptr [r14 + 0x40], 0x3
ffffffff80001c84: 49 89 6e 48          	mov	qword ptr [r14 + 0x48], rbp
ffffffff80001c88: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80001c8d: 41 89 46 50          	mov	dword ptr [r14 + 0x50], eax
ffffffff80001c91: 4c 89 34 24          	mov	qword ptr [rsp], r14
ffffffff80001c95: f0                   	lock
ffffffff80001c96: 49 ff 06             	inc	qword ptr [r14]
ffffffff80001c99: 0f 8e f7 00 00 00    	jle	0xffffffff80001d96 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x376>
ffffffff80001c9f: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80001ca4: 31 c0                	xor	eax, eax
ffffffff80001ca6: f0                   	lock
ffffffff80001ca7: 49 0f b1 4c 24 10    	cmpxchg	qword ptr [r12 + 0x10], rcx
ffffffff80001cad: 74 0e                	je	0xffffffff80001cbd <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x29d>
ffffffff80001caf: 90                   	nop
ffffffff80001cb0: f3 90                	pause
ffffffff80001cb2: 31 c0                	xor	eax, eax
ffffffff80001cb4: f0                   	lock
ffffffff80001cb5: 49 0f b1 4c 24 10    	cmpxchg	qword ptr [r12 + 0x10], rcx
ffffffff80001cbb: 75 f3                	jne	0xffffffff80001cb0 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x290>
ffffffff80001cbd: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80001cc2: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80001cc7: 48 39 c8             	cmp	rax, rcx
ffffffff80001cca: 75 1b                	jne	0xffffffff80001ce7 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x2c7>
ffffffff80001ccc: 49 8d 7c 24 18       	lea	rdi, [r12 + 0x18]
ffffffff80001cd1: 48 c7 c6 98 21 02 80 	mov	rsi, -0x7ffdde68
ffffffff80001cd8: e8 f3 0d 01 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80001cdd: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80001ce2: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff80001ce7: 49 8b 54 24 28       	mov	rdx, qword ptr [r12 + 0x28]
ffffffff80001cec: 48 01 c2             	add	rdx, rax
ffffffff80001cef: 31 f6                	xor	esi, esi
ffffffff80001cf1: 48 39 ca             	cmp	rdx, rcx
ffffffff80001cf4: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff80001cf8: 48 29 ca             	sub	rdx, rcx
ffffffff80001cfb: 49 8b 4c 24 20       	mov	rcx, qword ptr [r12 + 0x20]
ffffffff80001d00: 4c 89 34 d1          	mov	qword ptr [rcx + 8*rdx], r14
ffffffff80001d04: 48 ff c0             	inc	rax
ffffffff80001d07: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff80001d0c: f0                   	lock
ffffffff80001d0d: 49 83 64 24 10 fc    	and	qword ptr [r12 + 0x10], -0x4
ffffffff80001d13: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80001d18: 31 c0                	xor	eax, eax
ffffffff80001d1a: f0                   	lock
ffffffff80001d1b: 48 0f b1 4b f8       	cmpxchg	qword ptr [rbx - 0x8], rcx
ffffffff80001d20: 74 1a                	je	0xffffffff80001d3c <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x31c>
ffffffff80001d22: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80001d30: f3 90                	pause
ffffffff80001d32: 31 c0                	xor	eax, eax
ffffffff80001d34: f0                   	lock
ffffffff80001d35: 48 0f b1 4b f8       	cmpxchg	qword ptr [rbx - 0x8], rcx
ffffffff80001d3a: 75 f4                	jne	0xffffffff80001d30 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x310>
ffffffff80001d3c: 4c 8b 34 24          	mov	r14, qword ptr [rsp]
ffffffff80001d40: 49 8b 76 20          	mov	rsi, qword ptr [r14 + 0x20]
ffffffff80001d44: 48 89 df             	mov	rdi, rbx
ffffffff80001d47: e8 e4 04 01 00       	call	0xffffffff80012230 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4>
ffffffff80001d4c: f0                   	lock
ffffffff80001d4d: 48 83 63 f8 fc       	and	qword ptr [rbx - 0x8], -0x4
ffffffff80001d52: f0                   	lock
ffffffff80001d53: 49 ff 0e             	dec	qword ptr [r14]
ffffffff80001d56: 75 08                	jne	0xffffffff80001d60 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804+0x340>
ffffffff80001d58: 48 89 e7             	mov	rdi, rsp
ffffffff80001d5b: e8 40 11 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80001d60: f0                   	lock
ffffffff80001d61: 48 83 63 b0 fc       	and	qword ptr [rbx - 0x50], -0x4
ffffffff80001d66: f0                   	lock
ffffffff80001d67: 48 83 2d 81 94 02 00 04      	sub	qword ptr [rip + 0x29481], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80001d6f: 48 83 c4 18          	add	rsp, 0x18
ffffffff80001d73: 5b                   	pop	rbx
ffffffff80001d74: 41 5c                	pop	r12
ffffffff80001d76: 41 5d                	pop	r13
ffffffff80001d78: 41 5e                	pop	r14
ffffffff80001d7a: 41 5f                	pop	r15
ffffffff80001d7c: 5d                   	pop	rbp
ffffffff80001d7d: c3                   	ret
ffffffff80001d7e: be 0f 00 00 00       	mov	esi, 0xf
ffffffff80001d83: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff80001d8a: 48 c7 c2 e8 21 02 80 	mov	rdx, -0x7ffdde18
ffffffff80001d91: e8 ca f8 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80001d96: 0f 0b                	ud2
ffffffff80001d98: bf 04 00 00 00       	mov	edi, 0x4
ffffffff80001d9d: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001da2: e8 0b be 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80001da7: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80001dac: be 58 00 00 00       	mov	esi, 0x58
ffffffff80001db1: e8 fc bd 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80001db6: cc                   	int3
ffffffff80001db7: cc                   	int3
ffffffff80001db8: cc                   	int3
ffffffff80001db9: cc                   	int3
ffffffff80001dba: cc                   	int3
ffffffff80001dbb: cc                   	int3
ffffffff80001dbc: cc                   	int3
ffffffff80001dbd: cc                   	int3
ffffffff80001dbe: cc                   	int3
ffffffff80001dbf: cc                   	int3

ffffffff80001dc0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804>:
ffffffff80001dc0: 41 57                	push	r15
ffffffff80001dc2: 41 56                	push	r14
ffffffff80001dc4: 41 55                	push	r13
ffffffff80001dc6: 41 54                	push	r12
ffffffff80001dc8: 53                   	push	rbx
ffffffff80001dc9: 48 81 ec 30 01 00 00 	sub	rsp, 0x130
ffffffff80001dd0: 48 89 fb             	mov	rbx, rdi
ffffffff80001dd3: 0f b6 05 07 94 02 00 	movzx	eax, byte ptr [rip + 0x29407] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001dda: b1 01                	mov	cl, 0x1
ffffffff80001ddc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001de0: 31 c0                	xor	eax, eax
ffffffff80001de2: f0                   	lock
ffffffff80001de3: 0f b0 0d 16 92 02 00 	cmpxchg	byte ptr [rip + 0x29216], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001dea: 75 06                	jne	0xffffffff80001df2 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x32>
ffffffff80001dec: eb 11                	jmp	0xffffffff80001dff <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x3f>
ffffffff80001dee: 66 90                	nop
ffffffff80001df0: f3 90                	pause
ffffffff80001df2: 0f b6 05 07 92 02 00 	movzx	eax, byte ptr [rip + 0x29207] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001df9: 84 c0                	test	al, al
ffffffff80001dfb: 75 f3                	jne	0xffffffff80001df0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x30>
ffffffff80001dfd: eb e1                	jmp	0xffffffff80001de0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x20>
ffffffff80001dff: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001e04: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80001e09: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001e10: e8 3b ac 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001e15: c6 05 e4 91 02 00 00 	mov	byte ptr [rip + 0x291e4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001e1c: 48 85 c0             	test	rax, rax
ffffffff80001e1f: 0f 84 37 05 00 00    	je	0xffffffff8000235c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x59c>
ffffffff80001e25: 49 89 c6             	mov	r14, rax
ffffffff80001e28: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80001e2f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80001e37: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff80001e3f: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80001e47: 48 c7 40 20 08 00 00 00      	mov	qword ptr [rax + 0x20], 0x8
ffffffff80001e4f: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff80001e57: 48 c7 40 30 00 00 00 00      	mov	qword ptr [rax + 0x30], 0x0
ffffffff80001e5f: 0f b6 05 7b 93 02 00 	movzx	eax, byte ptr [rip + 0x2937b] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001e66: b1 01                	mov	cl, 0x1
ffffffff80001e68: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80001e70: 31 c0                	xor	eax, eax
ffffffff80001e72: f0                   	lock
ffffffff80001e73: 0f b0 0d 86 91 02 00 	cmpxchg	byte ptr [rip + 0x29186], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001e7a: 74 1e                	je	0xffffffff80001e9a <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0xda>
ffffffff80001e7c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001e80: 0f b6 05 79 91 02 00 	movzx	eax, byte ptr [rip + 0x29179] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001e87: 84 c0                	test	al, al
ffffffff80001e89: 74 e5                	je	0xffffffff80001e70 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0xb0>
ffffffff80001e8b: f3 90                	pause
ffffffff80001e8d: 0f b6 05 6c 91 02 00 	movzx	eax, byte ptr [rip + 0x2916c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001e94: 84 c0                	test	al, al
ffffffff80001e96: 75 f3                	jne	0xffffffff80001e8b <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0xcb>
ffffffff80001e98: eb d6                	jmp	0xffffffff80001e70 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0xb0>
ffffffff80001e9a: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001e9f: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80001ea4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001eab: e8 a0 ab 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001eb0: c6 05 49 91 02 00 00 	mov	byte ptr [rip + 0x29149], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001eb7: 48 85 c0             	test	rax, rax
ffffffff80001eba: 0f 84 9c 04 00 00    	je	0xffffffff8000235c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x59c>
ffffffff80001ec0: 49 89 c7             	mov	r15, rax
ffffffff80001ec3: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80001eca: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80001ed2: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff80001eda: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80001ee2: 48 c7 40 20 08 00 00 00      	mov	qword ptr [rax + 0x20], 0x8
ffffffff80001eea: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff80001ef2: 48 c7 40 30 00 00 00 00      	mov	qword ptr [rax + 0x30], 0x0
ffffffff80001efa: 0f b6 05 e0 92 02 00 	movzx	eax, byte ptr [rip + 0x292e0] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001f01: b1 01                	mov	cl, 0x1
ffffffff80001f03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80001f10: 31 c0                	xor	eax, eax
ffffffff80001f12: f0                   	lock
ffffffff80001f13: 0f b0 0d e6 90 02 00 	cmpxchg	byte ptr [rip + 0x290e6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001f1a: 74 1e                	je	0xffffffff80001f3a <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x17a>
ffffffff80001f1c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001f20: 0f b6 05 d9 90 02 00 	movzx	eax, byte ptr [rip + 0x290d9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001f27: 84 c0                	test	al, al
ffffffff80001f29: 74 e5                	je	0xffffffff80001f10 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x150>
ffffffff80001f2b: f3 90                	pause
ffffffff80001f2d: 0f b6 05 cc 90 02 00 	movzx	eax, byte ptr [rip + 0x290cc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001f34: 84 c0                	test	al, al
ffffffff80001f36: 75 f3                	jne	0xffffffff80001f2b <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x16b>
ffffffff80001f38: eb d6                	jmp	0xffffffff80001f10 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x150>
ffffffff80001f3a: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001f3f: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80001f44: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001f4b: e8 00 ab 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001f50: c6 05 a9 90 02 00 00 	mov	byte ptr [rip + 0x290a9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001f57: 48 85 c0             	test	rax, rax
ffffffff80001f5a: 0f 84 fc 03 00 00    	je	0xffffffff8000235c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x59c>
ffffffff80001f60: 49 89 c4             	mov	r12, rax
ffffffff80001f63: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80001f6a: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80001f72: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff80001f7a: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80001f82: 48 c7 40 20 08 00 00 00      	mov	qword ptr [rax + 0x20], 0x8
ffffffff80001f8a: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff80001f92: 48 c7 40 30 00 00 00 00      	mov	qword ptr [rax + 0x30], 0x0
ffffffff80001f9a: 0f b6 05 40 92 02 00 	movzx	eax, byte ptr [rip + 0x29240] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80001fa1: b1 01                	mov	cl, 0x1
ffffffff80001fa3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80001fb0: 31 c0                	xor	eax, eax
ffffffff80001fb2: f0                   	lock
ffffffff80001fb3: 0f b0 0d 46 90 02 00 	cmpxchg	byte ptr [rip + 0x29046], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001fba: 74 1e                	je	0xffffffff80001fda <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x21a>
ffffffff80001fbc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80001fc0: 0f b6 05 39 90 02 00 	movzx	eax, byte ptr [rip + 0x29039] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001fc7: 84 c0                	test	al, al
ffffffff80001fc9: 74 e5                	je	0xffffffff80001fb0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x1f0>
ffffffff80001fcb: f3 90                	pause
ffffffff80001fcd: 0f b6 05 2c 90 02 00 	movzx	eax, byte ptr [rip + 0x2902c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001fd4: 84 c0                	test	al, al
ffffffff80001fd6: 75 f3                	jne	0xffffffff80001fcb <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x20b>
ffffffff80001fd8: eb d6                	jmp	0xffffffff80001fb0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x1f0>
ffffffff80001fda: be 08 00 00 00       	mov	esi, 0x8
ffffffff80001fdf: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80001fe4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80001feb: e8 60 aa 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80001ff0: c6 05 09 90 02 00 00 	mov	byte ptr [rip + 0x29009], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80001ff7: 48 85 c0             	test	rax, rax
ffffffff80001ffa: 0f 84 5c 03 00 00    	je	0xffffffff8000235c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x59c>
ffffffff80002000: 49 89 c5             	mov	r13, rax
ffffffff80002003: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000200a: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80002012: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff8000201a: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80002022: 48 c7 40 20 08 00 00 00      	mov	qword ptr [rax + 0x20], 0x8
ffffffff8000202a: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff80002032: 48 c7 40 30 00 00 00 00      	mov	qword ptr [rax + 0x30], 0x0
ffffffff8000203a: 0f b6 05 a0 91 02 00 	movzx	eax, byte ptr [rip + 0x291a0] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80002041: b1 01                	mov	cl, 0x1
ffffffff80002043: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80002050: 31 c0                	xor	eax, eax
ffffffff80002052: f0                   	lock
ffffffff80002053: 0f b0 0d a6 8f 02 00 	cmpxchg	byte ptr [rip + 0x28fa6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000205a: 75 06                	jne	0xffffffff80002062 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x2a2>
ffffffff8000205c: eb 11                	jmp	0xffffffff8000206f <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x2af>
ffffffff8000205e: 66 90                	nop
ffffffff80002060: f3 90                	pause
ffffffff80002062: 0f b6 05 97 8f 02 00 	movzx	eax, byte ptr [rip + 0x28f97] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002069: 84 c0                	test	al, al
ffffffff8000206b: 75 f3                	jne	0xffffffff80002060 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x2a0>
ffffffff8000206d: eb e1                	jmp	0xffffffff80002050 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x290>
ffffffff8000206f: be 08 00 00 00       	mov	esi, 0x8
ffffffff80002074: ba 30 00 00 00       	mov	edx, 0x30
ffffffff80002079: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80002080: e8 cb a9 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80002085: c6 05 74 8f 02 00 00 	mov	byte ptr [rip + 0x28f74], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000208c: 48 85 c0             	test	rax, rax
ffffffff8000208f: 0f 84 d6 02 00 00    	je	0xffffffff8000236b <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x5ab>
ffffffff80002095: 48 89 c1             	mov	rcx, rax
ffffffff80002098: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000209f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff800020a7: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff800020af: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff800020b7: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff800020bf: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff800020c8: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff800020d1: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff800020d9: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff800020e2: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff800020eb: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800020f0: 31 c0                	xor	eax, eax
ffffffff800020f2: f0                   	lock
ffffffff800020f3: 48 0f b1 15 f5 90 02 00      	cmpxchg	qword ptr [rip + 0x290f5], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800020fb: 74 12                	je	0xffffffff8000210f <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x34f>
ffffffff800020fd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80002100: f3 90                	pause
ffffffff80002102: 31 c0                	xor	eax, eax
ffffffff80002104: f0                   	lock
ffffffff80002105: 48 0f b1 15 e3 90 02 00      	cmpxchg	qword ptr [rip + 0x290e3], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000210d: 75 f1                	jne	0xffffffff80002100 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x340>
ffffffff8000210f: 8b 13                	mov	edx, dword ptr [rbx]
ffffffff80002111: 48 c7 84 24 b8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xb8], 0x0
ffffffff8000211d: 48 c7 84 24 b0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x0
ffffffff80002129: 48 c7 84 24 c0 00 00 00 08 00 00 00  	mov	qword ptr [rsp + 0xc0], 0x8
ffffffff80002135: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc8], 0x0
ffffffff80002141: 4c 89 b4 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r14
ffffffff80002149: 4c 89 bc 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], r15
ffffffff80002151: 4c 89 a4 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], r12
ffffffff80002159: 4c 89 ac 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], r13
ffffffff80002161: 48 89 8c 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rcx
ffffffff80002169: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000216e: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff80002173: 48 89 84 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rax
ffffffff8000217b: 48 89 8c 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rcx
ffffffff80002183: 48 c7 84 24 10 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x110], 0x0
ffffffff8000218f: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff80002193: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80002198: 48 89 84 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rax
ffffffff800021a0: 48 89 8c 24 20 01 00 00      	mov	qword ptr [rsp + 0x120], rcx
ffffffff800021a8: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800021ad: 48 89 84 24 28 01 00 00      	mov	qword ptr [rsp + 0x128], rax
ffffffff800021b5: 48 8d 7c 24 28       	lea	rdi, [rsp + 0x28]
ffffffff800021ba: 48 8d 8c 24 b0 00 00 00      	lea	rcx, [rsp + 0xb0]
ffffffff800021c2: 48 c7 c6 f8 b1 02 80 	mov	rsi, -0x7ffd4e08
ffffffff800021c9: e8 42 fe 00 00       	call	0xffffffff80012010 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26>
ffffffff800021ce: 48 83 7c 24 28 00    	cmp	qword ptr [rsp + 0x28], 0x0
ffffffff800021d4: 0f 84 18 01 00 00    	je	0xffffffff800022f2 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x532>
ffffffff800021da: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff800021df: f0                   	lock
ffffffff800021e0: 48 ff 08             	dec	qword ptr [rax]
ffffffff800021e3: 0f 84 23 01 00 00    	je	0xffffffff8000230c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x54c>
ffffffff800021e9: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff800021ee: f0                   	lock
ffffffff800021ef: 48 ff 08             	dec	qword ptr [rax]
ffffffff800021f2: 0f 84 2d 01 00 00    	je	0xffffffff80002325 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x565>
ffffffff800021f8: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff800021fd: f0                   	lock
ffffffff800021fe: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002201: 0f 84 37 01 00 00    	je	0xffffffff8000233e <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x57e>
ffffffff80002207: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8000220c: f0                   	lock
ffffffff8000220d: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002210: 75 0a                	jne	0xffffffff8000221c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x45c>
ffffffff80002212: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff80002217: e8 84 0a 01 00       	call	0xffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>
ffffffff8000221c: 48 8d bc 24 80 00 00 00      	lea	rdi, [rsp + 0x80]
ffffffff80002224: e8 87 04 01 00       	call	0xffffffff800126b0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754>
ffffffff80002229: 48 8b 44 24 70       	mov	rax, qword ptr [rsp + 0x70]
ffffffff8000222e: f0                   	lock
ffffffff8000222f: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002232: 75 0a                	jne	0xffffffff8000223e <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x47e>
ffffffff80002234: 48 8d 7c 24 70       	lea	rdi, [rsp + 0x70]
ffffffff80002239: e8 72 0d 01 00       	call	0xffffffff80012fb0 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc>
ffffffff8000223e: 4c 8b 74 24 48       	mov	r14, qword ptr [rsp + 0x48]
ffffffff80002243: 4d 85 f6             	test	r14, r14
ffffffff80002246: 74 24                	je	0xffffffff8000226c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4ac>
ffffffff80002248: 48 8b 5c 24 40       	mov	rbx, qword ptr [rsp + 0x40]
ffffffff8000224d: eb 0a                	jmp	0xffffffff80002259 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x499>
ffffffff8000224f: 90                   	nop
ffffffff80002250: 48 83 c3 10          	add	rbx, 0x10
ffffffff80002254: 49 ff ce             	dec	r14
ffffffff80002257: 74 13                	je	0xffffffff8000226c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4ac>
ffffffff80002259: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff8000225c: f0                   	lock
ffffffff8000225d: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002260: 75 ee                	jne	0xffffffff80002250 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x490>
ffffffff80002262: 48 89 df             	mov	rdi, rbx
ffffffff80002265: e8 36 0c 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff8000226a: eb e4                	jmp	0xffffffff80002250 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x490>
ffffffff8000226c: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff80002271: 48 85 c9             	test	rcx, rcx
ffffffff80002274: 74 5c                	je	0xffffffff800022d2 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x512>
ffffffff80002276: 48 8b 74 24 40       	mov	rsi, qword ptr [rsp + 0x40]
ffffffff8000227b: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff8000227f: b2 01                	mov	dl, 0x1
ffffffff80002281: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80002290: 31 c0                	xor	eax, eax
ffffffff80002292: f0                   	lock
ffffffff80002293: 0f b0 15 66 8d 02 00 	cmpxchg	byte ptr [rip + 0x28d66], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000229a: 74 1e                	je	0xffffffff800022ba <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4fa>
ffffffff8000229c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800022a0: 0f b6 05 59 8d 02 00 	movzx	eax, byte ptr [rip + 0x28d59] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800022a7: 84 c0                	test	al, al
ffffffff800022a9: 74 e5                	je	0xffffffff80002290 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4d0>
ffffffff800022ab: f3 90                	pause
ffffffff800022ad: 0f b6 05 4c 8d 02 00 	movzx	eax, byte ptr [rip + 0x28d4c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800022b4: 84 c0                	test	al, al
ffffffff800022b6: 75 f3                	jne	0xffffffff800022ab <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4eb>
ffffffff800022b8: eb d6                	jmp	0xffffffff80002290 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x4d0>
ffffffff800022ba: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800022bf: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800022c6: e8 25 a5 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800022cb: c6 05 2e 8d 02 00 00 	mov	byte ptr [rip + 0x28d2e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800022d2: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff800022da: 48 85 c0             	test	rax, rax
ffffffff800022dd: 74 13                	je	0xffffffff800022f2 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x532>
ffffffff800022df: f0                   	lock
ffffffff800022e0: 48 ff 08             	dec	qword ptr [rax]
ffffffff800022e3: 75 0d                	jne	0xffffffff800022f2 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x532>
ffffffff800022e5: 48 8d bc 24 98 00 00 00      	lea	rdi, [rsp + 0x98]
ffffffff800022ed: e8 ae 0b 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff800022f2: f0                   	lock
ffffffff800022f3: 48 83 25 f5 8e 02 00 fc      	and	qword ptr [rip + 0x28ef5], -0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800022fb: 48 81 c4 30 01 00 00 	add	rsp, 0x130
ffffffff80002302: 5b                   	pop	rbx
ffffffff80002303: 41 5c                	pop	r12
ffffffff80002305: 41 5d                	pop	r13
ffffffff80002307: 41 5e                	pop	r14
ffffffff80002309: 41 5f                	pop	r15
ffffffff8000230b: c3                   	ret
ffffffff8000230c: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff80002311: e8 8a 09 01 00       	call	0xffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>
ffffffff80002316: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff8000231b: f0                   	lock
ffffffff8000231c: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000231f: 0f 85 d3 fe ff ff    	jne	0xffffffff800021f8 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x438>
ffffffff80002325: 48 8d 7c 24 58       	lea	rdi, [rsp + 0x58]
ffffffff8000232a: e8 71 09 01 00       	call	0xffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>
ffffffff8000232f: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff80002334: f0                   	lock
ffffffff80002335: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002338: 0f 85 c9 fe ff ff    	jne	0xffffffff80002207 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x447>
ffffffff8000233e: 48 8d 7c 24 60       	lea	rdi, [rsp + 0x60]
ffffffff80002343: e8 58 09 01 00       	call	0xffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>
ffffffff80002348: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8000234d: f0                   	lock
ffffffff8000234e: 48 ff 08             	dec	qword ptr [rax]
ffffffff80002351: 0f 84 bb fe ff ff    	je	0xffffffff80002212 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x452>
ffffffff80002357: e9 c0 fe ff ff       	jmp	0xffffffff8000221c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804+0x45c>
ffffffff8000235c: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80002361: be 38 00 00 00       	mov	esi, 0x38
ffffffff80002366: e8 47 b8 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000236b: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80002370: be 30 00 00 00       	mov	esi, 0x30
ffffffff80002375: e8 38 b8 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000237a: cc                   	int3
ffffffff8000237b: cc                   	int3
ffffffff8000237c: cc                   	int3
ffffffff8000237d: cc                   	int3
ffffffff8000237e: cc                   	int3
ffffffff8000237f: cc                   	int3

ffffffff80002380 <taos::events::inc_runner_clock::h004dbaba4c520971>:
ffffffff80002380: 50                   	push	rax
ffffffff80002381: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80002386: 0f 32                	rdmsr
ffffffff80002388: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8000238d: f0                   	lock
ffffffff8000238e: 48 0f c1 15 5a 8e 02 00      	xadd	qword ptr [rip + 0x28e5a], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002396: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff800023a0: 48 39 ca             	cmp	rdx, rcx
ffffffff800023a3: 77 2e                	ja	0xffffffff800023d3 <taos::events::inc_runner_clock::h004dbaba4c520971+0x53>
ffffffff800023a5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800023b0: f6 c2 03             	test	dl, 0x3
ffffffff800023b3: 74 3f                	je	0xffffffff800023f4 <taos::events::inc_runner_clock::h004dbaba4c520971+0x74>
ffffffff800023b5: f0                   	lock
ffffffff800023b6: 48 83 2d 32 8e 02 00 04      	sub	qword ptr [rip + 0x28e32], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800023be: f3 90                	pause
ffffffff800023c0: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800023c5: f0                   	lock
ffffffff800023c6: 48 0f c1 15 22 8e 02 00      	xadd	qword ptr [rip + 0x28e22], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800023ce: 48 39 ca             	cmp	rdx, rcx
ffffffff800023d1: 76 dd                	jbe	0xffffffff800023b0 <taos::events::inc_runner_clock::h004dbaba4c520971+0x30>
ffffffff800023d3: f0                   	lock
ffffffff800023d4: 48 83 2d 14 8e 02 00 04      	sub	qword ptr [rip + 0x28e14], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800023dc: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff800023e1: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff800023e8: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff800023ef: e8 fc ec 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800023f4: 48 8b 0d fd 8d 02 00 	mov	rcx, qword ptr [rip + 0x28dfd] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff800023fb: 48 85 c9             	test	rcx, rcx
ffffffff800023fe: 0f 84 b0 00 00 00    	je	0xffffffff800024b4 <taos::events::inc_runner_clock::h004dbaba4c520971+0x134>
ffffffff80002404: 48 8b 15 f5 8d 02 00 	mov	rdx, qword ptr [rip + 0x28df5] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff8000240b: be ff 00 00 00       	mov	esi, 0xff
ffffffff80002410: 44 0f b7 89 b6 05 00 00      	movzx	r9d, word ptr [rcx + 0x5b6]
ffffffff80002418: 45 89 ca             	mov	r10d, r9d
ffffffff8000241b: 41 c1 e2 07          	shl	r10d, 0x7
ffffffff8000241f: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff80002426: 31 ff                	xor	edi, edi
ffffffff80002428: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80002430: 49 39 fa             	cmp	r10, rdi
ffffffff80002433: 74 2b                	je	0xffffffff80002460 <taos::events::inc_runner_clock::h004dbaba4c520971+0xe0>
ffffffff80002435: 45 31 db             	xor	r11d, r11d
ffffffff80002438: 42 39 84 81 8c 05 00 00      	cmp	dword ptr [rcx + 4*r8 + 0x58c], eax
ffffffff80002440: 41 0f 95 c3          	setne	r11b
ffffffff80002444: 44 0f 47 de          	cmova	r11d, esi
ffffffff80002448: 48 83 ef 80          	sub	rdi, -0x80
ffffffff8000244c: 49 ff c0             	inc	r8
ffffffff8000244f: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80002453: 74 db                	je	0xffffffff80002430 <taos::events::inc_runner_clock::h004dbaba4c520971+0xb0>
ffffffff80002455: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff80002459: 45 85 c9             	test	r9d, r9d
ffffffff8000245c: 74 15                	je	0xffffffff80002473 <taos::events::inc_runner_clock::h004dbaba4c520971+0xf3>
ffffffff8000245e: eb 03                	jmp	0xffffffff80002463 <taos::events::inc_runner_clock::h004dbaba4c520971+0xe3>
ffffffff80002460: 4d 89 c8             	mov	r8, r9
ffffffff80002463: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80002467: 72 4b                	jb	0xffffffff800024b4 <taos::events::inc_runner_clock::h004dbaba4c520971+0x134>
ffffffff80002469: 4a 8b 8c c1 b8 05 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x5b8]
ffffffff80002471: eb 9d                	jmp	0xffffffff80002410 <taos::events::inc_runner_clock::h004dbaba4c520971+0x90>
ffffffff80002473: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80002478: 31 c0                	xor	eax, eax
ffffffff8000247a: f0                   	lock
ffffffff8000247b: 48 0f b1 54 39 80    	cmpxchg	qword ptr [rcx + rdi - 0x80], rdx
ffffffff80002481: 74 1a                	je	0xffffffff8000249d <taos::events::inc_runner_clock::h004dbaba4c520971+0x11d>
ffffffff80002483: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80002490: f3 90                	pause
ffffffff80002492: 31 c0                	xor	eax, eax
ffffffff80002494: f0                   	lock
ffffffff80002495: 48 0f b1 54 39 80    	cmpxchg	qword ptr [rcx + rdi - 0x80], rdx
ffffffff8000249b: 75 f3                	jne	0xffffffff80002490 <taos::events::inc_runner_clock::h004dbaba4c520971+0x110>
ffffffff8000249d: 48 ff 44 39 f8       	inc	qword ptr [rcx + rdi - 0x8]
ffffffff800024a2: f0                   	lock
ffffffff800024a3: 48 83 64 39 80 fc    	and	qword ptr [rcx + rdi - 0x80], -0x4
ffffffff800024a9: f0                   	lock
ffffffff800024aa: 48 83 2d 3e 8d 02 00 04      	sub	qword ptr [rip + 0x28d3e], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800024b2: 58                   	pop	rax
ffffffff800024b3: c3                   	ret
ffffffff800024b4: be 0f 00 00 00       	mov	esi, 0xf
ffffffff800024b9: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff800024c0: 48 c7 c2 00 22 02 80 	mov	rdx, -0x7ffdde00
ffffffff800024c7: e8 94 f1 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800024cc: cc                   	int3
ffffffff800024cd: cc                   	int3
ffffffff800024ce: cc                   	int3
ffffffff800024cf: cc                   	int3

ffffffff800024d0 <taos::events::runner_timestamp::h2cb14dada03374ba>:
ffffffff800024d0: 53                   	push	rbx
ffffffff800024d1: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff800024d6: 0f 32                	rdmsr
ffffffff800024d8: ba 04 00 00 00       	mov	edx, 0x4
ffffffff800024dd: f0                   	lock
ffffffff800024de: 48 0f c1 15 0a 8d 02 00      	xadd	qword ptr [rip + 0x28d0a], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff800024e6: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff800024f0: 48 39 ca             	cmp	rdx, rcx
ffffffff800024f3: 77 2e                	ja	0xffffffff80002523 <taos::events::runner_timestamp::h2cb14dada03374ba+0x53>
ffffffff800024f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80002500: f6 c2 03             	test	dl, 0x3
ffffffff80002503: 74 3f                	je	0xffffffff80002544 <taos::events::runner_timestamp::h2cb14dada03374ba+0x74>
ffffffff80002505: f0                   	lock
ffffffff80002506: 48 83 2d e2 8c 02 00 04      	sub	qword ptr [rip + 0x28ce2], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000250e: f3 90                	pause
ffffffff80002510: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80002515: f0                   	lock
ffffffff80002516: 48 0f c1 15 d2 8c 02 00      	xadd	qword ptr [rip + 0x28cd2], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000251e: 48 39 ca             	cmp	rdx, rcx
ffffffff80002521: 76 dd                	jbe	0xffffffff80002500 <taos::events::runner_timestamp::h2cb14dada03374ba+0x30>
ffffffff80002523: f0                   	lock
ffffffff80002524: 48 83 2d c4 8c 02 00 04      	sub	qword ptr [rip + 0x28cc4], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000252c: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80002531: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80002538: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff8000253f: e8 ac eb 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002544: 48 8b 15 ad 8c 02 00 	mov	rdx, qword ptr [rip + 0x28cad] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff8000254b: 48 85 d2             	test	rdx, rdx
ffffffff8000254e: 0f 84 d2 00 00 00    	je	0xffffffff80002626 <taos::events::runner_timestamp::h2cb14dada03374ba+0x156>
ffffffff80002554: 48 8b 35 a5 8c 02 00 	mov	rsi, qword ptr [rip + 0x28ca5] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff8000255b: bf ff 00 00 00       	mov	edi, 0xff
ffffffff80002560: 44 0f b7 92 b6 05 00 00      	movzx	r10d, word ptr [rdx + 0x5b6]
ffffffff80002568: 45 89 d3             	mov	r11d, r10d
ffffffff8000256b: 41 c1 e3 07          	shl	r11d, 0x7
ffffffff8000256f: 49 c7 c1 ff ff ff ff 	mov	r9, -0x1
ffffffff80002576: 45 31 c0             	xor	r8d, r8d
ffffffff80002579: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80002580: 4d 39 c3             	cmp	r11, r8
ffffffff80002583: 74 2b                	je	0xffffffff800025b0 <taos::events::runner_timestamp::h2cb14dada03374ba+0xe0>
ffffffff80002585: 31 db                	xor	ebx, ebx
ffffffff80002587: 42 39 84 8a 8c 05 00 00      	cmp	dword ptr [rdx + 4*r9 + 0x58c], eax
ffffffff8000258f: 0f 95 c3             	setne	bl
ffffffff80002592: 0f 47 df             	cmova	ebx, edi
ffffffff80002595: 49 83 e8 80          	sub	r8, -0x80
ffffffff80002599: 49 ff c1             	inc	r9
ffffffff8000259c: 80 fb 01             	cmp	bl, 0x1
ffffffff8000259f: 74 df                	je	0xffffffff80002580 <taos::events::runner_timestamp::h2cb14dada03374ba+0xb0>
ffffffff800025a1: 44 0f b6 d3          	movzx	r10d, bl
ffffffff800025a5: 45 85 d2             	test	r10d, r10d
ffffffff800025a8: 74 26                	je	0xffffffff800025d0 <taos::events::runner_timestamp::h2cb14dada03374ba+0x100>
ffffffff800025aa: eb 07                	jmp	0xffffffff800025b3 <taos::events::runner_timestamp::h2cb14dada03374ba+0xe3>
ffffffff800025ac: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800025b0: 4d 89 d1             	mov	r9, r10
ffffffff800025b3: 48 83 ee 01          	sub	rsi, 0x1
ffffffff800025b7: 72 6d                	jb	0xffffffff80002626 <taos::events::runner_timestamp::h2cb14dada03374ba+0x156>
ffffffff800025b9: 4a 8b 94 ca b8 05 00 00      	mov	rdx, qword ptr [rdx + 8*r9 + 0x5b8]
ffffffff800025c1: eb 9d                	jmp	0xffffffff80002560 <taos::events::runner_timestamp::h2cb14dada03374ba+0x90>
ffffffff800025c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800025d0: b8 04 00 00 00       	mov	eax, 0x4
ffffffff800025d5: f0                   	lock
ffffffff800025d6: 4a 0f c1 44 02 80    	xadd	qword ptr [rdx + r8 - 0x80], rax
ffffffff800025dc: 48 39 c8             	cmp	rax, rcx
ffffffff800025df: 77 26                	ja	0xffffffff80002607 <taos::events::runner_timestamp::h2cb14dada03374ba+0x137>
ffffffff800025e1: a8 03                	test	al, 0x3
ffffffff800025e3: 74 0b                	je	0xffffffff800025f0 <taos::events::runner_timestamp::h2cb14dada03374ba+0x120>
ffffffff800025e5: f0                   	lock
ffffffff800025e6: 4a 83 6c 02 80 04    	sub	qword ptr [rdx + r8 - 0x80], 0x4
ffffffff800025ec: f3 90                	pause
ffffffff800025ee: eb e0                	jmp	0xffffffff800025d0 <taos::events::runner_timestamp::h2cb14dada03374ba+0x100>
ffffffff800025f0: 4a 8b 44 02 f8       	mov	rax, qword ptr [rdx + r8 - 0x8]
ffffffff800025f5: f0                   	lock
ffffffff800025f6: 4a 83 6c 02 80 04    	sub	qword ptr [rdx + r8 - 0x80], 0x4
ffffffff800025fc: f0                   	lock
ffffffff800025fd: 48 83 2d eb 8b 02 00 04      	sub	qword ptr [rip + 0x28beb], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002605: 5b                   	pop	rbx
ffffffff80002606: c3                   	ret
ffffffff80002607: f0                   	lock
ffffffff80002608: 4a 83 6c 02 80 04    	sub	qword ptr [rdx + r8 - 0x80], 0x4
ffffffff8000260e: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80002613: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff8000261a: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80002621: e8 ca ea 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002626: be 0f 00 00 00       	mov	esi, 0xf
ffffffff8000262b: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff80002632: 48 c7 c2 18 22 02 80 	mov	rdx, -0x7ffddde8
ffffffff80002639: e8 22 f0 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000263e: cc                   	int3
ffffffff8000263f: cc                   	int3

ffffffff80002640 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804>:
ffffffff80002640: 55                   	push	rbp
ffffffff80002641: 41 57                	push	r15
ffffffff80002643: 41 56                	push	r14
ffffffff80002645: 41 55                	push	r13
ffffffff80002647: 41 54                	push	r12
ffffffff80002649: 53                   	push	rbx
ffffffff8000264a: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8000264e: 48 b8 fc ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffffc
ffffffff80002658: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff8000265d: f0                   	lock
ffffffff8000265e: 48 0f c1 0d 8a 8b 02 00      	xadd	qword ptr [rip + 0x28b8a], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002666: 48 39 c1             	cmp	rcx, rax
ffffffff80002669: 77 28                	ja	0xffffffff80002693 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x53>
ffffffff8000266b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80002670: f6 c1 03             	test	cl, 0x3
ffffffff80002673: 74 3f                	je	0xffffffff800026b4 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x74>
ffffffff80002675: f0                   	lock
ffffffff80002676: 48 83 2d 72 8b 02 00 04      	sub	qword ptr [rip + 0x28b72], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000267e: f3 90                	pause
ffffffff80002680: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80002685: f0                   	lock
ffffffff80002686: 48 0f c1 0d 62 8b 02 00      	xadd	qword ptr [rip + 0x28b62], rcx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000268e: 48 39 c1             	cmp	rcx, rax
ffffffff80002691: 76 dd                	jbe	0xffffffff80002670 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x30>
ffffffff80002693: f0                   	lock
ffffffff80002694: 48 83 2d 54 8b 02 00 04      	sub	qword ptr [rip + 0x28b54], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff8000269c: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff800026a1: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff800026a8: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff800026af: e8 3c ea 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800026b4: 48 8b 05 3d 8b 02 00 	mov	rax, qword ptr [rip + 0x28b3d] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff800026bb: 48 85 c0             	test	rax, rax
ffffffff800026be: 0f 84 d6 03 00 00    	je	0xffffffff80002a9a <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x45a>
ffffffff800026c4: 48 8b 17             	mov	rdx, qword ptr [rdi]
ffffffff800026c7: 48 8b 0d 32 8b 02 00 	mov	rcx, qword ptr [rip + 0x28b32] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff800026ce: 8b 12                	mov	edx, dword ptr [rdx]
ffffffff800026d0: be ff 00 00 00       	mov	esi, 0xff
ffffffff800026d5: 44 0f b7 88 b6 05 00 00      	movzx	r9d, word ptr [rax + 0x5b6]
ffffffff800026dd: 48 8d 58 d0          	lea	rbx, [rax - 0x30]
ffffffff800026e1: 45 89 ca             	mov	r10d, r9d
ffffffff800026e4: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff800026e8: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff800026ef: 90                   	nop
ffffffff800026f0: 4d 85 d2             	test	r10, r10
ffffffff800026f3: 74 3b                	je	0xffffffff80002730 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0xf0>
ffffffff800026f5: 45 31 db             	xor	r11d, r11d
ffffffff800026f8: 42 39 94 80 8c 05 00 00      	cmp	dword ptr [rax + 4*r8 + 0x58c], edx
ffffffff80002700: 41 0f 95 c3          	setne	r11b
ffffffff80002704: 44 0f 47 de          	cmova	r11d, esi
ffffffff80002708: 48 83 eb 80          	sub	rbx, -0x80
ffffffff8000270c: 49 ff c0             	inc	r8
ffffffff8000270f: 49 83 c2 fc          	add	r10, -0x4
ffffffff80002713: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80002717: 74 d7                	je	0xffffffff800026f0 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0xb0>
ffffffff80002719: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff8000271d: 45 85 c9             	test	r9d, r9d
ffffffff80002720: 75 11                	jne	0xffffffff80002733 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0xf3>
ffffffff80002722: eb 23                	jmp	0xffffffff80002747 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x107>
ffffffff80002724: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80002730: 4d 89 c8             	mov	r8, r9
ffffffff80002733: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80002737: 0f 82 5d 03 00 00    	jb	0xffffffff80002a9a <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x45a>
ffffffff8000273d: 4a 8b 84 c0 b8 05 00 00      	mov	rax, qword ptr [rax + 8*r8 + 0x5b8]
ffffffff80002745: eb 8e                	jmp	0xffffffff800026d5 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x95>
ffffffff80002747: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000274c: 31 c0                	xor	eax, eax
ffffffff8000274e: f0                   	lock
ffffffff8000274f: 48 0f b1 4b b0       	cmpxchg	qword ptr [rbx - 0x50], rcx
ffffffff80002754: 74 16                	je	0xffffffff8000276c <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x12c>
ffffffff80002756: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80002760: f3 90                	pause
ffffffff80002762: 31 c0                	xor	eax, eax
ffffffff80002764: f0                   	lock
ffffffff80002765: 48 0f b1 4b b0       	cmpxchg	qword ptr [rbx - 0x50], rcx
ffffffff8000276a: 75 f4                	jne	0xffffffff80002760 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x120>
ffffffff8000276c: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff80002770: 48 8b 4f 10          	mov	rcx, qword ptr [rdi + 0x10]
ffffffff80002774: 8b 28                	mov	ebp, dword ptr [rax]
ffffffff80002776: 4c 8b 31             	mov	r14, qword ptr [rcx]
ffffffff80002779: 4c 8b 63 e8          	mov	r12, qword ptr [rbx - 0x18]
ffffffff8000277d: f0                   	lock
ffffffff8000277e: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff80002782: 0f 8e 10 03 00 00    	jle	0xffffffff80002a98 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x458>
ffffffff80002788: 48 8b 53 f0          	mov	rdx, qword ptr [rbx - 0x10]
ffffffff8000278c: f0                   	lock
ffffffff8000278d: 48 ff 02             	inc	qword ptr [rdx]
ffffffff80002790: 0f 8e 02 03 00 00    	jle	0xffffffff80002a98 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x458>
ffffffff80002796: 4c 8b 6b 20          	mov	r13, qword ptr [rbx + 0x20]
ffffffff8000279a: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8000279f: f0                   	lock
ffffffff800027a0: 48 0f c1 05 40 8a 02 00      	xadd	qword ptr [rip + 0x28a40], rax # 0xffffffff8002b1e8 <taos::events::EventId::init::NEXT_ID::h234366d99e473b5a>
ffffffff800027a8: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff800027ad: 0f b6 05 2d 8a 02 00 	movzx	eax, byte ptr [rip + 0x28a2d] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800027b4: b1 01                	mov	cl, 0x1
ffffffff800027b6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800027c0: 31 c0                	xor	eax, eax
ffffffff800027c2: f0                   	lock
ffffffff800027c3: 0f b0 0d 36 88 02 00 	cmpxchg	byte ptr [rip + 0x28836], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800027ca: 75 06                	jne	0xffffffff800027d2 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x192>
ffffffff800027cc: eb 11                	jmp	0xffffffff800027df <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x19f>
ffffffff800027ce: 66 90                	nop
ffffffff800027d0: f3 90                	pause
ffffffff800027d2: 0f b6 05 27 88 02 00 	movzx	eax, byte ptr [rip + 0x28827] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800027d9: 84 c0                	test	al, al
ffffffff800027db: 75 f3                	jne	0xffffffff800027d0 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x190>
ffffffff800027dd: eb e1                	jmp	0xffffffff800027c0 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x180>
ffffffff800027df: 48 89 54 24 20       	mov	qword ptr [rsp + 0x20], rdx
ffffffff800027e4: be 04 00 00 00       	mov	esi, 0x4
ffffffff800027e9: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800027ee: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800027f5: e8 56 a2 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800027fa: c6 05 ff 87 02 00 00 	mov	byte ptr [rip + 0x287ff], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002801: 48 85 c0             	test	rax, rax
ffffffff80002804: 0f 84 a8 02 00 00    	je	0xffffffff80002ab2 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x472>
ffffffff8000280a: 49 89 c7             	mov	r15, rax
ffffffff8000280d: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80002810: 0f b6 05 ca 89 02 00 	movzx	eax, byte ptr [rip + 0x289ca] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80002817: b1 01                	mov	cl, 0x1
ffffffff80002819: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80002820: 31 c0                	xor	eax, eax
ffffffff80002822: f0                   	lock
ffffffff80002823: 0f b0 0d d6 87 02 00 	cmpxchg	byte ptr [rip + 0x287d6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000282a: 74 1e                	je	0xffffffff8000284a <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x20a>
ffffffff8000282c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80002830: 0f b6 05 c9 87 02 00 	movzx	eax, byte ptr [rip + 0x287c9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002837: 84 c0                	test	al, al
ffffffff80002839: 74 e5                	je	0xffffffff80002820 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x1e0>
ffffffff8000283b: f3 90                	pause
ffffffff8000283d: 0f b6 05 bc 87 02 00 	movzx	eax, byte ptr [rip + 0x287bc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002844: 84 c0                	test	al, al
ffffffff80002846: 75 f3                	jne	0xffffffff8000283b <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x1fb>
ffffffff80002848: eb d6                	jmp	0xffffffff80002820 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x1e0>
ffffffff8000284a: 4c 89 74 24 10       	mov	qword ptr [rsp + 0x10], r14
ffffffff8000284f: be 08 00 00 00       	mov	esi, 0x8
ffffffff80002854: ba 58 00 00 00       	mov	edx, 0x58
ffffffff80002859: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80002860: e8 eb a1 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80002865: c6 05 94 87 02 00 00 	mov	byte ptr [rip + 0x28794], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000286c: 48 85 c0             	test	rax, rax
ffffffff8000286f: 0f 84 4c 02 00 00    	je	0xffffffff80002ac1 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x481>
ffffffff80002875: 49 89 c6             	mov	r14, rax
ffffffff80002878: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000287f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80002887: 4c 89 60 10          	mov	qword ptr [rax + 0x10], r12
ffffffff8000288b: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80002890: 49 89 46 18          	mov	qword ptr [r14 + 0x18], rax
ffffffff80002894: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80002899: 49 89 46 20          	mov	qword ptr [r14 + 0x20], rax
ffffffff8000289d: 49 c7 46 28 00 00 00 00      	mov	qword ptr [r14 + 0x28], 0x0
ffffffff800028a5: 4d 89 7e 30          	mov	qword ptr [r14 + 0x30], r15
ffffffff800028a9: 49 c7 46 38 d0 20 02 80      	mov	qword ptr [r14 + 0x38], -0x7ffddf30
ffffffff800028b1: 49 c7 46 40 03 00 00 00      	mov	qword ptr [r14 + 0x40], 0x3
ffffffff800028b9: 4d 89 6e 48          	mov	qword ptr [r14 + 0x48], r13
ffffffff800028bd: 41 89 6e 50          	mov	dword ptr [r14 + 0x50], ebp
ffffffff800028c1: 4c 89 34 24          	mov	qword ptr [rsp], r14
ffffffff800028c5: 48 6b 44 24 10 64    	imul	rax, qword ptr [rsp + 0x10], 0x64
ffffffff800028cb: 48 c1 e8 09          	shr	rax, 0x9
ffffffff800028cf: 48 b9 53 5a 9b a0 2f b8 44 00	movabs	rcx, 0x44b82fa09b5a53
ffffffff800028d9: 48 f7 e1             	mul	rcx
ffffffff800028dc: 49 89 d7             	mov	r15, rdx
ffffffff800028df: 49 c1 ef 0b          	shr	r15, 0xb
ffffffff800028e3: 4c 03 7b 28          	add	r15, qword ptr [rbx + 0x28]
ffffffff800028e7: f0                   	lock
ffffffff800028e8: 49 ff 06             	inc	qword ptr [r14]
ffffffff800028eb: 0f 8e a7 01 00 00    	jle	0xffffffff80002a98 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x458>
ffffffff800028f1: f0                   	lock
ffffffff800028f2: 49 ff 06             	inc	qword ptr [r14]
ffffffff800028f5: 0f 8e 9d 01 00 00    	jle	0xffffffff80002a98 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x458>
ffffffff800028fb: 4c 8b 63 c8          	mov	r12, qword ptr [rbx - 0x38]
ffffffff800028ff: 4c 3b 63 b8          	cmp	r12, qword ptr [rbx - 0x48]
ffffffff80002903: 75 10                	jne	0xffffffff80002915 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x2d5>
ffffffff80002905: 48 8d 7b b8          	lea	rdi, [rbx - 0x48]
ffffffff80002909: 48 c7 c6 20 73 02 80 	mov	rsi, -0x7ffd8ce0
ffffffff80002910: e8 1b 0a 01 00       	call	0xffffffff80013330 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d>
ffffffff80002915: 48 8b 43 c0          	mov	rax, qword ptr [rbx - 0x40]
ffffffff80002919: 4c 89 e2             	mov	rdx, r12
ffffffff8000291c: 48 c1 e2 04          	shl	rdx, 0x4
ffffffff80002920: 4c 89 34 10          	mov	qword ptr [rax + rdx], r14
ffffffff80002924: 4c 89 7c 10 08       	mov	qword ptr [rax + rdx + 0x8], r15
ffffffff80002929: 49 8d 44 24 01       	lea	rax, [r12 + 0x1]
ffffffff8000292e: 48 89 43 c8          	mov	qword ptr [rbx - 0x38], rax
ffffffff80002932: 48 8b 43 c0          	mov	rax, qword ptr [rbx - 0x40]
ffffffff80002936: 48 8b 0c 10          	mov	rcx, qword ptr [rax + rdx]
ffffffff8000293a: 48 8b 54 10 08       	mov	rdx, qword ptr [rax + rdx + 0x8]
ffffffff8000293f: 4d 85 e4             	test	r12, r12
ffffffff80002942: 74 7f                	je	0xffffffff800029c3 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x383>
ffffffff80002944: be ff 00 00 00       	mov	esi, 0xff
ffffffff80002949: eb 2f                	jmp	0xffffffff8000297a <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x33a>
ffffffff8000294b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80002950: 45 0f b6 d2          	movzx	r10d, r10b
ffffffff80002954: 41 81 fa ff 00 00 00 	cmp	r10d, 0xff
ffffffff8000295b: 75 61                	jne	0xffffffff800029be <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x37e>
ffffffff8000295d: 49 01 c1             	add	r9, rax
ffffffff80002960: 48 c1 e7 04          	shl	rdi, 0x4
ffffffff80002964: 4d 8b 11             	mov	r10, qword ptr [r9]
ffffffff80002967: 4d 8b 49 08          	mov	r9, qword ptr [r9 + 0x8]
ffffffff8000296b: 4c 89 4c 38 08       	mov	qword ptr [rax + rdi + 0x8], r9
ffffffff80002970: 4c 89 14 38          	mov	qword ptr [rax + rdi], r10
ffffffff80002974: 49 83 f8 01          	cmp	r8, 0x1
ffffffff80002978: 76 4c                	jbe	0xffffffff800029c6 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x386>
ffffffff8000297a: 4c 89 e7             	mov	rdi, r12
ffffffff8000297d: 4d 8d 44 24 ff       	lea	r8, [r12 - 0x1]
ffffffff80002982: 4d 89 c4             	mov	r12, r8
ffffffff80002985: 49 d1 ec             	shr	r12
ffffffff80002988: 4d 89 e1             	mov	r9, r12
ffffffff8000298b: 49 c1 e1 04          	shl	r9, 0x4
ffffffff8000298f: 45 31 d2             	xor	r10d, r10d
ffffffff80002992: 4a 3b 54 08 08       	cmp	rdx, qword ptr [rax + r9 + 0x8]
ffffffff80002997: 41 0f 95 c2          	setne	r10b
ffffffff8000299b: 44 0f 42 d6          	cmovb	r10d, esi
ffffffff8000299f: 45 84 d2             	test	r10b, r10b
ffffffff800029a2: 75 ac                	jne	0xffffffff80002950 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x310>
ffffffff800029a4: 4e 8b 14 08          	mov	r10, qword ptr [rax + r9]
ffffffff800029a8: 45 8b 5a 50          	mov	r11d, dword ptr [r10 + 0x50]
ffffffff800029ac: 44 39 59 50          	cmp	dword ptr [rcx + 0x50], r11d
ffffffff800029b0: 72 0c                	jb	0xffffffff800029be <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x37e>
ffffffff800029b2: 75 a9                	jne	0xffffffff8000295d <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x31d>
ffffffff800029b4: 4c 8b 59 20          	mov	r11, qword ptr [rcx + 0x20]
ffffffff800029b8: 4d 3b 5a 20          	cmp	r11, qword ptr [r10 + 0x20]
ffffffff800029bc: 77 9f                	ja	0xffffffff8000295d <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x31d>
ffffffff800029be: 49 89 fc             	mov	r12, rdi
ffffffff800029c1: eb 03                	jmp	0xffffffff800029c6 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x386>
ffffffff800029c3: 45 31 e4             	xor	r12d, r12d
ffffffff800029c6: 49 c1 e4 04          	shl	r12, 0x4
ffffffff800029ca: 4a 89 0c 20          	mov	qword ptr [rax + r12], rcx
ffffffff800029ce: 4a 89 54 20 08       	mov	qword ptr [rax + r12 + 0x8], rdx
ffffffff800029d3: 41 bc 01 00 00 00    	mov	r12d, 0x1
ffffffff800029d9: 31 c0                	xor	eax, eax
ffffffff800029db: f0                   	lock
ffffffff800029dc: 4c 0f b1 63 f8       	cmpxchg	qword ptr [rbx - 0x8], r12
ffffffff800029e1: 74 19                	je	0xffffffff800029fc <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x3bc>
ffffffff800029e3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800029f0: f3 90                	pause
ffffffff800029f2: 31 c0                	xor	eax, eax
ffffffff800029f4: f0                   	lock
ffffffff800029f5: 4c 0f b1 63 f8       	cmpxchg	qword ptr [rbx - 0x8], r12
ffffffff800029fa: 75 f4                	jne	0xffffffff800029f0 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x3b0>
ffffffff800029fc: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff80002a00: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff80002a04: 48 89 df             	mov	rdi, rbx
ffffffff80002a07: e8 24 f8 00 00       	call	0xffffffff80012230 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4>
ffffffff80002a0c: f0                   	lock
ffffffff80002a0d: 48 83 63 f8 fc       	and	qword ptr [rbx - 0x8], -0x4
ffffffff80002a12: 4c 8b 6b f0          	mov	r13, qword ptr [rbx - 0x10]
ffffffff80002a16: 31 c0                	xor	eax, eax
ffffffff80002a18: f0                   	lock
ffffffff80002a19: 4d 0f b1 65 10       	cmpxchg	qword ptr [r13 + 0x10], r12
ffffffff80002a1e: 74 1c                	je	0xffffffff80002a3c <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x3fc>
ffffffff80002a20: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80002a25: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80002a30: f3 90                	pause
ffffffff80002a32: 31 c0                	xor	eax, eax
ffffffff80002a34: f0                   	lock
ffffffff80002a35: 49 0f b1 4d 10       	cmpxchg	qword ptr [r13 + 0x10], rcx
ffffffff80002a3a: 75 f4                	jne	0xffffffff80002a30 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x3f0>
ffffffff80002a3c: 49 8d 7d 18          	lea	rdi, [r13 + 0x18]
ffffffff80002a40: 4c 8b 24 24          	mov	r12, qword ptr [rsp]
ffffffff80002a44: 49 8b 74 24 20       	mov	rsi, qword ptr [r12 + 0x20]
ffffffff80002a49: e8 e2 f7 00 00       	call	0xffffffff80012230 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4>
ffffffff80002a4e: f0                   	lock
ffffffff80002a4f: 49 83 65 10 fc       	and	qword ptr [r13 + 0x10], -0x4
ffffffff80002a54: f0                   	lock
ffffffff80002a55: 49 ff 0c 24          	dec	qword ptr [r12]
ffffffff80002a59: 75 08                	jne	0xffffffff80002a63 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x423>
ffffffff80002a5b: 48 89 e7             	mov	rdi, rsp
ffffffff80002a5e: e8 3d 04 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80002a63: 4c 89 34 24          	mov	qword ptr [rsp], r14
ffffffff80002a67: 4c 89 7c 24 08       	mov	qword ptr [rsp + 0x8], r15
ffffffff80002a6c: f0                   	lock
ffffffff80002a6d: 49 ff 0e             	dec	qword ptr [r14]
ffffffff80002a70: 75 08                	jne	0xffffffff80002a7a <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804+0x43a>
ffffffff80002a72: 48 89 e7             	mov	rdi, rsp
ffffffff80002a75: e8 26 04 01 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80002a7a: f0                   	lock
ffffffff80002a7b: 48 83 63 b0 fc       	and	qword ptr [rbx - 0x50], -0x4
ffffffff80002a80: f0                   	lock
ffffffff80002a81: 48 83 2d 67 87 02 00 04      	sub	qword ptr [rip + 0x28767], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002a89: 48 83 c4 28          	add	rsp, 0x28
ffffffff80002a8d: 5b                   	pop	rbx
ffffffff80002a8e: 41 5c                	pop	r12
ffffffff80002a90: 41 5d                	pop	r13
ffffffff80002a92: 41 5e                	pop	r14
ffffffff80002a94: 41 5f                	pop	r15
ffffffff80002a96: 5d                   	pop	rbp
ffffffff80002a97: c3                   	ret
ffffffff80002a98: 0f 0b                	ud2
ffffffff80002a9a: be 0f 00 00 00       	mov	esi, 0xf
ffffffff80002a9f: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff80002aa6: 48 c7 c2 30 22 02 80 	mov	rdx, -0x7ffdddd0
ffffffff80002aad: e8 ae eb 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80002ab2: bf 04 00 00 00       	mov	edi, 0x4
ffffffff80002ab7: be 08 00 00 00       	mov	esi, 0x8
ffffffff80002abc: e8 f1 b0 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80002ac1: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80002ac6: be 58 00 00 00       	mov	esi, 0x58
ffffffff80002acb: e8 e2 b0 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>

ffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>:
ffffffff80002ad0: 50                   	push	rax
ffffffff80002ad1: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80002ad6: 0f 32                	rdmsr
ffffffff80002ad8: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80002add: f0                   	lock
ffffffff80002ade: 48 0f c1 15 0a 87 02 00      	xadd	qword ptr [rip + 0x2870a], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002ae6: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff80002af0: 48 39 ca             	cmp	rdx, rcx
ffffffff80002af3: 77 2e                	ja	0xffffffff80002b23 <taos::events::current_running_event_info::h6dd32981b7125358+0x53>
ffffffff80002af5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80002b00: f6 c2 03             	test	dl, 0x3
ffffffff80002b03: 74 3f                	je	0xffffffff80002b44 <taos::events::current_running_event_info::h6dd32981b7125358+0x74>
ffffffff80002b05: f0                   	lock
ffffffff80002b06: 48 83 2d e2 86 02 00 04      	sub	qword ptr [rip + 0x286e2], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002b0e: f3 90                	pause
ffffffff80002b10: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80002b15: f0                   	lock
ffffffff80002b16: 48 0f c1 15 d2 86 02 00      	xadd	qword ptr [rip + 0x286d2], rdx # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002b1e: 48 39 ca             	cmp	rdx, rcx
ffffffff80002b21: 76 dd                	jbe	0xffffffff80002b00 <taos::events::current_running_event_info::h6dd32981b7125358+0x30>
ffffffff80002b23: f0                   	lock
ffffffff80002b24: 48 83 2d c4 86 02 00 04      	sub	qword ptr [rip + 0x286c4], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002b2c: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80002b31: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80002b38: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80002b3f: e8 ac e5 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002b44: 48 8b 0d ad 86 02 00 	mov	rcx, qword ptr [rip + 0x286ad] # 0xffffffff8002b1f8 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x8>
ffffffff80002b4b: 48 85 c9             	test	rcx, rcx
ffffffff80002b4e: 0f 84 d3 00 00 00    	je	0xffffffff80002c27 <taos::events::current_running_event_info::h6dd32981b7125358+0x157>
ffffffff80002b54: 48 8b 15 a5 86 02 00 	mov	rdx, qword ptr [rip + 0x286a5] # 0xffffffff8002b200 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1+0x10>
ffffffff80002b5b: bf ff 00 00 00       	mov	edi, 0xff
ffffffff80002b60: 44 0f b7 89 b6 05 00 00      	movzx	r9d, word ptr [rcx + 0x5b6]
ffffffff80002b68: 45 89 ca             	mov	r10d, r9d
ffffffff80002b6b: 41 c1 e2 07          	shl	r10d, 0x7
ffffffff80002b6f: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff80002b76: 31 f6                	xor	esi, esi
ffffffff80002b78: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80002b80: 49 39 f2             	cmp	r10, rsi
ffffffff80002b83: 74 2b                	je	0xffffffff80002bb0 <taos::events::current_running_event_info::h6dd32981b7125358+0xe0>
ffffffff80002b85: 45 31 db             	xor	r11d, r11d
ffffffff80002b88: 42 39 84 81 8c 05 00 00      	cmp	dword ptr [rcx + 4*r8 + 0x58c], eax
ffffffff80002b90: 41 0f 95 c3          	setne	r11b
ffffffff80002b94: 44 0f 47 df          	cmova	r11d, edi
ffffffff80002b98: 48 83 ee 80          	sub	rsi, -0x80
ffffffff80002b9c: 49 ff c0             	inc	r8
ffffffff80002b9f: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80002ba3: 74 db                	je	0xffffffff80002b80 <taos::events::current_running_event_info::h6dd32981b7125358+0xb0>
ffffffff80002ba5: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff80002ba9: 45 85 c9             	test	r9d, r9d
ffffffff80002bac: 75 05                	jne	0xffffffff80002bb3 <taos::events::current_running_event_info::h6dd32981b7125358+0xe3>
ffffffff80002bae: eb 13                	jmp	0xffffffff80002bc3 <taos::events::current_running_event_info::h6dd32981b7125358+0xf3>
ffffffff80002bb0: 4d 89 c8             	mov	r8, r9
ffffffff80002bb3: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80002bb7: 72 6e                	jb	0xffffffff80002c27 <taos::events::current_running_event_info::h6dd32981b7125358+0x157>
ffffffff80002bb9: 4a 8b 8c c1 b8 05 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x5b8]
ffffffff80002bc1: eb 9d                	jmp	0xffffffff80002b60 <taos::events::current_running_event_info::h6dd32981b7125358+0x90>
ffffffff80002bc3: 31 d2                	xor	edx, edx
ffffffff80002bc5: bf 01 00 00 00       	mov	edi, 0x1
ffffffff80002bca: 31 c0                	xor	eax, eax
ffffffff80002bcc: f0                   	lock
ffffffff80002bcd: 48 0f b1 7c 31 80    	cmpxchg	qword ptr [rcx + rsi - 0x80], rdi
ffffffff80002bd3: 74 18                	je	0xffffffff80002bed <taos::events::current_running_event_info::h6dd32981b7125358+0x11d>
ffffffff80002bd5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80002be0: f3 90                	pause
ffffffff80002be2: 31 c0                	xor	eax, eax
ffffffff80002be4: f0                   	lock
ffffffff80002be5: 48 0f b1 7c 31 80    	cmpxchg	qword ptr [rcx + rsi - 0x80], rdi
ffffffff80002beb: 75 f3                	jne	0xffffffff80002be0 <taos::events::current_running_event_info::h6dd32981b7125358+0x110>
ffffffff80002bed: 48 8b 7c 31 e8       	mov	rdi, qword ptr [rcx + rsi - 0x18]
ffffffff80002bf2: 48 85 ff             	test	rdi, rdi
ffffffff80002bf5: 74 19                	je	0xffffffff80002c10 <taos::events::current_running_event_info::h6dd32981b7125358+0x140>
ffffffff80002bf7: 48 8b 47 40          	mov	rax, qword ptr [rdi + 0x40]
ffffffff80002bfb: 8b 57 50             	mov	edx, dword ptr [rdi + 0x50]
ffffffff80002bfe: f0                   	lock
ffffffff80002bff: 48 83 64 31 80 fc    	and	qword ptr [rcx + rsi - 0x80], -0x4
ffffffff80002c05: f0                   	lock
ffffffff80002c06: 48 83 2d e2 85 02 00 04      	sub	qword ptr [rip + 0x285e2], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002c0e: 59                   	pop	rcx
ffffffff80002c0f: c3                   	ret
ffffffff80002c10: b8 03 00 00 00       	mov	eax, 0x3
ffffffff80002c15: f0                   	lock
ffffffff80002c16: 48 83 64 31 80 fc    	and	qword ptr [rcx + rsi - 0x80], -0x4
ffffffff80002c1c: f0                   	lock
ffffffff80002c1d: 48 83 2d cb 85 02 00 04      	sub	qword ptr [rip + 0x285cb], 0x4 # 0xffffffff8002b1f0 <taos::events::EVENT_RUNNERS::h7ce5abee561525c1>
ffffffff80002c25: 59                   	pop	rcx
ffffffff80002c26: c3                   	ret
ffffffff80002c27: be 0f 00 00 00       	mov	esi, 0xf
ffffffff80002c2c: 48 c7 c7 b0 21 02 80 	mov	rdi, -0x7ffdde50
ffffffff80002c33: 48 c7 c2 48 22 02 80 	mov	rdx, -0x7ffdddb8
ffffffff80002c3a: e8 21 ea 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80002c3f: cc                   	int3

ffffffff80002c40 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3>:
ffffffff80002c40: 55                   	push	rbp
ffffffff80002c41: 41 57                	push	r15
ffffffff80002c43: 41 56                	push	r14
ffffffff80002c45: 41 54                	push	r12
ffffffff80002c47: 53                   	push	rbx
ffffffff80002c48: 48 81 ec b0 00 00 00 	sub	rsp, 0xb0
ffffffff80002c4f: 80 7f 04 00          	cmp	byte ptr [rdi + 0x4], 0x0
ffffffff80002c53: 0f 85 63 02 00 00    	jne	0xffffffff80002ebc <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x27c>
ffffffff80002c59: 48 89 fb             	mov	rbx, rdi
ffffffff80002c5c: 8b 07                	mov	eax, dword ptr [rdi]
ffffffff80002c5e: 89 44 24 0c          	mov	dword ptr [rsp + 0xc], eax
ffffffff80002c62: fa                   	cli
ffffffff80002c63: 48 8d 44 24 0c       	lea	rax, [rsp + 0xc]
ffffffff80002c68: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80002c6d: 48 c7 44 24 18 f0 02 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfd10
ffffffff80002c76: 48 c7 44 24 20 d0 22 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffddd30
ffffffff80002c7f: 48 c7 44 24 28 02 00 00 00   	mov	qword ptr [rsp + 0x28], 0x2
ffffffff80002c88: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff80002c91: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80002c96: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80002c9b: 48 c7 44 24 38 01 00 00 00   	mov	qword ptr [rsp + 0x38], 0x1
ffffffff80002ca4: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80002ca9: e8 62 56 00 00       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80002cae: 0f b6 05 8b 85 02 00 	movzx	eax, byte ptr [rip + 0x2858b] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff80002cb5: 3c 02                	cmp	al, 0x2
ffffffff80002cb7: 0f 85 a3 01 00 00    	jne	0xffffffff80002e60 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x220>
ffffffff80002cbd: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff80002cc7: 48 8b 05 6a 85 02 00 	mov	rax, qword ptr [rip + 0x2856a] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff80002cce: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80002cd3: f0                   	lock
ffffffff80002cd4: 48 0f c1 50 10       	xadd	qword ptr [rax + 0x10], rdx
ffffffff80002cd9: 48 39 ca             	cmp	rdx, rcx
ffffffff80002cdc: 77 1f                	ja	0xffffffff80002cfd <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xbd>
ffffffff80002cde: 66 90                	nop
ffffffff80002ce0: f6 c2 03             	test	dl, 0x3
ffffffff80002ce3: 74 36                	je	0xffffffff80002d1b <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xdb>
ffffffff80002ce5: f0                   	lock
ffffffff80002ce6: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80002ceb: f3 90                	pause
ffffffff80002ced: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80002cf2: f0                   	lock
ffffffff80002cf3: 48 0f c1 50 10       	xadd	qword ptr [rax + 0x10], rdx
ffffffff80002cf8: 48 39 ca             	cmp	rdx, rcx
ffffffff80002cfb: 76 e3                	jbe	0xffffffff80002ce0 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xa0>
ffffffff80002cfd: f0                   	lock
ffffffff80002cfe: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80002d03: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff80002d08: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff80002d0f: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff80002d16: e8 d5 e3 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002d1b: 48 8b 48 18          	mov	rcx, qword ptr [rax + 0x18]
ffffffff80002d1f: 48 85 c9             	test	rcx, rcx
ffffffff80002d22: 0f 84 7c 01 00 00    	je	0xffffffff80002ea4 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x264>
ffffffff80002d28: 48 8b 50 20          	mov	rdx, qword ptr [rax + 0x20]
ffffffff80002d2c: 8b 74 24 0c          	mov	esi, dword ptr [rsp + 0xc]
ffffffff80002d30: bf ff 00 00 00       	mov	edi, 0xff
ffffffff80002d35: 44 0f b7 89 8e 00 00 00      	movzx	r9d, word ptr [rcx + 0x8e]
ffffffff80002d3d: 45 89 ca             	mov	r10d, r9d
ffffffff80002d40: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff80002d44: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff80002d4b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80002d50: 4d 85 d2             	test	r10, r10
ffffffff80002d53: 74 2b                	je	0xffffffff80002d80 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x140>
ffffffff80002d55: 45 31 db             	xor	r11d, r11d
ffffffff80002d58: 42 39 74 81 64       	cmp	dword ptr [rcx + 4*r8 + 0x64], esi
ffffffff80002d5d: 41 0f 95 c3          	setne	r11b
ffffffff80002d61: 44 0f 47 df          	cmova	r11d, edi
ffffffff80002d65: 49 ff c0             	inc	r8
ffffffff80002d68: 49 83 c2 fc          	add	r10, -0x4
ffffffff80002d6c: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80002d70: 74 de                	je	0xffffffff80002d50 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x110>
ffffffff80002d72: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff80002d76: 45 85 c9             	test	r9d, r9d
ffffffff80002d79: 74 1c                	je	0xffffffff80002d97 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x157>
ffffffff80002d7b: eb 06                	jmp	0xffffffff80002d83 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x143>
ffffffff80002d7d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80002d80: 4d 89 c8             	mov	r8, r9
ffffffff80002d83: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80002d87: 0f 82 17 01 00 00    	jb	0xffffffff80002ea4 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x264>
ffffffff80002d8d: 4a 8b 8c c1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x90]
ffffffff80002d95: eb 9e                	jmp	0xffffffff80002d35 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xf5>
ffffffff80002d97: 4e 8b 64 c1 08       	mov	r12, qword ptr [rcx + 8*r8 + 0x8]
ffffffff80002d9c: f0                   	lock
ffffffff80002d9d: 49 ff 04 24          	inc	qword ptr [r12]
ffffffff80002da1: 0f 8e 21 01 00 00    	jle	0xffffffff80002ec8 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x288>
ffffffff80002da7: 4c 89 64 24 10       	mov	qword ptr [rsp + 0x10], r12
ffffffff80002dac: f0                   	lock
ffffffff80002dad: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff80002db2: e8 19 f7 ff ff       	call	0xffffffff800024d0 <taos::events::runner_timestamp::h2cb14dada03374ba>
ffffffff80002db7: 48 83 c0 05          	add	rax, 0x5
ffffffff80002dbb: 49 89 44 24 38       	mov	qword ptr [r12 + 0x38], rax
ffffffff80002dc0: 49 8b 84 24 d0 00 00 00      	mov	rax, qword ptr [r12 + 0xd0]
ffffffff80002dc8: 0f 22 d8             	mov	cr3, rax
ffffffff80002dcb: 0f b6 05 2e 86 02 00 	movzx	eax, byte ptr [rip + 0x2862e] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff80002dd2: 3c 02                	cmp	al, 0x2
ffffffff80002dd4: 0f 85 97 00 00 00    	jne	0xffffffff80002e71 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x231>
ffffffff80002dda: 0f b7 2d 17 86 02 00 	movzx	ebp, word ptr [rip + 0x28617] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff80002de1: 0f b6 05 18 86 02 00 	movzx	eax, byte ptr [rip + 0x28618] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff80002de8: 3c 02                	cmp	al, 0x2
ffffffff80002dea: 0f 85 a3 00 00 00    	jne	0xffffffff80002e93 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x253>
ffffffff80002df0: 44 0f b7 35 02 86 02 00      	movzx	r14d, word ptr [rip + 0x28602] # 0xffffffff8002b3fa <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x5a>
ffffffff80002df8: 49 8d 74 24 40       	lea	rsi, [r12 + 0x40]
ffffffff80002dfd: 4c 8d 7c 24 20       	lea	r15, [rsp + 0x20]
ffffffff80002e02: ba 90 00 00 00       	mov	edx, 0x90
ffffffff80002e07: 4c 89 ff             	mov	rdi, r15
ffffffff80002e0a: ff 15 20 96 03 00    	call	qword ptr [rip + 0x39620] # 0xffffffff8003c430
ffffffff80002e10: 49 c7 44 24 30 84 9b 00 80   	mov	qword ptr [r12 + 0x30], -0x7fff647c
ffffffff80002e19: 49 8d 4c 24 28       	lea	rcx, [r12 + 0x28]
ffffffff80002e1e: 4d 8d 84 24 04 01 00 00      	lea	r8, [r12 + 0x104]
ffffffff80002e26: 4c 89 ff             	mov	rdi, r15
ffffffff80002e29: 44 89 f6             	mov	esi, r14d
ffffffff80002e2c: 89 ea                	mov	edx, ebp
ffffffff80002e2e: 50                   	push	rax
ffffffff80002e2f: 51                   	push	rcx
ffffffff80002e30: 52                   	push	rdx
ffffffff80002e31: e8 da 6c 00 00       	call	0xffffffff80009b10 <call_process>
ffffffff80002e36: 5a                   	pop	rdx
ffffffff80002e37: 59                   	pop	rcx
ffffffff80002e38: 58                   	pop	rax
ffffffff80002e39: f0                   	lock
ffffffff80002e3a: 49 ff 0c 24          	dec	qword ptr [r12]
ffffffff80002e3e: 75 0a                	jne	0xffffffff80002e4a <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x20a>
ffffffff80002e40: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80002e45: e8 16 fd 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff80002e4a: c6 43 04 01          	mov	byte ptr [rbx + 0x4], 0x1
ffffffff80002e4e: 31 c0                	xor	eax, eax
ffffffff80002e50: 48 81 c4 b0 00 00 00 	add	rsp, 0xb0
ffffffff80002e57: 5b                   	pop	rbx
ffffffff80002e58: 41 5c                	pop	r12
ffffffff80002e5a: 41 5e                	pop	r14
ffffffff80002e5c: 41 5f                	pop	r15
ffffffff80002e5e: 5d                   	pop	rbp
ffffffff80002e5f: c3                   	ret
ffffffff80002e60: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff80002e67: e8 94 c5 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff80002e6c: e9 4c fe ff ff       	jmp	0xffffffff80002cbd <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x7d>
ffffffff80002e71: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff80002e78: e8 23 c1 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff80002e7d: 0f b7 2d 74 85 02 00 	movzx	ebp, word ptr [rip + 0x28574] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff80002e84: 0f b6 05 75 85 02 00 	movzx	eax, byte ptr [rip + 0x28575] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff80002e8b: 3c 02                	cmp	al, 0x2
ffffffff80002e8d: 0f 84 5d ff ff ff    	je	0xffffffff80002df0 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1b0>
ffffffff80002e93: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff80002e9a: e8 01 c1 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff80002e9f: e9 4c ff ff ff       	jmp	0xffffffff80002df0 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1b0>
ffffffff80002ea4: be 29 00 00 00       	mov	esi, 0x29
ffffffff80002ea9: 48 c7 c7 f0 22 02 80 	mov	rdi, -0x7ffddd10
ffffffff80002eb0: 48 c7 c2 38 23 02 80 	mov	rdx, -0x7ffddcc8
ffffffff80002eb7: e8 a4 e7 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80002ebc: 48 c7 c7 50 23 02 80 	mov	rdi, -0x7ffddcb0
ffffffff80002ec3: e8 d8 ce 01 00       	call	0xffffffff8001fda0 <core::panicking::panic_const::panic_const_async_fn_resumed::hdbc599b673c0925f>
ffffffff80002ec8: 0f 0b                	ud2
ffffffff80002eca: cc                   	int3
ffffffff80002ecb: cc                   	int3
ffffffff80002ecc: cc                   	int3
ffffffff80002ecd: cc                   	int3
ffffffff80002ece: cc                   	int3
ffffffff80002ecf: cc                   	int3

ffffffff80002ed0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053>:
ffffffff80002ed0: 55                   	push	rbp
ffffffff80002ed1: 41 57                	push	r15
ffffffff80002ed3: 41 56                	push	r14
ffffffff80002ed5: 41 55                	push	r13
ffffffff80002ed7: 41 54                	push	r12
ffffffff80002ed9: 53                   	push	rbx
ffffffff80002eda: 48 83 ec 78          	sub	rsp, 0x78
ffffffff80002ede: 49 89 fd             	mov	r13, rdi
ffffffff80002ee1: 4c 8b 36             	mov	r14, qword ptr [rsi]
ffffffff80002ee4: 41 0f b7 5e 62       	movzx	ebx, word ptr [r14 + 0x62]
ffffffff80002ee9: 48 83 fb 0b          	cmp	rbx, 0xb
ffffffff80002eed: 73 50                	jae	0xffffffff80002f3f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x6f>
ffffffff80002eef: 48 8b 6e 10          	mov	rbp, qword ptr [rsi + 0x10]
ffffffff80002ef3: 48 8d 4d 01          	lea	rcx, [rbp + 0x1]
ffffffff80002ef7: 48 39 d9             	cmp	rcx, rbx
ffffffff80002efa: 77 2b                	ja	0xffffffff80002f27 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x57>
ffffffff80002efc: 49 89 d4             	mov	r12, rdx
ffffffff80002eff: 49 8d 56 08          	lea	rdx, [r14 + 0x8]
ffffffff80002f03: 48 8d 04 ea          	lea	rax, [rdx + 8*rbp]
ffffffff80002f07: 48 8d 3c ca          	lea	rdi, [rdx + 8*rcx]
ffffffff80002f0b: 48 89 da             	mov	rdx, rbx
ffffffff80002f0e: 48 29 ea             	sub	rdx, rbp
ffffffff80002f11: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff80002f15: 49 89 f7             	mov	r15, rsi
ffffffff80002f18: 48 89 c6             	mov	rsi, rax
ffffffff80002f1b: ff 15 17 95 03 00    	call	qword ptr [rip + 0x39517] # 0xffffffff8003c438
ffffffff80002f21: 4c 89 e2             	mov	rdx, r12
ffffffff80002f24: 4c 89 fe             	mov	rsi, r15
ffffffff80002f27: ff c3                	inc	ebx
ffffffff80002f29: 49 89 54 ee 08       	mov	qword ptr [r14 + 8*rbp + 0x8], rdx
ffffffff80002f2e: 66 41 89 5e 62       	mov	word ptr [r14 + 0x62], bx
ffffffff80002f33: 4c 8b 7e 08          	mov	r15, qword ptr [rsi + 0x8]
ffffffff80002f37: 49 89 ec             	mov	r12, rbp
ffffffff80002f3a: e9 95 07 00 00       	jmp	0xffffffff800036d4 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x804>
ffffffff80002f3f: 49 89 cc             	mov	r12, rcx
ffffffff80002f42: 48 8b 6e 08          	mov	rbp, qword ptr [rsi + 0x8]
ffffffff80002f46: 4c 8b 7e 10          	mov	r15, qword ptr [rsi + 0x10]
ffffffff80002f4a: 0f b6 05 90 82 02 00 	movzx	eax, byte ptr [rip + 0x28290] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80002f51: b1 01                	mov	cl, 0x1
ffffffff80002f53: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80002f60: 31 c0                	xor	eax, eax
ffffffff80002f62: f0                   	lock
ffffffff80002f63: 0f b0 0d 96 80 02 00 	cmpxchg	byte ptr [rip + 0x28096], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002f6a: 75 06                	jne	0xffffffff80002f72 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xa2>
ffffffff80002f6c: eb 11                	jmp	0xffffffff80002f7f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xaf>
ffffffff80002f6e: 66 90                	nop
ffffffff80002f70: f3 90                	pause
ffffffff80002f72: 0f b6 05 87 80 02 00 	movzx	eax, byte ptr [rip + 0x28087] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002f79: 84 c0                	test	al, al
ffffffff80002f7b: 75 f3                	jne	0xffffffff80002f70 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xa0>
ffffffff80002f7d: eb e1                	jmp	0xffffffff80002f60 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x90>
ffffffff80002f7f: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80002f84: be 08 00 00 00       	mov	esi, 0x8
ffffffff80002f89: ba 68 00 00 00       	mov	edx, 0x68
ffffffff80002f8e: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80002f95: e8 b6 9a 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80002f9a: c6 05 5f 80 02 00 00 	mov	byte ptr [rip + 0x2805f], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80002fa1: 48 85 c0             	test	rax, rax
ffffffff80002fa4: 0f 84 a4 07 00 00    	je	0xffffffff8000374e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x87e>
ffffffff80002faa: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80002fb1: 66 c7 40 62 00 00    	mov	word ptr [rax + 0x62], 0x0
ffffffff80002fb7: 49 83 ff 05          	cmp	r15, 0x5
ffffffff80002fbb: 4c 89 64 24 30       	mov	qword ptr [rsp + 0x30], r12
ffffffff80002fc0: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80002fc5: 73 30                	jae	0xffffffff80002ff7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x127>
ffffffff80002fc7: 41 0f b7 56 62       	movzx	edx, word ptr [r14 + 0x62]
ffffffff80002fcc: 48 83 c2 fb          	add	rdx, -0x5
ffffffff80002fd0: 66 89 50 62          	mov	word ptr [rax + 0x62], dx
ffffffff80002fd4: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80002fd8: 0f 83 2c 07 00 00    	jae	0xffffffff8000370a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x83a>
ffffffff80002fde: 49 8d 7e 28          	lea	rdi, [r14 + 0x28]
ffffffff80002fe2: 66 bb 04 00          	mov	bx, 0x4
ffffffff80002fe6: be 30 00 00 00       	mov	esi, 0x30
ffffffff80002feb: 48 89 2c 24          	mov	qword ptr [rsp], rbp
ffffffff80002fef: 4d 89 f4             	mov	r12, r14
ffffffff80002ff2: e9 c7 00 00 00       	jmp	0xffffffff800030be <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1ee>
ffffffff80002ff7: 74 36                	je	0xffffffff8000302f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x15f>
ffffffff80002ff9: 49 83 ff 06          	cmp	r15, 0x6
ffffffff80002ffd: 0f 85 88 00 00 00    	jne	0xffffffff8000308b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1bb>
ffffffff80003003: 41 0f b7 56 62       	movzx	edx, word ptr [r14 + 0x62]
ffffffff80003008: 48 83 c2 fa          	add	rdx, -0x6
ffffffff8000300c: 66 89 50 62          	mov	word ptr [rax + 0x62], dx
ffffffff80003010: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80003014: 0f 83 f0 06 00 00    	jae	0xffffffff8000370a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x83a>
ffffffff8000301a: 49 8d 7e 30          	lea	rdi, [r14 + 0x30]
ffffffff8000301e: 66 bb 05 00          	mov	bx, 0x5
ffffffff80003022: be 38 00 00 00       	mov	esi, 0x38
ffffffff80003027: 45 31 ff             	xor	r15d, r15d
ffffffff8000302a: e9 84 00 00 00       	jmp	0xffffffff800030b3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1e3>
ffffffff8000302f: 41 0f b7 56 62       	movzx	edx, word ptr [r14 + 0x62]
ffffffff80003034: 48 83 c2 fa          	add	rdx, -0x6
ffffffff80003038: 66 89 50 62          	mov	word ptr [rax + 0x62], dx
ffffffff8000303c: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80003040: 0f 83 c4 06 00 00    	jae	0xffffffff8000370a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x83a>
ffffffff80003046: 49 8b 4e 30          	mov	rcx, qword ptr [r14 + 0x30]
ffffffff8000304a: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8000304f: 48 89 c7             	mov	rdi, rax
ffffffff80003052: 48 83 c7 08          	add	rdi, 0x8
ffffffff80003056: 49 8d 76 38          	lea	rsi, [r14 + 0x38]
ffffffff8000305a: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff8000305e: ff 15 cc 93 03 00    	call	qword ptr [rip + 0x393cc] # 0xffffffff8003c430
ffffffff80003064: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003069: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff8000306d: 66 41 c7 46 62 06 00 	mov	word ptr [r14 + 0x62], 0x6
ffffffff80003074: b8 05 00 00 00       	mov	eax, 0x5
ffffffff80003079: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000307e: 49 89 ef             	mov	r15, rbp
ffffffff80003081: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff80003086: e9 9d 00 00 00       	jmp	0xffffffff80003128 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x258>
ffffffff8000308b: 41 0f b7 56 62       	movzx	edx, word ptr [r14 + 0x62]
ffffffff80003090: 48 83 c2 f9          	add	rdx, -0x7
ffffffff80003094: 66 89 50 62          	mov	word ptr [rax + 0x62], dx
ffffffff80003098: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff8000309c: 0f 83 68 06 00 00    	jae	0xffffffff8000370a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x83a>
ffffffff800030a2: 49 8d 7e 38          	lea	rdi, [r14 + 0x38]
ffffffff800030a6: 49 83 c7 f9          	add	r15, -0x7
ffffffff800030aa: 66 bb 06 00          	mov	bx, 0x6
ffffffff800030ae: be 40 00 00 00       	mov	esi, 0x40
ffffffff800030b3: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff800030bb: 49 89 c4             	mov	r12, rax
ffffffff800030be: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff800030c1: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff800030c6: 48 89 c7             	mov	rdi, rax
ffffffff800030c9: 48 83 c7 08          	add	rdi, 0x8
ffffffff800030cd: 4c 01 f6             	add	rsi, r14
ffffffff800030d0: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff800030d4: ff 15 56 93 03 00    	call	qword ptr [rip + 0x39356] # 0xffffffff8003c430
ffffffff800030da: 66 41 89 5e 62       	mov	word ptr [r14 + 0x62], bx
ffffffff800030df: 41 0f b7 5c 24 62    	movzx	ebx, word ptr [r12 + 0x62]
ffffffff800030e5: 48 89 da             	mov	rdx, rbx
ffffffff800030e8: 4c 29 fa             	sub	rdx, r15
ffffffff800030eb: 76 1b                	jbe	0xffffffff80003108 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x238>
ffffffff800030ed: 49 8d 44 24 08       	lea	rax, [r12 + 0x8]
ffffffff800030f2: 4a 8d 34 f8          	lea	rsi, [rax + 8*r15]
ffffffff800030f6: 4a 8d 3c f8          	lea	rdi, [rax + 8*r15]
ffffffff800030fa: 48 83 c7 08          	add	rdi, 0x8
ffffffff800030fe: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff80003102: ff 15 30 93 03 00    	call	qword ptr [rip + 0x39330] # 0xffffffff8003c438
ffffffff80003108: ff c3                	inc	ebx
ffffffff8000310a: 4c 89 7c 24 28       	mov	qword ptr [rsp + 0x28], r15
ffffffff8000310f: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003114: 4b 89 44 fc 08       	mov	qword ptr [r12 + 8*r15 + 0x8], rax
ffffffff80003119: 4c 89 64 24 20       	mov	qword ptr [rsp + 0x20], r12
ffffffff8000311e: 66 41 89 5c 24 62    	mov	word ptr [r12 + 0x62], bx
ffffffff80003124: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff80003128: 4c 89 6c 24 18       	mov	qword ptr [rsp + 0x18], r13
ffffffff8000312d: 4d 8b 26             	mov	r12, qword ptr [r14]
ffffffff80003130: 4d 85 e4             	test	r12, r12
ffffffff80003133: 4c 89 3c 24          	mov	qword ptr [rsp], r15
ffffffff80003137: 0f 84 6e 03 00 00    	je	0xffffffff800034ab <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5db>
ffffffff8000313d: 45 31 ed             	xor	r13d, r13d
ffffffff80003140: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80003145: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80003150: 4c 39 ed             	cmp	rbp, r13
ffffffff80003153: 0f 85 99 05 00 00    	jne	0xffffffff800036f2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x822>
ffffffff80003159: 45 0f b7 6e 60       	movzx	r13d, word ptr [r14 + 0x60]
ffffffff8000315e: 45 0f b7 74 24 62    	movzx	r14d, word ptr [r12 + 0x62]
ffffffff80003164: 49 83 fe 0b          	cmp	r14, 0xb
ffffffff80003168: 0f 82 26 04 00 00    	jb	0xffffffff80003594 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x6c4>
ffffffff8000316e: 48 ff c5             	inc	rbp
ffffffff80003171: 66 41 83 fd 05       	cmp	r13w, 0x5
ffffffff80003176: 73 38                	jae	0xffffffff800031b0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x2e0>
ffffffff80003178: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8000317d: 4c 89 64 24 38       	mov	qword ptr [rsp + 0x38], r12
ffffffff80003182: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff80003187: 48 c7 44 24 48 04 00 00 00   	mov	qword ptr [rsp + 0x48], 0x4
ffffffff80003190: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff80003195: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff8000319a: e8 71 23 00 00       	call	0xffffffff80005510 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff8000319f: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff800031a4: e9 e2 00 00 00       	jmp	0xffffffff8000328b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x3bb>
ffffffff800031a9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff800031b0: 49 83 fd 05          	cmp	r13, 0x5
ffffffff800031b4: 74 1c                	je	0xffffffff800031d2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x302>
ffffffff800031b6: 41 83 fd 06          	cmp	r13d, 0x6
ffffffff800031ba: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff800031bf: 0f 85 9a 00 00 00    	jne	0xffffffff8000325f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x38f>
ffffffff800031c5: b8 05 00 00 00       	mov	eax, 0x5
ffffffff800031ca: 45 31 ed             	xor	r13d, r13d
ffffffff800031cd: e9 96 00 00 00       	jmp	0xffffffff80003268 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x398>
ffffffff800031d2: 49 89 cd             	mov	r13, rcx
ffffffff800031d5: 4c 89 64 24 38       	mov	qword ptr [rsp + 0x38], r12
ffffffff800031da: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff800031df: 48 c7 44 24 48 05 00 00 00   	mov	qword ptr [rsp + 0x48], 0x5
ffffffff800031e8: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff800031ed: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff800031f2: e8 19 23 00 00       	call	0xffffffff80005510 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff800031f7: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff800031fc: 45 0f b7 66 62       	movzx	r12d, word ptr [r14 + 0x62]
ffffffff80003201: 41 8d 5c 24 01       	lea	ebx, [r12 + 0x1]
ffffffff80003206: 49 83 fc 06          	cmp	r12, 0x6
ffffffff8000320a: 0f 82 b8 01 00 00    	jb	0xffffffff800033c8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4f8>
ffffffff80003210: 49 8d 76 30          	lea	rsi, [r14 + 0x30]
ffffffff80003214: 49 8d 7e 38          	lea	rdi, [r14 + 0x38]
ffffffff80003218: 4a 8d 2c e5 d8 ff ff ff      	lea	rbp, [8*r12 - 0x28]
ffffffff80003220: 48 89 ea             	mov	rdx, rbp
ffffffff80003223: 4c 8b 3d 0e 92 03 00 	mov	r15, qword ptr [rip + 0x3920e] # 0xffffffff8003c438
ffffffff8000322a: 41 ff d7             	call	r15
ffffffff8000322d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80003232: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff80003236: 49 8d b6 98 00 00 00 	lea	rsi, [r14 + 0x98]
ffffffff8000323d: 49 8d be a0 00 00 00 	lea	rdi, [r14 + 0xa0]
ffffffff80003244: 48 89 ea             	mov	rdx, rbp
ffffffff80003247: 41 ff d7             	call	r15
ffffffff8000324a: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff8000324e: 4d 89 ae 98 00 00 00 	mov	qword ptr [r14 + 0x98], r13
ffffffff80003255: 66 41 89 5e 62       	mov	word ptr [r14 + 0x62], bx
ffffffff8000325a: e9 88 01 00 00       	jmp	0xffffffff800033e7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x517>
ffffffff8000325f: 49 83 c5 f9          	add	r13, -0x7
ffffffff80003263: b8 06 00 00 00       	mov	eax, 0x6
ffffffff80003268: 4c 89 64 24 38       	mov	qword ptr [rsp + 0x38], r12
ffffffff8000326d: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff80003272: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80003277: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff8000327c: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff80003281: e8 8a 22 00 00       	call	0xffffffff80005510 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff80003286: 4c 8b 74 24 60       	mov	r14, qword ptr [rsp + 0x60]
ffffffff8000328b: 41 0f b7 5e 62       	movzx	ebx, word ptr [r14 + 0x62]
ffffffff80003290: 4d 8d 65 01          	lea	r12, [r13 + 0x1]
ffffffff80003294: 49 89 df             	mov	r15, rbx
ffffffff80003297: 4d 29 ef             	sub	r15, r13
ffffffff8000329a: 76 3a                	jbe	0xffffffff800032d6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x406>
ffffffff8000329c: 49 8d 46 08          	lea	rax, [r14 + 0x8]
ffffffff800032a0: 4b 8d 34 ee          	lea	rsi, [r14 + 8*r13]
ffffffff800032a4: 48 83 c6 08          	add	rsi, 0x8
ffffffff800032a8: 4a 8d 3c e0          	lea	rdi, [rax + 8*r12]
ffffffff800032ac: 4a 8d 2c fd 00 00 00 00      	lea	rbp, [8*r15]
ffffffff800032b4: 48 89 ea             	mov	rdx, rbp
ffffffff800032b7: ff 15 7b 91 03 00    	call	qword ptr [rip + 0x3917b] # 0xffffffff8003c438
ffffffff800032bd: 4b 8d 34 e6          	lea	rsi, [r14 + 8*r12]
ffffffff800032c1: 48 83 c6 68          	add	rsi, 0x68
ffffffff800032c5: 4b 8d 3c ee          	lea	rdi, [r14 + 8*r13]
ffffffff800032c9: 48 83 c7 78          	add	rdi, 0x78
ffffffff800032cd: 48 89 ea             	mov	rdx, rbp
ffffffff800032d0: ff 15 62 91 03 00    	call	qword ptr [rip + 0x39162] # 0xffffffff8003c438
ffffffff800032d6: 8d 4b 01             	lea	ecx, [rbx + 0x1]
ffffffff800032d9: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800032de: 4b 89 44 ee 08       	mov	qword ptr [r14 + 8*r13 + 0x8], rax
ffffffff800032e3: 48 8d 43 02          	lea	rax, [rbx + 0x2]
ffffffff800032e7: 48 8b 54 24 10       	mov	rdx, qword ptr [rsp + 0x10]
ffffffff800032ec: 4b 89 54 ee 70       	mov	qword ptr [r14 + 8*r13 + 0x70], rdx
ffffffff800032f1: 66 41 89 4e 62       	mov	word ptr [r14 + 0x62], cx
ffffffff800032f6: 49 39 c4             	cmp	r12, rax
ffffffff800032f9: 0f 83 8d 00 00 00    	jae	0xffffffff8000338c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4bc>
ffffffff800032ff: 44 29 eb             	sub	ebx, r13d
ffffffff80003302: ff c3                	inc	ebx
ffffffff80003304: 83 e3 03             	and	ebx, 0x3
ffffffff80003307: 74 31                	je	0xffffffff8000333a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x46a>
ffffffff80003309: 4b 8d 14 ee          	lea	rdx, [r14 + 8*r13]
ffffffff8000330d: 48 83 c2 70          	add	rdx, 0x70
ffffffff80003311: 31 c9                	xor	ecx, ecx
ffffffff80003313: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80003320: 48 8b 34 ca          	mov	rsi, qword ptr [rdx + 8*rcx]
ffffffff80003324: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff80003327: 41 8d 3c 0c          	lea	edi, [r12 + rcx]
ffffffff8000332b: 66 89 7e 60          	mov	word ptr [rsi + 0x60], di
ffffffff8000332f: 48 ff c1             	inc	rcx
ffffffff80003332: 48 39 cb             	cmp	rbx, rcx
ffffffff80003335: 75 e9                	jne	0xffffffff80003320 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x450>
ffffffff80003337: 49 01 cc             	add	r12, rcx
ffffffff8000333a: 49 83 ff 03          	cmp	r15, 0x3
ffffffff8000333e: 72 4c                	jb	0xffffffff8000338c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4bc>
ffffffff80003340: 4b 8b 4c e6 68       	mov	rcx, qword ptr [r14 + 8*r12 + 0x68]
ffffffff80003345: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff80003348: 66 44 89 61 60       	mov	word ptr [rcx + 0x60], r12w
ffffffff8000334d: 4b 8b 4c e6 70       	mov	rcx, qword ptr [r14 + 8*r12 + 0x70]
ffffffff80003352: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff80003355: 41 8d 54 24 01       	lea	edx, [r12 + 0x1]
ffffffff8000335a: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff8000335e: 4b 8b 4c e6 78       	mov	rcx, qword ptr [r14 + 8*r12 + 0x78]
ffffffff80003363: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff80003366: 41 8d 54 24 02       	lea	edx, [r12 + 0x2]
ffffffff8000336b: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff8000336f: 4b 8b 8c e6 80 00 00 00      	mov	rcx, qword ptr [r14 + 8*r12 + 0x80]
ffffffff80003377: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff8000337a: 41 8d 54 24 03       	lea	edx, [r12 + 0x3]
ffffffff8000337f: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff80003383: 49 83 c4 04          	add	r12, 0x4
ffffffff80003387: 49 39 c4             	cmp	r12, rax
ffffffff8000338a: 75 b4                	jne	0xffffffff80003340 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x470>
ffffffff8000338c: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80003391: 4d 85 f6             	test	r14, r14
ffffffff80003394: 0f 84 27 03 00 00    	je	0xffffffff800036c1 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7f1>
ffffffff8000339a: 48 8b 6c 24 58       	mov	rbp, qword ptr [rsp + 0x58]
ffffffff8000339f: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff800033a4: 4c 8b 6c 24 68       	mov	r13, qword ptr [rsp + 0x68]
ffffffff800033a9: 48 8b 44 24 70       	mov	rax, qword ptr [rsp + 0x70]
ffffffff800033ae: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800033b3: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff800033b7: 4d 8b 26             	mov	r12, qword ptr [r14]
ffffffff800033ba: 4d 85 e4             	test	r12, r12
ffffffff800033bd: 0f 85 8d fd ff ff    	jne	0xffffffff80003150 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x280>
ffffffff800033c3: e9 eb 00 00 00       	jmp	0xffffffff800034b3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5e3>
ffffffff800033c8: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800033cd: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff800033d1: 4d 89 ae 98 00 00 00 	mov	qword ptr [r14 + 0x98], r13
ffffffff800033d8: 66 41 89 5e 62       	mov	word ptr [r14 + 0x62], bx
ffffffff800033dd: 41 83 fc 05          	cmp	r12d, 0x5
ffffffff800033e1: 0f 85 9d 00 00 00    	jne	0xffffffff80003484 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5b4>
ffffffff800033e7: 49 8d 4c 24 fb       	lea	rcx, [r12 - 0x5]
ffffffff800033ec: b8 06 00 00 00       	mov	eax, 0x6
ffffffff800033f1: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff800033f5: 72 68                	jb	0xffffffff8000345f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x58f>
ffffffff800033f7: 44 89 e1             	mov	ecx, r12d
ffffffff800033fa: 83 e1 fc             	and	ecx, -0x4
ffffffff800033fd: 48 83 c1 f8          	add	rcx, -0x8
ffffffff80003401: b8 16 00 00 00       	mov	eax, 0x16
ffffffff80003406: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80003410: 48 89 c2             	mov	rdx, rax
ffffffff80003413: 49 8b 44 c6 e8       	mov	rax, qword ptr [r14 + 8*rax - 0x18]
ffffffff80003418: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff8000341b: 8d 72 f0             	lea	esi, [rdx - 0x10]
ffffffff8000341e: 66 89 70 60          	mov	word ptr [rax + 0x60], si
ffffffff80003422: 49 8b 44 d6 f0       	mov	rax, qword ptr [r14 + 8*rdx - 0x10]
ffffffff80003427: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff8000342a: 8d 72 f1             	lea	esi, [rdx - 0xf]
ffffffff8000342d: 66 89 70 60          	mov	word ptr [rax + 0x60], si
ffffffff80003431: 49 8b 44 d6 f8       	mov	rax, qword ptr [r14 + 8*rdx - 0x8]
ffffffff80003436: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff80003439: 8d 72 f2             	lea	esi, [rdx - 0xe]
ffffffff8000343c: 66 89 70 60          	mov	word ptr [rax + 0x60], si
ffffffff80003440: 49 8b 04 d6          	mov	rax, qword ptr [r14 + 8*rdx]
ffffffff80003444: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff80003447: 8d 72 f3             	lea	esi, [rdx - 0xd]
ffffffff8000344a: 66 89 70 60          	mov	word ptr [rax + 0x60], si
ffffffff8000344e: 48 8d 42 04          	lea	rax, [rdx + 0x4]
ffffffff80003452: 48 83 c2 ea          	add	rdx, -0x16
ffffffff80003456: 48 39 ca             	cmp	rdx, rcx
ffffffff80003459: 75 b5                	jne	0xffffffff80003410 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x540>
ffffffff8000345b: 48 83 c0 f0          	add	rax, -0x10
ffffffff8000345f: 41 83 e4 03          	and	r12d, 0x3
ffffffff80003463: 74 1f                	je	0xffffffff80003484 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5b4>
ffffffff80003465: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80003470: 49 8b 4c c6 68       	mov	rcx, qword ptr [r14 + 8*rax + 0x68]
ffffffff80003475: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff80003478: 66 89 41 60          	mov	word ptr [rcx + 0x60], ax
ffffffff8000347c: 48 ff c0             	inc	rax
ffffffff8000347f: 49 ff cc             	dec	r12
ffffffff80003482: 75 ec                	jne	0xffffffff80003470 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5a0>
ffffffff80003484: 48 8b 6c 24 58       	mov	rbp, qword ptr [rsp + 0x58]
ffffffff80003489: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff8000348e: 4c 8b 6c 24 68       	mov	r13, qword ptr [rsp + 0x68]
ffffffff80003493: 48 8b 44 24 70       	mov	rax, qword ptr [rsp + 0x70]
ffffffff80003498: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8000349d: 4d 8b 26             	mov	r12, qword ptr [r14]
ffffffff800034a0: 4d 85 e4             	test	r12, r12
ffffffff800034a3: 0f 85 a7 fc ff ff    	jne	0xffffffff80003150 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x280>
ffffffff800034a9: eb 08                	jmp	0xffffffff800034b3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5e3>
ffffffff800034ab: 45 31 ed             	xor	r13d, r13d
ffffffff800034ae: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff800034b3: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff800034b8: 48 8b 18             	mov	rbx, qword ptr [rax]
ffffffff800034bb: 4c 8b 33             	mov	r14, qword ptr [rbx]
ffffffff800034be: 4d 85 f6             	test	r14, r14
ffffffff800034c1: 0f 84 96 02 00 00    	je	0xffffffff8000375d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x88d>
ffffffff800034c7: 48 89 cd             	mov	rbp, rcx
ffffffff800034ca: 4c 8b 7b 08          	mov	r15, qword ptr [rbx + 0x8]
ffffffff800034ce: 0f b6 05 0c 7d 02 00 	movzx	eax, byte ptr [rip + 0x27d0c] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800034d5: b1 01                	mov	cl, 0x1
ffffffff800034d7: 31 c0                	xor	eax, eax
ffffffff800034d9: f0                   	lock
ffffffff800034da: 0f b0 0d 1f 7b 02 00 	cmpxchg	byte ptr [rip + 0x27b1f], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800034e1: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff800034e6: 75 0a                	jne	0xffffffff800034f2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x622>
ffffffff800034e8: eb 1f                	jmp	0xffffffff80003509 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x639>
ffffffff800034ea: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800034f0: f3 90                	pause
ffffffff800034f2: 0f b6 05 07 7b 02 00 	movzx	eax, byte ptr [rip + 0x27b07] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800034f9: 84 c0                	test	al, al
ffffffff800034fb: 75 f3                	jne	0xffffffff800034f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x620>
ffffffff800034fd: 31 c0                	xor	eax, eax
ffffffff800034ff: f0                   	lock
ffffffff80003500: 0f b0 0d f9 7a 02 00 	cmpxchg	byte ptr [rip + 0x27af9], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003507: 75 e9                	jne	0xffffffff800034f2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x622>
ffffffff80003509: be 08 00 00 00       	mov	esi, 0x8
ffffffff8000350e: ba c8 00 00 00       	mov	edx, 0xc8
ffffffff80003513: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000351a: e8 31 95 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000351f: c6 05 da 7a 02 00 00 	mov	byte ptr [rip + 0x27ada], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003526: 48 85 c0             	test	rax, rax
ffffffff80003529: 0f 84 3a 02 00 00    	je	0xffffffff80003769 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x899>
ffffffff8000352f: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80003536: 66 c7 40 62 00 00    	mov	word ptr [rax + 0x62], 0x0
ffffffff8000353c: 4c 89 70 68          	mov	qword ptr [rax + 0x68], r14
ffffffff80003540: 49 8d 4f 01          	lea	rcx, [r15 + 0x1]
ffffffff80003544: 49 89 06             	mov	qword ptr [r14], rax
ffffffff80003547: 66 41 c7 46 60 00 00 	mov	word ptr [r14 + 0x60], 0x0
ffffffff8000354e: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff80003551: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff80003555: 4d 39 ef             	cmp	r15, r13
ffffffff80003558: 0f 85 c0 01 00 00    	jne	0xffffffff8000371e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x84e>
ffffffff8000355e: 0f b7 48 62          	movzx	ecx, word ptr [rax + 0x62]
ffffffff80003562: 48 83 f9 0b          	cmp	rcx, 0xb
ffffffff80003566: 0f 83 ca 01 00 00    	jae	0xffffffff80003736 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x866>
ffffffff8000356c: 8d 51 01             	lea	edx, [rcx + 0x1]
ffffffff8000356f: 66 89 50 62          	mov	word ptr [rax + 0x62], dx
ffffffff80003573: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff80003578: 48 89 74 c8 08       	mov	qword ptr [rax + 8*rcx + 0x8], rsi
ffffffff8000357d: 48 89 6c c8 70       	mov	qword ptr [rax + 8*rcx + 0x70], rbp
ffffffff80003582: 48 89 45 00          	mov	qword ptr [rbp], rax
ffffffff80003586: 66 89 55 60          	mov	word ptr [rbp + 0x60], dx
ffffffff8000358a: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff8000358f: e9 37 01 00 00       	jmp	0xffffffff800036cb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7fb>
ffffffff80003594: 41 8d 5e 01          	lea	ebx, [r14 + 0x1]
ffffffff80003598: 49 8d 6d 01          	lea	rbp, [r13 + 0x1]
ffffffff8000359c: 66 45 39 f5          	cmp	r13w, r14w
ffffffff800035a0: 73 56                	jae	0xffffffff800035f8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x728>
ffffffff800035a2: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff800035a7: 49 8d 7c 24 08       	lea	rdi, [r12 + 0x8]
ffffffff800035ac: 4b 8d 34 ec          	lea	rsi, [r12 + 8*r13]
ffffffff800035b0: 48 83 c6 08          	add	rsi, 0x8
ffffffff800035b4: 44 8d 3c ed 00 00 00 00      	lea	r15d, [8*rbp]
ffffffff800035bc: 4c 01 ff             	add	rdi, r15
ffffffff800035bf: 4c 89 f2             	mov	rdx, r14
ffffffff800035c2: 4c 29 ea             	sub	rdx, r13
ffffffff800035c5: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff800035c9: 48 89 54 24 30       	mov	qword ptr [rsp + 0x30], rdx
ffffffff800035ce: ff 15 64 8e 03 00    	call	qword ptr [rip + 0x38e64] # 0xffffffff8003c438
ffffffff800035d4: 4b 8d 34 3c          	lea	rsi, [r12 + r15]
ffffffff800035d8: 48 83 c6 68          	add	rsi, 0x68
ffffffff800035dc: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff800035e0: 4b 8d 3c ec          	lea	rdi, [r12 + 8*r13]
ffffffff800035e4: 48 83 c7 78          	add	rdi, 0x78
ffffffff800035e8: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff800035ed: ff 15 45 8e 03 00    	call	qword ptr [rip + 0x38e45] # 0xffffffff8003c438
ffffffff800035f3: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff800035f8: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800035fd: 4b 89 44 ec 08       	mov	qword ptr [r12 + 8*r13 + 0x8], rax
ffffffff80003602: 49 8d 46 02          	lea	rax, [r14 + 0x2]
ffffffff80003606: 4b 89 4c ec 70       	mov	qword ptr [r12 + 8*r13 + 0x70], rcx
ffffffff8000360b: 66 41 89 5c 24 62    	mov	word ptr [r12 + 0x62], bx
ffffffff80003611: 39 c5                	cmp	ebp, eax
ffffffff80003613: 0f 83 9c 00 00 00    	jae	0xffffffff800036b5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7e5>
ffffffff80003619: 44 89 f1             	mov	ecx, r14d
ffffffff8000361c: 44 29 e9             	sub	ecx, r13d
ffffffff8000361f: ff c1                	inc	ecx
ffffffff80003621: 4d 29 ee             	sub	r14, r13
ffffffff80003624: 83 e1 03             	and	ecx, 0x3
ffffffff80003627: 74 32                	je	0xffffffff8000365b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x78b>
ffffffff80003629: 4b 8d 34 ec          	lea	rsi, [r12 + 8*r13]
ffffffff8000362d: 48 83 c6 70          	add	rsi, 0x70
ffffffff80003631: 31 d2                	xor	edx, edx
ffffffff80003633: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80003640: 48 8b 3c d6          	mov	rdi, qword ptr [rsi + 8*rdx]
ffffffff80003644: 4c 89 27             	mov	qword ptr [rdi], r12
ffffffff80003647: 44 8d 04 2a          	lea	r8d, [rdx + rbp]
ffffffff8000364b: 66 44 89 47 60       	mov	word ptr [rdi + 0x60], r8w
ffffffff80003650: 48 ff c2             	inc	rdx
ffffffff80003653: 48 39 d1             	cmp	rcx, rdx
ffffffff80003656: 75 e8                	jne	0xffffffff80003640 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x770>
ffffffff80003658: 48 01 d5             	add	rbp, rdx
ffffffff8000365b: 49 83 fe 03          	cmp	r14, 0x3
ffffffff8000365f: 72 54                	jb	0xffffffff800036b5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7e5>
ffffffff80003661: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80003670: 49 8b 4c ec 68       	mov	rcx, qword ptr [r12 + 8*rbp + 0x68]
ffffffff80003675: 4c 89 21             	mov	qword ptr [rcx], r12
ffffffff80003678: 66 89 69 60          	mov	word ptr [rcx + 0x60], bp
ffffffff8000367c: 49 8b 4c ec 70       	mov	rcx, qword ptr [r12 + 8*rbp + 0x70]
ffffffff80003681: 4c 89 21             	mov	qword ptr [rcx], r12
ffffffff80003684: 8d 55 01             	lea	edx, [rbp + 0x1]
ffffffff80003687: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff8000368b: 49 8b 4c ec 78       	mov	rcx, qword ptr [r12 + 8*rbp + 0x78]
ffffffff80003690: 4c 89 21             	mov	qword ptr [rcx], r12
ffffffff80003693: 8d 55 02             	lea	edx, [rbp + 0x2]
ffffffff80003696: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff8000369a: 49 8b 8c ec 80 00 00 00      	mov	rcx, qword ptr [r12 + 8*rbp + 0x80]
ffffffff800036a2: 4c 89 21             	mov	qword ptr [rcx], r12
ffffffff800036a5: 8d 55 03             	lea	edx, [rbp + 0x3]
ffffffff800036a8: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff800036ac: 48 83 c5 04          	add	rbp, 0x4
ffffffff800036b0: 48 39 c5             	cmp	rbp, rax
ffffffff800036b3: 75 bb                	jne	0xffffffff80003670 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7a0>
ffffffff800036b5: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800036ba: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff800036bf: eb 0e                	jmp	0xffffffff800036cf <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7ff>
ffffffff800036c1: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800036c6: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff800036cb: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff800036cf: 4c 8b 74 24 20       	mov	r14, qword ptr [rsp + 0x20]
ffffffff800036d4: 4d 89 75 00          	mov	qword ptr [r13], r14
ffffffff800036d8: 4d 89 7d 08          	mov	qword ptr [r13 + 0x8], r15
ffffffff800036dc: 4d 89 65 10          	mov	qword ptr [r13 + 0x10], r12
ffffffff800036e0: 4c 89 e8             	mov	rax, r13
ffffffff800036e3: 48 83 c4 78          	add	rsp, 0x78
ffffffff800036e7: 5b                   	pop	rbx
ffffffff800036e8: 41 5c                	pop	r12
ffffffff800036ea: 41 5d                	pop	r13
ffffffff800036ec: 41 5e                	pop	r14
ffffffff800036ee: 41 5f                	pop	r15
ffffffff800036f0: 5d                   	pop	rbp
ffffffff800036f1: c3                   	ret
ffffffff800036f2: be 35 00 00 00       	mov	esi, 0x35
ffffffff800036f7: 48 c7 c7 00 27 02 80 	mov	rdi, -0x7ffdd900
ffffffff800036fe: 48 c7 c2 38 27 02 80 	mov	rdx, -0x7ffdd8c8
ffffffff80003705: e8 e6 d9 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000370a: be 0b 00 00 00       	mov	esi, 0xb
ffffffff8000370f: 48 89 d7             	mov	rdi, rdx
ffffffff80003712: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff80003719: e8 e2 d4 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000371e: be 30 00 00 00       	mov	esi, 0x30
ffffffff80003723: 48 c7 c7 88 25 02 80 	mov	rdi, -0x7ffdda78
ffffffff8000372a: 48 c7 c2 b8 25 02 80 	mov	rdx, -0x7ffdda48
ffffffff80003731: e8 ba d9 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80003736: be 20 00 00 00       	mov	esi, 0x20
ffffffff8000373b: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff80003742: 48 c7 c2 d0 25 02 80 	mov	rdx, -0x7ffdda30
ffffffff80003749: e8 a2 d9 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000374e: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80003753: be 68 00 00 00       	mov	esi, 0x68
ffffffff80003758: e8 55 a4 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000375d: 48 c7 c7 f0 23 02 80 	mov	rdi, -0x7ffddc10
ffffffff80003764: e8 d7 de 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80003769: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000376e: be c8 00 00 00       	mov	esi, 0xc8
ffffffff80003773: e8 3a a4 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80003778: cc                   	int3
ffffffff80003779: cc                   	int3
ffffffff8000377a: cc                   	int3
ffffffff8000377b: cc                   	int3
ffffffff8000377c: cc                   	int3
ffffffff8000377d: cc                   	int3
ffffffff8000377e: cc                   	int3
ffffffff8000377f: cc                   	int3

ffffffff80003780 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392>:
ffffffff80003780: 55                   	push	rbp
ffffffff80003781: 41 57                	push	r15
ffffffff80003783: 41 56                	push	r14
ffffffff80003785: 41 55                	push	r13
ffffffff80003787: 41 54                	push	r12
ffffffff80003789: 53                   	push	rbx
ffffffff8000378a: 48 81 ec a8 00 00 00 	sub	rsp, 0xa8
ffffffff80003791: 49 89 fe             	mov	r14, rdi
ffffffff80003794: 4c 8b 26             	mov	r12, qword ptr [rsi]
ffffffff80003797: 41 0f b7 9c 24 8e 00 00 00   	movzx	ebx, word ptr [r12 + 0x8e]
ffffffff800037a0: 48 83 fb 0b          	cmp	rbx, 0xb
ffffffff800037a4: 73 20                	jae	0xffffffff800037c6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x46>
ffffffff800037a6: 4c 8b 6e 10          	mov	r13, qword ptr [rsi + 0x10]
ffffffff800037aa: 4d 8d 7d 01          	lea	r15, [r13 + 0x1]
ffffffff800037ae: 4b 8d 04 ac          	lea	rax, [r12 + 4*r13]
ffffffff800037b2: 48 83 c0 60          	add	rax, 0x60
ffffffff800037b6: 49 39 df             	cmp	r15, rbx
ffffffff800037b9: 0f 86 e7 00 00 00    	jbe	0xffffffff800038a6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x126>
ffffffff800037bf: 89 10                	mov	dword ptr [rax], edx
ffffffff800037c1: e9 42 01 00 00       	jmp	0xffffffff80003908 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x188>
ffffffff800037c6: 4d 89 c7             	mov	r15, r8
ffffffff800037c9: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff800037ce: 48 8b 6e 08          	mov	rbp, qword ptr [rsi + 0x8]
ffffffff800037d2: 48 8b 5e 10          	mov	rbx, qword ptr [rsi + 0x10]
ffffffff800037d6: 0f b6 05 04 7a 02 00 	movzx	eax, byte ptr [rip + 0x27a04] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800037dd: b1 01                	mov	cl, 0x1
ffffffff800037df: 90                   	nop
ffffffff800037e0: 31 c0                	xor	eax, eax
ffffffff800037e2: f0                   	lock
ffffffff800037e3: 0f b0 0d 16 78 02 00 	cmpxchg	byte ptr [rip + 0x27816], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800037ea: 75 06                	jne	0xffffffff800037f2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x72>
ffffffff800037ec: eb 11                	jmp	0xffffffff800037ff <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7f>
ffffffff800037ee: 66 90                	nop
ffffffff800037f0: f3 90                	pause
ffffffff800037f2: 0f b6 05 07 78 02 00 	movzx	eax, byte ptr [rip + 0x27807] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800037f9: 84 c0                	test	al, al
ffffffff800037fb: 75 f3                	jne	0xffffffff800037f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x70>
ffffffff800037fd: eb e1                	jmp	0xffffffff800037e0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x60>
ffffffff800037ff: 89 54 24 24          	mov	dword ptr [rsp + 0x24], edx
ffffffff80003803: be 08 00 00 00       	mov	esi, 0x8
ffffffff80003808: ba 90 00 00 00       	mov	edx, 0x90
ffffffff8000380d: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80003814: e8 37 92 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80003819: c6 05 e0 77 02 00 00 	mov	byte ptr [rip + 0x277e0], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003820: 48 85 c0             	test	rax, rax
ffffffff80003823: 0f 84 a5 0a 00 00    	je	0xffffffff800042ce <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb4e>
ffffffff80003829: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80003830: 66 c7 80 8e 00 00 00 00 00   	mov	word ptr [rax + 0x8e], 0x0
ffffffff80003839: 48 83 fb 05          	cmp	rbx, 0x5
ffffffff8000383d: 4c 89 74 24 48       	mov	qword ptr [rsp + 0x48], r14
ffffffff80003842: 4c 89 bc 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], r15
ffffffff8000384a: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8000384f: 0f 83 cc 00 00 00    	jae	0xffffffff80003921 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x1a1>
ffffffff80003855: 45 0f b7 ac 24 8e 00 00 00   	movzx	r13d, word ptr [r12 + 0x8e]
ffffffff8000385e: 49 83 c5 fb          	add	r13, -0x5
ffffffff80003862: 66 44 89 a8 8e 00 00 00      	mov	word ptr [rax + 0x8e], r13w
ffffffff8000386a: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff8000386e: 0f 83 02 0a 00 00    	jae	0xffffffff80004276 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaf6>
ffffffff80003874: 49 8d 7c 24 28       	lea	rdi, [r12 + 0x28]
ffffffff80003879: 49 8d 4c 24 70       	lea	rcx, [r12 + 0x70]
ffffffff8000387e: 66 c7 44 24 0e 04 00 	mov	word ptr [rsp + 0xe], 0x4
ffffffff80003885: ba 30 00 00 00       	mov	edx, 0x30
ffffffff8000388a: 48 89 54 24 50       	mov	qword ptr [rsp + 0x50], rdx
ffffffff8000388f: be 74 00 00 00       	mov	esi, 0x74
ffffffff80003894: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff80003899: 4d 89 e7             	mov	r15, r12
ffffffff8000389c: 48 89 5c 24 38       	mov	qword ptr [rsp + 0x38], rbx
ffffffff800038a1: e9 e4 02 00 00       	jmp	0xffffffff80003b8a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x40a>
ffffffff800038a6: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff800038ab: 49 8d 4c 24 60       	lea	rcx, [r12 + 0x60]
ffffffff800038b0: 4a 8d 3c b9          	lea	rdi, [rcx + 4*r15]
ffffffff800038b4: 4c 89 74 24 48       	mov	qword ptr [rsp + 0x48], r14
ffffffff800038b9: 49 89 de             	mov	r14, rbx
ffffffff800038bc: 4d 29 ee             	sub	r14, r13
ffffffff800038bf: 89 d5                	mov	ebp, edx
ffffffff800038c1: 4a 8d 14 b5 00 00 00 00      	lea	rdx, [4*r14]
ffffffff800038c9: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff800038ce: 48 89 c6             	mov	rsi, rax
ffffffff800038d1: ff 15 61 8b 03 00    	call	qword ptr [rip + 0x38b61] # 0xffffffff8003c438
ffffffff800038d7: 43 89 6c ac 60       	mov	dword ptr [r12 + 4*r13 + 0x60], ebp
ffffffff800038dc: 4b 8d 34 ec          	lea	rsi, [r12 + 8*r13]
ffffffff800038e0: 48 83 c6 08          	add	rsi, 0x8
ffffffff800038e4: 4b 8d 3c fc          	lea	rdi, [r12 + 8*r15]
ffffffff800038e8: 48 83 c7 08          	add	rdi, 0x8
ffffffff800038ec: 49 c1 e6 03          	shl	r14, 0x3
ffffffff800038f0: 4c 89 f2             	mov	rdx, r14
ffffffff800038f3: 4c 8b 74 24 48       	mov	r14, qword ptr [rsp + 0x48]
ffffffff800038f8: ff 15 3a 8b 03 00    	call	qword ptr [rip + 0x38b3a] # 0xffffffff8003c438
ffffffff800038fe: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff80003903: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff80003908: ff c3                	inc	ebx
ffffffff8000390a: 4b 89 4c ec 08       	mov	qword ptr [r12 + 8*r13 + 0x8], rcx
ffffffff8000390f: 66 41 89 9c 24 8e 00 00 00   	mov	word ptr [r12 + 0x8e], bx
ffffffff80003918: 48 8b 6e 08          	mov	rbp, qword ptr [rsi + 0x8]
ffffffff8000391c: e9 1d 09 00 00       	jmp	0xffffffff8000423e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xabe>
ffffffff80003921: 74 57                	je	0xffffffff8000397a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x1fa>
ffffffff80003923: 48 83 fb 06          	cmp	rbx, 0x6
ffffffff80003927: 0f 85 09 02 00 00    	jne	0xffffffff80003b36 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x3b6>
ffffffff8000392d: 45 0f b7 ac 24 8e 00 00 00   	movzx	r13d, word ptr [r12 + 0x8e]
ffffffff80003936: 49 83 c5 fa          	add	r13, -0x6
ffffffff8000393a: 66 44 89 a8 8e 00 00 00      	mov	word ptr [rax + 0x8e], r13w
ffffffff80003942: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff80003946: 0f 83 2a 09 00 00    	jae	0xffffffff80004276 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaf6>
ffffffff8000394c: 49 8d 7c 24 30       	lea	rdi, [r12 + 0x30]
ffffffff80003951: 49 8d 4c 24 74       	lea	rcx, [r12 + 0x74]
ffffffff80003956: 66 c7 44 24 0e 05 00 	mov	word ptr [rsp + 0xe], 0x5
ffffffff8000395d: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80003962: 48 89 54 24 50       	mov	qword ptr [rsp + 0x50], rdx
ffffffff80003967: be 78 00 00 00       	mov	esi, 0x78
ffffffff8000396c: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff80003975: e9 04 02 00 00       	jmp	0xffffffff80003b7e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x3fe>
ffffffff8000397a: 45 0f b7 b4 24 8e 00 00 00   	movzx	r14d, word ptr [r12 + 0x8e]
ffffffff80003983: 49 83 c6 fa          	add	r14, -0x6
ffffffff80003987: 66 44 89 b0 8e 00 00 00      	mov	word ptr [rax + 0x8e], r14w
ffffffff8000398f: 49 83 fe 0c          	cmp	r14, 0xc
ffffffff80003993: 0f 83 21 09 00 00    	jae	0xffffffff800042ba <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb3a>
ffffffff80003999: 49 8b 4c 24 30       	mov	rcx, qword ptr [r12 + 0x30]
ffffffff8000399e: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff800039a3: 41 8b 4c 24 74       	mov	ecx, dword ptr [r12 + 0x74]
ffffffff800039a8: 89 4c 24 10          	mov	dword ptr [rsp + 0x10], ecx
ffffffff800039ac: 49 89 c7             	mov	r15, rax
ffffffff800039af: 48 8d 78 60          	lea	rdi, [rax + 0x60]
ffffffff800039b3: 49 8d 74 24 78       	lea	rsi, [r12 + 0x78]
ffffffff800039b8: 4a 8d 14 b5 00 00 00 00      	lea	rdx, [4*r14]
ffffffff800039c0: 48 8b 1d 69 8a 03 00 	mov	rbx, qword ptr [rip + 0x38a69] # 0xffffffff8003c430
ffffffff800039c7: ff d3                	call	rbx
ffffffff800039c9: 49 8d 74 24 38       	lea	rsi, [r12 + 0x38]
ffffffff800039ce: 4c 89 ff             	mov	rdi, r15
ffffffff800039d1: 48 83 c7 08          	add	rdi, 0x8
ffffffff800039d5: 49 c1 e6 03          	shl	r14, 0x3
ffffffff800039d9: 4c 89 f2             	mov	rdx, r14
ffffffff800039dc: ff d3                	call	rbx
ffffffff800039de: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff800039e2: 41 89 44 24 74       	mov	dword ptr [r12 + 0x74], eax
ffffffff800039e7: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff800039ec: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff800039f1: 66 41 c7 84 24 8e 00 00 00 06 00     	mov	word ptr [r12 + 0x8e], 0x6
ffffffff800039fc: b8 05 00 00 00       	mov	eax, 0x5
ffffffff80003a01: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80003a06: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff80003a0b: 4c 89 64 24 28       	mov	qword ptr [rsp + 0x28], r12
ffffffff80003a10: 4d 8b 2c 24          	mov	r13, qword ptr [r12]
ffffffff80003a14: 45 31 f6             	xor	r14d, r14d
ffffffff80003a17: 4d 85 ed             	test	r13, r13
ffffffff80003a1a: 0f 85 49 02 00 00    	jne	0xffffffff80003c69 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4e9>
ffffffff80003a20: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff80003a25: 48 8b 84 24 a0 00 00 00      	mov	rax, qword ptr [rsp + 0xa0]
ffffffff80003a2d: 48 8b 18             	mov	rbx, qword ptr [rax]
ffffffff80003a30: 4c 8b 3b             	mov	r15, qword ptr [rbx]
ffffffff80003a33: 4d 85 ff             	test	r15, r15
ffffffff80003a36: 0f 84 a1 08 00 00    	je	0xffffffff800042dd <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb5d>
ffffffff80003a3c: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff80003a41: 4c 8b 63 08          	mov	r12, qword ptr [rbx + 0x8]
ffffffff80003a45: 0f b6 05 95 77 02 00 	movzx	eax, byte ptr [rip + 0x27795] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80003a4c: b1 01                	mov	cl, 0x1
ffffffff80003a4e: 31 c0                	xor	eax, eax
ffffffff80003a50: f0                   	lock
ffffffff80003a51: 0f b0 0d a8 75 02 00 	cmpxchg	byte ptr [rip + 0x275a8], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003a58: 4c 8b 6c 24 38       	mov	r13, qword ptr [rsp + 0x38]
ffffffff80003a5d: 48 8b 6c 24 40       	mov	rbp, qword ptr [rsp + 0x40]
ffffffff80003a62: 75 0e                	jne	0xffffffff80003a72 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f2>
ffffffff80003a64: eb 23                	jmp	0xffffffff80003a89 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x309>
ffffffff80003a66: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80003a70: f3 90                	pause
ffffffff80003a72: 0f b6 05 87 75 02 00 	movzx	eax, byte ptr [rip + 0x27587] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003a79: 84 c0                	test	al, al
ffffffff80003a7b: 75 f3                	jne	0xffffffff80003a70 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f0>
ffffffff80003a7d: 31 c0                	xor	eax, eax
ffffffff80003a7f: f0                   	lock
ffffffff80003a80: 0f b0 0d 79 75 02 00 	cmpxchg	byte ptr [rip + 0x27579], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003a87: 75 e9                	jne	0xffffffff80003a72 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f2>
ffffffff80003a89: be 08 00 00 00       	mov	esi, 0x8
ffffffff80003a8e: ba f0 00 00 00       	mov	edx, 0xf0
ffffffff80003a93: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80003a9a: e8 b1 8f 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80003a9f: c6 05 5a 75 02 00 00 	mov	byte ptr [rip + 0x2755a], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80003aa6: 48 85 c0             	test	rax, rax
ffffffff80003aa9: 0f 84 3a 08 00 00    	je	0xffffffff800042e9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb69>
ffffffff80003aaf: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80003ab6: 66 c7 80 8e 00 00 00 00 00   	mov	word ptr [rax + 0x8e], 0x0
ffffffff80003abf: 4c 89 b8 90 00 00 00 	mov	qword ptr [rax + 0x90], r15
ffffffff80003ac6: 49 8d 4c 24 01       	lea	rcx, [r12 + 0x1]
ffffffff80003acb: 49 89 07             	mov	qword ptr [r15], rax
ffffffff80003ace: 66 41 c7 87 8c 00 00 00 00 00	mov	word ptr [r15 + 0x8c], 0x0
ffffffff80003ad8: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff80003adb: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff80003adf: 4d 39 f4             	cmp	r12, r14
ffffffff80003ae2: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80003ae7: 0f 85 9d 07 00 00    	jne	0xffffffff8000428a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb0a>
ffffffff80003aed: 0f b7 88 8e 00 00 00 	movzx	ecx, word ptr [rax + 0x8e]
ffffffff80003af4: 48 83 f9 0b          	cmp	rcx, 0xb
ffffffff80003af8: 0f 83 a4 07 00 00    	jae	0xffffffff800042a2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb22>
ffffffff80003afe: 8d 51 01             	lea	edx, [rcx + 0x1]
ffffffff80003b01: 66 89 90 8e 00 00 00 	mov	word ptr [rax + 0x8e], dx
ffffffff80003b08: 8b 7c 24 10          	mov	edi, dword ptr [rsp + 0x10]
ffffffff80003b0c: 89 7c 88 60          	mov	dword ptr [rax + 4*rcx + 0x60], edi
ffffffff80003b10: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff80003b15: 48 89 7c c8 08       	mov	qword ptr [rax + 8*rcx + 0x8], rdi
ffffffff80003b1a: 48 89 b4 c8 98 00 00 00      	mov	qword ptr [rax + 8*rcx + 0x98], rsi
ffffffff80003b22: 48 89 06             	mov	qword ptr [rsi], rax
ffffffff80003b25: 66 89 96 8c 00 00 00 	mov	word ptr [rsi + 0x8c], dx
ffffffff80003b2c: 4c 8b 74 24 48       	mov	r14, qword ptr [rsp + 0x48]
ffffffff80003b31: e9 03 07 00 00       	jmp	0xffffffff80004239 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xab9>
ffffffff80003b36: 45 0f b7 ac 24 8e 00 00 00   	movzx	r13d, word ptr [r12 + 0x8e]
ffffffff80003b3f: 49 83 c5 f9          	add	r13, -0x7
ffffffff80003b43: 66 44 89 a8 8e 00 00 00      	mov	word ptr [rax + 0x8e], r13w
ffffffff80003b4b: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff80003b4f: 0f 83 21 07 00 00    	jae	0xffffffff80004276 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaf6>
ffffffff80003b55: 49 8d 7c 24 38       	lea	rdi, [r12 + 0x38]
ffffffff80003b5a: 49 8d 4c 24 78       	lea	rcx, [r12 + 0x78]
ffffffff80003b5f: 48 83 c3 f9          	add	rbx, -0x7
ffffffff80003b63: 48 89 5c 24 38       	mov	qword ptr [rsp + 0x38], rbx
ffffffff80003b68: 66 c7 44 24 0e 06 00 	mov	word ptr [rsp + 0xe], 0x6
ffffffff80003b6f: ba 40 00 00 00       	mov	edx, 0x40
ffffffff80003b74: 48 89 54 24 50       	mov	qword ptr [rsp + 0x50], rdx
ffffffff80003b79: be 7c 00 00 00       	mov	esi, 0x7c
ffffffff80003b7e: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff80003b87: 49 89 c7             	mov	r15, rax
ffffffff80003b8a: 8b 09                	mov	ecx, dword ptr [rcx]
ffffffff80003b8c: 89 4c 24 10          	mov	dword ptr [rsp + 0x10], ecx
ffffffff80003b90: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff80003b93: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80003b98: 48 89 c3             	mov	rbx, rax
ffffffff80003b9b: 48 8d 78 60          	lea	rdi, [rax + 0x60]
ffffffff80003b9f: 4c 01 e6             	add	rsi, r12
ffffffff80003ba2: 4a 8d 14 ad 00 00 00 00      	lea	rdx, [4*r13]
ffffffff80003baa: 4c 8b 35 7f 88 03 00 	mov	r14, qword ptr [rip + 0x3887f] # 0xffffffff8003c430
ffffffff80003bb1: 41 ff d6             	call	r14
ffffffff80003bb4: 48 8b 74 24 50       	mov	rsi, qword ptr [rsp + 0x50]
ffffffff80003bb9: 4c 01 e6             	add	rsi, r12
ffffffff80003bbc: 48 83 c3 08          	add	rbx, 0x8
ffffffff80003bc0: 49 c1 e5 03          	shl	r13, 0x3
ffffffff80003bc4: 48 89 df             	mov	rdi, rbx
ffffffff80003bc7: 4c 89 ea             	mov	rdx, r13
ffffffff80003bca: 41 ff d6             	call	r14
ffffffff80003bcd: 0f b7 44 24 0e       	movzx	eax, word ptr [rsp + 0xe]
ffffffff80003bd2: 66 41 89 84 24 8e 00 00 00   	mov	word ptr [r12 + 0x8e], ax
ffffffff80003bdb: 41 0f b7 9f 8e 00 00 00      	movzx	ebx, word ptr [r15 + 0x8e]
ffffffff80003be3: 49 89 de             	mov	r14, rbx
ffffffff80003be6: 4c 8b 6c 24 38       	mov	r13, qword ptr [rsp + 0x38]
ffffffff80003beb: 4b 8d 34 af          	lea	rsi, [r15 + 4*r13]
ffffffff80003bef: 48 83 c6 60          	add	rsi, 0x60
ffffffff80003bf3: 4d 29 ee             	sub	r14, r13
ffffffff80003bf6: 76 42                	jbe	0xffffffff80003c3a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4ba>
ffffffff80003bf8: 49 8d 47 60          	lea	rax, [r15 + 0x60]
ffffffff80003bfc: 4a 8d 3c a8          	lea	rdi, [rax + 4*r13]
ffffffff80003c00: 48 83 c7 04          	add	rdi, 0x4
ffffffff80003c04: 4a 8d 14 b5 00 00 00 00      	lea	rdx, [4*r14]
ffffffff80003c0c: ff 15 26 88 03 00    	call	qword ptr [rip + 0x38826] # 0xffffffff8003c438
ffffffff80003c12: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80003c16: 43 89 44 af 60       	mov	dword ptr [r15 + 4*r13 + 0x60], eax
ffffffff80003c1b: 4b 8d 34 ef          	lea	rsi, [r15 + 8*r13]
ffffffff80003c1f: 48 83 c6 08          	add	rsi, 0x8
ffffffff80003c23: 4b 8d 3c ef          	lea	rdi, [r15 + 8*r13]
ffffffff80003c27: 48 83 c7 10          	add	rdi, 0x10
ffffffff80003c2b: 49 c1 e6 03          	shl	r14, 0x3
ffffffff80003c2f: 4c 89 f2             	mov	rdx, r14
ffffffff80003c32: ff 15 00 88 03 00    	call	qword ptr [rip + 0x38800] # 0xffffffff8003c438
ffffffff80003c38: eb 06                	jmp	0xffffffff80003c40 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4c0>
ffffffff80003c3a: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80003c3e: 89 06                	mov	dword ptr [rsi], eax
ffffffff80003c40: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff80003c45: ff c3                	inc	ebx
ffffffff80003c47: 4b 89 44 ef 08       	mov	qword ptr [r15 + 8*r13 + 0x8], rax
ffffffff80003c4c: 4c 89 7c 24 28       	mov	qword ptr [rsp + 0x28], r15
ffffffff80003c51: 66 41 89 9f 8e 00 00 00      	mov	word ptr [r15 + 0x8e], bx
ffffffff80003c59: 4d 8b 2c 24          	mov	r13, qword ptr [r12]
ffffffff80003c5d: 45 31 f6             	xor	r14d, r14d
ffffffff80003c60: 4d 85 ed             	test	r13, r13
ffffffff80003c63: 0f 84 b7 fd ff ff    	je	0xffffffff80003a20 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2a0>
ffffffff80003c69: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff80003c6e: eb 48                	jmp	0xffffffff80003cb8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x538>
ffffffff80003c70: 4c 8b 64 24 70       	mov	r12, qword ptr [rsp + 0x70]
ffffffff80003c75: 4d 85 e4             	test	r12, r12
ffffffff80003c78: 0f 84 ac 05 00 00    	je	0xffffffff8000422a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaaa>
ffffffff80003c7e: 48 8b 6c 24 78       	mov	rbp, qword ptr [rsp + 0x78]
ffffffff80003c83: 48 8b 8c 24 80 00 00 00      	mov	rcx, qword ptr [rsp + 0x80]
ffffffff80003c8b: 4c 8b b4 24 88 00 00 00      	mov	r14, qword ptr [rsp + 0x88]
ffffffff80003c93: 8b 84 24 90 00 00 00 	mov	eax, dword ptr [rsp + 0x90]
ffffffff80003c9a: 89 44 24 10          	mov	dword ptr [rsp + 0x10], eax
ffffffff80003c9e: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff80003ca6: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80003cab: 4d 8b 2c 24          	mov	r13, qword ptr [r12]
ffffffff80003caf: 4d 85 ed             	test	r13, r13
ffffffff80003cb2: 0f 84 6d fd ff ff    	je	0xffffffff80003a25 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2a5>
ffffffff80003cb8: 4c 39 f5             	cmp	rbp, r14
ffffffff80003cbb: 0f 85 9d 05 00 00    	jne	0xffffffff8000425e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xade>
ffffffff80003cc1: 45 0f b7 a4 24 8c 00 00 00   	movzx	r12d, word ptr [r12 + 0x8c]
ffffffff80003cca: 45 0f b7 b5 8e 00 00 00      	movzx	r14d, word ptr [r13 + 0x8e]
ffffffff80003cd2: 49 83 fe 0b          	cmp	r14, 0xb
ffffffff80003cd6: 0f 82 b3 03 00 00    	jb	0xffffffff8000408f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x90f>
ffffffff80003cdc: 48 ff c5             	inc	rbp
ffffffff80003cdf: 66 41 83 fc 05       	cmp	r12w, 0x5
ffffffff80003ce4: 73 3a                	jae	0xffffffff80003d20 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x5a0>
ffffffff80003ce6: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff80003ceb: 4c 89 6c 24 58       	mov	qword ptr [rsp + 0x58], r13
ffffffff80003cf0: 48 89 6c 24 60       	mov	qword ptr [rsp + 0x60], rbp
ffffffff80003cf5: 48 c7 44 24 68 04 00 00 00   	mov	qword ptr [rsp + 0x68], 0x4
ffffffff80003cfe: 48 8d 7c 24 70       	lea	rdi, [rsp + 0x70]
ffffffff80003d03: 48 8d 74 24 58       	lea	rsi, [rsp + 0x58]
ffffffff80003d08: e8 73 13 00 00       	call	0xffffffff80005080 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80003d0d: 4c 8b 6c 24 70       	mov	r13, qword ptr [rsp + 0x70]
ffffffff80003d12: e9 0b 01 00 00       	jmp	0xffffffff80003e22 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x6a2>
ffffffff80003d17: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80003d20: 49 83 fc 05          	cmp	r12, 0x5
ffffffff80003d24: 74 1c                	je	0xffffffff80003d42 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x5c2>
ffffffff80003d26: 41 83 fc 06          	cmp	r12d, 0x6
ffffffff80003d2a: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff80003d2f: 0f 85 be 00 00 00    	jne	0xffffffff80003df3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x673>
ffffffff80003d35: b8 05 00 00 00       	mov	eax, 0x5
ffffffff80003d3a: 45 31 e4             	xor	r12d, r12d
ffffffff80003d3d: e9 ba 00 00 00       	jmp	0xffffffff80003dfc <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x67c>
ffffffff80003d42: 49 89 cf             	mov	r15, rcx
ffffffff80003d45: 4c 89 6c 24 58       	mov	qword ptr [rsp + 0x58], r13
ffffffff80003d4a: 48 89 6c 24 60       	mov	qword ptr [rsp + 0x60], rbp
ffffffff80003d4f: 48 c7 44 24 68 05 00 00 00   	mov	qword ptr [rsp + 0x68], 0x5
ffffffff80003d58: 48 8d 7c 24 70       	lea	rdi, [rsp + 0x70]
ffffffff80003d5d: 48 8d 74 24 58       	lea	rsi, [rsp + 0x58]
ffffffff80003d62: e8 19 13 00 00       	call	0xffffffff80005080 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80003d67: 4c 8b 64 24 70       	mov	r12, qword ptr [rsp + 0x70]
ffffffff80003d6c: 45 0f b7 ac 24 8e 00 00 00   	movzx	r13d, word ptr [r12 + 0x8e]
ffffffff80003d75: 41 8d 5d 01          	lea	ebx, [r13 + 0x1]
ffffffff80003d79: 49 83 fd 06          	cmp	r13, 0x6
ffffffff80003d7d: 0f 82 2c 02 00 00    	jb	0xffffffff80003faf <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x82f>
ffffffff80003d83: 49 8d 74 24 74       	lea	rsi, [r12 + 0x74]
ffffffff80003d88: 49 8d 7c 24 78       	lea	rdi, [r12 + 0x78]
ffffffff80003d8d: 4a 8d 14 ad ec ff ff ff      	lea	rdx, [4*r13 - 0x14]
ffffffff80003d95: 48 8b 2d 9c 86 03 00 	mov	rbp, qword ptr [rip + 0x3869c] # 0xffffffff8003c438
ffffffff80003d9c: ff d5                	call	rbp
ffffffff80003d9e: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff80003da2: 41 89 44 24 74       	mov	dword ptr [r12 + 0x74], eax
ffffffff80003da7: 49 8d 74 24 30       	lea	rsi, [r12 + 0x30]
ffffffff80003dac: 49 8d 7c 24 38       	lea	rdi, [r12 + 0x38]
ffffffff80003db1: 4e 8d 34 ed d8 ff ff ff      	lea	r14, [8*r13 - 0x28]
ffffffff80003db9: 4c 89 f2             	mov	rdx, r14
ffffffff80003dbc: ff d5                	call	rbp
ffffffff80003dbe: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003dc3: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff80003dc8: 49 8d b4 24 c0 00 00 00      	lea	rsi, [r12 + 0xc0]
ffffffff80003dd0: 49 8d bc 24 c8 00 00 00      	lea	rdi, [r12 + 0xc8]
ffffffff80003dd8: 4c 89 f2             	mov	rdx, r14
ffffffff80003ddb: ff d5                	call	rbp
ffffffff80003ddd: 4d 89 bc 24 c0 00 00 00      	mov	qword ptr [r12 + 0xc0], r15
ffffffff80003de5: 66 41 89 9c 24 8e 00 00 00   	mov	word ptr [r12 + 0x8e], bx
ffffffff80003dee: e9 ea 01 00 00       	jmp	0xffffffff80003fdd <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x85d>
ffffffff80003df3: 49 83 c4 f9          	add	r12, -0x7
ffffffff80003df7: b8 06 00 00 00       	mov	eax, 0x6
ffffffff80003dfc: 4c 89 6c 24 58       	mov	qword ptr [rsp + 0x58], r13
ffffffff80003e01: 48 89 6c 24 60       	mov	qword ptr [rsp + 0x60], rbp
ffffffff80003e06: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff80003e0b: 48 8d 7c 24 70       	lea	rdi, [rsp + 0x70]
ffffffff80003e10: 48 8d 74 24 58       	lea	rsi, [rsp + 0x58]
ffffffff80003e15: e8 66 12 00 00       	call	0xffffffff80005080 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80003e1a: 4c 8b ac 24 80 00 00 00      	mov	r13, qword ptr [rsp + 0x80]
ffffffff80003e22: 45 0f b7 bd 8e 00 00 00      	movzx	r15d, word ptr [r13 + 0x8e]
ffffffff80003e2a: 49 8d 6c 24 01       	lea	rbp, [r12 + 0x1]
ffffffff80003e2f: 4c 89 fb             	mov	rbx, r15
ffffffff80003e32: 4c 29 e3             	sub	rbx, r12
ffffffff80003e35: 0f 86 85 00 00 00    	jbe	0xffffffff80003ec0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x740>
ffffffff80003e3b: 49 8d 45 60          	lea	rax, [r13 + 0x60]
ffffffff80003e3f: 4a 8d 34 a5 60 00 00 00      	lea	rsi, [4*r12 + 0x60]
ffffffff80003e47: 4c 01 ee             	add	rsi, r13
ffffffff80003e4a: 48 8d 3c a8          	lea	rdi, [rax + 4*rbp]
ffffffff80003e4e: 48 8d 14 9d 00 00 00 00      	lea	rdx, [4*rbx]
ffffffff80003e56: 48 8b 05 db 85 03 00 	mov	rax, qword ptr [rip + 0x385db] # 0xffffffff8003c438
ffffffff80003e5d: ff d0                	call	rax
ffffffff80003e5f: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff80003e63: 43 89 44 a5 60       	mov	dword ptr [r13 + 4*r12 + 0x60], eax
ffffffff80003e68: 4a 8d 34 e5 08 00 00 00      	lea	rsi, [8*r12 + 0x8]
ffffffff80003e70: 4c 01 ee             	add	rsi, r13
ffffffff80003e73: 48 8d 3c ed 08 00 00 00      	lea	rdi, [8*rbp + 0x8]
ffffffff80003e7b: 4c 01 ef             	add	rdi, r13
ffffffff80003e7e: 4c 8d 34 dd 00 00 00 00      	lea	r14, [8*rbx]
ffffffff80003e86: 4c 89 f2             	mov	rdx, r14
ffffffff80003e89: ff 15 a9 85 03 00    	call	qword ptr [rip + 0x385a9] # 0xffffffff8003c438
ffffffff80003e8f: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003e94: 4b 89 44 e5 08       	mov	qword ptr [r13 + 8*r12 + 0x8], rax
ffffffff80003e99: 48 8d 34 ed 90 00 00 00      	lea	rsi, [8*rbp + 0x90]
ffffffff80003ea1: 4c 01 ee             	add	rsi, r13
ffffffff80003ea4: 4a 8d 3c e5 a0 00 00 00      	lea	rdi, [8*r12 + 0xa0]
ffffffff80003eac: 4c 01 ef             	add	rdi, r13
ffffffff80003eaf: 4c 89 f2             	mov	rdx, r14
ffffffff80003eb2: ff 15 80 85 03 00    	call	qword ptr [rip + 0x38580] # 0xffffffff8003c438
ffffffff80003eb8: eb 19                	jmp	0xffffffff80003ed3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x753>
ffffffff80003eba: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80003ec0: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff80003ec4: 43 89 44 a5 60       	mov	dword ptr [r13 + 4*r12 + 0x60], eax
ffffffff80003ec9: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003ece: 4b 89 44 e5 08       	mov	qword ptr [r13 + 8*r12 + 0x8], rax
ffffffff80003ed3: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff80003ed8: 41 8d 4f 01          	lea	ecx, [r15 + 0x1]
ffffffff80003edc: 49 8d 47 02          	lea	rax, [r15 + 0x2]
ffffffff80003ee0: 4b 89 94 e5 98 00 00 00      	mov	qword ptr [r13 + 8*r12 + 0x98], rdx
ffffffff80003ee8: 66 41 89 8d 8e 00 00 00      	mov	word ptr [r13 + 0x8e], cx
ffffffff80003ef0: 48 39 c5             	cmp	rbp, rax
ffffffff80003ef3: 0f 83 77 fd ff ff    	jae	0xffffffff80003c70 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4f0>
ffffffff80003ef9: 45 29 e7             	sub	r15d, r12d
ffffffff80003efc: 41 ff c7             	inc	r15d
ffffffff80003eff: 41 83 e7 03          	and	r15d, 0x3
ffffffff80003f03: 74 37                	je	0xffffffff80003f3c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7bc>
ffffffff80003f05: 4a 8d 14 e5 98 00 00 00      	lea	rdx, [8*r12 + 0x98]
ffffffff80003f0d: 4c 01 ea             	add	rdx, r13
ffffffff80003f10: 31 c9                	xor	ecx, ecx
ffffffff80003f12: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80003f20: 48 8b 34 ca          	mov	rsi, qword ptr [rdx + 8*rcx]
ffffffff80003f24: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80003f27: 8d 3c 29             	lea	edi, [rcx + rbp]
ffffffff80003f2a: 66 89 be 8c 00 00 00 	mov	word ptr [rsi + 0x8c], di
ffffffff80003f31: 48 ff c1             	inc	rcx
ffffffff80003f34: 49 39 cf             	cmp	r15, rcx
ffffffff80003f37: 75 e7                	jne	0xffffffff80003f20 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7a0>
ffffffff80003f39: 48 01 cd             	add	rbp, rcx
ffffffff80003f3c: 48 83 fb 03          	cmp	rbx, 0x3
ffffffff80003f40: 0f 82 2a fd ff ff    	jb	0xffffffff80003c70 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4f0>
ffffffff80003f46: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80003f50: 49 8b 8c ed 90 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0x90]
ffffffff80003f58: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80003f5b: 66 89 a9 8c 00 00 00 	mov	word ptr [rcx + 0x8c], bp
ffffffff80003f62: 49 8b 8c ed 98 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0x98]
ffffffff80003f6a: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80003f6d: 8d 55 01             	lea	edx, [rbp + 0x1]
ffffffff80003f70: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff80003f77: 49 8b 8c ed a0 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0xa0]
ffffffff80003f7f: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80003f82: 8d 55 02             	lea	edx, [rbp + 0x2]
ffffffff80003f85: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff80003f8c: 49 8b 8c ed a8 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0xa8]
ffffffff80003f94: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80003f97: 8d 55 03             	lea	edx, [rbp + 0x3]
ffffffff80003f9a: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff80003fa1: 48 83 c5 04          	add	rbp, 0x4
ffffffff80003fa5: 48 39 c5             	cmp	rbp, rax
ffffffff80003fa8: 75 a6                	jne	0xffffffff80003f50 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7d0>
ffffffff80003faa: e9 c1 fc ff ff       	jmp	0xffffffff80003c70 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4f0>
ffffffff80003faf: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff80003fb3: 41 89 44 24 74       	mov	dword ptr [r12 + 0x74], eax
ffffffff80003fb8: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80003fbd: 49 89 44 24 30       	mov	qword ptr [r12 + 0x30], rax
ffffffff80003fc2: 4d 89 bc 24 c0 00 00 00      	mov	qword ptr [r12 + 0xc0], r15
ffffffff80003fca: 66 41 89 9c 24 8e 00 00 00   	mov	word ptr [r12 + 0x8e], bx
ffffffff80003fd3: 41 83 fd 05          	cmp	r13d, 0x5
ffffffff80003fd7: 0f 85 a1 fc ff ff    	jne	0xffffffff80003c7e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4fe>
ffffffff80003fdd: 49 8d 4d fb          	lea	rcx, [r13 - 0x5]
ffffffff80003fe1: b8 06 00 00 00       	mov	eax, 0x6
ffffffff80003fe6: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80003fea: 72 6f                	jb	0xffffffff8000405b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x8db>
ffffffff80003fec: 44 89 e9             	mov	ecx, r13d
ffffffff80003fef: 83 e1 fc             	and	ecx, -0x4
ffffffff80003ff2: 48 83 c1 f8          	add	rcx, -0x8
ffffffff80003ff6: b8 1b 00 00 00       	mov	eax, 0x1b
ffffffff80003ffb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80004000: 48 89 c2             	mov	rdx, rax
ffffffff80004003: 49 8b 44 c4 e8       	mov	rax, qword ptr [r12 + 8*rax - 0x18]
ffffffff80004008: 4c 89 20             	mov	qword ptr [rax], r12
ffffffff8000400b: 8d 72 eb             	lea	esi, [rdx - 0x15]
ffffffff8000400e: 66 89 b0 8c 00 00 00 	mov	word ptr [rax + 0x8c], si
ffffffff80004015: 49 8b 44 d4 f0       	mov	rax, qword ptr [r12 + 8*rdx - 0x10]
ffffffff8000401a: 4c 89 20             	mov	qword ptr [rax], r12
ffffffff8000401d: 8d 72 ec             	lea	esi, [rdx - 0x14]
ffffffff80004020: 66 89 b0 8c 00 00 00 	mov	word ptr [rax + 0x8c], si
ffffffff80004027: 49 8b 44 d4 f8       	mov	rax, qword ptr [r12 + 8*rdx - 0x8]
ffffffff8000402c: 4c 89 20             	mov	qword ptr [rax], r12
ffffffff8000402f: 8d 72 ed             	lea	esi, [rdx - 0x13]
ffffffff80004032: 66 89 b0 8c 00 00 00 	mov	word ptr [rax + 0x8c], si
ffffffff80004039: 49 8b 04 d4          	mov	rax, qword ptr [r12 + 8*rdx]
ffffffff8000403d: 4c 89 20             	mov	qword ptr [rax], r12
ffffffff80004040: 8d 72 ee             	lea	esi, [rdx - 0x12]
ffffffff80004043: 66 89 b0 8c 00 00 00 	mov	word ptr [rax + 0x8c], si
ffffffff8000404a: 48 8d 42 04          	lea	rax, [rdx + 0x4]
ffffffff8000404e: 48 83 c2 e5          	add	rdx, -0x1b
ffffffff80004052: 48 39 ca             	cmp	rdx, rcx
ffffffff80004055: 75 a9                	jne	0xffffffff80004000 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x880>
ffffffff80004057: 48 83 c0 eb          	add	rax, -0x15
ffffffff8000405b: 41 83 e5 03          	and	r13d, 0x3
ffffffff8000405f: 0f 84 19 fc ff ff    	je	0xffffffff80003c7e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4fe>
ffffffff80004065: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80004070: 49 8b 8c c4 90 00 00 00      	mov	rcx, qword ptr [r12 + 8*rax + 0x90]
ffffffff80004078: 4c 89 21             	mov	qword ptr [rcx], r12
ffffffff8000407b: 66 89 81 8c 00 00 00 	mov	word ptr [rcx + 0x8c], ax
ffffffff80004082: 48 ff c0             	inc	rax
ffffffff80004085: 49 ff cd             	dec	r13
ffffffff80004088: 75 e6                	jne	0xffffffff80004070 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x8f0>
ffffffff8000408a: e9 ef fb ff ff       	jmp	0xffffffff80003c7e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4fe>
ffffffff8000408f: 41 8d 56 01          	lea	edx, [r14 + 0x1]
ffffffff80004093: 49 8d 6c 24 01       	lea	rbp, [r12 + 0x1]
ffffffff80004098: 66 45 39 f4          	cmp	r12w, r14w
ffffffff8000409c: 0f 83 a6 00 00 00    	jae	0xffffffff80004148 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x9c8>
ffffffff800040a2: 49 8d 45 60          	lea	rax, [r13 + 0x60]
ffffffff800040a6: 4a 8d 34 a5 60 00 00 00      	lea	rsi, [4*r12 + 0x60]
ffffffff800040ae: 4c 01 ee             	add	rsi, r13
ffffffff800040b1: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff800040b6: 48 8d 3c a8          	lea	rdi, [rax + 4*rbp]
ffffffff800040ba: 4c 89 f3             	mov	rbx, r14
ffffffff800040bd: 4c 29 e3             	sub	rbx, r12
ffffffff800040c0: 89 54 24 24          	mov	dword ptr [rsp + 0x24], edx
ffffffff800040c4: 48 8d 14 9d 00 00 00 00      	lea	rdx, [4*rbx]
ffffffff800040cc: 48 8b 05 65 83 03 00 	mov	rax, qword ptr [rip + 0x38365] # 0xffffffff8003c438
ffffffff800040d3: ff d0                	call	rax
ffffffff800040d5: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff800040d9: 43 89 44 a5 60       	mov	dword ptr [r13 + 4*r12 + 0x60], eax
ffffffff800040de: 46 8d 3c e5 00 00 00 00      	lea	r15d, [8*r12]
ffffffff800040e6: 4b 8d 34 2f          	lea	rsi, [r15 + r13]
ffffffff800040ea: 48 83 c6 08          	add	rsi, 0x8
ffffffff800040ee: 8d 04 ed 00 00 00 00 	lea	eax, [8*rbp]
ffffffff800040f5: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff800040fa: 4a 8d 3c 28          	lea	rdi, [rax + r13]
ffffffff800040fe: 48 83 c7 08          	add	rdi, 0x8
ffffffff80004102: 48 c1 e3 03          	shl	rbx, 0x3
ffffffff80004106: 48 89 da             	mov	rdx, rbx
ffffffff80004109: ff 15 29 83 03 00    	call	qword ptr [rip + 0x38329] # 0xffffffff8003c438
ffffffff8000410f: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80004114: 4b 89 44 3d 08       	mov	qword ptr [r13 + r15 + 0x8], rax
ffffffff80004119: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000411e: 4a 8d 34 28          	lea	rsi, [rax + r13]
ffffffff80004122: 48 81 c6 90 00 00 00 	add	rsi, 0x90
ffffffff80004129: 4b 8d 3c 2f          	lea	rdi, [r15 + r13]
ffffffff8000412d: 48 81 c7 a0 00 00 00 	add	rdi, 0xa0
ffffffff80004134: 48 89 da             	mov	rdx, rbx
ffffffff80004137: ff 15 fb 82 03 00    	call	qword ptr [rip + 0x382fb] # 0xffffffff8003c438
ffffffff8000413d: 8b 54 24 24          	mov	edx, dword ptr [rsp + 0x24]
ffffffff80004141: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff80004146: eb 13                	jmp	0xffffffff8000415b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x9db>
ffffffff80004148: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff8000414c: 43 89 44 a5 60       	mov	dword ptr [r13 + 4*r12 + 0x60], eax
ffffffff80004151: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80004156: 4b 89 44 e5 08       	mov	qword ptr [r13 + 8*r12 + 0x8], rax
ffffffff8000415b: 49 8d 46 02          	lea	rax, [r14 + 0x2]
ffffffff8000415f: 4b 89 8c e5 98 00 00 00      	mov	qword ptr [r13 + 8*r12 + 0x98], rcx
ffffffff80004167: 66 41 89 95 8e 00 00 00      	mov	word ptr [r13 + 0x8e], dx
ffffffff8000416f: 39 c5                	cmp	ebp, eax
ffffffff80004171: 0f 83 b3 00 00 00    	jae	0xffffffff8000422a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaaa>
ffffffff80004177: 44 89 f1             	mov	ecx, r14d
ffffffff8000417a: 44 29 e1             	sub	ecx, r12d
ffffffff8000417d: ff c1                	inc	ecx
ffffffff8000417f: 4d 29 e6             	sub	r14, r12
ffffffff80004182: 83 e1 03             	and	ecx, 0x3
ffffffff80004185: 74 37                	je	0xffffffff800041be <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa3e>
ffffffff80004187: 4a 8d 34 e5 98 00 00 00      	lea	rsi, [8*r12 + 0x98]
ffffffff8000418f: 4c 01 ee             	add	rsi, r13
ffffffff80004192: 31 d2                	xor	edx, edx
ffffffff80004194: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800041a0: 48 8b 3c d6          	mov	rdi, qword ptr [rsi + 8*rdx]
ffffffff800041a4: 4c 89 2f             	mov	qword ptr [rdi], r13
ffffffff800041a7: 44 8d 04 2a          	lea	r8d, [rdx + rbp]
ffffffff800041ab: 66 44 89 87 8c 00 00 00      	mov	word ptr [rdi + 0x8c], r8w
ffffffff800041b3: 48 ff c2             	inc	rdx
ffffffff800041b6: 48 39 d1             	cmp	rcx, rdx
ffffffff800041b9: 75 e5                	jne	0xffffffff800041a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa20>
ffffffff800041bb: 48 01 d5             	add	rbp, rdx
ffffffff800041be: 49 83 fe 03          	cmp	r14, 0x3
ffffffff800041c2: 72 66                	jb	0xffffffff8000422a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaaa>
ffffffff800041c4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800041d0: 49 8b 8c ed 90 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0x90]
ffffffff800041d8: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff800041db: 66 89 a9 8c 00 00 00 	mov	word ptr [rcx + 0x8c], bp
ffffffff800041e2: 49 8b 8c ed 98 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0x98]
ffffffff800041ea: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff800041ed: 8d 55 01             	lea	edx, [rbp + 0x1]
ffffffff800041f0: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff800041f7: 49 8b 8c ed a0 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0xa0]
ffffffff800041ff: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80004202: 8d 55 02             	lea	edx, [rbp + 0x2]
ffffffff80004205: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff8000420c: 49 8b 8c ed a8 00 00 00      	mov	rcx, qword ptr [r13 + 8*rbp + 0xa8]
ffffffff80004214: 4c 89 29             	mov	qword ptr [rcx], r13
ffffffff80004217: 8d 55 03             	lea	edx, [rbp + 0x3]
ffffffff8000421a: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff80004221: 48 83 c5 04          	add	rbp, 0x4
ffffffff80004225: 48 39 c5             	cmp	rbp, rax
ffffffff80004228: 75 a6                	jne	0xffffffff800041d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa50>
ffffffff8000422a: 4c 8b 74 24 48       	mov	r14, qword ptr [rsp + 0x48]
ffffffff8000422f: 4c 8b 6c 24 38       	mov	r13, qword ptr [rsp + 0x38]
ffffffff80004234: 48 8b 6c 24 40       	mov	rbp, qword ptr [rsp + 0x40]
ffffffff80004239: 4c 8b 64 24 28       	mov	r12, qword ptr [rsp + 0x28]
ffffffff8000423e: 4d 89 26             	mov	qword ptr [r14], r12
ffffffff80004241: 49 89 6e 08          	mov	qword ptr [r14 + 0x8], rbp
ffffffff80004245: 4d 89 6e 10          	mov	qword ptr [r14 + 0x10], r13
ffffffff80004249: 4c 89 f0             	mov	rax, r14
ffffffff8000424c: 48 81 c4 a8 00 00 00 	add	rsp, 0xa8
ffffffff80004253: 5b                   	pop	rbx
ffffffff80004254: 41 5c                	pop	r12
ffffffff80004256: 41 5d                	pop	r13
ffffffff80004258: 41 5e                	pop	r14
ffffffff8000425a: 41 5f                	pop	r15
ffffffff8000425c: 5d                   	pop	rbp
ffffffff8000425d: c3                   	ret
ffffffff8000425e: be 35 00 00 00       	mov	esi, 0x35
ffffffff80004263: 48 c7 c7 00 27 02 80 	mov	rdi, -0x7ffdd900
ffffffff8000426a: 48 c7 c2 38 27 02 80 	mov	rdx, -0x7ffdd8c8
ffffffff80004271: e8 7a ce 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80004276: be 0b 00 00 00       	mov	esi, 0xb
ffffffff8000427b: 4c 89 ef             	mov	rdi, r13
ffffffff8000427e: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff80004285: e8 76 c9 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000428a: be 30 00 00 00       	mov	esi, 0x30
ffffffff8000428f: 48 c7 c7 88 25 02 80 	mov	rdi, -0x7ffdda78
ffffffff80004296: 48 c7 c2 b8 25 02 80 	mov	rdx, -0x7ffdda48
ffffffff8000429d: e8 4e ce 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800042a2: be 20 00 00 00       	mov	esi, 0x20
ffffffff800042a7: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff800042ae: 48 c7 c2 d0 25 02 80 	mov	rdx, -0x7ffdda30
ffffffff800042b5: e8 36 ce 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800042ba: be 0b 00 00 00       	mov	esi, 0xb
ffffffff800042bf: 4c 89 f7             	mov	rdi, r14
ffffffff800042c2: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff800042c9: e8 32 c9 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800042ce: bf 08 00 00 00       	mov	edi, 0x8
ffffffff800042d3: be 90 00 00 00       	mov	esi, 0x90
ffffffff800042d8: e8 d5 98 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800042dd: 48 c7 c7 f0 23 02 80 	mov	rdi, -0x7ffddc10
ffffffff800042e4: e8 57 d3 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800042e9: bf 08 00 00 00       	mov	edi, 0x8
ffffffff800042ee: be f0 00 00 00       	mov	esi, 0xf0
ffffffff800042f3: e8 ba 98 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800042f8: cc                   	int3
ffffffff800042f9: cc                   	int3
ffffffff800042fa: cc                   	int3
ffffffff800042fb: cc                   	int3
ffffffff800042fc: cc                   	int3
ffffffff800042fd: cc                   	int3
ffffffff800042fe: cc                   	int3
ffffffff800042ff: cc                   	int3

ffffffff80004300 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af>:
ffffffff80004300: 55                   	push	rbp
ffffffff80004301: 41 57                	push	r15
ffffffff80004303: 41 56                	push	r14
ffffffff80004305: 41 55                	push	r13
ffffffff80004307: 41 54                	push	r12
ffffffff80004309: 53                   	push	rbx
ffffffff8000430a: 48 81 ec 08 02 00 00 	sub	rsp, 0x208
ffffffff80004311: 4d 89 c4             	mov	r12, r8
ffffffff80004314: 49 89 cd             	mov	r13, rcx
ffffffff80004317: 49 89 f7             	mov	r15, rsi
ffffffff8000431a: 49 89 f8             	mov	r8, rdi
ffffffff8000431d: 48 8b 1e             	mov	rbx, qword ptr [rsi]
ffffffff80004320: 44 0f b7 b3 b6 05 00 00      	movzx	r14d, word ptr [rbx + 0x5b6]
ffffffff80004328: 49 83 fe 0b          	cmp	r14, 0xb
ffffffff8000432c: 73 23                	jae	0xffffffff80004351 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x51>
ffffffff8000432e: 49 8b 6f 10          	mov	rbp, qword ptr [r15 + 0x10]
ffffffff80004332: 4c 8d 65 01          	lea	r12, [rbp + 0x1]
ffffffff80004336: 48 8d 34 ab          	lea	rsi, [rbx + 4*rbp]
ffffffff8000433a: 48 81 c6 88 05 00 00 	add	rsi, 0x588
ffffffff80004341: 4d 39 f4             	cmp	r12, r14
ffffffff80004344: 0f 86 3e 01 00 00    	jbe	0xffffffff80004488 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x188>
ffffffff8000434a: 89 16                	mov	dword ptr [rsi], edx
ffffffff8000434c: e9 9a 01 00 00       	jmp	0xffffffff800044eb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x1eb>
ffffffff80004351: 89 54 24 10          	mov	dword ptr [rsp + 0x10], edx
ffffffff80004355: 4d 8b 77 08          	mov	r14, qword ptr [r15 + 0x8]
ffffffff80004359: 49 8b 6f 10          	mov	rbp, qword ptr [r15 + 0x10]
ffffffff8000435d: 0f b6 05 7d 6e 02 00 	movzx	eax, byte ptr [rip + 0x26e7d] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80004364: b1 01                	mov	cl, 0x1
ffffffff80004366: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80004370: 31 c0                	xor	eax, eax
ffffffff80004372: f0                   	lock
ffffffff80004373: 0f b0 0d 86 6c 02 00 	cmpxchg	byte ptr [rip + 0x26c86], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000437a: 75 06                	jne	0xffffffff80004382 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x82>
ffffffff8000437c: eb 11                	jmp	0xffffffff8000438f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x8f>
ffffffff8000437e: 66 90                	nop
ffffffff80004380: f3 90                	pause
ffffffff80004382: 0f b6 05 77 6c 02 00 	movzx	eax, byte ptr [rip + 0x26c77] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80004389: 84 c0                	test	al, al
ffffffff8000438b: 75 f3                	jne	0xffffffff80004380 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x80>
ffffffff8000438d: eb e1                	jmp	0xffffffff80004370 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x70>
ffffffff8000438f: 4c 89 44 24 28       	mov	qword ptr [rsp + 0x28], r8
ffffffff80004394: be 08 00 00 00       	mov	esi, 0x8
ffffffff80004399: ba b8 05 00 00       	mov	edx, 0x5b8
ffffffff8000439e: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800043a5: e8 a6 86 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800043aa: c6 05 4f 6c 02 00 00 	mov	byte ptr [rip + 0x26c4f], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800043b1: 48 85 c0             	test	rax, rax
ffffffff800043b4: 0f 84 95 0c 00 00    	je	0xffffffff8000504f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd4f>
ffffffff800043ba: 48 c7 80 80 05 00 00 00 00 00 00     	mov	qword ptr [rax + 0x580], 0x0
ffffffff800043c5: 66 c7 80 b6 05 00 00 00 00   	mov	word ptr [rax + 0x5b6], 0x0
ffffffff800043ce: 48 83 fd 05          	cmp	rbp, 0x5
ffffffff800043d2: 4c 89 64 24 50       	mov	qword ptr [rsp + 0x50], r12
ffffffff800043d7: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800043dc: 4c 89 6c 24 20       	mov	qword ptr [rsp + 0x20], r13
ffffffff800043e1: 0f 83 38 01 00 00    	jae	0xffffffff8000451f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x21f>
ffffffff800043e7: 44 0f b7 a3 b6 05 00 00      	movzx	r12d, word ptr [rbx + 0x5b6]
ffffffff800043ef: 49 83 c4 fb          	add	r12, -0x5
ffffffff800043f3: 66 44 89 a0 b6 05 00 00      	mov	word ptr [rax + 0x5b6], r12w
ffffffff800043fb: 8b 8b 98 05 00 00    	mov	ecx, dword ptr [rbx + 0x598]
ffffffff80004401: 89 4c 24 04          	mov	dword ptr [rsp + 0x4], ecx
ffffffff80004405: 48 8d b3 00 02 00 00 	lea	rsi, [rbx + 0x200]
ffffffff8000440c: 48 8d bc 24 00 01 00 00      	lea	rdi, [rsp + 0x100]
ffffffff80004414: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff80004419: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff8000441c: 49 83 fc 0c          	cmp	r12, 0xc
ffffffff80004420: 0f 83 e5 0b 00 00    	jae	0xffffffff8000500b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd0b>
ffffffff80004426: 48 89 c7             	mov	rdi, rax
ffffffff80004429: 48 81 c7 88 05 00 00 	add	rdi, 0x588
ffffffff80004430: 48 8d b3 9c 05 00 00 	lea	rsi, [rbx + 0x59c]
ffffffff80004437: 49 89 c5             	mov	r13, rax
ffffffff8000443a: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff80004442: 4c 8b 3d e7 7f 03 00 	mov	r15, qword ptr [rip + 0x37fe7] # 0xffffffff8003c430
ffffffff80004449: 41 ff d7             	call	r15
ffffffff8000444c: 48 8d b3 80 02 00 00 	lea	rsi, [rbx + 0x280]
ffffffff80004453: 49 c1 e4 07          	shl	r12, 0x7
ffffffff80004457: 4c 89 ef             	mov	rdi, r13
ffffffff8000445a: 4c 89 e2             	mov	rdx, r12
ffffffff8000445d: 41 ff d7             	call	r15
ffffffff80004460: 66 c7 83 b6 05 00 00 04 00   	mov	word ptr [rbx + 0x5b6], 0x4
ffffffff80004469: 48 8d 7c 24 5c       	lea	rdi, [rsp + 0x5c]
ffffffff8000446e: 48 8d b4 24 00 01 00 00      	lea	rsi, [rsp + 0x100]
ffffffff80004476: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff8000447b: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff8000447d: 4c 89 f0             	mov	rax, r14
ffffffff80004480: 49 89 dd             	mov	r13, rbx
ffffffff80004483: e9 a7 02 00 00       	jmp	0xffffffff8000472f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x42f>
ffffffff80004488: 89 54 24 10          	mov	dword ptr [rsp + 0x10], edx
ffffffff8000448c: 48 8d 83 88 05 00 00 	lea	rax, [rbx + 0x588]
ffffffff80004493: 4a 8d 3c a0          	lea	rdi, [rax + 4*r12]
ffffffff80004497: 4c 89 6c 24 20       	mov	qword ptr [rsp + 0x20], r13
ffffffff8000449c: 4d 89 f5             	mov	r13, r14
ffffffff8000449f: 49 29 ed             	sub	r13, rbp
ffffffff800044a2: 4c 89 44 24 28       	mov	qword ptr [rsp + 0x28], r8
ffffffff800044a7: 4a 8d 14 ad 00 00 00 00      	lea	rdx, [4*r13]
ffffffff800044af: ff 15 83 7f 03 00    	call	qword ptr [rip + 0x37f83] # 0xffffffff8003c438
ffffffff800044b5: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff800044b9: 89 84 ab 88 05 00 00 	mov	dword ptr [rbx + 4*rbp + 0x588], eax
ffffffff800044c0: 48 89 ee             	mov	rsi, rbp
ffffffff800044c3: 48 c1 e6 07          	shl	rsi, 0x7
ffffffff800044c7: 48 01 de             	add	rsi, rbx
ffffffff800044ca: 49 c1 e4 07          	shl	r12, 0x7
ffffffff800044ce: 49 01 dc             	add	r12, rbx
ffffffff800044d1: 49 c1 e5 07          	shl	r13, 0x7
ffffffff800044d5: 4c 89 e7             	mov	rdi, r12
ffffffff800044d8: 4c 89 ea             	mov	rdx, r13
ffffffff800044db: 4c 8b 6c 24 20       	mov	r13, qword ptr [rsp + 0x20]
ffffffff800044e0: ff 15 52 7f 03 00    	call	qword ptr [rip + 0x37f52] # 0xffffffff8003c438
ffffffff800044e6: 4c 8b 44 24 28       	mov	r8, qword ptr [rsp + 0x28]
ffffffff800044eb: 41 ff c6             	inc	r14d
ffffffff800044ee: 48 89 ef             	mov	rdi, rbp
ffffffff800044f1: 48 c1 e7 07          	shl	rdi, 0x7
ffffffff800044f5: 48 01 df             	add	rdi, rbx
ffffffff800044f8: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800044fd: 4c 89 ee             	mov	rsi, r13
ffffffff80004500: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80004503: 66 44 89 b3 b6 05 00 00      	mov	word ptr [rbx + 0x5b6], r14w
ffffffff8000450b: 49 8b 47 08          	mov	rax, qword ptr [r15 + 0x8]
ffffffff8000450f: 49 89 18             	mov	qword ptr [r8], rbx
ffffffff80004512: 49 89 40 08          	mov	qword ptr [r8 + 0x8], rax
ffffffff80004516: 49 89 68 10          	mov	qword ptr [r8 + 0x10], rbp
ffffffff8000451a: e9 0f 09 00 00       	jmp	0xffffffff80004e2e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb2e>
ffffffff8000451f: 0f 84 a7 00 00 00    	je	0xffffffff800045cc <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x2cc>
ffffffff80004525: 48 83 fd 06          	cmp	rbp, 0x6
ffffffff80004529: 0f 85 64 01 00 00    	jne	0xffffffff80004693 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x393>
ffffffff8000452f: 44 0f b7 a3 b6 05 00 00      	movzx	r12d, word ptr [rbx + 0x5b6]
ffffffff80004537: 49 83 c4 fa          	add	r12, -0x6
ffffffff8000453b: 66 44 89 a0 b6 05 00 00      	mov	word ptr [rax + 0x5b6], r12w
ffffffff80004543: 8b 8b 9c 05 00 00    	mov	ecx, dword ptr [rbx + 0x59c]
ffffffff80004549: 89 4c 24 04          	mov	dword ptr [rsp + 0x4], ecx
ffffffff8000454d: 48 8d b3 80 02 00 00 	lea	rsi, [rbx + 0x280]
ffffffff80004554: 48 8d bc 24 00 01 00 00      	lea	rdi, [rsp + 0x100]
ffffffff8000455c: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff80004561: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80004564: 49 83 fc 0c          	cmp	r12, 0xc
ffffffff80004568: 0f 83 9d 0a 00 00    	jae	0xffffffff8000500b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd0b>
ffffffff8000456e: 48 89 c7             	mov	rdi, rax
ffffffff80004571: 48 81 c7 88 05 00 00 	add	rdi, 0x588
ffffffff80004578: 48 8d b3 a0 05 00 00 	lea	rsi, [rbx + 0x5a0]
ffffffff8000457f: 49 89 c5             	mov	r13, rax
ffffffff80004582: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff8000458a: 4c 8b 3d 9f 7e 03 00 	mov	r15, qword ptr [rip + 0x37e9f] # 0xffffffff8003c430
ffffffff80004591: 41 ff d7             	call	r15
ffffffff80004594: 48 8d b3 00 03 00 00 	lea	rsi, [rbx + 0x300]
ffffffff8000459b: 49 c1 e4 07          	shl	r12, 0x7
ffffffff8000459f: 4c 89 ef             	mov	rdi, r13
ffffffff800045a2: 4c 89 e2             	mov	rdx, r12
ffffffff800045a5: 41 ff d7             	call	r15
ffffffff800045a8: 66 c7 83 b6 05 00 00 05 00   	mov	word ptr [rbx + 0x5b6], 0x5
ffffffff800045b1: 48 8d 7c 24 5c       	lea	rdi, [rsp + 0x5c]
ffffffff800045b6: 48 8d b4 24 00 01 00 00      	lea	rsi, [rsp + 0x100]
ffffffff800045be: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff800045c3: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff800045c5: 31 ed                	xor	ebp, ebp
ffffffff800045c7: e9 61 01 00 00       	jmp	0xffffffff8000472d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x42d>
ffffffff800045cc: 44 0f b7 a3 b6 05 00 00      	movzx	r12d, word ptr [rbx + 0x5b6]
ffffffff800045d4: 49 83 c4 fa          	add	r12, -0x6
ffffffff800045d8: 66 44 89 a0 b6 05 00 00      	mov	word ptr [rax + 0x5b6], r12w
ffffffff800045e0: 8b 8b 9c 05 00 00    	mov	ecx, dword ptr [rbx + 0x59c]
ffffffff800045e6: 89 4c 24 04          	mov	dword ptr [rsp + 0x4], ecx
ffffffff800045ea: 4c 8d ab 80 02 00 00 	lea	r13, [rbx + 0x280]
ffffffff800045f1: 48 8d bc 24 00 01 00 00      	lea	rdi, [rsp + 0x100]
ffffffff800045f9: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800045fe: 4c 89 ee             	mov	rsi, r13
ffffffff80004601: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80004604: 49 83 fc 0c          	cmp	r12, 0xc
ffffffff80004608: 0f 83 fd 09 00 00    	jae	0xffffffff8000500b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd0b>
ffffffff8000460e: 48 89 c7             	mov	rdi, rax
ffffffff80004611: 48 81 c7 88 05 00 00 	add	rdi, 0x588
ffffffff80004618: 48 8d b3 a0 05 00 00 	lea	rsi, [rbx + 0x5a0]
ffffffff8000461f: 48 89 c5             	mov	rbp, rax
ffffffff80004622: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff8000462a: 4c 8b 3d ff 7d 03 00 	mov	r15, qword ptr [rip + 0x37dff] # 0xffffffff8003c430
ffffffff80004631: 41 ff d7             	call	r15
ffffffff80004634: 48 8d b3 00 03 00 00 	lea	rsi, [rbx + 0x300]
ffffffff8000463b: 49 c1 e4 07          	shl	r12, 0x7
ffffffff8000463f: 48 89 ef             	mov	rdi, rbp
ffffffff80004642: 4c 89 e2             	mov	rdx, r12
ffffffff80004645: 41 ff d7             	call	r15
ffffffff80004648: 48 8d 7c 24 5c       	lea	rdi, [rsp + 0x5c]
ffffffff8000464d: 48 8d b4 24 00 01 00 00      	lea	rsi, [rsp + 0x100]
ffffffff80004655: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff8000465a: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff8000465c: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff80004660: 89 83 9c 05 00 00    	mov	dword ptr [rbx + 0x59c], eax
ffffffff80004666: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff8000466b: 4c 89 ef             	mov	rdi, r13
ffffffff8000466e: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff80004673: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80004676: 66 c7 83 b6 05 00 00 06 00   	mov	word ptr [rbx + 0x5b6], 0x6
ffffffff8000467f: bd 05 00 00 00       	mov	ebp, 0x5
ffffffff80004684: 4c 89 74 24 30       	mov	qword ptr [rsp + 0x30], r14
ffffffff80004689: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff8000468e: e9 46 01 00 00       	jmp	0xffffffff800047d9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x4d9>
ffffffff80004693: 44 0f b7 a3 b6 05 00 00      	movzx	r12d, word ptr [rbx + 0x5b6]
ffffffff8000469b: 49 83 c4 f9          	add	r12, -0x7
ffffffff8000469f: 66 44 89 a0 b6 05 00 00      	mov	word ptr [rax + 0x5b6], r12w
ffffffff800046a7: 8b 8b a0 05 00 00    	mov	ecx, dword ptr [rbx + 0x5a0]
ffffffff800046ad: 89 4c 24 04          	mov	dword ptr [rsp + 0x4], ecx
ffffffff800046b1: 48 8d b3 00 03 00 00 	lea	rsi, [rbx + 0x300]
ffffffff800046b8: 48 8d bc 24 00 01 00 00      	lea	rdi, [rsp + 0x100]
ffffffff800046c0: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800046c5: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800046c8: 49 83 fc 0c          	cmp	r12, 0xc
ffffffff800046cc: 0f 83 39 09 00 00    	jae	0xffffffff8000500b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd0b>
ffffffff800046d2: 48 83 c5 f9          	add	rbp, -0x7
ffffffff800046d6: 48 89 c7             	mov	rdi, rax
ffffffff800046d9: 48 81 c7 88 05 00 00 	add	rdi, 0x588
ffffffff800046e0: 48 8d b3 a4 05 00 00 	lea	rsi, [rbx + 0x5a4]
ffffffff800046e7: 49 89 c5             	mov	r13, rax
ffffffff800046ea: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff800046f2: 4c 8b 3d 37 7d 03 00 	mov	r15, qword ptr [rip + 0x37d37] # 0xffffffff8003c430
ffffffff800046f9: 41 ff d7             	call	r15
ffffffff800046fc: 48 8d b3 80 03 00 00 	lea	rsi, [rbx + 0x380]
ffffffff80004703: 49 c1 e4 07          	shl	r12, 0x7
ffffffff80004707: 4c 89 ef             	mov	rdi, r13
ffffffff8000470a: 4c 89 e2             	mov	rdx, r12
ffffffff8000470d: 41 ff d7             	call	r15
ffffffff80004710: 66 c7 83 b6 05 00 00 06 00   	mov	word ptr [rbx + 0x5b6], 0x6
ffffffff80004719: 48 8d 7c 24 5c       	lea	rdi, [rsp + 0x5c]
ffffffff8000471e: 48 8d b4 24 00 01 00 00      	lea	rsi, [rsp + 0x100]
ffffffff80004726: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff8000472b: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff8000472d: 31 c0                	xor	eax, eax
ffffffff8000472f: 45 0f b7 bd b6 05 00 00      	movzx	r15d, word ptr [r13 + 0x5b6]
ffffffff80004737: 4d 89 fc             	mov	r12, r15
ffffffff8000473a: 48 8d 34 ad 88 05 00 00      	lea	rsi, [4*rbp + 0x588]
ffffffff80004742: 4c 01 ee             	add	rsi, r13
ffffffff80004745: 49 29 ec             	sub	r12, rbp
ffffffff80004748: 4c 89 6c 24 18       	mov	qword ptr [rsp + 0x18], r13
ffffffff8000474d: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80004752: 76 5d                	jbe	0xffffffff800047b1 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x4b1>
ffffffff80004754: 49 8d 85 88 05 00 00 	lea	rax, [r13 + 0x588]
ffffffff8000475b: 4c 8d 6d 01          	lea	r13, [rbp + 0x1]
ffffffff8000475f: 48 8d 3c a8          	lea	rdi, [rax + 4*rbp]
ffffffff80004763: 48 83 c7 04          	add	rdi, 0x4
ffffffff80004767: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff8000476f: ff 15 c3 7c 03 00    	call	qword ptr [rip + 0x37cc3] # 0xffffffff8003c438
ffffffff80004775: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000477a: 8b 4c 24 10          	mov	ecx, dword ptr [rsp + 0x10]
ffffffff8000477e: 89 8c a8 88 05 00 00 	mov	dword ptr [rax + 4*rbp + 0x588], ecx
ffffffff80004785: 48 89 ee             	mov	rsi, rbp
ffffffff80004788: 48 c1 e6 07          	shl	rsi, 0x7
ffffffff8000478c: 48 03 74 24 18       	add	rsi, qword ptr [rsp + 0x18]
ffffffff80004791: 49 c1 e5 07          	shl	r13, 0x7
ffffffff80004795: 4c 03 6c 24 18       	add	r13, qword ptr [rsp + 0x18]
ffffffff8000479a: 49 c1 e4 07          	shl	r12, 0x7
ffffffff8000479e: 4c 89 ef             	mov	rdi, r13
ffffffff800047a1: 4c 89 e2             	mov	rdx, r12
ffffffff800047a4: ff 15 8e 7c 03 00    	call	qword ptr [rip + 0x37c8e] # 0xffffffff8003c438
ffffffff800047aa: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800047af: eb 06                	jmp	0xffffffff800047b7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x4b7>
ffffffff800047b1: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff800047b5: 89 06                	mov	dword ptr [rsi], eax
ffffffff800047b7: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff800047bc: 41 ff c7             	inc	r15d
ffffffff800047bf: 48 89 ef             	mov	rdi, rbp
ffffffff800047c2: 48 c1 e7 07          	shl	rdi, 0x7
ffffffff800047c6: 4c 01 ef             	add	rdi, r13
ffffffff800047c9: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800047ce: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800047d1: 66 45 89 bd b6 05 00 00      	mov	word ptr [r13 + 0x5b6], r15w
ffffffff800047d9: 48 89 6c 24 10       	mov	qword ptr [rsp + 0x10], rbp
ffffffff800047de: 48 8d bc 24 84 01 00 00      	lea	rdi, [rsp + 0x184]
ffffffff800047e6: 48 8d 74 24 58       	lea	rsi, [rsp + 0x58]
ffffffff800047eb: ba 84 00 00 00       	mov	edx, 0x84
ffffffff800047f0: ff 15 3a 7c 03 00    	call	qword ptr [rip + 0x37c3a] # 0xffffffff8003c430
ffffffff800047f6: 4c 8b ab 80 05 00 00 	mov	r13, qword ptr [rbx + 0x580]
ffffffff800047fd: 45 31 e4             	xor	r12d, r12d
ffffffff80004800: 4d 85 ed             	test	r13, r13
ffffffff80004803: 0f 84 02 05 00 00    	je	0xffffffff80004d0b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa0b>
ffffffff80004809: 8b 6c 24 04          	mov	ebp, dword ptr [rsp + 0x4]
ffffffff8000480d: eb 62                	jmp	0xffffffff80004871 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x571>
ffffffff8000480f: 90                   	nop
ffffffff80004810: 48 8b 5c 24 58       	mov	rbx, qword ptr [rsp + 0x58]
ffffffff80004815: 4c 8b 74 24 60       	mov	r14, qword ptr [rsp + 0x60]
ffffffff8000481a: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8000481f: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80004824: 4c 8b 64 24 70       	mov	r12, qword ptr [rsp + 0x70]
ffffffff80004829: 8b 6c 24 78          	mov	ebp, dword ptr [rsp + 0x78]
ffffffff8000482d: ba 84 00 00 00       	mov	edx, 0x84
ffffffff80004832: 4c 8d bc 24 00 01 00 00      	lea	r15, [rsp + 0x100]
ffffffff8000483a: 4c 89 ff             	mov	rdi, r15
ffffffff8000483d: 48 8d 74 24 7c       	lea	rsi, [rsp + 0x7c]
ffffffff80004842: 41 ff d5             	call	r13
ffffffff80004845: 48 85 db             	test	rbx, rbx
ffffffff80004848: 0f 84 c1 05 00 00    	je	0xffffffff80004e0f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb0f>
ffffffff8000484e: ba 84 00 00 00       	mov	edx, 0x84
ffffffff80004853: 48 8d bc 24 84 01 00 00      	lea	rdi, [rsp + 0x184]
ffffffff8000485b: 4c 89 fe             	mov	rsi, r15
ffffffff8000485e: 41 ff d5             	call	r13
ffffffff80004861: 4c 8b ab 80 05 00 00 	mov	r13, qword ptr [rbx + 0x580]
ffffffff80004868: 4d 85 ed             	test	r13, r13
ffffffff8000486b: 0f 84 9e 04 00 00    	je	0xffffffff80004d0f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa0f>
ffffffff80004871: 4d 39 e6             	cmp	r14, r12
ffffffff80004874: 0f 85 79 07 00 00    	jne	0xffffffff80004ff3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xcf3>
ffffffff8000487a: 0f b7 9b b4 05 00 00 	movzx	ebx, word ptr [rbx + 0x5b4]
ffffffff80004881: 45 0f b7 a5 b6 05 00 00      	movzx	r12d, word ptr [r13 + 0x5b6]
ffffffff80004889: 49 83 fc 0b          	cmp	r12, 0xb
ffffffff8000488d: 0f 82 b0 05 00 00    	jb	0xffffffff80004e43 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb43>
ffffffff80004893: 49 ff c6             	inc	r14
ffffffff80004896: 66 83 fb 05          	cmp	bx, 0x5
ffffffff8000489a: 73 34                	jae	0xffffffff800048d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x5d0>
ffffffff8000489c: 89 6c 24 04          	mov	dword ptr [rsp + 0x4], ebp
ffffffff800048a0: 4c 89 6c 24 38       	mov	qword ptr [rsp + 0x38], r13
ffffffff800048a5: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff800048aa: 48 c7 44 24 48 04 00 00 00   	mov	qword ptr [rsp + 0x48], 0x4
ffffffff800048b3: 48 8d 7c 24 58       	lea	rdi, [rsp + 0x58]
ffffffff800048b8: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff800048bd: e8 de 09 00 00       	call	0xffffffff800052a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704>
ffffffff800048c2: 4c 8b 74 24 58       	mov	r14, qword ptr [rsp + 0x58]
ffffffff800048c7: e9 24 01 00 00       	jmp	0xffffffff800049f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x6f0>
ffffffff800048cc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800048d0: 48 83 fb 05          	cmp	rbx, 0x5
ffffffff800048d4: 74 15                	je	0xffffffff800048eb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x5eb>
ffffffff800048d6: 83 fb 06             	cmp	ebx, 0x6
ffffffff800048d9: 0f 85 e1 00 00 00    	jne	0xffffffff800049c0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x6c0>
ffffffff800048df: b8 05 00 00 00       	mov	eax, 0x5
ffffffff800048e4: 31 db                	xor	ebx, ebx
ffffffff800048e6: e9 de 00 00 00       	jmp	0xffffffff800049c9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x6c9>
ffffffff800048eb: 4c 89 6c 24 38       	mov	qword ptr [rsp + 0x38], r13
ffffffff800048f0: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff800048f5: 48 c7 44 24 48 05 00 00 00   	mov	qword ptr [rsp + 0x48], 0x5
ffffffff800048fe: 48 8d 7c 24 58       	lea	rdi, [rsp + 0x58]
ffffffff80004903: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff80004908: e8 93 09 00 00       	call	0xffffffff800052a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704>
ffffffff8000490d: 48 8b 5c 24 58       	mov	rbx, qword ptr [rsp + 0x58]
ffffffff80004912: 44 0f b7 b3 b6 05 00 00      	movzx	r14d, word ptr [rbx + 0x5b6]
ffffffff8000491a: 45 8d 7e 01          	lea	r15d, [r14 + 0x1]
ffffffff8000491e: 49 83 fe 06          	cmp	r14, 0x6
ffffffff80004922: 0f 82 8e 02 00 00    	jb	0xffffffff80004bb6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x8b6>
ffffffff80004928: 48 8d b3 9c 05 00 00 	lea	rsi, [rbx + 0x59c]
ffffffff8000492f: 48 8d bb a0 05 00 00 	lea	rdi, [rbx + 0x5a0]
ffffffff80004936: 4d 8d 6e fb          	lea	r13, [r14 - 0x5]
ffffffff8000493a: 4a 8d 14 b5 ec ff ff ff      	lea	rdx, [4*r14 - 0x14]
ffffffff80004942: 4c 8b 25 ef 7a 03 00 	mov	r12, qword ptr [rip + 0x37aef] # 0xffffffff8003c438
ffffffff80004949: 41 ff d4             	call	r12
ffffffff8000494c: 89 ab 9c 05 00 00    	mov	dword ptr [rbx + 0x59c], ebp
ffffffff80004952: 48 8d ab 80 02 00 00 	lea	rbp, [rbx + 0x280]
ffffffff80004959: 48 8d bb 00 03 00 00 	lea	rdi, [rbx + 0x300]
ffffffff80004960: 49 c1 e5 07          	shl	r13, 0x7
ffffffff80004964: 48 89 ee             	mov	rsi, rbp
ffffffff80004967: 4c 89 ea             	mov	rdx, r13
ffffffff8000496a: 41 ff d4             	call	r12
ffffffff8000496d: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004972: 48 89 ef             	mov	rdi, rbp
ffffffff80004975: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff8000497d: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff8000497f: 48 8d b3 e8 05 00 00 	lea	rsi, [rbx + 0x5e8]
ffffffff80004986: 48 8d bb f0 05 00 00 	lea	rdi, [rbx + 0x5f0]
ffffffff8000498d: 4a 8d 14 f5 d8 ff ff ff      	lea	rdx, [8*r14 - 0x28]
ffffffff80004995: 41 ff d4             	call	r12
ffffffff80004998: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000499d: 48 89 83 e8 05 00 00 	mov	qword ptr [rbx + 0x5e8], rax
ffffffff800049a4: 66 44 89 bb b6 05 00 00      	mov	word ptr [rbx + 0x5b6], r15w
ffffffff800049ac: 4c 8d bc 24 00 01 00 00      	lea	r15, [rsp + 0x100]
ffffffff800049b4: 4c 8b 2d 75 7a 03 00 	mov	r13, qword ptr [rip + 0x37a75] # 0xffffffff8003c430
ffffffff800049bb: e9 3f 02 00 00       	jmp	0xffffffff80004bff <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x8ff>
ffffffff800049c0: 48 83 c3 f9          	add	rbx, -0x7
ffffffff800049c4: b8 06 00 00 00       	mov	eax, 0x6
ffffffff800049c9: 89 6c 24 04          	mov	dword ptr [rsp + 0x4], ebp
ffffffff800049cd: 4c 89 6c 24 38       	mov	qword ptr [rsp + 0x38], r13
ffffffff800049d2: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff800049d7: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff800049dc: 48 8d 7c 24 58       	lea	rdi, [rsp + 0x58]
ffffffff800049e1: 48 8d 74 24 38       	lea	rsi, [rsp + 0x38]
ffffffff800049e6: e8 b5 08 00 00       	call	0xffffffff800052a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704>
ffffffff800049eb: 4c 8b 74 24 68       	mov	r14, qword ptr [rsp + 0x68]
ffffffff800049f0: 45 0f b7 be b6 05 00 00      	movzx	r15d, word ptr [r14 + 0x5b6]
ffffffff800049f8: 4c 8d 63 01          	lea	r12, [rbx + 0x1]
ffffffff800049fc: 4c 89 fd             	mov	rbp, r15
ffffffff800049ff: 48 29 dd             	sub	rbp, rbx
ffffffff80004a02: 0f 86 98 00 00 00    	jbe	0xffffffff80004aa0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x7a0>
ffffffff80004a08: 49 8d 86 88 05 00 00 	lea	rax, [r14 + 0x588]
ffffffff80004a0f: 49 8d 34 9e          	lea	rsi, [r14 + 4*rbx]
ffffffff80004a13: 48 81 c6 88 05 00 00 	add	rsi, 0x588
ffffffff80004a1a: 4a 8d 3c a0          	lea	rdi, [rax + 4*r12]
ffffffff80004a1e: 48 8d 14 ad 00 00 00 00      	lea	rdx, [4*rbp]
ffffffff80004a26: 48 8b 05 0b 7a 03 00 	mov	rax, qword ptr [rip + 0x37a0b] # 0xffffffff8003c438
ffffffff80004a2d: ff d0                	call	rax
ffffffff80004a2f: 8b 44 24 04          	mov	eax, dword ptr [rsp + 0x4]
ffffffff80004a33: 41 89 84 9e 88 05 00 00      	mov	dword ptr [r14 + 4*rbx + 0x588], eax
ffffffff80004a3b: 49 89 dd             	mov	r13, rbx
ffffffff80004a3e: 49 c1 e5 07          	shl	r13, 0x7
ffffffff80004a42: 4d 01 f5             	add	r13, r14
ffffffff80004a45: 4c 89 e7             	mov	rdi, r12
ffffffff80004a48: 48 c1 e7 07          	shl	rdi, 0x7
ffffffff80004a4c: 4c 01 f7             	add	rdi, r14
ffffffff80004a4f: 48 89 ea             	mov	rdx, rbp
ffffffff80004a52: 48 c1 e2 07          	shl	rdx, 0x7
ffffffff80004a56: 4c 89 ee             	mov	rsi, r13
ffffffff80004a59: ff 15 d9 79 03 00    	call	qword ptr [rip + 0x379d9] # 0xffffffff8003c438
ffffffff80004a5f: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004a64: 4c 89 ef             	mov	rdi, r13
ffffffff80004a67: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004a6f: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004a71: 4b 8d 34 e6          	lea	rsi, [r14 + 8*r12]
ffffffff80004a75: 48 81 c6 b8 05 00 00 	add	rsi, 0x5b8
ffffffff80004a7c: 49 8d 3c de          	lea	rdi, [r14 + 8*rbx]
ffffffff80004a80: 48 81 c7 c8 05 00 00 	add	rdi, 0x5c8
ffffffff80004a87: 48 8d 14 ed 00 00 00 00      	lea	rdx, [8*rbp]
ffffffff80004a8f: ff 15 a3 79 03 00    	call	qword ptr [rip + 0x379a3] # 0xffffffff8003c438
ffffffff80004a95: eb 2e                	jmp	0xffffffff80004ac5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x7c5>
ffffffff80004a97: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80004aa0: 8b 44 24 04          	mov	eax, dword ptr [rsp + 0x4]
ffffffff80004aa4: 41 89 84 9e 88 05 00 00      	mov	dword ptr [r14 + 4*rbx + 0x588], eax
ffffffff80004aac: 48 89 df             	mov	rdi, rbx
ffffffff80004aaf: 48 c1 e7 07          	shl	rdi, 0x7
ffffffff80004ab3: 4c 01 f7             	add	rdi, r14
ffffffff80004ab6: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004abb: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004ac3: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004ac5: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80004aca: 4c 8b 2d 5f 79 03 00 	mov	r13, qword ptr [rip + 0x3795f] # 0xffffffff8003c430
ffffffff80004ad1: 41 8d 4f 01          	lea	ecx, [r15 + 0x1]
ffffffff80004ad5: 49 8d 47 02          	lea	rax, [r15 + 0x2]
ffffffff80004ad9: 49 89 94 de c0 05 00 00      	mov	qword ptr [r14 + 8*rbx + 0x5c0], rdx
ffffffff80004ae1: 66 41 89 8e b6 05 00 00      	mov	word ptr [r14 + 0x5b6], cx
ffffffff80004ae9: 49 39 c4             	cmp	r12, rax
ffffffff80004aec: 0f 83 1e fd ff ff    	jae	0xffffffff80004810 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x510>
ffffffff80004af2: 41 29 df             	sub	r15d, ebx
ffffffff80004af5: 41 ff c7             	inc	r15d
ffffffff80004af8: 41 83 e7 03          	and	r15d, 0x3
ffffffff80004afc: 74 33                	je	0xffffffff80004b31 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x831>
ffffffff80004afe: 49 8d 14 de          	lea	rdx, [r14 + 8*rbx]
ffffffff80004b02: 48 81 c2 c0 05 00 00 	add	rdx, 0x5c0
ffffffff80004b09: 31 c9                	xor	ecx, ecx
ffffffff80004b0b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80004b10: 48 8b 34 ca          	mov	rsi, qword ptr [rdx + 8*rcx]
ffffffff80004b14: 4c 89 b6 80 05 00 00 	mov	qword ptr [rsi + 0x580], r14
ffffffff80004b1b: 41 8d 3c 0c          	lea	edi, [r12 + rcx]
ffffffff80004b1f: 66 89 be b4 05 00 00 	mov	word ptr [rsi + 0x5b4], di
ffffffff80004b26: 48 ff c1             	inc	rcx
ffffffff80004b29: 49 39 cf             	cmp	r15, rcx
ffffffff80004b2c: 75 e2                	jne	0xffffffff80004b10 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x810>
ffffffff80004b2e: 49 01 cc             	add	r12, rcx
ffffffff80004b31: 48 83 fd 03          	cmp	rbp, 0x3
ffffffff80004b35: 0f 82 d5 fc ff ff    	jb	0xffffffff80004810 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x510>
ffffffff80004b3b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80004b40: 4b 8b 8c e6 b8 05 00 00      	mov	rcx, qword ptr [r14 + 8*r12 + 0x5b8]
ffffffff80004b48: 4c 89 b1 80 05 00 00 	mov	qword ptr [rcx + 0x580], r14
ffffffff80004b4f: 66 44 89 a1 b4 05 00 00      	mov	word ptr [rcx + 0x5b4], r12w
ffffffff80004b57: 4b 8b 8c e6 c0 05 00 00      	mov	rcx, qword ptr [r14 + 8*r12 + 0x5c0]
ffffffff80004b5f: 4c 89 b1 80 05 00 00 	mov	qword ptr [rcx + 0x580], r14
ffffffff80004b66: 41 8d 54 24 01       	lea	edx, [r12 + 0x1]
ffffffff80004b6b: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004b72: 4b 8b 8c e6 c8 05 00 00      	mov	rcx, qword ptr [r14 + 8*r12 + 0x5c8]
ffffffff80004b7a: 4c 89 b1 80 05 00 00 	mov	qword ptr [rcx + 0x580], r14
ffffffff80004b81: 41 8d 54 24 02       	lea	edx, [r12 + 0x2]
ffffffff80004b86: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004b8d: 4b 8b 8c e6 d0 05 00 00      	mov	rcx, qword ptr [r14 + 8*r12 + 0x5d0]
ffffffff80004b95: 4c 89 b1 80 05 00 00 	mov	qword ptr [rcx + 0x580], r14
ffffffff80004b9c: 41 8d 54 24 03       	lea	edx, [r12 + 0x3]
ffffffff80004ba1: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004ba8: 49 83 c4 04          	add	r12, 0x4
ffffffff80004bac: 49 39 c4             	cmp	r12, rax
ffffffff80004baf: 75 8f                	jne	0xffffffff80004b40 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x840>
ffffffff80004bb1: e9 5a fc ff ff       	jmp	0xffffffff80004810 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x510>
ffffffff80004bb6: 89 ab 9c 05 00 00    	mov	dword ptr [rbx + 0x59c], ebp
ffffffff80004bbc: 48 8d bb 80 02 00 00 	lea	rdi, [rbx + 0x280]
ffffffff80004bc3: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004bc8: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004bd0: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004bd2: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80004bd7: 48 89 83 e8 05 00 00 	mov	qword ptr [rbx + 0x5e8], rax
ffffffff80004bde: 66 44 89 bb b6 05 00 00      	mov	word ptr [rbx + 0x5b6], r15w
ffffffff80004be6: 41 83 fe 05          	cmp	r14d, 0x5
ffffffff80004bea: 4c 8d bc 24 00 01 00 00      	lea	r15, [rsp + 0x100]
ffffffff80004bf2: 4c 8b 2d 37 78 03 00 	mov	r13, qword ptr [rip + 0x37837] # 0xffffffff8003c430
ffffffff80004bf9: 0f 85 df 00 00 00    	jne	0xffffffff80004cde <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x9de>
ffffffff80004bff: 49 8d 4e fb          	lea	rcx, [r14 - 0x5]
ffffffff80004c03: b8 06 00 00 00       	mov	eax, 0x6
ffffffff80004c08: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80004c0c: 0f 82 9a 00 00 00    	jb	0xffffffff80004cac <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x9ac>
ffffffff80004c12: 44 89 f1             	mov	ecx, r14d
ffffffff80004c15: 83 e1 fc             	and	ecx, -0x4
ffffffff80004c18: 48 83 c1 f8          	add	rcx, -0x8
ffffffff80004c1c: b8 c0 00 00 00       	mov	eax, 0xc0
ffffffff80004c21: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80004c30: 48 89 c2             	mov	rdx, rax
ffffffff80004c33: 48 8b 44 c3 e8       	mov	rax, qword ptr [rbx + 8*rax - 0x18]
ffffffff80004c38: 48 89 98 80 05 00 00 	mov	qword ptr [rax + 0x580], rbx
ffffffff80004c3f: 8d b2 46 ff ff ff    	lea	esi, [rdx - 0xba]
ffffffff80004c45: 66 89 b0 b4 05 00 00 	mov	word ptr [rax + 0x5b4], si
ffffffff80004c4c: 48 8b 44 d3 f0       	mov	rax, qword ptr [rbx + 8*rdx - 0x10]
ffffffff80004c51: 48 89 98 80 05 00 00 	mov	qword ptr [rax + 0x580], rbx
ffffffff80004c58: 8d b2 47 ff ff ff    	lea	esi, [rdx - 0xb9]
ffffffff80004c5e: 66 89 b0 b4 05 00 00 	mov	word ptr [rax + 0x5b4], si
ffffffff80004c65: 48 8b 44 d3 f8       	mov	rax, qword ptr [rbx + 8*rdx - 0x8]
ffffffff80004c6a: 48 89 98 80 05 00 00 	mov	qword ptr [rax + 0x580], rbx
ffffffff80004c71: 8d b2 48 ff ff ff    	lea	esi, [rdx - 0xb8]
ffffffff80004c77: 66 89 b0 b4 05 00 00 	mov	word ptr [rax + 0x5b4], si
ffffffff80004c7e: 48 8b 04 d3          	mov	rax, qword ptr [rbx + 8*rdx]
ffffffff80004c82: 48 89 98 80 05 00 00 	mov	qword ptr [rax + 0x580], rbx
ffffffff80004c89: 8d b2 49 ff ff ff    	lea	esi, [rdx - 0xb7]
ffffffff80004c8f: 66 89 b0 b4 05 00 00 	mov	word ptr [rax + 0x5b4], si
ffffffff80004c96: 48 8d 42 04          	lea	rax, [rdx + 0x4]
ffffffff80004c9a: 48 81 c2 40 ff ff ff 	add	rdx, -0xc0
ffffffff80004ca1: 48 39 ca             	cmp	rdx, rcx
ffffffff80004ca4: 75 8a                	jne	0xffffffff80004c30 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x930>
ffffffff80004ca6: 48 05 46 ff ff ff    	add	rax, -0xba
ffffffff80004cac: 41 83 e6 03          	and	r14d, 0x3
ffffffff80004cb0: 74 2c                	je	0xffffffff80004cde <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x9de>
ffffffff80004cb2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80004cc0: 48 8b 8c c3 b8 05 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0x5b8]
ffffffff80004cc8: 48 89 99 80 05 00 00 	mov	qword ptr [rcx + 0x580], rbx
ffffffff80004ccf: 66 89 81 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], ax
ffffffff80004cd6: 48 ff c0             	inc	rax
ffffffff80004cd9: 49 ff ce             	dec	r14
ffffffff80004cdc: 75 e2                	jne	0xffffffff80004cc0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x9c0>
ffffffff80004cde: 4c 8b 74 24 60       	mov	r14, qword ptr [rsp + 0x60]
ffffffff80004ce3: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff80004ce8: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80004ced: 4c 8b 64 24 70       	mov	r12, qword ptr [rsp + 0x70]
ffffffff80004cf2: 8b 6c 24 78          	mov	ebp, dword ptr [rsp + 0x78]
ffffffff80004cf6: ba 84 00 00 00       	mov	edx, 0x84
ffffffff80004cfb: 4c 89 ff             	mov	rdi, r15
ffffffff80004cfe: 48 8d 74 24 7c       	lea	rsi, [rsp + 0x7c]
ffffffff80004d03: 41 ff d5             	call	r13
ffffffff80004d06: e9 43 fb ff ff       	jmp	0xffffffff8000484e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0x54e>
ffffffff80004d0b: 8b 6c 24 04          	mov	ebp, dword ptr [rsp + 0x4]
ffffffff80004d0f: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff80004d14: 48 8b 18             	mov	rbx, qword ptr [rax]
ffffffff80004d17: 4c 8b 33             	mov	r14, qword ptr [rbx]
ffffffff80004d1a: 4d 85 f6             	test	r14, r14
ffffffff80004d1d: 0f 84 3b 03 00 00    	je	0xffffffff8000505e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd5e>
ffffffff80004d23: 4c 8b 7b 08          	mov	r15, qword ptr [rbx + 0x8]
ffffffff80004d27: 0f b6 05 b3 64 02 00 	movzx	eax, byte ptr [rip + 0x264b3] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80004d2e: b1 01                	mov	cl, 0x1
ffffffff80004d30: 31 c0                	xor	eax, eax
ffffffff80004d32: f0                   	lock
ffffffff80004d33: 0f b0 0d c6 62 02 00 	cmpxchg	byte ptr [rip + 0x262c6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80004d3a: 75 06                	jne	0xffffffff80004d42 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa42>
ffffffff80004d3c: eb 11                	jmp	0xffffffff80004d4f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa4f>
ffffffff80004d3e: 66 90                	nop
ffffffff80004d40: f3 90                	pause
ffffffff80004d42: 0f b6 05 b7 62 02 00 	movzx	eax, byte ptr [rip + 0x262b7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80004d49: 84 c0                	test	al, al
ffffffff80004d4b: 75 f3                	jne	0xffffffff80004d40 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa40>
ffffffff80004d4d: eb e1                	jmp	0xffffffff80004d30 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xa30>
ffffffff80004d4f: be 08 00 00 00       	mov	esi, 0x8
ffffffff80004d54: ba 18 06 00 00       	mov	edx, 0x618
ffffffff80004d59: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80004d60: e8 eb 7c 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80004d65: c6 05 94 62 02 00 00 	mov	byte ptr [rip + 0x26294], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80004d6c: 48 85 c0             	test	rax, rax
ffffffff80004d6f: 0f 84 f5 02 00 00    	je	0xffffffff8000506a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd6a>
ffffffff80004d75: 48 c7 80 80 05 00 00 00 00 00 00     	mov	qword ptr [rax + 0x580], 0x0
ffffffff80004d80: 66 c7 80 b6 05 00 00 00 00   	mov	word ptr [rax + 0x5b6], 0x0
ffffffff80004d89: 4c 89 b0 b8 05 00 00 	mov	qword ptr [rax + 0x5b8], r14
ffffffff80004d90: 49 8d 4f 01          	lea	rcx, [r15 + 0x1]
ffffffff80004d94: 49 89 86 80 05 00 00 	mov	qword ptr [r14 + 0x580], rax
ffffffff80004d9b: 66 41 c7 86 b4 05 00 00 00 00	mov	word ptr [r14 + 0x5b4], 0x0
ffffffff80004da5: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff80004da8: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff80004dac: 4d 39 e7             	cmp	r15, r12
ffffffff80004daf: 0f 85 6a 02 00 00    	jne	0xffffffff8000501f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd1f>
ffffffff80004db5: 0f b7 90 b6 05 00 00 	movzx	edx, word ptr [rax + 0x5b6]
ffffffff80004dbc: 48 83 fa 0b          	cmp	rdx, 0xb
ffffffff80004dc0: 0f 83 71 02 00 00    	jae	0xffffffff80005037 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xd37>
ffffffff80004dc6: 44 8d 42 01          	lea	r8d, [rdx + 0x1]
ffffffff80004dca: 66 44 89 80 b6 05 00 00      	mov	word ptr [rax + 0x5b6], r8w
ffffffff80004dd2: 89 ac 90 88 05 00 00 	mov	dword ptr [rax + 4*rdx + 0x588], ebp
ffffffff80004dd9: 89 d1                	mov	ecx, edx
ffffffff80004ddb: c1 e1 07             	shl	ecx, 0x7
ffffffff80004dde: 48 89 c7             	mov	rdi, rax
ffffffff80004de1: 48 01 cf             	add	rdi, rcx
ffffffff80004de4: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004dec: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004df1: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004df3: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80004df8: 48 89 8c d0 c0 05 00 00      	mov	qword ptr [rax + 8*rdx + 0x5c0], rcx
ffffffff80004e00: 48 89 81 80 05 00 00 	mov	qword ptr [rcx + 0x580], rax
ffffffff80004e07: 66 44 89 81 b4 05 00 00      	mov	word ptr [rcx + 0x5b4], r8w
ffffffff80004e0f: 4c 8b 44 24 28       	mov	r8, qword ptr [rsp + 0x28]
ffffffff80004e14: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80004e19: 49 89 00             	mov	qword ptr [r8], rax
ffffffff80004e1c: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80004e21: 49 89 40 08          	mov	qword ptr [r8 + 0x8], rax
ffffffff80004e25: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80004e2a: 49 89 40 10          	mov	qword ptr [r8 + 0x10], rax
ffffffff80004e2e: 4c 89 c0             	mov	rax, r8
ffffffff80004e31: 48 81 c4 08 02 00 00 	add	rsp, 0x208
ffffffff80004e38: 5b                   	pop	rbx
ffffffff80004e39: 41 5c                	pop	r12
ffffffff80004e3b: 41 5d                	pop	r13
ffffffff80004e3d: 41 5e                	pop	r14
ffffffff80004e3f: 41 5f                	pop	r15
ffffffff80004e41: 5d                   	pop	rbp
ffffffff80004e42: c3                   	ret
ffffffff80004e43: 41 8d 54 24 01       	lea	edx, [r12 + 0x1]
ffffffff80004e48: 4c 8d 73 01          	lea	r14, [rbx + 0x1]
ffffffff80004e4c: 66 44 39 e3          	cmp	bx, r12w
ffffffff80004e50: 0f 83 95 00 00 00    	jae	0xffffffff80004eeb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xbeb>
ffffffff80004e56: 49 8d 85 88 05 00 00 	lea	rax, [r13 + 0x588]
ffffffff80004e5d: 48 8d 34 9d 88 05 00 00      	lea	rsi, [4*rbx + 0x588]
ffffffff80004e65: 4c 01 ee             	add	rsi, r13
ffffffff80004e68: 4a 8d 3c b0          	lea	rdi, [rax + 4*r14]
ffffffff80004e6c: 4d 89 e7             	mov	r15, r12
ffffffff80004e6f: 49 29 df             	sub	r15, rbx
ffffffff80004e72: 89 54 24 04          	mov	dword ptr [rsp + 0x4], edx
ffffffff80004e76: 4a 8d 14 bd 00 00 00 00      	lea	rdx, [4*r15]
ffffffff80004e7e: 48 8b 05 b3 75 03 00 	mov	rax, qword ptr [rip + 0x375b3] # 0xffffffff8003c438
ffffffff80004e85: ff d0                	call	rax
ffffffff80004e87: 41 89 ac 9d 88 05 00 00      	mov	dword ptr [r13 + 4*rbx + 0x588], ebp
ffffffff80004e8f: 89 dd                	mov	ebp, ebx
ffffffff80004e91: c1 e5 07             	shl	ebp, 0x7
ffffffff80004e94: 4c 01 ed             	add	rbp, r13
ffffffff80004e97: 44 89 f7             	mov	edi, r14d
ffffffff80004e9a: c1 e7 07             	shl	edi, 0x7
ffffffff80004e9d: 4c 01 ef             	add	rdi, r13
ffffffff80004ea0: 4c 89 fa             	mov	rdx, r15
ffffffff80004ea3: 48 c1 e2 07          	shl	rdx, 0x7
ffffffff80004ea7: 48 89 ee             	mov	rsi, rbp
ffffffff80004eaa: ff 15 88 75 03 00    	call	qword ptr [rip + 0x37588] # 0xffffffff8003c438
ffffffff80004eb0: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004eb5: 48 89 ef             	mov	rdi, rbp
ffffffff80004eb8: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004ec0: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004ec2: 4a 8d 34 f5 b8 05 00 00      	lea	rsi, [8*r14 + 0x5b8]
ffffffff80004eca: 4c 01 ee             	add	rsi, r13
ffffffff80004ecd: 48 8d 3c dd c8 05 00 00      	lea	rdi, [8*rbx + 0x5c8]
ffffffff80004ed5: 4c 01 ef             	add	rdi, r13
ffffffff80004ed8: 49 c1 e7 03          	shl	r15, 0x3
ffffffff80004edc: 4c 89 fa             	mov	rdx, r15
ffffffff80004edf: ff 15 53 75 03 00    	call	qword ptr [rip + 0x37553] # 0xffffffff8003c438
ffffffff80004ee5: 8b 54 24 04          	mov	edx, dword ptr [rsp + 0x4]
ffffffff80004ee9: eb 1f                	jmp	0xffffffff80004f0a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xc0a>
ffffffff80004eeb: 41 89 ac 9d 88 05 00 00      	mov	dword ptr [r13 + 4*rbx + 0x588], ebp
ffffffff80004ef3: 89 df                	mov	edi, ebx
ffffffff80004ef5: c1 e7 07             	shl	edi, 0x7
ffffffff80004ef8: 4c 01 ef             	add	rdi, r13
ffffffff80004efb: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff80004f00: 48 8d b4 24 88 01 00 00      	lea	rsi, [rsp + 0x188]
ffffffff80004f08: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff80004f0a: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80004f0f: 49 8d 44 24 02       	lea	rax, [r12 + 0x2]
ffffffff80004f14: 49 89 8c dd c0 05 00 00      	mov	qword ptr [r13 + 8*rbx + 0x5c0], rcx
ffffffff80004f1c: 66 41 89 95 b6 05 00 00      	mov	word ptr [r13 + 0x5b6], dx
ffffffff80004f24: 41 39 c6             	cmp	r14d, eax
ffffffff80004f27: 0f 83 e2 fe ff ff    	jae	0xffffffff80004e0f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb0f>
ffffffff80004f2d: 44 89 e1             	mov	ecx, r12d
ffffffff80004f30: 29 d9                	sub	ecx, ebx
ffffffff80004f32: ff c1                	inc	ecx
ffffffff80004f34: 49 29 dc             	sub	r12, rbx
ffffffff80004f37: 83 e1 03             	and	ecx, 0x3
ffffffff80004f3a: 74 36                	je	0xffffffff80004f72 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xc72>
ffffffff80004f3c: 48 8d 34 dd c0 05 00 00      	lea	rsi, [8*rbx + 0x5c0]
ffffffff80004f44: 4c 01 ee             	add	rsi, r13
ffffffff80004f47: 31 d2                	xor	edx, edx
ffffffff80004f49: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80004f50: 48 8b 3c d6          	mov	rdi, qword ptr [rsi + 8*rdx]
ffffffff80004f54: 4c 89 af 80 05 00 00 	mov	qword ptr [rdi + 0x580], r13
ffffffff80004f5b: 45 8d 04 16          	lea	r8d, [r14 + rdx]
ffffffff80004f5f: 66 44 89 87 b4 05 00 00      	mov	word ptr [rdi + 0x5b4], r8w
ffffffff80004f67: 48 ff c2             	inc	rdx
ffffffff80004f6a: 48 39 d1             	cmp	rcx, rdx
ffffffff80004f6d: 75 e1                	jne	0xffffffff80004f50 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xc50>
ffffffff80004f6f: 49 01 d6             	add	r14, rdx
ffffffff80004f72: 49 83 fc 03          	cmp	r12, 0x3
ffffffff80004f76: 0f 82 93 fe ff ff    	jb	0xffffffff80004e0f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb0f>
ffffffff80004f7c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80004f80: 4b 8b 8c f5 b8 05 00 00      	mov	rcx, qword ptr [r13 + 8*r14 + 0x5b8]
ffffffff80004f88: 4c 89 a9 80 05 00 00 	mov	qword ptr [rcx + 0x580], r13
ffffffff80004f8f: 66 44 89 b1 b4 05 00 00      	mov	word ptr [rcx + 0x5b4], r14w
ffffffff80004f97: 4b 8b 8c f5 c0 05 00 00      	mov	rcx, qword ptr [r13 + 8*r14 + 0x5c0]
ffffffff80004f9f: 4c 89 a9 80 05 00 00 	mov	qword ptr [rcx + 0x580], r13
ffffffff80004fa6: 41 8d 56 01          	lea	edx, [r14 + 0x1]
ffffffff80004faa: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004fb1: 4b 8b 8c f5 c8 05 00 00      	mov	rcx, qword ptr [r13 + 8*r14 + 0x5c8]
ffffffff80004fb9: 4c 89 a9 80 05 00 00 	mov	qword ptr [rcx + 0x580], r13
ffffffff80004fc0: 41 8d 56 02          	lea	edx, [r14 + 0x2]
ffffffff80004fc4: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004fcb: 4b 8b 8c f5 d0 05 00 00      	mov	rcx, qword ptr [r13 + 8*r14 + 0x5d0]
ffffffff80004fd3: 4c 89 a9 80 05 00 00 	mov	qword ptr [rcx + 0x580], r13
ffffffff80004fda: 41 8d 56 03          	lea	edx, [r14 + 0x3]
ffffffff80004fde: 66 89 91 b4 05 00 00 	mov	word ptr [rcx + 0x5b4], dx
ffffffff80004fe5: 49 83 c6 04          	add	r14, 0x4
ffffffff80004fe9: 49 39 c6             	cmp	r14, rax
ffffffff80004fec: 75 92                	jne	0xffffffff80004f80 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xc80>
ffffffff80004fee: e9 1c fe ff ff       	jmp	0xffffffff80004e0f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af+0xb0f>
ffffffff80004ff3: be 35 00 00 00       	mov	esi, 0x35
ffffffff80004ff8: 48 c7 c7 00 27 02 80 	mov	rdi, -0x7ffdd900
ffffffff80004fff: 48 c7 c2 38 27 02 80 	mov	rdx, -0x7ffdd8c8
ffffffff80005006: e8 e5 c0 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000500b: be 0b 00 00 00       	mov	esi, 0xb
ffffffff80005010: 4c 89 e7             	mov	rdi, r12
ffffffff80005013: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff8000501a: e8 e1 bb 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000501f: be 30 00 00 00       	mov	esi, 0x30
ffffffff80005024: 48 c7 c7 88 25 02 80 	mov	rdi, -0x7ffdda78
ffffffff8000502b: 48 c7 c2 b8 25 02 80 	mov	rdx, -0x7ffdda48
ffffffff80005032: e8 b9 c0 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005037: be 20 00 00 00       	mov	esi, 0x20
ffffffff8000503c: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff80005043: 48 c7 c2 d0 25 02 80 	mov	rdx, -0x7ffdda30
ffffffff8000504a: e8 a1 c0 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000504f: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80005054: be b8 05 00 00       	mov	esi, 0x5b8
ffffffff80005059: e8 54 8b 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000505e: 48 c7 c7 f0 23 02 80 	mov	rdi, -0x7ffddc10
ffffffff80005065: e8 d6 c5 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8000506a: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000506f: be 18 06 00 00       	mov	esi, 0x618
ffffffff80005074: e8 39 8b 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80005079: cc                   	int3
ffffffff8000507a: cc                   	int3
ffffffff8000507b: cc                   	int3
ffffffff8000507c: cc                   	int3
ffffffff8000507d: cc                   	int3
ffffffff8000507e: cc                   	int3
ffffffff8000507f: cc                   	int3

ffffffff80005080 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>:
ffffffff80005080: 55                   	push	rbp
ffffffff80005081: 41 57                	push	r15
ffffffff80005083: 41 56                	push	r14
ffffffff80005085: 41 55                	push	r13
ffffffff80005087: 41 54                	push	r12
ffffffff80005089: 53                   	push	rbx
ffffffff8000508a: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8000508e: 48 89 f3             	mov	rbx, rsi
ffffffff80005091: 49 89 ff             	mov	r15, rdi
ffffffff80005094: 48 8b 2e             	mov	rbp, qword ptr [rsi]
ffffffff80005097: 0f b7 95 8e 00 00 00 	movzx	edx, word ptr [rbp + 0x8e]
ffffffff8000509e: 0f b6 05 3c 61 02 00 	movzx	eax, byte ptr [rip + 0x2613c] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800050a5: b1 01                	mov	cl, 0x1
ffffffff800050a7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff800050b0: 31 c0                	xor	eax, eax
ffffffff800050b2: f0                   	lock
ffffffff800050b3: 0f b0 0d 46 5f 02 00 	cmpxchg	byte ptr [rip + 0x25f46], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800050ba: 75 06                	jne	0xffffffff800050c2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x42>
ffffffff800050bc: eb 11                	jmp	0xffffffff800050cf <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x4f>
ffffffff800050be: 66 90                	nop
ffffffff800050c0: f3 90                	pause
ffffffff800050c2: 0f b6 05 37 5f 02 00 	movzx	eax, byte ptr [rip + 0x25f37] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800050c9: 84 c0                	test	al, al
ffffffff800050cb: 75 f3                	jne	0xffffffff800050c0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x40>
ffffffff800050cd: eb e1                	jmp	0xffffffff800050b0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x30>
ffffffff800050cf: 48 89 54 24 20       	mov	qword ptr [rsp + 0x20], rdx
ffffffff800050d4: be 08 00 00 00       	mov	esi, 0x8
ffffffff800050d9: ba f0 00 00 00       	mov	edx, 0xf0
ffffffff800050de: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800050e5: e8 66 79 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800050ea: c6 05 0f 5f 02 00 00 	mov	byte ptr [rip + 0x25f0f], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800050f1: 48 85 c0             	test	rax, rax
ffffffff800050f4: 0f 84 8c 01 00 00    	je	0xffffffff80005286 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x206>
ffffffff800050fa: 49 89 c4             	mov	r12, rax
ffffffff800050fd: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80005104: 66 c7 80 8e 00 00 00 00 00   	mov	word ptr [rax + 0x8e], 0x0
ffffffff8000510d: 4c 8b 73 10          	mov	r14, qword ptr [rbx + 0x10]
ffffffff80005111: 0f b7 85 8e 00 00 00 	movzx	eax, word ptr [rbp + 0x8e]
ffffffff80005118: 4d 89 f5             	mov	r13, r14
ffffffff8000511b: 49 f7 d5             	not	r13
ffffffff8000511e: 49 01 c5             	add	r13, rax
ffffffff80005121: 66 45 89 ac 24 8e 00 00 00   	mov	word ptr [r12 + 0x8e], r13w
ffffffff8000512a: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff8000512e: 0f 83 2d 01 00 00    	jae	0xffffffff80005261 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1e1>
ffffffff80005134: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff80005139: 49 8d 5e 01          	lea	rbx, [r14 + 0x1]
ffffffff8000513d: 48 29 d8             	sub	rax, rbx
ffffffff80005140: 4c 39 e8             	cmp	rax, r13
ffffffff80005143: 0f 85 00 01 00 00    	jne	0xffffffff80005249 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1c9>
ffffffff80005149: 4c 89 7c 24 10       	mov	qword ptr [rsp + 0x10], r15
ffffffff8000514e: 48 8d 45 60          	lea	rax, [rbp + 0x60]
ffffffff80005152: 42 8b 4c b5 60       	mov	ecx, dword ptr [rbp + 4*r14 + 0x60]
ffffffff80005157: 89 4c 24 04          	mov	dword ptr [rsp + 0x4], ecx
ffffffff8000515b: 4c 8d 7d 08          	lea	r15, [rbp + 0x8]
ffffffff8000515f: 4a 8b 4c f5 08       	mov	rcx, qword ptr [rbp + 8*r14 + 0x8]
ffffffff80005164: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff80005169: 49 8d 7c 24 60       	lea	rdi, [r12 + 0x60]
ffffffff8000516e: 48 8d 34 98          	lea	rsi, [rax + 4*rbx]
ffffffff80005172: 4a 8d 14 ad 00 00 00 00      	lea	rdx, [4*r13]
ffffffff8000517a: ff 15 b0 72 03 00    	call	qword ptr [rip + 0x372b0] # 0xffffffff8003c430
ffffffff80005180: 49 8d 34 df          	lea	rsi, [r15 + 8*rbx]
ffffffff80005184: 49 8d 7c 24 08       	lea	rdi, [r12 + 0x8]
ffffffff80005189: 49 c1 e5 03          	shl	r13, 0x3
ffffffff8000518d: 4c 89 ea             	mov	rdx, r13
ffffffff80005190: ff 15 9a 72 03 00    	call	qword ptr [rip + 0x3729a] # 0xffffffff8003c430
ffffffff80005196: 66 44 89 b5 8e 00 00 00      	mov	word ptr [rbp + 0x8e], r14w
ffffffff8000519e: 45 0f b7 ac 24 8e 00 00 00   	movzx	r13d, word ptr [r12 + 0x8e]
ffffffff800051a7: 49 8d 7d 01          	lea	rdi, [r13 + 0x1]
ffffffff800051ab: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff800051af: 0f 83 c0 00 00 00    	jae	0xffffffff80005275 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1f5>
ffffffff800051b5: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff800051ba: 4c 29 f2             	sub	rdx, r14
ffffffff800051bd: 48 39 fa             	cmp	rdx, rdi
ffffffff800051c0: 0f 85 83 00 00 00    	jne	0xffffffff80005249 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1c9>
ffffffff800051c6: 4c 89 e7             	mov	rdi, r12
ffffffff800051c9: 48 81 c7 90 00 00 00 	add	rdi, 0x90
ffffffff800051d0: 4a 8d 34 f5 98 00 00 00      	lea	rsi, [8*r14 + 0x98]
ffffffff800051d8: 48 01 ee             	add	rsi, rbp
ffffffff800051db: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff800051df: ff 15 4b 72 03 00    	call	qword ptr [rip + 0x3724b] # 0xffffffff8003c430
ffffffff800051e5: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff800051ea: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff800051ee: 31 c9                	xor	ecx, ecx
ffffffff800051f0: 48 89 ca             	mov	rdx, rcx
ffffffff800051f3: 4c 39 e9             	cmp	rcx, r13
ffffffff800051f6: 48 83 d1 00          	adc	rcx, 0x0
ffffffff800051fa: 49 8b b4 d4 90 00 00 00      	mov	rsi, qword ptr [r12 + 8*rdx + 0x90]
ffffffff80005202: 4c 89 26             	mov	qword ptr [rsi], r12
ffffffff80005205: 66 89 96 8c 00 00 00 	mov	word ptr [rsi + 0x8c], dx
ffffffff8000520c: 4c 39 ea             	cmp	rdx, r13
ffffffff8000520f: 73 05                	jae	0xffffffff80005216 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x196>
ffffffff80005211: 4c 39 e9             	cmp	rcx, r13
ffffffff80005214: 76 da                	jbe	0xffffffff800051f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x170>
ffffffff80005216: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff8000521b: 48 89 29             	mov	qword ptr [rcx], rbp
ffffffff8000521e: 48 89 41 08          	mov	qword ptr [rcx + 0x8], rax
ffffffff80005222: 8b 54 24 04          	mov	edx, dword ptr [rsp + 0x4]
ffffffff80005226: 89 51 20             	mov	dword ptr [rcx + 0x20], edx
ffffffff80005229: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8000522e: 48 89 51 28          	mov	qword ptr [rcx + 0x28], rdx
ffffffff80005232: 4c 89 61 10          	mov	qword ptr [rcx + 0x10], r12
ffffffff80005236: 48 89 41 18          	mov	qword ptr [rcx + 0x18], rax
ffffffff8000523a: 48 83 c4 28          	add	rsp, 0x28
ffffffff8000523e: 5b                   	pop	rbx
ffffffff8000523f: 41 5c                	pop	r12
ffffffff80005241: 41 5d                	pop	r13
ffffffff80005243: 41 5e                	pop	r14
ffffffff80005245: 41 5f                	pop	r15
ffffffff80005247: 5d                   	pop	rbp
ffffffff80005248: c3                   	ret
ffffffff80005249: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000524e: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80005255: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff8000525c: e8 8f be 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005261: be 0b 00 00 00       	mov	esi, 0xb
ffffffff80005266: 4c 89 ef             	mov	rdi, r13
ffffffff80005269: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff80005270: e8 8b b9 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80005275: be 0c 00 00 00       	mov	esi, 0xc
ffffffff8000527a: 48 c7 c2 e8 26 02 80 	mov	rdx, -0x7ffdd918
ffffffff80005281: e8 7a b9 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80005286: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000528b: be f0 00 00 00       	mov	esi, 0xf0
ffffffff80005290: e8 1d 89 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80005295: cc                   	int3
ffffffff80005296: cc                   	int3
ffffffff80005297: cc                   	int3
ffffffff80005298: cc                   	int3
ffffffff80005299: cc                   	int3
ffffffff8000529a: cc                   	int3
ffffffff8000529b: cc                   	int3
ffffffff8000529c: cc                   	int3
ffffffff8000529d: cc                   	int3
ffffffff8000529e: cc                   	int3
ffffffff8000529f: cc                   	int3

ffffffff800052a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704>:
ffffffff800052a0: 55                   	push	rbp
ffffffff800052a1: 41 57                	push	r15
ffffffff800052a3: 41 56                	push	r14
ffffffff800052a5: 41 55                	push	r13
ffffffff800052a7: 41 54                	push	r12
ffffffff800052a9: 53                   	push	rbx
ffffffff800052aa: 48 81 ec 28 01 00 00 	sub	rsp, 0x128
ffffffff800052b1: 48 89 f3             	mov	rbx, rsi
ffffffff800052b4: 48 89 fd             	mov	rbp, rdi
ffffffff800052b7: 4c 8b 36             	mov	r14, qword ptr [rsi]
ffffffff800052ba: 45 0f b7 a6 b6 05 00 00      	movzx	r12d, word ptr [r14 + 0x5b6]
ffffffff800052c2: 0f b6 05 18 5f 02 00 	movzx	eax, byte ptr [rip + 0x25f18] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800052c9: b1 01                	mov	cl, 0x1
ffffffff800052cb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800052d0: 31 c0                	xor	eax, eax
ffffffff800052d2: f0                   	lock
ffffffff800052d3: 0f b0 0d 26 5d 02 00 	cmpxchg	byte ptr [rip + 0x25d26], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800052da: 75 06                	jne	0xffffffff800052e2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x42>
ffffffff800052dc: eb 11                	jmp	0xffffffff800052ef <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x4f>
ffffffff800052de: 66 90                	nop
ffffffff800052e0: f3 90                	pause
ffffffff800052e2: 0f b6 05 17 5d 02 00 	movzx	eax, byte ptr [rip + 0x25d17] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800052e9: 84 c0                	test	al, al
ffffffff800052eb: 75 f3                	jne	0xffffffff800052e0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x40>
ffffffff800052ed: eb e1                	jmp	0xffffffff800052d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x30>
ffffffff800052ef: be 08 00 00 00       	mov	esi, 0x8
ffffffff800052f4: ba 18 06 00 00       	mov	edx, 0x618
ffffffff800052f9: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80005300: e8 4b 77 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80005305: c6 05 f4 5c 02 00 00 	mov	byte ptr [rip + 0x25cf4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000530c: 48 85 c0             	test	rax, rax
ffffffff8000530f: 0f 84 dd 01 00 00    	je	0xffffffff800054f2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x252>
ffffffff80005315: 49 89 c7             	mov	r15, rax
ffffffff80005318: 48 c7 80 80 05 00 00 00 00 00 00     	mov	qword ptr [rax + 0x580], 0x0
ffffffff80005323: 66 c7 80 b6 05 00 00 00 00   	mov	word ptr [rax + 0x5b6], 0x0
ffffffff8000532c: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff80005331: 48 8b 5b 10          	mov	rbx, qword ptr [rbx + 0x10]
ffffffff80005335: 41 0f b7 86 b6 05 00 00      	movzx	eax, word ptr [r14 + 0x5b6]
ffffffff8000533d: 49 89 dd             	mov	r13, rbx
ffffffff80005340: 49 f7 d5             	not	r13
ffffffff80005343: 49 01 c5             	add	r13, rax
ffffffff80005346: 66 45 89 af b6 05 00 00      	mov	word ptr [r15 + 0x5b6], r13w
ffffffff8000534e: 41 8b 94 9e 88 05 00 00      	mov	edx, dword ptr [r14 + 4*rbx + 0x588]
ffffffff80005356: 48 89 de             	mov	rsi, rbx
ffffffff80005359: 48 c1 e6 07          	shl	rsi, 0x7
ffffffff8000535d: 4c 01 f6             	add	rsi, r14
ffffffff80005360: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80005365: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff8000536a: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff8000536d: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff80005371: 0f 83 56 01 00 00    	jae	0xffffffff800054cd <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x22d>
ffffffff80005377: 48 89 6c 24 10       	mov	qword ptr [rsp + 0x10], rbp
ffffffff8000537c: 48 8d 6b 01          	lea	rbp, [rbx + 0x1]
ffffffff80005380: 48 29 e8             	sub	rax, rbp
ffffffff80005383: 4c 39 e8             	cmp	rax, r13
ffffffff80005386: 0f 85 29 01 00 00    	jne	0xffffffff800054b5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x215>
ffffffff8000538c: 4c 89 64 24 08       	mov	qword ptr [rsp + 0x8], r12
ffffffff80005391: 89 54 24 04          	mov	dword ptr [rsp + 0x4], edx
ffffffff80005395: 49 8d 86 88 05 00 00 	lea	rax, [r14 + 0x588]
ffffffff8000539c: 49 8d bf 88 05 00 00 	lea	rdi, [r15 + 0x588]
ffffffff800053a3: 48 8d 34 a8          	lea	rsi, [rax + 4*rbp]
ffffffff800053a7: 4a 8d 14 ad 00 00 00 00      	lea	rdx, [4*r13]
ffffffff800053af: 4c 8b 25 7a 70 03 00 	mov	r12, qword ptr [rip + 0x3707a] # 0xffffffff8003c430
ffffffff800053b6: 41 ff d4             	call	r12
ffffffff800053b9: 48 c1 e5 07          	shl	rbp, 0x7
ffffffff800053bd: 4c 01 f5             	add	rbp, r14
ffffffff800053c0: 49 c1 e5 07          	shl	r13, 0x7
ffffffff800053c4: 4c 89 ff             	mov	rdi, r15
ffffffff800053c7: 48 89 ee             	mov	rsi, rbp
ffffffff800053ca: 4c 89 ea             	mov	rdx, r13
ffffffff800053cd: 41 ff d4             	call	r12
ffffffff800053d0: 66 41 89 9e b6 05 00 00      	mov	word ptr [r14 + 0x5b6], bx
ffffffff800053d8: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff800053e0: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff800053e5: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff800053ea: f3 a5                	rep		movsd	dword ptr es:[rdi], dword ptr [rsi]
ffffffff800053ec: 45 0f b7 af b6 05 00 00      	movzx	r13d, word ptr [r15 + 0x5b6]
ffffffff800053f4: 49 8d 7d 01          	lea	rdi, [r13 + 0x1]
ffffffff800053f8: 49 83 fd 0c          	cmp	r13, 0xc
ffffffff800053fc: 0f 83 df 00 00 00    	jae	0xffffffff800054e1 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x241>
ffffffff80005402: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80005407: 48 29 da             	sub	rdx, rbx
ffffffff8000540a: 48 39 fa             	cmp	rdx, rdi
ffffffff8000540d: 0f 85 a2 00 00 00    	jne	0xffffffff800054b5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x215>
ffffffff80005413: 4c 89 ff             	mov	rdi, r15
ffffffff80005416: 48 81 c7 b8 05 00 00 	add	rdi, 0x5b8
ffffffff8000541d: 49 8d 34 de          	lea	rsi, [r14 + 8*rbx]
ffffffff80005421: 48 81 c6 c0 05 00 00 	add	rsi, 0x5c0
ffffffff80005428: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff8000542c: ff 15 fe 6f 03 00    	call	qword ptr [rip + 0x36ffe] # 0xffffffff8003c430
ffffffff80005432: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80005437: 48 8b 58 08          	mov	rbx, qword ptr [rax + 0x8]
ffffffff8000543b: 31 c0                	xor	eax, eax
ffffffff8000543d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80005440: 48 89 c1             	mov	rcx, rax
ffffffff80005443: 4c 39 e8             	cmp	rax, r13
ffffffff80005446: 48 83 d0 00          	adc	rax, 0x0
ffffffff8000544a: 49 8b 94 cf b8 05 00 00      	mov	rdx, qword ptr [r15 + 8*rcx + 0x5b8]
ffffffff80005452: 4c 89 ba 80 05 00 00 	mov	qword ptr [rdx + 0x580], r15
ffffffff80005459: 66 89 8a b4 05 00 00 	mov	word ptr [rdx + 0x5b4], cx
ffffffff80005460: 4c 39 e9             	cmp	rcx, r13
ffffffff80005463: 73 05                	jae	0xffffffff8000546a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x1ca>
ffffffff80005465: 4c 39 e8             	cmp	rax, r13
ffffffff80005468: 76 d6                	jbe	0xffffffff80005440 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0b9d8aaa0b200704+0x1a0>
ffffffff8000546a: 4c 8b 64 24 10       	mov	r12, qword ptr [rsp + 0x10]
ffffffff8000546f: 4d 89 34 24          	mov	qword ptr [r12], r14
ffffffff80005473: 49 89 5c 24 08       	mov	qword ptr [r12 + 0x8], rbx
ffffffff80005478: 8b 44 24 04          	mov	eax, dword ptr [rsp + 0x4]
ffffffff8000547c: 41 89 44 24 20       	mov	dword ptr [r12 + 0x20], eax
ffffffff80005481: 49 8d 7c 24 24       	lea	rdi, [r12 + 0x24]
ffffffff80005486: 48 8d b4 24 a4 00 00 00      	lea	rsi, [rsp + 0xa4]
ffffffff8000548e: ba 84 00 00 00       	mov	edx, 0x84
ffffffff80005493: ff 15 97 6f 03 00    	call	qword ptr [rip + 0x36f97] # 0xffffffff8003c430
ffffffff80005499: 4d 89 7c 24 10       	mov	qword ptr [r12 + 0x10], r15
ffffffff8000549e: 49 89 5c 24 18       	mov	qword ptr [r12 + 0x18], rbx
ffffffff800054a3: 48 81 c4 28 01 00 00 	add	rsp, 0x128
ffffffff800054aa: 5b                   	pop	rbx
ffffffff800054ab: 41 5c                	pop	r12
ffffffff800054ad: 41 5d                	pop	r13
ffffffff800054af: 41 5e                	pop	r14
ffffffff800054b1: 41 5f                	pop	r15
ffffffff800054b3: 5d                   	pop	rbp
ffffffff800054b4: c3                   	ret
ffffffff800054b5: be 28 00 00 00       	mov	esi, 0x28
ffffffff800054ba: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff800054c1: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff800054c8: e8 23 bc 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800054cd: be 0b 00 00 00       	mov	esi, 0xb
ffffffff800054d2: 4c 89 ef             	mov	rdi, r13
ffffffff800054d5: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff800054dc: e8 1f b7 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800054e1: be 0c 00 00 00       	mov	esi, 0xc
ffffffff800054e6: 48 c7 c2 e8 26 02 80 	mov	rdx, -0x7ffdd918
ffffffff800054ed: e8 0e b7 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800054f2: bf 08 00 00 00       	mov	edi, 0x8
ffffffff800054f7: be 18 06 00 00       	mov	esi, 0x618
ffffffff800054fc: e8 b1 86 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80005501: cc                   	int3
ffffffff80005502: cc                   	int3
ffffffff80005503: cc                   	int3
ffffffff80005504: cc                   	int3
ffffffff80005505: cc                   	int3
ffffffff80005506: cc                   	int3
ffffffff80005507: cc                   	int3
ffffffff80005508: cc                   	int3
ffffffff80005509: cc                   	int3
ffffffff8000550a: cc                   	int3
ffffffff8000550b: cc                   	int3
ffffffff8000550c: cc                   	int3
ffffffff8000550d: cc                   	int3
ffffffff8000550e: cc                   	int3
ffffffff8000550f: cc                   	int3

ffffffff80005510 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>:
ffffffff80005510: 55                   	push	rbp
ffffffff80005511: 41 57                	push	r15
ffffffff80005513: 41 56                	push	r14
ffffffff80005515: 41 55                	push	r13
ffffffff80005517: 41 54                	push	r12
ffffffff80005519: 53                   	push	rbx
ffffffff8000551a: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8000551e: 49 89 f6             	mov	r14, rsi
ffffffff80005521: 48 89 fb             	mov	rbx, rdi
ffffffff80005524: 4c 8b 2e             	mov	r13, qword ptr [rsi]
ffffffff80005527: 45 0f b7 7d 62       	movzx	r15d, word ptr [r13 + 0x62]
ffffffff8000552c: 0f b6 05 ae 5c 02 00 	movzx	eax, byte ptr [rip + 0x25cae] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80005533: b1 01                	mov	cl, 0x1
ffffffff80005535: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80005540: 31 c0                	xor	eax, eax
ffffffff80005542: f0                   	lock
ffffffff80005543: 0f b0 0d b6 5a 02 00 	cmpxchg	byte ptr [rip + 0x25ab6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000554a: 75 06                	jne	0xffffffff80005552 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x42>
ffffffff8000554c: eb 11                	jmp	0xffffffff8000555f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x4f>
ffffffff8000554e: 66 90                	nop
ffffffff80005550: f3 90                	pause
ffffffff80005552: 0f b6 05 a7 5a 02 00 	movzx	eax, byte ptr [rip + 0x25aa7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80005559: 84 c0                	test	al, al
ffffffff8000555b: 75 f3                	jne	0xffffffff80005550 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x40>
ffffffff8000555d: eb e1                	jmp	0xffffffff80005540 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x30>
ffffffff8000555f: be 08 00 00 00       	mov	esi, 0x8
ffffffff80005564: ba c8 00 00 00       	mov	edx, 0xc8
ffffffff80005569: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80005570: e8 db 74 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80005575: c6 05 84 5a 02 00 00 	mov	byte ptr [rip + 0x25a84], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000557c: 48 85 c0             	test	rax, rax
ffffffff8000557f: 0f 84 3f 01 00 00    	je	0xffffffff800056c4 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x1b4>
ffffffff80005585: 49 89 c4             	mov	r12, rax
ffffffff80005588: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff8000558f: 66 c7 40 62 00 00    	mov	word ptr [rax + 0x62], 0x0
ffffffff80005595: 49 8b 6e 10          	mov	rbp, qword ptr [r14 + 0x10]
ffffffff80005599: 41 0f b7 45 62       	movzx	eax, word ptr [r13 + 0x62]
ffffffff8000559e: 48 89 ea             	mov	rdx, rbp
ffffffff800055a1: 48 f7 d2             	not	rdx
ffffffff800055a4: 48 01 c2             	add	rdx, rax
ffffffff800055a7: 66 41 89 54 24 62    	mov	word ptr [r12 + 0x62], dx
ffffffff800055ad: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff800055b1: 0f 83 e8 00 00 00    	jae	0xffffffff8000569f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x18f>
ffffffff800055b7: 48 8d 4d 01          	lea	rcx, [rbp + 0x1]
ffffffff800055bb: 48 29 c8             	sub	rax, rcx
ffffffff800055be: 48 39 d0             	cmp	rax, rdx
ffffffff800055c1: 0f 85 c0 00 00 00    	jne	0xffffffff80005687 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x177>
ffffffff800055c7: 4c 89 74 24 10       	mov	qword ptr [rsp + 0x10], r14
ffffffff800055cc: 49 8d 45 08          	lea	rax, [r13 + 0x8]
ffffffff800055d0: 49 8b 74 ed 08       	mov	rsi, qword ptr [r13 + 8*rbp + 0x8]
ffffffff800055d5: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff800055da: 49 8d 7c 24 08       	lea	rdi, [r12 + 0x8]
ffffffff800055df: 48 8d 34 c8          	lea	rsi, [rax + 8*rcx]
ffffffff800055e3: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff800055e7: ff 15 43 6e 03 00    	call	qword ptr [rip + 0x36e43] # 0xffffffff8003c430
ffffffff800055ed: 66 41 89 6d 62       	mov	word ptr [r13 + 0x62], bp
ffffffff800055f2: 45 0f b7 74 24 62    	movzx	r14d, word ptr [r12 + 0x62]
ffffffff800055f8: 49 8d 7e 01          	lea	rdi, [r14 + 0x1]
ffffffff800055fc: 49 83 fe 0c          	cmp	r14, 0xc
ffffffff80005600: 0f 83 ad 00 00 00    	jae	0xffffffff800056b3 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x1a3>
ffffffff80005606: 49 29 ef             	sub	r15, rbp
ffffffff80005609: 49 39 ff             	cmp	r15, rdi
ffffffff8000560c: 75 79                	jne	0xffffffff80005687 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x177>
ffffffff8000560e: 4c 89 e7             	mov	rdi, r12
ffffffff80005611: 48 83 c7 68          	add	rdi, 0x68
ffffffff80005615: 48 8d 34 ed 70 00 00 00      	lea	rsi, [8*rbp + 0x70]
ffffffff8000561d: 4c 01 ee             	add	rsi, r13
ffffffff80005620: 49 c1 e7 03          	shl	r15, 0x3
ffffffff80005624: 4c 89 fa             	mov	rdx, r15
ffffffff80005627: ff 15 03 6e 03 00    	call	qword ptr [rip + 0x36e03] # 0xffffffff8003c430
ffffffff8000562d: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80005632: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff80005636: 31 c9                	xor	ecx, ecx
ffffffff80005638: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80005640: 48 89 ca             	mov	rdx, rcx
ffffffff80005643: 4c 39 f1             	cmp	rcx, r14
ffffffff80005646: 48 83 d1 00          	adc	rcx, 0x0
ffffffff8000564a: 49 8b 74 d4 68       	mov	rsi, qword ptr [r12 + 8*rdx + 0x68]
ffffffff8000564f: 4c 89 26             	mov	qword ptr [rsi], r12
ffffffff80005652: 66 89 56 60          	mov	word ptr [rsi + 0x60], dx
ffffffff80005656: 4c 39 f2             	cmp	rdx, r14
ffffffff80005659: 73 05                	jae	0xffffffff80005660 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x150>
ffffffff8000565b: 4c 39 f1             	cmp	rcx, r14
ffffffff8000565e: 76 e0                	jbe	0xffffffff80005640 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x130>
ffffffff80005660: 4c 89 2b             	mov	qword ptr [rbx], r13
ffffffff80005663: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff80005667: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8000566c: 48 89 4b 20          	mov	qword ptr [rbx + 0x20], rcx
ffffffff80005670: 4c 89 63 10          	mov	qword ptr [rbx + 0x10], r12
ffffffff80005674: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff80005678: 48 83 c4 18          	add	rsp, 0x18
ffffffff8000567c: 5b                   	pop	rbx
ffffffff8000567d: 41 5c                	pop	r12
ffffffff8000567f: 41 5d                	pop	r13
ffffffff80005681: 41 5e                	pop	r14
ffffffff80005683: 41 5f                	pop	r15
ffffffff80005685: 5d                   	pop	rbp
ffffffff80005686: c3                   	ret
ffffffff80005687: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000568c: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80005693: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff8000569a: e8 51 ba 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000569f: be 0b 00 00 00       	mov	esi, 0xb
ffffffff800056a4: 48 89 d7             	mov	rdi, rdx
ffffffff800056a7: 48 c7 c2 d0 26 02 80 	mov	rdx, -0x7ffdd930
ffffffff800056ae: e8 4d b5 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800056b3: be 0c 00 00 00       	mov	esi, 0xc
ffffffff800056b8: 48 c7 c2 e8 26 02 80 	mov	rdx, -0x7ffdd918
ffffffff800056bf: e8 3c b5 01 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800056c4: bf 08 00 00 00       	mov	edi, 0x8
ffffffff800056c9: be c8 00 00 00       	mov	esi, 0xc8
ffffffff800056ce: e8 df 84 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800056d3: cc                   	int3
ffffffff800056d4: cc                   	int3
ffffffff800056d5: cc                   	int3
ffffffff800056d6: cc                   	int3
ffffffff800056d7: cc                   	int3
ffffffff800056d8: cc                   	int3
ffffffff800056d9: cc                   	int3
ffffffff800056da: cc                   	int3
ffffffff800056db: cc                   	int3
ffffffff800056dc: cc                   	int3
ffffffff800056dd: cc                   	int3
ffffffff800056de: cc                   	int3
ffffffff800056df: cc                   	int3

ffffffff800056e0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>:
ffffffff800056e0: 55                   	push	rbp
ffffffff800056e1: 41 57                	push	r15
ffffffff800056e3: 41 56                	push	r14
ffffffff800056e5: 41 55                	push	r13
ffffffff800056e7: 41 54                	push	r12
ffffffff800056e9: 53                   	push	rbx
ffffffff800056ea: 48 83 ec 28          	sub	rsp, 0x28
ffffffff800056ee: 48 8b 6f 28          	mov	rbp, qword ptr [rdi + 0x28]
ffffffff800056f2: 0f b7 4d 62          	movzx	ecx, word ptr [rbp + 0x62]
ffffffff800056f6: 48 8d 04 31          	lea	rax, [rcx + rsi]
ffffffff800056fa: 48 83 f8 0c          	cmp	rax, 0xc
ffffffff800056fe: 0f 83 af 01 00 00    	jae	0xffffffff800058b3 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1d3>
ffffffff80005704: 48 89 f3             	mov	rbx, rsi
ffffffff80005707: 49 89 fe             	mov	r14, rdi
ffffffff8000570a: 4c 8b 7f 18          	mov	r15, qword ptr [rdi + 0x18]
ffffffff8000570e: 45 0f b7 67 62       	movzx	r12d, word ptr [r15 + 0x62]
ffffffff80005713: 4d 89 e5             	mov	r13, r12
ffffffff80005716: 49 29 f5             	sub	r13, rsi
ffffffff80005719: 0f 82 ac 01 00 00    	jb	0xffffffff800058cb <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1eb>
ffffffff8000571f: 66 45 89 6f 62       	mov	word ptr [r15 + 0x62], r13w
ffffffff80005724: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80005729: 66 89 45 62          	mov	word ptr [rbp + 0x62], ax
ffffffff8000572d: 48 8d 75 08          	lea	rsi, [rbp + 0x8]
ffffffff80005731: 48 8d 3c dd 08 00 00 00      	lea	rdi, [8*rbx + 0x8]
ffffffff80005739: 48 01 ef             	add	rdi, rbp
ffffffff8000573c: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80005741: 8d 14 cd 00 00 00 00 	lea	edx, [8*rcx]
ffffffff80005748: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff8000574d: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff80005752: ff 15 e0 6c 03 00    	call	qword ptr [rip + 0x36ce0] # 0xffffffff8003c438
ffffffff80005758: 49 8d 4d 01          	lea	rcx, [r13 + 0x1]
ffffffff8000575c: 49 29 cc             	sub	r12, rcx
ffffffff8000575f: 48 8d 43 ff          	lea	rax, [rbx - 0x1]
ffffffff80005763: 49 39 c4             	cmp	r12, rax
ffffffff80005766: 0f 85 77 01 00 00    	jne	0xffffffff800058e3 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x203>
ffffffff8000576c: 48 89 0c 24          	mov	qword ptr [rsp], rcx
ffffffff80005770: 49 8d 34 cf          	lea	rsi, [r15 + 8*rcx]
ffffffff80005774: 48 83 c6 08          	add	rsi, 0x8
ffffffff80005778: 41 c1 e4 03          	shl	r12d, 0x3
ffffffff8000577c: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff80005781: 4c 89 e2             	mov	rdx, r12
ffffffff80005784: ff 15 a6 6c 03 00    	call	qword ptr [rip + 0x36ca6] # 0xffffffff8003c430
ffffffff8000578a: 4b 8b 44 ef 08       	mov	rax, qword ptr [r15 + 8*r13 + 0x8]
ffffffff8000578f: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff80005792: 49 8b 56 10          	mov	rdx, qword ptr [r14 + 0x10]
ffffffff80005796: 48 8b 74 d1 08       	mov	rsi, qword ptr [rcx + 8*rdx + 0x8]
ffffffff8000579b: 48 89 44 d1 08       	mov	qword ptr [rcx + 8*rdx + 0x8], rax
ffffffff800057a0: 48 89 74 dd 00       	mov	qword ptr [rbp + 8*rbx], rsi
ffffffff800057a5: 49 83 7e 20 00       	cmp	qword ptr [r14 + 0x20], 0x0
ffffffff800057aa: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff800057ae: 74 60                	je	0xffffffff80005810 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x130>
ffffffff800057b0: 48 85 c0             	test	rax, rax
ffffffff800057b3: 74 64                	je	0xffffffff80005819 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x139>
ffffffff800057b5: 4c 8d 75 68          	lea	r14, [rbp + 0x68]
ffffffff800057b9: 48 8d 3c dd 68 00 00 00      	lea	rdi, [8*rbx + 0x68]
ffffffff800057c1: 48 01 ef             	add	rdi, rbp
ffffffff800057c4: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff800057c9: 48 83 c2 08          	add	rdx, 0x8
ffffffff800057cd: 4c 89 f6             	mov	rsi, r14
ffffffff800057d0: ff 15 62 6c 03 00    	call	qword ptr [rip + 0x36c62] # 0xffffffff8003c438
ffffffff800057d6: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff800057da: 49 8d 34 c7          	lea	rsi, [r15 + 8*rax]
ffffffff800057de: 48 83 c6 68          	add	rsi, 0x68
ffffffff800057e2: 48 8d 14 dd 00 00 00 00      	lea	rdx, [8*rbx]
ffffffff800057ea: 4c 89 f7             	mov	rdi, r14
ffffffff800057ed: ff 15 3d 6c 03 00    	call	qword ptr [rip + 0x36c3d] # 0xffffffff8003c430
ffffffff800057f3: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800057f8: 48 8d 14 18          	lea	rdx, [rax + rbx]
ffffffff800057fc: 48 ff c2             	inc	rdx
ffffffff800057ff: 89 d0                	mov	eax, edx
ffffffff80005801: 83 e0 03             	and	eax, 0x3
ffffffff80005804: 48 83 7c 24 18 03    	cmp	qword ptr [rsp + 0x18], 0x3
ffffffff8000580a: 73 25                	jae	0xffffffff80005831 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x151>
ffffffff8000580c: 31 c9                	xor	ecx, ecx
ffffffff8000580e: eb 7b                	jmp	0xffffffff8000588b <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1ab>
ffffffff80005810: 48 85 c0             	test	rax, rax
ffffffff80005813: 0f 84 8b 00 00 00    	je	0xffffffff800058a4 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1c4>
ffffffff80005819: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000581e: 48 c7 c7 e0 27 02 80 	mov	rdi, -0x7ffdd820
ffffffff80005825: 48 c7 c2 08 28 02 80 	mov	rdx, -0x7ffdd7f8
ffffffff8000582c: e8 bf b8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005831: 83 e2 3c             	and	edx, 0x3c
ffffffff80005834: 31 c9                	xor	ecx, ecx
ffffffff80005836: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80005840: 48 8b 74 cd 68       	mov	rsi, qword ptr [rbp + 8*rcx + 0x68]
ffffffff80005845: 48 89 2e             	mov	qword ptr [rsi], rbp
ffffffff80005848: 89 cf                	mov	edi, ecx
ffffffff8000584a: 66 89 4e 60          	mov	word ptr [rsi + 0x60], cx
ffffffff8000584e: 48 8b 74 cd 70       	mov	rsi, qword ptr [rbp + 8*rcx + 0x70]
ffffffff80005853: 48 89 2e             	mov	qword ptr [rsi], rbp
ffffffff80005856: 44 8d 47 01          	lea	r8d, [rdi + 0x1]
ffffffff8000585a: 66 44 89 46 60       	mov	word ptr [rsi + 0x60], r8w
ffffffff8000585f: 48 8b 74 cd 78       	mov	rsi, qword ptr [rbp + 8*rcx + 0x78]
ffffffff80005864: 48 89 2e             	mov	qword ptr [rsi], rbp
ffffffff80005867: 44 8d 47 02          	lea	r8d, [rdi + 0x2]
ffffffff8000586b: 66 44 89 46 60       	mov	word ptr [rsi + 0x60], r8w
ffffffff80005870: 48 8b b4 cd 80 00 00 00      	mov	rsi, qword ptr [rbp + 8*rcx + 0x80]
ffffffff80005878: 48 83 c1 04          	add	rcx, 0x4
ffffffff8000587c: 48 89 2e             	mov	qword ptr [rsi], rbp
ffffffff8000587f: 83 c7 03             	add	edi, 0x3
ffffffff80005882: 66 89 7e 60          	mov	word ptr [rsi + 0x60], di
ffffffff80005886: 48 39 d1             	cmp	rcx, rdx
ffffffff80005889: 75 b5                	jne	0xffffffff80005840 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x160>
ffffffff8000588b: 48 85 c0             	test	rax, rax
ffffffff8000588e: 74 14                	je	0xffffffff800058a4 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1c4>
ffffffff80005890: 48 8b 54 cd 68       	mov	rdx, qword ptr [rbp + 8*rcx + 0x68]
ffffffff80005895: 48 89 2a             	mov	qword ptr [rdx], rbp
ffffffff80005898: 66 89 4a 60          	mov	word ptr [rdx + 0x60], cx
ffffffff8000589c: 48 ff c1             	inc	rcx
ffffffff8000589f: 48 ff c8             	dec	rax
ffffffff800058a2: 75 ec                	jne	0xffffffff80005890 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1b0>
ffffffff800058a4: 48 83 c4 28          	add	rsp, 0x28
ffffffff800058a8: 5b                   	pop	rbx
ffffffff800058a9: 41 5c                	pop	r12
ffffffff800058ab: 41 5d                	pop	r13
ffffffff800058ad: 41 5e                	pop	r14
ffffffff800058af: 41 5f                	pop	r15
ffffffff800058b1: 5d                   	pop	rbp
ffffffff800058b2: c3                   	ret
ffffffff800058b3: be 33 00 00 00       	mov	esi, 0x33
ffffffff800058b8: 48 c7 c7 50 27 02 80 	mov	rdi, -0x7ffdd8b0
ffffffff800058bf: 48 c7 c2 88 27 02 80 	mov	rdx, -0x7ffdd878
ffffffff800058c6: e8 25 b8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800058cb: be 27 00 00 00       	mov	esi, 0x27
ffffffff800058d0: 48 c7 c7 a0 27 02 80 	mov	rdi, -0x7ffdd860
ffffffff800058d7: 48 c7 c2 c8 27 02 80 	mov	rdx, -0x7ffdd838
ffffffff800058de: e8 0d b8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800058e3: be 28 00 00 00       	mov	esi, 0x28
ffffffff800058e8: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff800058ef: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff800058f6: e8 f5 b7 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800058fb: cc                   	int3
ffffffff800058fc: cc                   	int3
ffffffff800058fd: cc                   	int3
ffffffff800058fe: cc                   	int3
ffffffff800058ff: cc                   	int3

ffffffff80005900 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>:
ffffffff80005900: 55                   	push	rbp
ffffffff80005901: 41 57                	push	r15
ffffffff80005903: 41 56                	push	r14
ffffffff80005905: 41 55                	push	r13
ffffffff80005907: 41 54                	push	r12
ffffffff80005909: 53                   	push	rbx
ffffffff8000590a: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000590e: 4c 8b 6f 28          	mov	r13, qword ptr [rdi + 0x28]
ffffffff80005912: 41 0f b7 ad 8e 00 00 00      	movzx	ebp, word ptr [r13 + 0x8e]
ffffffff8000591a: 48 8d 04 2e          	lea	rax, [rsi + rbp]
ffffffff8000591e: 48 83 f8 0c          	cmp	rax, 0xc
ffffffff80005922: 0f 83 51 02 00 00    	jae	0xffffffff80005b79 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x279>
ffffffff80005928: 48 89 f3             	mov	rbx, rsi
ffffffff8000592b: 4c 8b 77 18          	mov	r14, qword ptr [rdi + 0x18]
ffffffff8000592f: 45 0f b7 a6 8e 00 00 00      	movzx	r12d, word ptr [r14 + 0x8e]
ffffffff80005937: 4d 89 e7             	mov	r15, r12
ffffffff8000593a: 49 29 f7             	sub	r15, rsi
ffffffff8000593d: 0f 82 4e 02 00 00    	jb	0xffffffff80005b91 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x291>
ffffffff80005943: 48 89 7c 24 30       	mov	qword ptr [rsp + 0x30], rdi
ffffffff80005948: 66 45 89 be 8e 00 00 00      	mov	word ptr [r14 + 0x8e], r15w
ffffffff80005950: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80005955: 66 41 89 85 8e 00 00 00      	mov	word ptr [r13 + 0x8e], ax
ffffffff8000595d: 49 8d 75 60          	lea	rsi, [r13 + 0x60]
ffffffff80005961: 48 8d 3c 9d 60 00 00 00      	lea	rdi, [4*rbx + 0x60]
ffffffff80005969: 4c 01 ef             	add	rdi, r13
ffffffff8000596c: 8d 14 ad 00 00 00 00 	lea	edx, [4*rbp]
ffffffff80005973: 48 89 34 24          	mov	qword ptr [rsp], rsi
ffffffff80005977: ff 15 bb 6a 03 00    	call	qword ptr [rip + 0x36abb] # 0xffffffff8003c438
ffffffff8000597d: 49 8d 75 08          	lea	rsi, [r13 + 0x8]
ffffffff80005981: 48 8d 3c dd 08 00 00 00      	lea	rdi, [8*rbx + 0x8]
ffffffff80005989: 4c 01 ef             	add	rdi, r13
ffffffff8000598c: 48 89 6c 24 10       	mov	qword ptr [rsp + 0x10], rbp
ffffffff80005991: 8d 2c ed 00 00 00 00 	lea	ebp, [8*rbp]
ffffffff80005998: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff8000599d: 48 89 ea             	mov	rdx, rbp
ffffffff800059a0: ff 15 92 6a 03 00    	call	qword ptr [rip + 0x36a92] # 0xffffffff8003c438
ffffffff800059a6: 49 8d 4f 01          	lea	rcx, [r15 + 0x1]
ffffffff800059aa: 49 29 cc             	sub	r12, rcx
ffffffff800059ad: 48 8d 43 ff          	lea	rax, [rbx - 0x1]
ffffffff800059b1: 49 39 c4             	cmp	r12, rax
ffffffff800059b4: 0f 85 ef 01 00 00    	jne	0xffffffff80005ba9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x2a9>
ffffffff800059ba: 48 89 6c 24 08       	mov	qword ptr [rsp + 0x8], rbp
ffffffff800059bf: 49 8d 34 8e          	lea	rsi, [r14 + 4*rcx]
ffffffff800059c3: 48 83 c6 60          	add	rsi, 0x60
ffffffff800059c7: 42 8d 14 a5 00 00 00 00      	lea	edx, [4*r12]
ffffffff800059cf: 48 89 54 24 20       	mov	qword ptr [rsp + 0x20], rdx
ffffffff800059d4: 48 8b 3c 24          	mov	rdi, qword ptr [rsp]
ffffffff800059d8: 48 89 cd             	mov	rbp, rcx
ffffffff800059db: ff 15 4f 6a 03 00    	call	qword ptr [rip + 0x36a4f] # 0xffffffff8003c430
ffffffff800059e1: 48 89 2c 24          	mov	qword ptr [rsp], rbp
ffffffff800059e5: 49 8d 34 ee          	lea	rsi, [r14 + 8*rbp]
ffffffff800059e9: 48 83 c6 08          	add	rsi, 0x8
ffffffff800059ed: 41 c1 e4 03          	shl	r12d, 0x3
ffffffff800059f1: 48 8b 7c 24 28       	mov	rdi, qword ptr [rsp + 0x28]
ffffffff800059f6: 4c 89 e2             	mov	rdx, r12
ffffffff800059f9: ff 15 31 6a 03 00    	call	qword ptr [rip + 0x36a31] # 0xffffffff8003c430
ffffffff800059ff: 43 8b 44 be 60       	mov	eax, dword ptr [r14 + 4*r15 + 0x60]
ffffffff80005a04: 4b 8b 4c fe 08       	mov	rcx, qword ptr [r14 + 8*r15 + 0x8]
ffffffff80005a09: 4c 8b 44 24 30       	mov	r8, qword ptr [rsp + 0x30]
ffffffff80005a0e: 49 8b 10             	mov	rdx, qword ptr [r8]
ffffffff80005a11: 49 8b 70 10          	mov	rsi, qword ptr [r8 + 0x10]
ffffffff80005a15: 8b 7c b2 60          	mov	edi, dword ptr [rdx + 4*rsi + 0x60]
ffffffff80005a19: 89 44 b2 60          	mov	dword ptr [rdx + 4*rsi + 0x60], eax
ffffffff80005a1d: 48 8b 44 f2 08       	mov	rax, qword ptr [rdx + 8*rsi + 0x8]
ffffffff80005a22: 48 89 4c f2 08       	mov	qword ptr [rdx + 8*rsi + 0x8], rcx
ffffffff80005a27: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff80005a2c: 41 89 7c 0d 60       	mov	dword ptr [r13 + rcx + 0x60], edi
ffffffff80005a31: 49 89 44 dd 00       	mov	qword ptr [r13 + 8*rbx], rax
ffffffff80005a36: 49 83 78 20 00       	cmp	qword ptr [r8 + 0x20], 0x0
ffffffff80005a3b: 49 8b 40 30          	mov	rax, qword ptr [r8 + 0x30]
ffffffff80005a3f: 74 6c                	je	0xffffffff80005aad <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1ad>
ffffffff80005a41: 48 85 c0             	test	rax, rax
ffffffff80005a44: 74 70                	je	0xffffffff80005ab6 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1b6>
ffffffff80005a46: 4d 89 f7             	mov	r15, r14
ffffffff80005a49: 4d 8d b5 90 00 00 00 	lea	r14, [r13 + 0x90]
ffffffff80005a50: 48 8d 3c dd 90 00 00 00      	lea	rdi, [8*rbx + 0x90]
ffffffff80005a58: 4c 01 ef             	add	rdi, r13
ffffffff80005a5b: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80005a60: 48 83 c2 08          	add	rdx, 0x8
ffffffff80005a64: 4c 89 f6             	mov	rsi, r14
ffffffff80005a67: ff 15 cb 69 03 00    	call	qword ptr [rip + 0x369cb] # 0xffffffff8003c438
ffffffff80005a6d: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff80005a71: 49 8d 34 c7          	lea	rsi, [r15 + 8*rax]
ffffffff80005a75: 48 81 c6 90 00 00 00 	add	rsi, 0x90
ffffffff80005a7c: 48 8d 14 dd 00 00 00 00      	lea	rdx, [8*rbx]
ffffffff80005a84: 4c 89 f7             	mov	rdi, r14
ffffffff80005a87: ff 15 a3 69 03 00    	call	qword ptr [rip + 0x369a3] # 0xffffffff8003c430
ffffffff80005a8d: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80005a92: 48 8d 14 18          	lea	rdx, [rax + rbx]
ffffffff80005a96: 48 ff c2             	inc	rdx
ffffffff80005a99: 89 d0                	mov	eax, edx
ffffffff80005a9b: 83 e0 03             	and	eax, 0x3
ffffffff80005a9e: 48 83 7c 24 18 03    	cmp	qword ptr [rsp + 0x18], 0x3
ffffffff80005aa4: 73 28                	jae	0xffffffff80005ace <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1ce>
ffffffff80005aa6: 31 c9                	xor	ecx, ecx
ffffffff80005aa8: e9 93 00 00 00       	jmp	0xffffffff80005b40 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x240>
ffffffff80005aad: 48 85 c0             	test	rax, rax
ffffffff80005ab0: 0f 84 b4 00 00 00    	je	0xffffffff80005b6a <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x26a>
ffffffff80005ab6: be 28 00 00 00       	mov	esi, 0x28
ffffffff80005abb: 48 c7 c7 e0 27 02 80 	mov	rdi, -0x7ffdd820
ffffffff80005ac2: 48 c7 c2 08 28 02 80 	mov	rdx, -0x7ffdd7f8
ffffffff80005ac9: e8 22 b6 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005ace: 83 e2 3c             	and	edx, 0x3c
ffffffff80005ad1: 31 c9                	xor	ecx, ecx
ffffffff80005ad3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80005ae0: 49 8b b4 cd 90 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0x90]
ffffffff80005ae8: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005aeb: 89 cf                	mov	edi, ecx
ffffffff80005aed: 66 89 8e 8c 00 00 00 	mov	word ptr [rsi + 0x8c], cx
ffffffff80005af4: 49 8b b4 cd 98 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0x98]
ffffffff80005afc: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005aff: 44 8d 47 01          	lea	r8d, [rdi + 0x1]
ffffffff80005b03: 66 44 89 86 8c 00 00 00      	mov	word ptr [rsi + 0x8c], r8w
ffffffff80005b0b: 49 8b b4 cd a0 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0xa0]
ffffffff80005b13: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005b16: 44 8d 47 02          	lea	r8d, [rdi + 0x2]
ffffffff80005b1a: 66 44 89 86 8c 00 00 00      	mov	word ptr [rsi + 0x8c], r8w
ffffffff80005b22: 49 8b b4 cd a8 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0xa8]
ffffffff80005b2a: 48 83 c1 04          	add	rcx, 0x4
ffffffff80005b2e: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005b31: 83 c7 03             	add	edi, 0x3
ffffffff80005b34: 66 89 be 8c 00 00 00 	mov	word ptr [rsi + 0x8c], di
ffffffff80005b3b: 48 39 d1             	cmp	rcx, rdx
ffffffff80005b3e: 75 a0                	jne	0xffffffff80005ae0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1e0>
ffffffff80005b40: 48 85 c0             	test	rax, rax
ffffffff80005b43: 74 25                	je	0xffffffff80005b6a <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x26a>
ffffffff80005b45: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80005b50: 49 8b 94 cd 90 00 00 00      	mov	rdx, qword ptr [r13 + 8*rcx + 0x90]
ffffffff80005b58: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff80005b5b: 66 89 8a 8c 00 00 00 	mov	word ptr [rdx + 0x8c], cx
ffffffff80005b62: 48 ff c1             	inc	rcx
ffffffff80005b65: 48 ff c8             	dec	rax
ffffffff80005b68: 75 e6                	jne	0xffffffff80005b50 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x250>
ffffffff80005b6a: 48 83 c4 38          	add	rsp, 0x38
ffffffff80005b6e: 5b                   	pop	rbx
ffffffff80005b6f: 41 5c                	pop	r12
ffffffff80005b71: 41 5d                	pop	r13
ffffffff80005b73: 41 5e                	pop	r14
ffffffff80005b75: 41 5f                	pop	r15
ffffffff80005b77: 5d                   	pop	rbp
ffffffff80005b78: c3                   	ret
ffffffff80005b79: be 33 00 00 00       	mov	esi, 0x33
ffffffff80005b7e: 48 c7 c7 50 27 02 80 	mov	rdi, -0x7ffdd8b0
ffffffff80005b85: 48 c7 c2 88 27 02 80 	mov	rdx, -0x7ffdd878
ffffffff80005b8c: e8 5f b5 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005b91: be 27 00 00 00       	mov	esi, 0x27
ffffffff80005b96: 48 c7 c7 a0 27 02 80 	mov	rdi, -0x7ffdd860
ffffffff80005b9d: 48 c7 c2 c8 27 02 80 	mov	rdx, -0x7ffdd838
ffffffff80005ba4: e8 47 b5 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005ba9: be 28 00 00 00       	mov	esi, 0x28
ffffffff80005bae: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80005bb5: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff80005bbc: e8 2f b5 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005bc1: cc                   	int3
ffffffff80005bc2: cc                   	int3
ffffffff80005bc3: cc                   	int3
ffffffff80005bc4: cc                   	int3
ffffffff80005bc5: cc                   	int3
ffffffff80005bc6: cc                   	int3
ffffffff80005bc7: cc                   	int3
ffffffff80005bc8: cc                   	int3
ffffffff80005bc9: cc                   	int3
ffffffff80005bca: cc                   	int3
ffffffff80005bcb: cc                   	int3
ffffffff80005bcc: cc                   	int3
ffffffff80005bcd: cc                   	int3
ffffffff80005bce: cc                   	int3
ffffffff80005bcf: cc                   	int3

ffffffff80005bd0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>:
ffffffff80005bd0: 55                   	push	rbp
ffffffff80005bd1: 41 57                	push	r15
ffffffff80005bd3: 41 56                	push	r14
ffffffff80005bd5: 41 55                	push	r13
ffffffff80005bd7: 41 54                	push	r12
ffffffff80005bd9: 53                   	push	rbx
ffffffff80005bda: 48 83 ec 38          	sub	rsp, 0x38
ffffffff80005bde: 48 8b 6f 18          	mov	rbp, qword ptr [rdi + 0x18]
ffffffff80005be2: 44 0f b7 9d 8e 00 00 00      	movzx	r11d, word ptr [rbp + 0x8e]
ffffffff80005bea: 4d 8d 0c 33          	lea	r9, [r11 + rsi]
ffffffff80005bee: 49 83 f9 0c          	cmp	r9, 0xc
ffffffff80005bf2: 0f 83 31 03 00 00    	jae	0xffffffff80005f29 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x359>
ffffffff80005bf8: 48 89 f3             	mov	rbx, rsi
ffffffff80005bfb: 49 89 ff             	mov	r15, rdi
ffffffff80005bfe: 4c 8b 6f 28          	mov	r13, qword ptr [rdi + 0x28]
ffffffff80005c02: 45 0f b7 a5 8e 00 00 00      	movzx	r12d, word ptr [r13 + 0x8e]
ffffffff80005c0a: 49 29 f4             	sub	r12, rsi
ffffffff80005c0d: 0f 82 2e 03 00 00    	jb	0xffffffff80005f41 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x371>
ffffffff80005c13: 66 44 89 8d 8e 00 00 00      	mov	word ptr [rbp + 0x8e], r9w
ffffffff80005c1b: 66 45 89 a5 8e 00 00 00      	mov	word ptr [r13 + 0x8e], r12w
ffffffff80005c23: 4c 8d 53 ff          	lea	r10, [rbx - 0x1]
ffffffff80005c27: 41 8b 44 9d 5c       	mov	eax, dword ptr [r13 + 4*rbx + 0x5c]
ffffffff80005c2c: 49 8b 4c dd 00       	mov	rcx, qword ptr [r13 + 8*rbx]
ffffffff80005c31: 49 8b 17             	mov	rdx, qword ptr [r15]
ffffffff80005c34: 49 8b 77 10          	mov	rsi, qword ptr [r15 + 0x10]
ffffffff80005c38: 8b 7c b2 60          	mov	edi, dword ptr [rdx + 4*rsi + 0x60]
ffffffff80005c3c: 89 44 b2 60          	mov	dword ptr [rdx + 4*rsi + 0x60], eax
ffffffff80005c40: 48 8b 44 f2 08       	mov	rax, qword ptr [rdx + 8*rsi + 0x8]
ffffffff80005c45: 48 89 4c f2 08       	mov	qword ptr [rdx + 8*rsi + 0x8], rcx
ffffffff80005c4a: 42 89 7c 9d 60       	mov	dword ptr [rbp + 4*r11 + 0x60], edi
ffffffff80005c4f: 4a 89 44 dd 08       	mov	qword ptr [rbp + 8*r11 + 0x8], rax
ffffffff80005c54: 4d 8d 73 01          	lea	r14, [r11 + 0x1]
ffffffff80005c58: 4c 89 c8             	mov	rax, r9
ffffffff80005c5b: 4c 29 f0             	sub	rax, r14
ffffffff80005c5e: 49 39 c2             	cmp	r10, rax
ffffffff80005c61: 0f 85 f2 02 00 00    	jne	0xffffffff80005f59 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x389>
ffffffff80005c67: 4c 89 5c 24 20       	mov	qword ptr [rsp + 0x20], r11
ffffffff80005c6c: 4c 89 4c 24 18       	mov	qword ptr [rsp + 0x18], r9
ffffffff80005c71: 49 8d 75 60          	lea	rsi, [r13 + 0x60]
ffffffff80005c75: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff80005c7a: 48 8d 45 60          	lea	rax, [rbp + 0x60]
ffffffff80005c7e: 48 8d 4d 08          	lea	rcx, [rbp + 0x8]
ffffffff80005c82: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80005c87: 4a 8d 3c b0          	lea	rdi, [rax + 4*r14]
ffffffff80005c8b: 4a 8d 14 95 00 00 00 00      	lea	rdx, [4*r10]
ffffffff80005c93: 4c 89 7c 24 30       	mov	qword ptr [rsp + 0x30], r15
ffffffff80005c98: 4d 89 d7             	mov	r15, r10
ffffffff80005c9b: ff 15 8f 67 03 00    	call	qword ptr [rip + 0x3678f] # 0xffffffff8003c430
ffffffff80005ca1: 49 8d 75 08          	lea	rsi, [r13 + 0x8]
ffffffff80005ca5: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff80005caa: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80005caf: 4a 8d 3c f0          	lea	rdi, [rax + 8*r14]
ffffffff80005cb3: 4c 89 7c 24 10       	mov	qword ptr [rsp + 0x10], r15
ffffffff80005cb8: 4a 8d 14 fd 00 00 00 00      	lea	rdx, [8*r15]
ffffffff80005cc0: ff 15 6a 67 03 00    	call	qword ptr [rip + 0x3676a] # 0xffffffff8003c430
ffffffff80005cc6: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff80005ccb: 48 8d 34 9f          	lea	rsi, [rdi + 4*rbx]
ffffffff80005ccf: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff80005cd7: 4c 8b 3d 5a 67 03 00 	mov	r15, qword ptr [rip + 0x3675a] # 0xffffffff8003c438
ffffffff80005cde: 41 ff d7             	call	r15
ffffffff80005ce1: 4c 89 f8             	mov	rax, r15
ffffffff80005ce4: 48 8d 34 dd 08 00 00 00      	lea	rsi, [8*rbx + 0x8]
ffffffff80005cec: 4c 01 ee             	add	rsi, r13
ffffffff80005cef: 4c 89 64 24 08       	mov	qword ptr [rsp + 0x8], r12
ffffffff80005cf4: 4e 8d 3c e5 00 00 00 00      	lea	r15, [8*r12]
ffffffff80005cfc: 48 8b 7c 24 28       	mov	rdi, qword ptr [rsp + 0x28]
ffffffff80005d01: 4c 89 fa             	mov	rdx, r15
ffffffff80005d04: ff d0                	call	rax
ffffffff80005d06: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80005d0b: 48 83 78 20 00       	cmp	qword ptr [rax + 0x20], 0x0
ffffffff80005d10: 48 8b 40 30          	mov	rax, qword ptr [rax + 0x30]
ffffffff80005d14: 0f 84 29 01 00 00    	je	0xffffffff80005e43 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x273>
ffffffff80005d1a: 48 85 c0             	test	rax, rax
ffffffff80005d1d: 0f 84 29 01 00 00    	je	0xffffffff80005e4c <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x27c>
ffffffff80005d23: 4d 8d a5 90 00 00 00 	lea	r12, [r13 + 0x90]
ffffffff80005d2a: 4a 8d 3c f5 90 00 00 00      	lea	rdi, [8*r14 + 0x90]
ffffffff80005d32: 48 01 ef             	add	rdi, rbp
ffffffff80005d35: 48 8d 14 dd 00 00 00 00      	lea	rdx, [8*rbx]
ffffffff80005d3d: 4c 89 e6             	mov	rsi, r12
ffffffff80005d40: ff 15 ea 66 03 00    	call	qword ptr [rip + 0x366ea] # 0xffffffff8003c430
ffffffff80005d46: 48 8d 34 dd 90 00 00 00      	lea	rsi, [8*rbx + 0x90]
ffffffff80005d4e: 4c 01 ee             	add	rsi, r13
ffffffff80005d51: 49 83 c7 08          	add	r15, 0x8
ffffffff80005d55: 4c 89 e7             	mov	rdi, r12
ffffffff80005d58: 4c 89 fa             	mov	rdx, r15
ffffffff80005d5b: ff 15 d7 66 03 00    	call	qword ptr [rip + 0x366d7] # 0xffffffff8003c438
ffffffff80005d61: 48 83 e3 03          	and	rbx, 0x3
ffffffff80005d65: 0f 84 f9 00 00 00    	je	0xffffffff80005e64 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x294>
ffffffff80005d6b: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80005d70: 48 8d 0c c5 98 00 00 00      	lea	rcx, [8*rax + 0x98]
ffffffff80005d78: 48 01 e9             	add	rcx, rbp
ffffffff80005d7b: 31 c0                	xor	eax, eax
ffffffff80005d7d: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff80005d82: 4c 8b 44 24 10       	mov	r8, qword ptr [rsp + 0x10]
ffffffff80005d87: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80005d90: 48 8b 14 c1          	mov	rdx, qword ptr [rcx + 8*rax]
ffffffff80005d94: 48 89 2a             	mov	qword ptr [rdx], rbp
ffffffff80005d97: 41 8d 34 06          	lea	esi, [r14 + rax]
ffffffff80005d9b: 66 89 b2 8c 00 00 00 	mov	word ptr [rdx + 0x8c], si
ffffffff80005da2: 48 ff c0             	inc	rax
ffffffff80005da5: 48 39 c3             	cmp	rbx, rax
ffffffff80005da8: 75 e6                	jne	0xffffffff80005d90 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1c0>
ffffffff80005daa: 49 01 c6             	add	r14, rax
ffffffff80005dad: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80005db2: 49 83 f8 03          	cmp	r8, 0x3
ffffffff80005db6: 72 66                	jb	0xffffffff80005e1e <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x24e>
ffffffff80005db8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80005dc0: 4a 8b 84 f5 90 00 00 00      	mov	rax, qword ptr [rbp + 8*r14 + 0x90]
ffffffff80005dc8: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80005dcb: 66 44 89 b0 8c 00 00 00      	mov	word ptr [rax + 0x8c], r14w
ffffffff80005dd3: 4a 8b 84 f5 98 00 00 00      	mov	rax, qword ptr [rbp + 8*r14 + 0x98]
ffffffff80005ddb: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80005dde: 41 8d 4e 01          	lea	ecx, [r14 + 0x1]
ffffffff80005de2: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff80005de9: 4a 8b 84 f5 a0 00 00 00      	mov	rax, qword ptr [rbp + 8*r14 + 0xa0]
ffffffff80005df1: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80005df4: 41 8d 4e 02          	lea	ecx, [r14 + 0x2]
ffffffff80005df8: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff80005dff: 4a 8b 84 f5 a8 00 00 00      	mov	rax, qword ptr [rbp + 8*r14 + 0xa8]
ffffffff80005e07: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80005e0a: 49 8d 4e 03          	lea	rcx, [r14 + 0x3]
ffffffff80005e0e: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff80005e15: 49 83 c6 04          	add	r14, 0x4
ffffffff80005e19: 48 39 f9             	cmp	rcx, rdi
ffffffff80005e1c: 75 a2                	jne	0xffffffff80005dc0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1f0>
ffffffff80005e1e: 48 83 fa ff          	cmp	rdx, -0x1
ffffffff80005e22: 0f 84 f2 00 00 00    	je	0xffffffff80005f1a <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80005e28: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80005e2d: 48 8d 51 01          	lea	rdx, [rcx + 0x1]
ffffffff80005e31: 89 d0                	mov	eax, edx
ffffffff80005e33: 83 e0 03             	and	eax, 0x3
ffffffff80005e36: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80005e3a: 73 43                	jae	0xffffffff80005e7f <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x2af>
ffffffff80005e3c: 31 c9                	xor	ecx, ecx
ffffffff80005e3e: e9 ad 00 00 00       	jmp	0xffffffff80005ef0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x320>
ffffffff80005e43: 48 85 c0             	test	rax, rax
ffffffff80005e46: 0f 84 ce 00 00 00    	je	0xffffffff80005f1a <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80005e4c: be 28 00 00 00       	mov	esi, 0x28
ffffffff80005e51: 48 c7 c7 e0 27 02 80 	mov	rdi, -0x7ffdd820
ffffffff80005e58: 48 c7 c2 b0 28 02 80 	mov	rdx, -0x7ffdd750
ffffffff80005e5f: e8 8c b2 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005e64: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80005e69: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff80005e6e: 4c 8b 44 24 10       	mov	r8, qword ptr [rsp + 0x10]
ffffffff80005e73: 49 83 f8 03          	cmp	r8, 0x3
ffffffff80005e77: 0f 83 43 ff ff ff    	jae	0xffffffff80005dc0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1f0>
ffffffff80005e7d: eb 9f                	jmp	0xffffffff80005e1e <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x24e>
ffffffff80005e7f: 48 83 e2 fc          	and	rdx, -0x4
ffffffff80005e83: 31 c9                	xor	ecx, ecx
ffffffff80005e85: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80005e90: 49 8b b4 cd 90 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0x90]
ffffffff80005e98: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005e9b: 89 cf                	mov	edi, ecx
ffffffff80005e9d: 66 89 8e 8c 00 00 00 	mov	word ptr [rsi + 0x8c], cx
ffffffff80005ea4: 49 8b b4 cd 98 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0x98]
ffffffff80005eac: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005eaf: 44 8d 47 01          	lea	r8d, [rdi + 0x1]
ffffffff80005eb3: 66 44 89 86 8c 00 00 00      	mov	word ptr [rsi + 0x8c], r8w
ffffffff80005ebb: 49 8b b4 cd a0 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0xa0]
ffffffff80005ec3: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005ec6: 44 8d 47 02          	lea	r8d, [rdi + 0x2]
ffffffff80005eca: 66 44 89 86 8c 00 00 00      	mov	word ptr [rsi + 0x8c], r8w
ffffffff80005ed2: 49 8b b4 cd a8 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0xa8]
ffffffff80005eda: 48 83 c1 04          	add	rcx, 0x4
ffffffff80005ede: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff80005ee1: 83 c7 03             	add	edi, 0x3
ffffffff80005ee4: 66 89 be 8c 00 00 00 	mov	word ptr [rsi + 0x8c], di
ffffffff80005eeb: 48 39 d1             	cmp	rcx, rdx
ffffffff80005eee: 75 a0                	jne	0xffffffff80005e90 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x2c0>
ffffffff80005ef0: 48 85 c0             	test	rax, rax
ffffffff80005ef3: 74 25                	je	0xffffffff80005f1a <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80005ef5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80005f00: 49 8b 94 cd 90 00 00 00      	mov	rdx, qword ptr [r13 + 8*rcx + 0x90]
ffffffff80005f08: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff80005f0b: 66 89 8a 8c 00 00 00 	mov	word ptr [rdx + 0x8c], cx
ffffffff80005f12: 48 ff c1             	inc	rcx
ffffffff80005f15: 48 ff c8             	dec	rax
ffffffff80005f18: 75 e6                	jne	0xffffffff80005f00 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x330>
ffffffff80005f1a: 48 83 c4 38          	add	rsp, 0x38
ffffffff80005f1e: 5b                   	pop	rbx
ffffffff80005f1f: 41 5c                	pop	r12
ffffffff80005f21: 41 5d                	pop	r13
ffffffff80005f23: 41 5e                	pop	r14
ffffffff80005f25: 41 5f                	pop	r15
ffffffff80005f27: 5d                   	pop	rbp
ffffffff80005f28: c3                   	ret
ffffffff80005f29: be 32 00 00 00       	mov	esi, 0x32
ffffffff80005f2e: 48 c7 c7 20 28 02 80 	mov	rdi, -0x7ffdd7e0
ffffffff80005f35: 48 c7 c2 58 28 02 80 	mov	rdx, -0x7ffdd7a8
ffffffff80005f3c: e8 af b1 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005f41: be 28 00 00 00       	mov	esi, 0x28
ffffffff80005f46: 48 c7 c7 70 28 02 80 	mov	rdi, -0x7ffdd790
ffffffff80005f4d: 48 c7 c2 98 28 02 80 	mov	rdx, -0x7ffdd768
ffffffff80005f54: e8 97 b1 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005f59: be 28 00 00 00       	mov	esi, 0x28
ffffffff80005f5e: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80005f65: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff80005f6c: e8 7f b1 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80005f71: cc                   	int3
ffffffff80005f72: cc                   	int3
ffffffff80005f73: cc                   	int3
ffffffff80005f74: cc                   	int3
ffffffff80005f75: cc                   	int3
ffffffff80005f76: cc                   	int3
ffffffff80005f77: cc                   	int3
ffffffff80005f78: cc                   	int3
ffffffff80005f79: cc                   	int3
ffffffff80005f7a: cc                   	int3
ffffffff80005f7b: cc                   	int3
ffffffff80005f7c: cc                   	int3
ffffffff80005f7d: cc                   	int3
ffffffff80005f7e: cc                   	int3
ffffffff80005f7f: cc                   	int3

ffffffff80005f80 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>:
ffffffff80005f80: 55                   	push	rbp
ffffffff80005f81: 41 57                	push	r15
ffffffff80005f83: 41 56                	push	r14
ffffffff80005f85: 41 55                	push	r13
ffffffff80005f87: 41 54                	push	r12
ffffffff80005f89: 53                   	push	rbx
ffffffff80005f8a: 48 83 ec 28          	sub	rsp, 0x28
ffffffff80005f8e: 49 89 fe             	mov	r14, rdi
ffffffff80005f91: 48 8b 6f 18          	mov	rbp, qword ptr [rdi + 0x18]
ffffffff80005f95: 44 0f b7 55 62       	movzx	r10d, word ptr [rbp + 0x62]
ffffffff80005f9a: 49 8d 3c 32          	lea	rdi, [r10 + rsi]
ffffffff80005f9e: 48 83 ff 0c          	cmp	rdi, 0xc
ffffffff80005fa2: 0f 83 6b 02 00 00    	jae	0xffffffff80006213 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x293>
ffffffff80005fa8: 48 89 f3             	mov	rbx, rsi
ffffffff80005fab: 4d 8b 6e 28          	mov	r13, qword ptr [r14 + 0x28]
ffffffff80005faf: 45 0f b7 65 62       	movzx	r12d, word ptr [r13 + 0x62]
ffffffff80005fb4: 49 29 f4             	sub	r12, rsi
ffffffff80005fb7: 0f 82 6e 02 00 00    	jb	0xffffffff8000622b <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x2ab>
ffffffff80005fbd: 66 89 7d 62          	mov	word ptr [rbp + 0x62], di
ffffffff80005fc1: 66 45 89 65 62       	mov	word ptr [r13 + 0x62], r12w
ffffffff80005fc6: 4c 8d 4b ff          	lea	r9, [rbx - 0x1]
ffffffff80005fca: 49 8b 44 dd 00       	mov	rax, qword ptr [r13 + 8*rbx]
ffffffff80005fcf: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff80005fd2: 49 8b 56 10          	mov	rdx, qword ptr [r14 + 0x10]
ffffffff80005fd6: 48 8b 74 d1 08       	mov	rsi, qword ptr [rcx + 8*rdx + 0x8]
ffffffff80005fdb: 48 89 44 d1 08       	mov	qword ptr [rcx + 8*rdx + 0x8], rax
ffffffff80005fe0: 4a 89 74 d5 08       	mov	qword ptr [rbp + 8*r10 + 0x8], rsi
ffffffff80005fe5: 4d 8d 7a 01          	lea	r15, [r10 + 0x1]
ffffffff80005fe9: 48 89 f8             	mov	rax, rdi
ffffffff80005fec: 4c 29 f8             	sub	rax, r15
ffffffff80005fef: 49 39 c1             	cmp	r9, rax
ffffffff80005ff2: 0f 85 4b 02 00 00    	jne	0xffffffff80006243 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x2c3>
ffffffff80005ff8: 4c 89 54 24 10       	mov	qword ptr [rsp + 0x10], r10
ffffffff80005ffd: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80006002: 48 8d 45 08          	lea	rax, [rbp + 0x8]
ffffffff80006006: 4a 8d 3c f8          	lea	rdi, [rax + 8*r15]
ffffffff8000600a: 49 8d 75 08          	lea	rsi, [r13 + 0x8]
ffffffff8000600e: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff80006013: 4c 89 0c 24          	mov	qword ptr [rsp], r9
ffffffff80006017: 4a 8d 14 cd 00 00 00 00      	lea	rdx, [8*r9]
ffffffff8000601f: ff 15 0b 64 03 00    	call	qword ptr [rip + 0x3640b] # 0xffffffff8003c430
ffffffff80006025: 48 8d 34 dd 08 00 00 00      	lea	rsi, [8*rbx + 0x8]
ffffffff8000602d: 4c 01 ee             	add	rsi, r13
ffffffff80006030: 4c 89 64 24 18       	mov	qword ptr [rsp + 0x18], r12
ffffffff80006035: 4e 8d 24 e5 00 00 00 00      	lea	r12, [8*r12]
ffffffff8000603d: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff80006042: 4c 89 e2             	mov	rdx, r12
ffffffff80006045: ff 15 ed 63 03 00    	call	qword ptr [rip + 0x363ed] # 0xffffffff8003c438
ffffffff8000604b: 49 83 7e 20 00       	cmp	qword ptr [r14 + 0x20], 0x0
ffffffff80006050: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff80006054: 0f 84 04 01 00 00    	je	0xffffffff8000615e <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1de>
ffffffff8000605a: 48 85 c0             	test	rax, rax
ffffffff8000605d: 0f 84 04 01 00 00    	je	0xffffffff80006167 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1e7>
ffffffff80006063: 4d 8d 75 68          	lea	r14, [r13 + 0x68]
ffffffff80006067: 4a 8d 3c fd 68 00 00 00      	lea	rdi, [8*r15 + 0x68]
ffffffff8000606f: 48 01 ef             	add	rdi, rbp
ffffffff80006072: 48 8d 14 dd 00 00 00 00      	lea	rdx, [8*rbx]
ffffffff8000607a: 4c 89 f6             	mov	rsi, r14
ffffffff8000607d: ff 15 ad 63 03 00    	call	qword ptr [rip + 0x363ad] # 0xffffffff8003c430
ffffffff80006083: 48 8d 34 dd 68 00 00 00      	lea	rsi, [8*rbx + 0x68]
ffffffff8000608b: 4c 01 ee             	add	rsi, r13
ffffffff8000608e: 49 83 c4 08          	add	r12, 0x8
ffffffff80006092: 4c 89 f7             	mov	rdi, r14
ffffffff80006095: 4c 89 e2             	mov	rdx, r12
ffffffff80006098: ff 15 9a 63 03 00    	call	qword ptr [rip + 0x3639a] # 0xffffffff8003c438
ffffffff8000609e: 48 83 e3 03          	and	rbx, 0x3
ffffffff800060a2: 0f 84 d7 00 00 00    	je	0xffffffff8000617f <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1ff>
ffffffff800060a8: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800060ad: 48 8d 0c c5 70 00 00 00      	lea	rcx, [8*rax + 0x70]
ffffffff800060b5: 48 01 e9             	add	rcx, rbp
ffffffff800060b8: 31 c0                	xor	eax, eax
ffffffff800060ba: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff800060bf: 4c 8b 04 24          	mov	r8, qword ptr [rsp]
ffffffff800060c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800060d0: 48 8b 14 c1          	mov	rdx, qword ptr [rcx + 8*rax]
ffffffff800060d4: 48 89 2a             	mov	qword ptr [rdx], rbp
ffffffff800060d7: 41 8d 34 07          	lea	esi, [r15 + rax]
ffffffff800060db: 66 89 72 60          	mov	word ptr [rdx + 0x60], si
ffffffff800060df: 48 ff c0             	inc	rax
ffffffff800060e2: 48 39 c3             	cmp	rbx, rax
ffffffff800060e5: 75 e9                	jne	0xffffffff800060d0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x150>
ffffffff800060e7: 49 01 c7             	add	r15, rax
ffffffff800060ea: 49 83 f8 03          	cmp	r8, 0x3
ffffffff800060ee: 72 49                	jb	0xffffffff80006139 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1b9>
ffffffff800060f0: 4a 8b 44 fd 68       	mov	rax, qword ptr [rbp + 8*r15 + 0x68]
ffffffff800060f5: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff800060f8: 66 44 89 78 60       	mov	word ptr [rax + 0x60], r15w
ffffffff800060fd: 4a 8b 44 fd 70       	mov	rax, qword ptr [rbp + 8*r15 + 0x70]
ffffffff80006102: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80006105: 41 8d 4f 01          	lea	ecx, [r15 + 0x1]
ffffffff80006109: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff8000610d: 4a 8b 44 fd 78       	mov	rax, qword ptr [rbp + 8*r15 + 0x78]
ffffffff80006112: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80006115: 41 8d 4f 02          	lea	ecx, [r15 + 0x2]
ffffffff80006119: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff8000611d: 4a 8b 84 fd 80 00 00 00      	mov	rax, qword ptr [rbp + 8*r15 + 0x80]
ffffffff80006125: 48 89 28             	mov	qword ptr [rax], rbp
ffffffff80006128: 49 8d 4f 03          	lea	rcx, [r15 + 0x3]
ffffffff8000612c: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff80006130: 49 83 c7 04          	add	r15, 0x4
ffffffff80006134: 48 39 f9             	cmp	rcx, rdi
ffffffff80006137: 75 b7                	jne	0xffffffff800060f0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x170>
ffffffff80006139: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8000613e: 48 83 f9 ff          	cmp	rcx, -0x1
ffffffff80006142: 0f 84 bc 00 00 00    	je	0xffffffff80006204 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff80006148: 48 8d 51 01          	lea	rdx, [rcx + 0x1]
ffffffff8000614c: 89 d0                	mov	eax, edx
ffffffff8000614e: 83 e0 03             	and	eax, 0x3
ffffffff80006151: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80006155: 73 3d                	jae	0xffffffff80006194 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x214>
ffffffff80006157: 31 c9                	xor	ecx, ecx
ffffffff80006159: e9 8d 00 00 00       	jmp	0xffffffff800061eb <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x26b>
ffffffff8000615e: 48 85 c0             	test	rax, rax
ffffffff80006161: 0f 84 9d 00 00 00    	je	0xffffffff80006204 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff80006167: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000616c: 48 c7 c7 e0 27 02 80 	mov	rdi, -0x7ffdd820
ffffffff80006173: 48 c7 c2 b0 28 02 80 	mov	rdx, -0x7ffdd750
ffffffff8000617a: e8 71 af 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000617f: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff80006184: 4c 8b 04 24          	mov	r8, qword ptr [rsp]
ffffffff80006188: 49 83 f8 03          	cmp	r8, 0x3
ffffffff8000618c: 0f 83 5e ff ff ff    	jae	0xffffffff800060f0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x170>
ffffffff80006192: eb a5                	jmp	0xffffffff80006139 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1b9>
ffffffff80006194: 48 83 e2 fc          	and	rdx, -0x4
ffffffff80006198: 31 c9                	xor	ecx, ecx
ffffffff8000619a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800061a0: 49 8b 74 cd 68       	mov	rsi, qword ptr [r13 + 8*rcx + 0x68]
ffffffff800061a5: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff800061a8: 89 cf                	mov	edi, ecx
ffffffff800061aa: 66 89 4e 60          	mov	word ptr [rsi + 0x60], cx
ffffffff800061ae: 49 8b 74 cd 70       	mov	rsi, qword ptr [r13 + 8*rcx + 0x70]
ffffffff800061b3: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff800061b6: 44 8d 47 01          	lea	r8d, [rdi + 0x1]
ffffffff800061ba: 66 44 89 46 60       	mov	word ptr [rsi + 0x60], r8w
ffffffff800061bf: 49 8b 74 cd 78       	mov	rsi, qword ptr [r13 + 8*rcx + 0x78]
ffffffff800061c4: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff800061c7: 44 8d 47 02          	lea	r8d, [rdi + 0x2]
ffffffff800061cb: 66 44 89 46 60       	mov	word ptr [rsi + 0x60], r8w
ffffffff800061d0: 49 8b b4 cd 80 00 00 00      	mov	rsi, qword ptr [r13 + 8*rcx + 0x80]
ffffffff800061d8: 48 83 c1 04          	add	rcx, 0x4
ffffffff800061dc: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff800061df: 83 c7 03             	add	edi, 0x3
ffffffff800061e2: 66 89 7e 60          	mov	word ptr [rsi + 0x60], di
ffffffff800061e6: 48 39 d1             	cmp	rcx, rdx
ffffffff800061e9: 75 b5                	jne	0xffffffff800061a0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x220>
ffffffff800061eb: 48 85 c0             	test	rax, rax
ffffffff800061ee: 74 14                	je	0xffffffff80006204 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff800061f0: 49 8b 54 cd 68       	mov	rdx, qword ptr [r13 + 8*rcx + 0x68]
ffffffff800061f5: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff800061f8: 66 89 4a 60          	mov	word ptr [rdx + 0x60], cx
ffffffff800061fc: 48 ff c1             	inc	rcx
ffffffff800061ff: 48 ff c8             	dec	rax
ffffffff80006202: 75 ec                	jne	0xffffffff800061f0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x270>
ffffffff80006204: 48 83 c4 28          	add	rsp, 0x28
ffffffff80006208: 5b                   	pop	rbx
ffffffff80006209: 41 5c                	pop	r12
ffffffff8000620b: 41 5d                	pop	r13
ffffffff8000620d: 41 5e                	pop	r14
ffffffff8000620f: 41 5f                	pop	r15
ffffffff80006211: 5d                   	pop	rbp
ffffffff80006212: c3                   	ret
ffffffff80006213: be 32 00 00 00       	mov	esi, 0x32
ffffffff80006218: 48 c7 c7 20 28 02 80 	mov	rdi, -0x7ffdd7e0
ffffffff8000621f: 48 c7 c2 58 28 02 80 	mov	rdx, -0x7ffdd7a8
ffffffff80006226: e8 c5 ae 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000622b: be 28 00 00 00       	mov	esi, 0x28
ffffffff80006230: 48 c7 c7 70 28 02 80 	mov	rdi, -0x7ffdd790
ffffffff80006237: 48 c7 c2 98 28 02 80 	mov	rdx, -0x7ffdd768
ffffffff8000623e: e8 ad ae 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006243: be 28 00 00 00       	mov	esi, 0x28
ffffffff80006248: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff8000624f: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff80006256: e8 95 ae 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000625b: cc                   	int3
ffffffff8000625c: cc                   	int3
ffffffff8000625d: cc                   	int3
ffffffff8000625e: cc                   	int3
ffffffff8000625f: cc                   	int3

ffffffff80006260 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>:
ffffffff80006260: 55                   	push	rbp
ffffffff80006261: 41 57                	push	r15
ffffffff80006263: 41 56                	push	r14
ffffffff80006265: 41 55                	push	r13
ffffffff80006267: 41 54                	push	r12
ffffffff80006269: 53                   	push	rbx
ffffffff8000626a: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8000626e: 48 8b 5f 18          	mov	rbx, qword ptr [rdi + 0x18]
ffffffff80006272: 44 0f b7 63 62       	movzx	r12d, word ptr [rbx + 0x62]
ffffffff80006277: 48 8b 6f 28          	mov	rbp, qword ptr [rdi + 0x28]
ffffffff8000627b: 0f b7 45 62          	movzx	eax, word ptr [rbp + 0x62]
ffffffff8000627f: 49 8d 0c 04          	lea	rcx, [r12 + rax]
ffffffff80006283: 48 ff c1             	inc	rcx
ffffffff80006286: 48 83 f9 0c          	cmp	rcx, 0xc
ffffffff8000628a: 0f 83 91 02 00 00    	jae	0xffffffff80006521 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x2c1>
ffffffff80006290: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff80006293: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80006298: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff8000629c: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff800062a1: 48 8b 47 20          	mov	rax, qword ptr [rdi + 0x20]
ffffffff800062a5: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800062aa: 4d 8d 7c 24 01       	lea	r15, [r12 + 0x1]
ffffffff800062af: 41 0f b7 46 62       	movzx	eax, word ptr [r14 + 0x62]
ffffffff800062b4: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800062b9: 4c 8b 6f 10          	mov	r13, qword ptr [rdi + 0x10]
ffffffff800062bd: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff800062c2: 66 89 4b 62          	mov	word ptr [rbx + 0x62], cx
ffffffff800062c6: 4c 89 6c 24 18       	mov	qword ptr [rsp + 0x18], r13
ffffffff800062cb: 4b 8d 7c ee 08       	lea	rdi, [r14 + 8*r13 + 0x8]
ffffffff800062d0: 4b 8b 4c ee 08       	mov	rcx, qword ptr [r14 + 8*r13 + 0x8]
ffffffff800062d5: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff800062da: 4b 8d 34 ee          	lea	rsi, [r14 + 8*r13]
ffffffff800062de: 48 83 c6 10          	add	rsi, 0x10
ffffffff800062e2: 49 f7 d5             	not	r13
ffffffff800062e5: 49 01 c5             	add	r13, rax
ffffffff800062e8: 49 c1 e5 03          	shl	r13, 0x3
ffffffff800062ec: 4c 89 ea             	mov	rdx, r13
ffffffff800062ef: ff 15 43 61 03 00    	call	qword ptr [rip + 0x36143] # 0xffffffff8003c438
ffffffff800062f5: 4c 89 64 24 10       	mov	qword ptr [rsp + 0x10], r12
ffffffff800062fa: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800062ff: 4a 89 44 e3 08       	mov	qword ptr [rbx + 8*r12 + 0x8], rax
ffffffff80006304: 48 89 6c 24 08       	mov	qword ptr [rsp + 0x8], rbp
ffffffff80006309: 48 8d 75 08          	lea	rsi, [rbp + 0x8]
ffffffff8000630d: 4a 8d 3c fb          	lea	rdi, [rbx + 8*r15]
ffffffff80006311: 48 83 c7 08          	add	rdi, 0x8
ffffffff80006315: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8000631a: 8d 14 c5 00 00 00 00 	lea	edx, [8*rax]
ffffffff80006321: ff 15 09 61 03 00    	call	qword ptr [rip + 0x36109] # 0xffffffff8003c430
ffffffff80006327: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000632c: 48 8d 68 01          	lea	rbp, [rax + 0x1]
ffffffff80006330: 4d 8d 24 c6          	lea	r12, [r14 + 8*rax]
ffffffff80006334: 49 83 c4 70          	add	r12, 0x70
ffffffff80006338: 49 8d 34 c6          	lea	rsi, [r14 + 8*rax]
ffffffff8000633c: 48 83 c6 78          	add	rsi, 0x78
ffffffff80006340: 4c 89 e7             	mov	rdi, r12
ffffffff80006343: 4c 89 ea             	mov	rdx, r13
ffffffff80006346: ff 15 ec 60 03 00    	call	qword ptr [rip + 0x360ec] # 0xffffffff8003c438
ffffffff8000634c: 4c 8b 44 24 38       	mov	r8, qword ptr [rsp + 0x38]
ffffffff80006351: 4c 39 c5             	cmp	rbp, r8
ffffffff80006354: 0f 83 8b 00 00 00    	jae	0xffffffff800063e5 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x185>
ffffffff8000635a: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff8000635f: 89 d0                	mov	eax, edx
ffffffff80006361: f7 d0                	not	eax
ffffffff80006363: 41 8d 0c 00          	lea	ecx, [r8 + rax]
ffffffff80006367: 4c 89 c0             	mov	rax, r8
ffffffff8000636a: 48 29 d0             	sub	rax, rdx
ffffffff8000636d: 48 83 c0 fe          	add	rax, -0x2
ffffffff80006371: 83 e1 03             	and	ecx, 0x3
ffffffff80006374: 74 23                	je	0xffffffff80006399 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x139>
ffffffff80006376: 31 d2                	xor	edx, edx
ffffffff80006378: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80006380: 49 8b 34 d4          	mov	rsi, qword ptr [r12 + 8*rdx]
ffffffff80006384: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff80006387: 8d 3c 2a             	lea	edi, [rdx + rbp]
ffffffff8000638a: 66 89 7e 60          	mov	word ptr [rsi + 0x60], di
ffffffff8000638e: 48 ff c2             	inc	rdx
ffffffff80006391: 48 39 d1             	cmp	rcx, rdx
ffffffff80006394: 75 ea                	jne	0xffffffff80006380 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x120>
ffffffff80006396: 48 01 d5             	add	rbp, rdx
ffffffff80006399: 48 83 f8 03          	cmp	rax, 0x3
ffffffff8000639d: 72 46                	jb	0xffffffff800063e5 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x185>
ffffffff8000639f: 90                   	nop
ffffffff800063a0: 49 8b 44 ee 68       	mov	rax, qword ptr [r14 + 8*rbp + 0x68]
ffffffff800063a5: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff800063a8: 66 89 68 60          	mov	word ptr [rax + 0x60], bp
ffffffff800063ac: 49 8b 44 ee 70       	mov	rax, qword ptr [r14 + 8*rbp + 0x70]
ffffffff800063b1: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff800063b4: 8d 4d 01             	lea	ecx, [rbp + 0x1]
ffffffff800063b7: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff800063bb: 49 8b 44 ee 78       	mov	rax, qword ptr [r14 + 8*rbp + 0x78]
ffffffff800063c0: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff800063c3: 8d 4d 02             	lea	ecx, [rbp + 0x2]
ffffffff800063c6: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff800063ca: 49 8b 84 ee 80 00 00 00      	mov	rax, qword ptr [r14 + 8*rbp + 0x80]
ffffffff800063d2: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff800063d5: 8d 4d 03             	lea	ecx, [rbp + 0x3]
ffffffff800063d8: 66 89 48 60          	mov	word ptr [rax + 0x60], cx
ffffffff800063dc: 48 83 c5 04          	add	rbp, 0x4
ffffffff800063e0: 4c 39 c5             	cmp	rbp, r8
ffffffff800063e3: 75 bb                	jne	0xffffffff800063a0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x140>
ffffffff800063e5: 66 41 ff 4e 62       	dec	word ptr [r14 + 0x62]
ffffffff800063ea: b9 68 00 00 00       	mov	ecx, 0x68
ffffffff800063ef: 48 83 7c 24 40 02    	cmp	qword ptr [rsp + 0x40], 0x2
ffffffff800063f5: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff800063fa: 0f 82 c9 00 00 00    	jb	0xffffffff800064c9 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x269>
ffffffff80006400: 48 8b 6c 24 20       	mov	rbp, qword ptr [rsp + 0x20]
ffffffff80006405: 4c 8d 75 01          	lea	r14, [rbp + 0x1]
ffffffff80006409: 4c 8b 6c 24 28       	mov	r13, qword ptr [rsp + 0x28]
ffffffff8000640e: 4c 89 e8             	mov	rax, r13
ffffffff80006411: 48 2b 44 24 10       	sub	rax, qword ptr [rsp + 0x10]
ffffffff80006416: 49 39 c6             	cmp	r14, rax
ffffffff80006419: 0f 85 1a 01 00 00    	jne	0xffffffff80006539 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x2d9>
ffffffff8000641f: 48 8d 43 68          	lea	rax, [rbx + 0x68]
ffffffff80006423: 4a 8d 3c f8          	lea	rdi, [rax + 8*r15]
ffffffff80006427: 49 8d 74 24 68       	lea	rsi, [r12 + 0x68]
ffffffff8000642c: 42 8d 14 f5 00 00 00 00      	lea	edx, [8*r14]
ffffffff80006434: ff 15 f6 5f 03 00    	call	qword ptr [rip + 0x35ff6] # 0xffffffff8003c430
ffffffff8000643a: 49 83 e6 03          	and	r14, 0x3
ffffffff8000643e: 74 2a                	je	0xffffffff8000646a <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x20a>
ffffffff80006440: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80006445: 48 8d 0c c3          	lea	rcx, [rbx + 8*rax]
ffffffff80006449: 48 83 c1 70          	add	rcx, 0x70
ffffffff8000644d: 31 c0                	xor	eax, eax
ffffffff8000644f: 90                   	nop
ffffffff80006450: 48 8b 14 c1          	mov	rdx, qword ptr [rcx + 8*rax]
ffffffff80006454: 48 89 1a             	mov	qword ptr [rdx], rbx
ffffffff80006457: 41 8d 34 07          	lea	esi, [r15 + rax]
ffffffff8000645b: 66 89 72 60          	mov	word ptr [rdx + 0x60], si
ffffffff8000645f: 48 ff c0             	inc	rax
ffffffff80006462: 49 39 c6             	cmp	r14, rax
ffffffff80006465: 75 e9                	jne	0xffffffff80006450 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x1f0>
ffffffff80006467: 49 01 c7             	add	r15, rax
ffffffff8000646a: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff8000646f: 66 83 fd 03          	cmp	bp, 0x3
ffffffff80006473: 72 54                	jb	0xffffffff800064c9 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x269>
ffffffff80006475: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80006480: 4a 8b 44 fb 68       	mov	rax, qword ptr [rbx + 8*r15 + 0x68]
ffffffff80006485: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff80006488: 66 44 89 78 60       	mov	word ptr [rax + 0x60], r15w
ffffffff8000648d: 4a 8b 44 fb 70       	mov	rax, qword ptr [rbx + 8*r15 + 0x70]
ffffffff80006492: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff80006495: 41 8d 57 01          	lea	edx, [r15 + 0x1]
ffffffff80006499: 66 89 50 60          	mov	word ptr [rax + 0x60], dx
ffffffff8000649d: 4a 8b 44 fb 78       	mov	rax, qword ptr [rbx + 8*r15 + 0x78]
ffffffff800064a2: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff800064a5: 41 8d 57 02          	lea	edx, [r15 + 0x2]
ffffffff800064a9: 66 89 50 60          	mov	word ptr [rax + 0x60], dx
ffffffff800064ad: 4a 8b 84 fb 80 00 00 00      	mov	rax, qword ptr [rbx + 8*r15 + 0x80]
ffffffff800064b5: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff800064b8: 49 8d 57 03          	lea	rdx, [r15 + 0x3]
ffffffff800064bc: 66 89 50 60          	mov	word ptr [rax + 0x60], dx
ffffffff800064c0: 49 83 c7 04          	add	r15, 0x4
ffffffff800064c4: 4c 39 ea             	cmp	rdx, r13
ffffffff800064c7: 75 b7                	jne	0xffffffff80006480 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x220>
ffffffff800064c9: b2 01                	mov	dl, 0x1
ffffffff800064cb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800064d0: 31 c0                	xor	eax, eax
ffffffff800064d2: f0                   	lock
ffffffff800064d3: 0f b0 15 26 4b 02 00 	cmpxchg	byte ptr [rip + 0x24b26], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800064da: 75 06                	jne	0xffffffff800064e2 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x282>
ffffffff800064dc: eb 11                	jmp	0xffffffff800064ef <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x28f>
ffffffff800064de: 66 90                	nop
ffffffff800064e0: f3 90                	pause
ffffffff800064e2: 0f b6 05 17 4b 02 00 	movzx	eax, byte ptr [rip + 0x24b17] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800064e9: 84 c0                	test	al, al
ffffffff800064eb: 75 f3                	jne	0xffffffff800064e0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x280>
ffffffff800064ed: eb e1                	jmp	0xffffffff800064d0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x270>
ffffffff800064ef: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800064f4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800064fb: 4c 89 e6             	mov	rsi, r12
ffffffff800064fe: e8 ed 62 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80006503: c6 05 f6 4a 02 00 00 	mov	byte ptr [rip + 0x24af6], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000650a: 48 89 d8             	mov	rax, rbx
ffffffff8000650d: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff80006512: 48 83 c4 48          	add	rsp, 0x48
ffffffff80006516: 5b                   	pop	rbx
ffffffff80006517: 41 5c                	pop	r12
ffffffff80006519: 41 5d                	pop	r13
ffffffff8000651b: 41 5e                	pop	r14
ffffffff8000651d: 41 5f                	pop	r15
ffffffff8000651f: 5d                   	pop	rbp
ffffffff80006520: c3                   	ret
ffffffff80006521: be 2a 00 00 00       	mov	esi, 0x2a
ffffffff80006526: 48 c7 c7 70 29 02 80 	mov	rdi, -0x7ffdd690
ffffffff8000652d: 48 c7 c2 a0 29 02 80 	mov	rdx, -0x7ffdd660
ffffffff80006534: e8 b7 ab 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006539: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000653e: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80006545: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff8000654c: e8 9f ab 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006551: cc                   	int3
ffffffff80006552: cc                   	int3
ffffffff80006553: cc                   	int3
ffffffff80006554: cc                   	int3
ffffffff80006555: cc                   	int3
ffffffff80006556: cc                   	int3
ffffffff80006557: cc                   	int3
ffffffff80006558: cc                   	int3
ffffffff80006559: cc                   	int3
ffffffff8000655a: cc                   	int3
ffffffff8000655b: cc                   	int3
ffffffff8000655c: cc                   	int3
ffffffff8000655d: cc                   	int3
ffffffff8000655e: cc                   	int3
ffffffff8000655f: cc                   	int3

ffffffff80006560 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>:
ffffffff80006560: 55                   	push	rbp
ffffffff80006561: 41 57                	push	r15
ffffffff80006563: 41 56                	push	r14
ffffffff80006565: 41 55                	push	r13
ffffffff80006567: 41 54                	push	r12
ffffffff80006569: 53                   	push	rbx
ffffffff8000656a: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8000656e: 48 8b 5f 18          	mov	rbx, qword ptr [rdi + 0x18]
ffffffff80006572: 0f b7 93 8e 00 00 00 	movzx	edx, word ptr [rbx + 0x8e]
ffffffff80006579: 48 8b 77 28          	mov	rsi, qword ptr [rdi + 0x28]
ffffffff8000657d: 44 0f b7 ae 8e 00 00 00      	movzx	r13d, word ptr [rsi + 0x8e]
ffffffff80006585: 4a 8d 0c 2a          	lea	rcx, [rdx + r13]
ffffffff80006589: 48 ff c1             	inc	rcx
ffffffff8000658c: 48 83 f9 0c          	cmp	rcx, 0xc
ffffffff80006590: 0f 83 3b 03 00 00    	jae	0xffffffff800068d1 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x371>
ffffffff80006596: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff80006599: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff8000659d: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff800065a2: 48 8b 47 20          	mov	rax, qword ptr [rdi + 0x20]
ffffffff800065a6: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800065ab: 4c 8d 7a 01          	lea	r15, [rdx + 0x1]
ffffffff800065af: 41 0f b7 86 8e 00 00 00      	movzx	eax, word ptr [r14 + 0x8e]
ffffffff800065b7: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800065bc: 4c 8b 67 10          	mov	r12, qword ptr [rdi + 0x10]
ffffffff800065c0: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff800065c5: 66 89 8b 8e 00 00 00 	mov	word ptr [rbx + 0x8e], cx
ffffffff800065cc: 4b 8d 7c a6 60       	lea	rdi, [r14 + 4*r12 + 0x60]
ffffffff800065d1: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff800065d6: 4c 89 6c 24 18       	mov	qword ptr [rsp + 0x18], r13
ffffffff800065db: 43 8b 4c a6 60       	mov	ecx, dword ptr [r14 + 4*r12 + 0x60]
ffffffff800065e0: 89 0c 24             	mov	dword ptr [rsp], ecx
ffffffff800065e3: 4b 8d 34 a6          	lea	rsi, [r14 + 4*r12]
ffffffff800065e7: 48 83 c6 64          	add	rsi, 0x64
ffffffff800065eb: 4c 89 e1             	mov	rcx, r12
ffffffff800065ee: 48 f7 d1             	not	rcx
ffffffff800065f1: 48 01 c1             	add	rcx, rax
ffffffff800065f4: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff800065f9: 48 89 d5             	mov	rbp, rdx
ffffffff800065fc: 48 8d 14 8d 00 00 00 00      	lea	rdx, [4*rcx]
ffffffff80006604: ff 15 2e 5e 03 00    	call	qword ptr [rip + 0x35e2e] # 0xffffffff8003c438
ffffffff8000660a: 8b 04 24             	mov	eax, dword ptr [rsp]
ffffffff8000660d: 89 44 ab 60          	mov	dword ptr [rbx + 4*rbp + 0x60], eax
ffffffff80006611: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80006616: 48 8d 70 60          	lea	rsi, [rax + 0x60]
ffffffff8000661a: 4a 8d 3c bb          	lea	rdi, [rbx + 4*r15]
ffffffff8000661e: 48 83 c7 60          	add	rdi, 0x60
ffffffff80006622: 42 8d 14 ad 00 00 00 00      	lea	edx, [4*r13]
ffffffff8000662a: 49 89 c5             	mov	r13, rax
ffffffff8000662d: ff 15 fd 5d 03 00    	call	qword ptr [rip + 0x35dfd] # 0xffffffff8003c430
ffffffff80006633: 4b 8d 3c e6          	lea	rdi, [r14 + 8*r12]
ffffffff80006637: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000663b: 4b 8b 44 e6 08       	mov	rax, qword ptr [r14 + 8*r12 + 0x8]
ffffffff80006640: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80006644: 4b 8d 34 e6          	lea	rsi, [r14 + 8*r12]
ffffffff80006648: 48 83 c6 10          	add	rsi, 0x10
ffffffff8000664c: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80006651: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff80006655: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff8000665a: ff 15 d8 5d 03 00    	call	qword ptr [rip + 0x35dd8] # 0xffffffff8003c438
ffffffff80006660: 48 89 6c 24 10       	mov	qword ptr [rsp + 0x10], rbp
ffffffff80006665: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff80006669: 48 89 44 eb 08       	mov	qword ptr [rbx + 8*rbp + 0x8], rax
ffffffff8000666e: 49 8d 75 08          	lea	rsi, [r13 + 0x8]
ffffffff80006672: 4a 8d 3c fb          	lea	rdi, [rbx + 8*r15]
ffffffff80006676: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000667a: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000667f: 8d 14 c5 00 00 00 00 	lea	edx, [8*rax]
ffffffff80006686: ff 15 a4 5d 03 00    	call	qword ptr [rip + 0x35da4] # 0xffffffff8003c430
ffffffff8000668c: 49 8d 6c 24 01       	lea	rbp, [r12 + 0x1]
ffffffff80006691: 4f 8d 2c e6          	lea	r13, [r14 + 8*r12]
ffffffff80006695: 49 81 c5 98 00 00 00 	add	r13, 0x98
ffffffff8000669c: 4c 89 24 24          	mov	qword ptr [rsp], r12
ffffffff800066a0: 4b 8d 34 e6          	lea	rsi, [r14 + 8*r12]
ffffffff800066a4: 48 81 c6 a0 00 00 00 	add	rsi, 0xa0
ffffffff800066ab: 4c 89 ef             	mov	rdi, r13
ffffffff800066ae: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff800066b3: ff 15 7f 5d 03 00    	call	qword ptr [rip + 0x35d7f] # 0xffffffff8003c438
ffffffff800066b9: 4c 8b 44 24 38       	mov	r8, qword ptr [rsp + 0x38]
ffffffff800066be: 4c 39 c5             	cmp	rbp, r8
ffffffff800066c1: 0f 83 b3 00 00 00    	jae	0xffffffff8000677a <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x21a>
ffffffff800066c7: 48 8b 14 24          	mov	rdx, qword ptr [rsp]
ffffffff800066cb: 89 d0                	mov	eax, edx
ffffffff800066cd: f7 d0                	not	eax
ffffffff800066cf: 41 8d 0c 00          	lea	ecx, [r8 + rax]
ffffffff800066d3: 4c 89 c0             	mov	rax, r8
ffffffff800066d6: 48 29 d0             	sub	rax, rdx
ffffffff800066d9: 48 83 c0 fe          	add	rax, -0x2
ffffffff800066dd: 83 e1 03             	and	ecx, 0x3
ffffffff800066e0: 74 2b                	je	0xffffffff8000670d <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x1ad>
ffffffff800066e2: 31 d2                	xor	edx, edx
ffffffff800066e4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800066f0: 49 8b 74 d5 00       	mov	rsi, qword ptr [r13 + 8*rdx]
ffffffff800066f5: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff800066f8: 8d 3c 2a             	lea	edi, [rdx + rbp]
ffffffff800066fb: 66 89 be 8c 00 00 00 	mov	word ptr [rsi + 0x8c], di
ffffffff80006702: 48 ff c2             	inc	rdx
ffffffff80006705: 48 39 d1             	cmp	rcx, rdx
ffffffff80006708: 75 e6                	jne	0xffffffff800066f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x190>
ffffffff8000670a: 48 01 d5             	add	rbp, rdx
ffffffff8000670d: 48 83 f8 03          	cmp	rax, 0x3
ffffffff80006711: 72 67                	jb	0xffffffff8000677a <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x21a>
ffffffff80006713: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80006720: 49 8b 84 ee 90 00 00 00      	mov	rax, qword ptr [r14 + 8*rbp + 0x90]
ffffffff80006728: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff8000672b: 66 89 a8 8c 00 00 00 	mov	word ptr [rax + 0x8c], bp
ffffffff80006732: 49 8b 84 ee 98 00 00 00      	mov	rax, qword ptr [r14 + 8*rbp + 0x98]
ffffffff8000673a: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff8000673d: 8d 4d 01             	lea	ecx, [rbp + 0x1]
ffffffff80006740: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff80006747: 49 8b 84 ee a0 00 00 00      	mov	rax, qword ptr [r14 + 8*rbp + 0xa0]
ffffffff8000674f: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff80006752: 8d 4d 02             	lea	ecx, [rbp + 0x2]
ffffffff80006755: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff8000675c: 49 8b 84 ee a8 00 00 00      	mov	rax, qword ptr [r14 + 8*rbp + 0xa8]
ffffffff80006764: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff80006767: 8d 4d 03             	lea	ecx, [rbp + 0x3]
ffffffff8000676a: 66 89 88 8c 00 00 00 	mov	word ptr [rax + 0x8c], cx
ffffffff80006771: 48 83 c5 04          	add	rbp, 0x4
ffffffff80006775: 4c 39 c5             	cmp	rbp, r8
ffffffff80006778: 75 a6                	jne	0xffffffff80006720 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x1c0>
ffffffff8000677a: 66 41 ff 8e 8e 00 00 00      	dec	word ptr [r14 + 0x8e]
ffffffff80006782: b9 90 00 00 00       	mov	ecx, 0x90
ffffffff80006787: 48 83 7c 24 40 02    	cmp	qword ptr [rsp + 0x40], 0x2
ffffffff8000678d: 4c 8b 64 24 20       	mov	r12, qword ptr [rsp + 0x20]
ffffffff80006792: 0f 82 e6 00 00 00    	jb	0xffffffff8000687e <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x31e>
ffffffff80006798: 48 8b 6c 24 18       	mov	rbp, qword ptr [rsp + 0x18]
ffffffff8000679d: 4c 8d 75 01          	lea	r14, [rbp + 0x1]
ffffffff800067a1: 4c 8b 6c 24 28       	mov	r13, qword ptr [rsp + 0x28]
ffffffff800067a6: 4c 89 e8             	mov	rax, r13
ffffffff800067a9: 48 2b 44 24 10       	sub	rax, qword ptr [rsp + 0x10]
ffffffff800067ae: 49 39 c6             	cmp	r14, rax
ffffffff800067b1: 0f 85 32 01 00 00    	jne	0xffffffff800068e9 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x389>
ffffffff800067b7: 48 8d 83 90 00 00 00 	lea	rax, [rbx + 0x90]
ffffffff800067be: 4a 8d 3c f8          	lea	rdi, [rax + 8*r15]
ffffffff800067c2: 49 8d b4 24 90 00 00 00      	lea	rsi, [r12 + 0x90]
ffffffff800067ca: 42 8d 14 f5 00 00 00 00      	lea	edx, [8*r14]
ffffffff800067d2: ff 15 58 5c 03 00    	call	qword ptr [rip + 0x35c58] # 0xffffffff8003c430
ffffffff800067d8: 49 83 e6 03          	and	r14, 0x3
ffffffff800067dc: 74 2f                	je	0xffffffff8000680d <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x2ad>
ffffffff800067de: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800067e3: 48 8d 0c c3          	lea	rcx, [rbx + 8*rax]
ffffffff800067e7: 48 81 c1 98 00 00 00 	add	rcx, 0x98
ffffffff800067ee: 31 c0                	xor	eax, eax
ffffffff800067f0: 48 8b 14 c1          	mov	rdx, qword ptr [rcx + 8*rax]
ffffffff800067f4: 48 89 1a             	mov	qword ptr [rdx], rbx
ffffffff800067f7: 41 8d 34 07          	lea	esi, [r15 + rax]
ffffffff800067fb: 66 89 b2 8c 00 00 00 	mov	word ptr [rdx + 0x8c], si
ffffffff80006802: 48 ff c0             	inc	rax
ffffffff80006805: 49 39 c6             	cmp	r14, rax
ffffffff80006808: 75 e6                	jne	0xffffffff800067f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x290>
ffffffff8000680a: 49 01 c7             	add	r15, rax
ffffffff8000680d: b9 f0 00 00 00       	mov	ecx, 0xf0
ffffffff80006812: 66 83 fd 03          	cmp	bp, 0x3
ffffffff80006816: 72 66                	jb	0xffffffff8000687e <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x31e>
ffffffff80006818: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80006820: 4a 8b 84 fb 90 00 00 00      	mov	rax, qword ptr [rbx + 8*r15 + 0x90]
ffffffff80006828: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff8000682b: 66 44 89 b8 8c 00 00 00      	mov	word ptr [rax + 0x8c], r15w
ffffffff80006833: 4a 8b 84 fb 98 00 00 00      	mov	rax, qword ptr [rbx + 8*r15 + 0x98]
ffffffff8000683b: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff8000683e: 41 8d 57 01          	lea	edx, [r15 + 0x1]
ffffffff80006842: 66 89 90 8c 00 00 00 	mov	word ptr [rax + 0x8c], dx
ffffffff80006849: 4a 8b 84 fb a0 00 00 00      	mov	rax, qword ptr [rbx + 8*r15 + 0xa0]
ffffffff80006851: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff80006854: 41 8d 57 02          	lea	edx, [r15 + 0x2]
ffffffff80006858: 66 89 90 8c 00 00 00 	mov	word ptr [rax + 0x8c], dx
ffffffff8000685f: 4a 8b 84 fb a8 00 00 00      	mov	rax, qword ptr [rbx + 8*r15 + 0xa8]
ffffffff80006867: 48 89 18             	mov	qword ptr [rax], rbx
ffffffff8000686a: 49 8d 57 03          	lea	rdx, [r15 + 0x3]
ffffffff8000686e: 66 89 90 8c 00 00 00 	mov	word ptr [rax + 0x8c], dx
ffffffff80006875: 49 83 c7 04          	add	r15, 0x4
ffffffff80006879: 4c 39 ea             	cmp	rdx, r13
ffffffff8000687c: 75 a2                	jne	0xffffffff80006820 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x2c0>
ffffffff8000687e: b2 01                	mov	dl, 0x1
ffffffff80006880: 31 c0                	xor	eax, eax
ffffffff80006882: f0                   	lock
ffffffff80006883: 0f b0 15 76 47 02 00 	cmpxchg	byte ptr [rip + 0x24776], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000688a: 75 06                	jne	0xffffffff80006892 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x332>
ffffffff8000688c: eb 11                	jmp	0xffffffff8000689f <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x33f>
ffffffff8000688e: 66 90                	nop
ffffffff80006890: f3 90                	pause
ffffffff80006892: 0f b6 05 67 47 02 00 	movzx	eax, byte ptr [rip + 0x24767] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80006899: 84 c0                	test	al, al
ffffffff8000689b: 75 f3                	jne	0xffffffff80006890 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x330>
ffffffff8000689d: eb e1                	jmp	0xffffffff80006880 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x320>
ffffffff8000689f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800068a4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800068ab: 4c 89 e6             	mov	rsi, r12
ffffffff800068ae: e8 3d 5f 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800068b3: c6 05 46 47 02 00 00 	mov	byte ptr [rip + 0x24746], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800068ba: 48 89 d8             	mov	rax, rbx
ffffffff800068bd: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff800068c2: 48 83 c4 48          	add	rsp, 0x48
ffffffff800068c6: 5b                   	pop	rbx
ffffffff800068c7: 41 5c                	pop	r12
ffffffff800068c9: 41 5d                	pop	r13
ffffffff800068cb: 41 5e                	pop	r14
ffffffff800068cd: 41 5f                	pop	r15
ffffffff800068cf: 5d                   	pop	rbp
ffffffff800068d0: c3                   	ret
ffffffff800068d1: be 2a 00 00 00       	mov	esi, 0x2a
ffffffff800068d6: 48 c7 c7 70 29 02 80 	mov	rdi, -0x7ffdd690
ffffffff800068dd: 48 c7 c2 a0 29 02 80 	mov	rdx, -0x7ffdd660
ffffffff800068e4: e8 07 a8 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800068e9: be 28 00 00 00       	mov	esi, 0x28
ffffffff800068ee: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff800068f5: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff800068fc: e8 ef a7 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006901: cc                   	int3
ffffffff80006902: cc                   	int3
ffffffff80006903: cc                   	int3
ffffffff80006904: cc                   	int3
ffffffff80006905: cc                   	int3
ffffffff80006906: cc                   	int3
ffffffff80006907: cc                   	int3
ffffffff80006908: cc                   	int3
ffffffff80006909: cc                   	int3
ffffffff8000690a: cc                   	int3
ffffffff8000690b: cc                   	int3
ffffffff8000690c: cc                   	int3
ffffffff8000690d: cc                   	int3
ffffffff8000690e: cc                   	int3
ffffffff8000690f: cc                   	int3

ffffffff80006910 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>:
ffffffff80006910: 55                   	push	rbp
ffffffff80006911: 41 57                	push	r15
ffffffff80006913: 41 56                	push	r14
ffffffff80006915: 41 55                	push	r13
ffffffff80006917: 41 54                	push	r12
ffffffff80006919: 53                   	push	rbx
ffffffff8000691a: 48 81 ec 78 01 00 00 	sub	rsp, 0x178
ffffffff80006921: 48 89 54 24 50       	mov	qword ptr [rsp + 0x50], rdx
ffffffff80006926: 49 89 f7             	mov	r15, rsi
ffffffff80006929: 48 89 7c 24 18       	mov	qword ptr [rsp + 0x18], rdi
ffffffff8000692e: 4c 8b 36             	mov	r14, qword ptr [rsi]
ffffffff80006931: 4c 8b 66 10          	mov	r12, qword ptr [rsi + 0x10]
ffffffff80006935: 41 0f b7 5e 62       	movzx	ebx, word ptr [r14 + 0x62]
ffffffff8000693a: 4b 8d 7c e6 08       	lea	rdi, [r14 + 8*r12 + 0x8]
ffffffff8000693f: 4b 8b 44 e6 08       	mov	rax, qword ptr [r14 + 8*r12 + 0x8]
ffffffff80006944: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80006949: 4b 8d 34 e6          	lea	rsi, [r14 + 8*r12]
ffffffff8000694d: 48 83 c6 10          	add	rsi, 0x10
ffffffff80006951: 4c 89 e2             	mov	rdx, r12
ffffffff80006954: 48 f7 d2             	not	rdx
ffffffff80006957: 48 01 da             	add	rdx, rbx
ffffffff8000695a: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff8000695e: ff 15 d4 5a 03 00    	call	qword ptr [rip + 0x35ad4] # 0xffffffff8003c438
ffffffff80006964: 8d 43 ff             	lea	eax, [rbx - 0x1]
ffffffff80006967: 4c 89 f3             	mov	rbx, r14
ffffffff8000696a: 66 41 89 46 62       	mov	word ptr [r14 + 0x62], ax
ffffffff8000696f: 49 8b 57 08          	mov	rdx, qword ptr [r15 + 0x8]
ffffffff80006973: 66 83 f8 04          	cmp	ax, 0x4
ffffffff80006977: 0f 87 3c 05 00 00    	ja	0xffffffff80006eb9 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff8000697d: 48 8b 0b             	mov	rcx, qword ptr [rbx]
ffffffff80006980: 48 85 c9             	test	rcx, rcx
ffffffff80006983: 0f 84 30 05 00 00    	je	0xffffffff80006eb9 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80006989: 49 89 d0             	mov	r8, rdx
ffffffff8000698c: 48 ff c2             	inc	rdx
ffffffff8000698f: 0f b7 73 60          	movzx	esi, word ptr [rbx + 0x60]
ffffffff80006993: 48 85 f6             	test	rsi, rsi
ffffffff80006996: 74 76                	je	0xffffffff80006a0e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0xfe>
ffffffff80006998: 48 8b 7c f1 60       	mov	rdi, qword ptr [rcx + 8*rsi + 0x60]
ffffffff8000699d: 48 ff ce             	dec	rsi
ffffffff800069a0: 48 89 8c 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rcx
ffffffff800069a8: 48 89 94 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rdx
ffffffff800069b0: 48 89 b4 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rsi
ffffffff800069b8: 48 89 bc 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rdi
ffffffff800069c0: 4c 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], r8
ffffffff800069c8: 49 89 de             	mov	r14, rbx
ffffffff800069cb: 48 89 9c 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rbx
ffffffff800069d3: 4c 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r8
ffffffff800069db: 0f b7 5f 62          	movzx	ebx, word ptr [rdi + 0x62]
ffffffff800069df: 0f b7 c0             	movzx	eax, ax
ffffffff800069e2: 8d 0c 03             	lea	ecx, [rbx + rax]
ffffffff800069e5: ff c1                	inc	ecx
ffffffff800069e7: 83 f9 0c             	cmp	ecx, 0xc
ffffffff800069ea: 0f 83 a6 00 00 00    	jae	0xffffffff80006a96 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x186>
ffffffff800069f0: 49 39 c4             	cmp	r12, rax
ffffffff800069f3: 0f 87 99 05 00 00    	ja	0xffffffff80006f92 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x682>
ffffffff800069f9: 48 8d bc 24 a0 00 00 00      	lea	rdi, [rsp + 0xa0]
ffffffff80006a01: e8 5a f8 ff ff       	call	0xffffffff80006260 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>
ffffffff80006a06: 49 01 dc             	add	r12, rbx
ffffffff80006a09: 49 ff c4             	inc	r12
ffffffff80006a0c: eb 78                	jmp	0xffffffff80006a86 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x176>
ffffffff80006a0e: 66 83 79 62 00       	cmp	word ptr [rcx + 0x62], 0x0
ffffffff80006a13: 0f 84 91 05 00 00    	je	0xffffffff80006faa <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x69a>
ffffffff80006a19: 4d 89 c6             	mov	r14, r8
ffffffff80006a1c: 48 8b 71 70          	mov	rsi, qword ptr [rcx + 0x70]
ffffffff80006a20: 48 89 8c 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rcx
ffffffff80006a28: 48 89 94 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rdx
ffffffff80006a30: 48 c7 84 24 e8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xe8], 0x0
ffffffff80006a3c: 48 89 9c 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rbx
ffffffff80006a44: 4c 89 b4 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], r14
ffffffff80006a4c: 48 89 b4 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rsi
ffffffff80006a54: 4c 89 b4 24 08 01 00 00      	mov	qword ptr [rsp + 0x108], r14
ffffffff80006a5c: 0f b7 c0             	movzx	eax, ax
ffffffff80006a5f: 0f b7 4e 62          	movzx	ecx, word ptr [rsi + 0x62]
ffffffff80006a63: 01 c1                	add	ecx, eax
ffffffff80006a65: ff c1                	inc	ecx
ffffffff80006a67: 83 f9 0c             	cmp	ecx, 0xc
ffffffff80006a6a: 0f 83 28 04 00 00    	jae	0xffffffff80006e98 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x588>
ffffffff80006a70: 49 39 c4             	cmp	r12, rax
ffffffff80006a73: 0f 87 19 05 00 00    	ja	0xffffffff80006f92 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x682>
ffffffff80006a79: 48 8d bc 24 d8 00 00 00      	lea	rdi, [rsp + 0xd8]
ffffffff80006a81: e8 da f7 ff ff       	call	0xffffffff80006260 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>
ffffffff80006a86: 48 89 c3             	mov	rbx, rax
ffffffff80006a89: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff80006a8c: 48 85 c0             	test	rax, rax
ffffffff80006a8f: 75 2f                	jne	0xffffffff80006ac0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1b0>
ffffffff80006a91: e9 23 04 00 00       	jmp	0xffffffff80006eb9 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80006a96: 48 8d bc 24 a0 00 00 00      	lea	rdi, [rsp + 0xa0]
ffffffff80006a9e: be 01 00 00 00       	mov	esi, 0x1
ffffffff80006aa3: 4c 89 c3             	mov	rbx, r8
ffffffff80006aa6: e8 35 ec ff ff       	call	0xffffffff800056e0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>
ffffffff80006aab: 48 89 da             	mov	rdx, rbx
ffffffff80006aae: 49 ff c4             	inc	r12
ffffffff80006ab1: 4c 89 f3             	mov	rbx, r14
ffffffff80006ab4: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff80006ab7: 48 85 c0             	test	rax, rax
ffffffff80006aba: 0f 84 f9 03 00 00    	je	0xffffffff80006eb9 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80006ac0: 48 89 54 24 20       	mov	qword ptr [rsp + 0x20], rdx
ffffffff80006ac5: 48 89 5c 24 40       	mov	qword ptr [rsp + 0x40], rbx
ffffffff80006aca: 0f b7 48 62          	movzx	ecx, word ptr [rax + 0x62]
ffffffff80006ace: 66 83 f9 04          	cmp	cx, 0x4
ffffffff80006ad2: 76 19                	jbe	0xffffffff80006aed <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1dd>
ffffffff80006ad4: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80006ad9: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80006ade: 48 8b 5c 24 40       	mov	rbx, qword ptr [rsp + 0x40]
ffffffff80006ae3: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff80006ae8: e9 d6 03 00 00       	jmp	0xffffffff80006ec3 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5b3>
ffffffff80006aed: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff80006af2: 48 ff c2             	inc	rdx
ffffffff80006af5: 4c 89 64 24 58       	mov	qword ptr [rsp + 0x58], r12
ffffffff80006afa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80006b00: 0f b7 c9             	movzx	ecx, cx
ffffffff80006b03: 48 8b 18             	mov	rbx, qword ptr [rax]
ffffffff80006b06: 48 85 db             	test	rbx, rbx
ffffffff80006b09: 0f 84 d5 03 00 00    	je	0xffffffff80006ee4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5d4>
ffffffff80006b0f: 48 8d 7a 01          	lea	rdi, [rdx + 0x1]
ffffffff80006b13: 44 0f b7 78 60       	movzx	r15d, word ptr [rax + 0x60]
ffffffff80006b18: 4d 85 ff             	test	r15, r15
ffffffff80006b1b: 48 89 7c 24 60       	mov	qword ptr [rsp + 0x60], rdi
ffffffff80006b20: 0f 84 7a 00 00 00    	je	0xffffffff80006ba0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x290>
ffffffff80006b26: 4e 8b 74 fb 60       	mov	r14, qword ptr [rbx + 8*r15 + 0x60]
ffffffff80006b2b: 49 ff cf             	dec	r15
ffffffff80006b2e: 48 89 9c 24 10 01 00 00      	mov	qword ptr [rsp + 0x110], rbx
ffffffff80006b36: 48 89 bc 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rdi
ffffffff80006b3e: 4c 89 bc 24 20 01 00 00      	mov	qword ptr [rsp + 0x120], r15
ffffffff80006b46: 4c 89 b4 24 28 01 00 00      	mov	qword ptr [rsp + 0x128], r14
ffffffff80006b4e: 48 89 94 24 30 01 00 00      	mov	qword ptr [rsp + 0x130], rdx
ffffffff80006b56: 48 89 84 24 38 01 00 00      	mov	qword ptr [rsp + 0x138], rax
ffffffff80006b5e: 48 89 94 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], rdx
ffffffff80006b66: 41 0f b7 76 62       	movzx	esi, word ptr [r14 + 0x62]
ffffffff80006b6b: 8d 14 31             	lea	edx, [rcx + rsi]
ffffffff80006b6e: ff c2                	inc	edx
ffffffff80006b70: 83 fa 0c             	cmp	edx, 0xc
ffffffff80006b73: 0f 83 81 03 00 00    	jae	0xffffffff80006efa <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5ea>
ffffffff80006b79: 48 8d 56 01          	lea	rdx, [rsi + 0x1]
ffffffff80006b7d: 48 89 54 24 28       	mov	qword ptr [rsp + 0x28], rdx
ffffffff80006b82: 48 8d 14 0e          	lea	rdx, [rsi + rcx]
ffffffff80006b86: 48 ff c2             	inc	rdx
ffffffff80006b89: 48 89 74 24 30       	mov	qword ptr [rsp + 0x30], rsi
ffffffff80006b8e: 0f b7 73 62          	movzx	esi, word ptr [rbx + 0x62]
ffffffff80006b92: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80006b97: 48 89 4c 24 38       	mov	qword ptr [rsp + 0x38], rcx
ffffffff80006b9c: eb 7a                	jmp	0xffffffff80006c18 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x308>
ffffffff80006b9e: 66 90                	nop
ffffffff80006ba0: 0f b7 73 62          	movzx	esi, word ptr [rbx + 0x62]
ffffffff80006ba4: 66 85 f6             	test	si, si
ffffffff80006ba7: 0f 84 96 03 00 00    	je	0xffffffff80006f43 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x633>
ffffffff80006bad: 4c 8b 43 70          	mov	r8, qword ptr [rbx + 0x70]
ffffffff80006bb1: 48 89 5c 24 68       	mov	qword ptr [rsp + 0x68], rbx
ffffffff80006bb6: 48 89 7c 24 70       	mov	qword ptr [rsp + 0x70], rdi
ffffffff80006bbb: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 0x78], 0x0
ffffffff80006bc4: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff80006bcc: 48 89 94 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rdx
ffffffff80006bd4: 4c 89 84 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], r8
ffffffff80006bdc: 48 89 94 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rdx
ffffffff80006be4: 45 0f b7 48 62       	movzx	r9d, word ptr [r8 + 0x62]
ffffffff80006be9: 4a 8d 14 09          	lea	rdx, [rcx + r9]
ffffffff80006bed: 48 ff c2             	inc	rdx
ffffffff80006bf0: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80006bf4: 0f 83 1a 03 00 00    	jae	0xffffffff80006f14 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x604>
ffffffff80006bfa: 48 8d 79 01          	lea	rdi, [rcx + 0x1]
ffffffff80006bfe: 48 89 7c 24 28       	mov	qword ptr [rsp + 0x28], rdi
ffffffff80006c03: 49 89 c6             	mov	r14, rax
ffffffff80006c06: 45 31 ff             	xor	r15d, r15d
ffffffff80006c09: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff80006c0e: 4c 89 44 24 08       	mov	qword ptr [rsp + 0x8], r8
ffffffff80006c13: 4c 89 4c 24 38       	mov	qword ptr [rsp + 0x38], r9
ffffffff80006c18: 0f b7 ee             	movzx	ebp, si
ffffffff80006c1b: 48 89 54 24 48       	mov	qword ptr [rsp + 0x48], rdx
ffffffff80006c20: 66 41 89 56 62       	mov	word ptr [r14 + 0x62], dx
ffffffff80006c25: 4a 8d 3c fb          	lea	rdi, [rbx + 8*r15]
ffffffff80006c29: 48 83 c7 08          	add	rdi, 0x8
ffffffff80006c2d: 4e 8b 6c fb 08       	mov	r13, qword ptr [rbx + 8*r15 + 0x8]
ffffffff80006c32: 4a 8d 34 fb          	lea	rsi, [rbx + 8*r15]
ffffffff80006c36: 48 83 c6 10          	add	rsi, 0x10
ffffffff80006c3a: 4d 89 fc             	mov	r12, r15
ffffffff80006c3d: 49 f7 d4             	not	r12
ffffffff80006c40: 49 01 ec             	add	r12, rbp
ffffffff80006c43: 49 c1 e4 03          	shl	r12, 0x3
ffffffff80006c47: 4c 89 e2             	mov	rdx, r12
ffffffff80006c4a: 48 8b 05 e7 57 03 00 	mov	rax, qword ptr [rip + 0x357e7] # 0xffffffff8003c438
ffffffff80006c51: ff d0                	call	rax
ffffffff80006c53: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80006c58: 4d 89 6c c6 08       	mov	qword ptr [r14 + 8*rax + 0x8], r13
ffffffff80006c5d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80006c62: 48 8d 70 08          	lea	rsi, [rax + 0x8]
ffffffff80006c66: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff80006c6b: 49 8d 3c c6          	lea	rdi, [r14 + 8*rax]
ffffffff80006c6f: 48 83 c7 08          	add	rdi, 0x8
ffffffff80006c73: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff80006c78: 8d 14 c5 00 00 00 00 	lea	edx, [8*rax]
ffffffff80006c7f: ff 15 ab 57 03 00    	call	qword ptr [rip + 0x357ab] # 0xffffffff8003c430
ffffffff80006c85: 4d 8d 6f 01          	lea	r13, [r15 + 0x1]
ffffffff80006c89: 4a 8d 3c fb          	lea	rdi, [rbx + 8*r15]
ffffffff80006c8d: 48 83 c7 70          	add	rdi, 0x70
ffffffff80006c91: 4a 8d 34 fb          	lea	rsi, [rbx + 8*r15]
ffffffff80006c95: 48 83 c6 78          	add	rsi, 0x78
ffffffff80006c99: 4c 89 e2             	mov	rdx, r12
ffffffff80006c9c: ff 15 96 57 03 00    	call	qword ptr [rip + 0x35796] # 0xffffffff8003c438
ffffffff80006ca2: 4c 39 ed             	cmp	rbp, r13
ffffffff80006ca5: 0f 86 8a 00 00 00    	jbe	0xffffffff80006d35 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80006cab: 89 e9                	mov	ecx, ebp
ffffffff80006cad: 44 29 e9             	sub	ecx, r13d
ffffffff80006cb0: 83 e1 03             	and	ecx, 0x3
ffffffff80006cb3: 0f 84 c2 01 00 00    	je	0xffffffff80006e7b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x56b>
ffffffff80006cb9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80006cc0: 49 8d 45 01          	lea	rax, [r13 + 0x1]
ffffffff80006cc4: 4a 8b 54 eb 68       	mov	rdx, qword ptr [rbx + 8*r13 + 0x68]
ffffffff80006cc9: 48 89 1a             	mov	qword ptr [rdx], rbx
ffffffff80006ccc: 66 44 89 6a 60       	mov	word ptr [rdx + 0x60], r13w
ffffffff80006cd1: 49 89 c5             	mov	r13, rax
ffffffff80006cd4: 48 ff c9             	dec	rcx
ffffffff80006cd7: 75 e7                	jne	0xffffffff80006cc0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3b0>
ffffffff80006cd9: 49 f7 df             	neg	r15
ffffffff80006cdc: 49 8d 0c 2f          	lea	rcx, [r15 + rbp]
ffffffff80006ce0: 48 83 c1 fe          	add	rcx, -0x2
ffffffff80006ce4: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80006ce8: 72 4b                	jb	0xffffffff80006d35 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80006cea: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80006cf0: 48 8b 4c c3 68       	mov	rcx, qword ptr [rbx + 8*rax + 0x68]
ffffffff80006cf5: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff80006cf8: 66 89 41 60          	mov	word ptr [rcx + 0x60], ax
ffffffff80006cfc: 48 8b 4c c3 70       	mov	rcx, qword ptr [rbx + 8*rax + 0x70]
ffffffff80006d01: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff80006d04: 8d 50 01             	lea	edx, [rax + 0x1]
ffffffff80006d07: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff80006d0b: 48 8b 4c c3 78       	mov	rcx, qword ptr [rbx + 8*rax + 0x78]
ffffffff80006d10: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff80006d13: 8d 50 02             	lea	edx, [rax + 0x2]
ffffffff80006d16: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff80006d1a: 48 8b 8c c3 80 00 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0x80]
ffffffff80006d22: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff80006d25: 8d 50 03             	lea	edx, [rax + 0x3]
ffffffff80006d28: 66 89 51 60          	mov	word ptr [rcx + 0x60], dx
ffffffff80006d2c: 48 83 c0 04          	add	rax, 0x4
ffffffff80006d30: 48 39 e8             	cmp	rax, rbp
ffffffff80006d33: 75 bb                	jne	0xffffffff80006cf0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3e0>
ffffffff80006d35: 66 ff 4b 62          	dec	word ptr [rbx + 0x62]
ffffffff80006d39: b9 68 00 00 00       	mov	ecx, 0x68
ffffffff80006d3e: 4c 8b 7c 24 60       	mov	r15, qword ptr [rsp + 0x60]
ffffffff80006d43: 49 83 ff 02          	cmp	r15, 0x2
ffffffff80006d47: 4c 8b 64 24 58       	mov	r12, qword ptr [rsp + 0x58]
ffffffff80006d4c: 40 b5 01             	mov	bpl, 0x1
ffffffff80006d4f: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff80006d54: 0f 82 e3 00 00 00    	jb	0xffffffff80006e3d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x52d>
ffffffff80006d5a: 48 8b 54 24 38       	mov	rdx, qword ptr [rsp + 0x38]
ffffffff80006d5f: 48 ff c2             	inc	rdx
ffffffff80006d62: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80006d67: 48 2b 44 24 30       	sub	rax, qword ptr [rsp + 0x30]
ffffffff80006d6c: 48 39 c2             	cmp	rdx, rax
ffffffff80006d6f: 0f 85 b6 01 00 00    	jne	0xffffffff80006f2b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x61b>
ffffffff80006d75: 49 8d 46 68          	lea	rax, [r14 + 0x68]
ffffffff80006d79: 4c 8b 6c 24 28       	mov	r13, qword ptr [rsp + 0x28]
ffffffff80006d7e: 4a 8d 3c e8          	lea	rdi, [rax + 8*r13]
ffffffff80006d82: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff80006d87: 48 83 c6 68          	add	rsi, 0x68
ffffffff80006d8b: c1 e2 03             	shl	edx, 0x3
ffffffff80006d8e: ff 15 9c 56 03 00    	call	qword ptr [rip + 0x3569c] # 0xffffffff8003c430
ffffffff80006d94: 48 8b 7c 24 48       	mov	rdi, qword ptr [rsp + 0x48]
ffffffff80006d99: 89 f9                	mov	ecx, edi
ffffffff80006d9b: 44 29 e9             	sub	ecx, r13d
ffffffff80006d9e: ff c1                	inc	ecx
ffffffff80006da0: 4c 89 e8             	mov	rax, r13
ffffffff80006da3: 83 e1 03             	and	ecx, 0x3
ffffffff80006da6: 74 20                	je	0xffffffff80006dc8 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4b8>
ffffffff80006da8: 4c 89 ea             	mov	rdx, r13
ffffffff80006dab: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80006db0: 48 8d 42 01          	lea	rax, [rdx + 0x1]
ffffffff80006db4: 49 8b 74 d6 68       	mov	rsi, qword ptr [r14 + 8*rdx + 0x68]
ffffffff80006db9: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff80006dbc: 66 89 56 60          	mov	word ptr [rsi + 0x60], dx
ffffffff80006dc0: 48 89 c2             	mov	rdx, rax
ffffffff80006dc3: 48 ff c9             	dec	rcx
ffffffff80006dc6: 75 e8                	jne	0xffffffff80006db0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4a0>
ffffffff80006dc8: 48 89 fa             	mov	rdx, rdi
ffffffff80006dcb: 4c 29 ea             	sub	rdx, r13
ffffffff80006dce: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80006dd3: 48 83 fa 03          	cmp	rdx, 0x3
ffffffff80006dd7: 72 4d                	jb	0xffffffff80006e26 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x516>
ffffffff80006dd9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80006de0: 49 8b 54 c6 68       	mov	rdx, qword ptr [r14 + 8*rax + 0x68]
ffffffff80006de5: 4c 89 32             	mov	qword ptr [rdx], r14
ffffffff80006de8: 66 89 42 60          	mov	word ptr [rdx + 0x60], ax
ffffffff80006dec: 49 8b 54 c6 70       	mov	rdx, qword ptr [r14 + 8*rax + 0x70]
ffffffff80006df1: 4c 89 32             	mov	qword ptr [rdx], r14
ffffffff80006df4: 8d 70 01             	lea	esi, [rax + 0x1]
ffffffff80006df7: 66 89 72 60          	mov	word ptr [rdx + 0x60], si
ffffffff80006dfb: 49 8b 54 c6 78       	mov	rdx, qword ptr [r14 + 8*rax + 0x78]
ffffffff80006e00: 4c 89 32             	mov	qword ptr [rdx], r14
ffffffff80006e03: 8d 70 02             	lea	esi, [rax + 0x2]
ffffffff80006e06: 66 89 72 60          	mov	word ptr [rdx + 0x60], si
ffffffff80006e0a: 49 8b 94 c6 80 00 00 00      	mov	rdx, qword ptr [r14 + 8*rax + 0x80]
ffffffff80006e12: 4c 89 32             	mov	qword ptr [rdx], r14
ffffffff80006e15: 48 8d 70 03          	lea	rsi, [rax + 0x3]
ffffffff80006e19: 66 89 72 60          	mov	word ptr [rdx + 0x60], si
ffffffff80006e1d: 48 83 c0 04          	add	rax, 0x4
ffffffff80006e21: 48 39 fe             	cmp	rsi, rdi
ffffffff80006e24: 75 ba                	jne	0xffffffff80006de0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4d0>
ffffffff80006e26: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff80006e2b: eb 10                	jmp	0xffffffff80006e3d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x52d>
ffffffff80006e2d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80006e30: f3 90                	pause
ffffffff80006e32: 0f b6 05 c7 41 02 00 	movzx	eax, byte ptr [rip + 0x241c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80006e39: 84 c0                	test	al, al
ffffffff80006e3b: 75 f3                	jne	0xffffffff80006e30 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x520>
ffffffff80006e3d: 31 c0                	xor	eax, eax
ffffffff80006e3f: f0                   	lock
ffffffff80006e40: 40 0f b0 2d b8 41 02 00      	cmpxchg	byte ptr [rip + 0x241b8], bpl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80006e48: 75 e8                	jne	0xffffffff80006e32 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x522>
ffffffff80006e4a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80006e4f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80006e56: e8 95 59 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80006e5b: c6 05 9e 41 02 00 00 	mov	byte ptr [rip + 0x2419e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80006e62: 0f b7 4b 62          	movzx	ecx, word ptr [rbx + 0x62]
ffffffff80006e66: 48 89 d8             	mov	rax, rbx
ffffffff80006e69: 4c 89 fa             	mov	rdx, r15
ffffffff80006e6c: 66 83 f9 04          	cmp	cx, 0x4
ffffffff80006e70: 0f 86 8a fc ff ff    	jbe	0xffffffff80006b00 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1f0>
ffffffff80006e76: e9 59 fc ff ff       	jmp	0xffffffff80006ad4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80006e7b: 4c 89 e8             	mov	rax, r13
ffffffff80006e7e: 49 f7 df             	neg	r15
ffffffff80006e81: 49 8d 0c 2f          	lea	rcx, [r15 + rbp]
ffffffff80006e85: 48 83 c1 fe          	add	rcx, -0x2
ffffffff80006e89: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff80006e8d: 0f 83 5d fe ff ff    	jae	0xffffffff80006cf0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3e0>
ffffffff80006e93: e9 9d fe ff ff       	jmp	0xffffffff80006d35 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80006e98: 48 8d bc 24 d8 00 00 00      	lea	rdi, [rsp + 0xd8]
ffffffff80006ea0: be 01 00 00 00       	mov	esi, 0x1
ffffffff80006ea5: e8 d6 f0 ff ff       	call	0xffffffff80005f80 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>
ffffffff80006eaa: 4c 89 f2             	mov	rdx, r14
ffffffff80006ead: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff80006eb0: 48 85 c0             	test	rax, rax
ffffffff80006eb3: 0f 85 07 fc ff ff    	jne	0xffffffff80006ac0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1b0>
ffffffff80006eb9: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80006ebe: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80006ec3: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff80006ec6: 48 89 58 08          	mov	qword ptr [rax + 0x8], rbx
ffffffff80006eca: 48 89 50 10          	mov	qword ptr [rax + 0x10], rdx
ffffffff80006ece: 4c 89 60 18          	mov	qword ptr [rax + 0x18], r12
ffffffff80006ed2: 48 81 c4 78 01 00 00 	add	rsp, 0x178
ffffffff80006ed9: 5b                   	pop	rbx
ffffffff80006eda: 41 5c                	pop	r12
ffffffff80006edc: 41 5d                	pop	r13
ffffffff80006ede: 41 5e                	pop	r14
ffffffff80006ee0: 41 5f                	pop	r15
ffffffff80006ee2: 5d                   	pop	rbp
ffffffff80006ee3: c3                   	ret
ffffffff80006ee4: 48 85 c9             	test	rcx, rcx
ffffffff80006ee7: 0f 85 e7 fb ff ff    	jne	0xffffffff80006ad4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80006eed: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff80006ef2: c6 00 01             	mov	byte ptr [rax], 0x1
ffffffff80006ef5: e9 da fb ff ff       	jmp	0xffffffff80006ad4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80006efa: be 05 00 00 00       	mov	esi, 0x5
ffffffff80006eff: 48 29 ce             	sub	rsi, rcx
ffffffff80006f02: 48 8d bc 24 10 01 00 00      	lea	rdi, [rsp + 0x110]
ffffffff80006f0a: e8 d1 e7 ff ff       	call	0xffffffff800056e0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>
ffffffff80006f0f: e9 c0 fb ff ff       	jmp	0xffffffff80006ad4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80006f14: be 05 00 00 00       	mov	esi, 0x5
ffffffff80006f19: 48 29 ce             	sub	rsi, rcx
ffffffff80006f1c: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff80006f21: e8 5a f0 ff ff       	call	0xffffffff80005f80 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>
ffffffff80006f26: e9 a9 fb ff ff       	jmp	0xffffffff80006ad4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80006f2b: be 28 00 00 00       	mov	esi, 0x28
ffffffff80006f30: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80006f37: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff80006f3e: e8 ad a1 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006f43: 48 c7 84 24 48 01 00 00 28 26 02 80  	mov	qword ptr [rsp + 0x148], -0x7ffdd9d8
ffffffff80006f4f: 48 c7 84 24 50 01 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x150], 0x1
ffffffff80006f5b: 48 c7 84 24 68 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x168], 0x0
ffffffff80006f67: 48 89 e0             	mov	rax, rsp
ffffffff80006f6a: 48 89 84 24 58 01 00 00      	mov	qword ptr [rsp + 0x158], rax
ffffffff80006f72: 48 c7 84 24 60 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x160], 0x0
ffffffff80006f7e: 48 8d bc 24 48 01 00 00      	lea	rdi, [rsp + 0x148]
ffffffff80006f86: 48 c7 c6 38 26 02 80 	mov	rsi, -0x7ffdd9c8
ffffffff80006f8d: e8 de a0 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80006f92: be 8e 00 00 00       	mov	esi, 0x8e
ffffffff80006f97: 48 c7 c7 c8 28 02 80 	mov	rdi, -0x7ffdd738
ffffffff80006f9e: 48 c7 c2 58 29 02 80 	mov	rdx, -0x7ffdd6a8
ffffffff80006fa5: e8 46 a1 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006faa: 48 c7 44 24 68 28 26 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffdd9d8
ffffffff80006fb3: 48 c7 44 24 70 01 00 00 00   	mov	qword ptr [rsp + 0x70], 0x1
ffffffff80006fbc: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80006fc8: 48 89 e0             	mov	rax, rsp
ffffffff80006fcb: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff80006fd0: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x80], 0x0
ffffffff80006fdc: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff80006fe1: 48 c7 c6 38 26 02 80 	mov	rsi, -0x7ffdd9c8
ffffffff80006fe8: e8 83 a0 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80006fed: cc                   	int3
ffffffff80006fee: cc                   	int3
ffffffff80006fef: cc                   	int3

ffffffff80006ff0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>:
ffffffff80006ff0: 55                   	push	rbp
ffffffff80006ff1: 41 57                	push	r15
ffffffff80006ff3: 41 56                	push	r14
ffffffff80006ff5: 41 55                	push	r13
ffffffff80006ff7: 41 54                	push	r12
ffffffff80006ff9: 53                   	push	rbx
ffffffff80006ffa: 48 81 ec 88 01 00 00 	sub	rsp, 0x188
ffffffff80007001: 48 89 54 24 58       	mov	qword ptr [rsp + 0x58], rdx
ffffffff80007006: 49 89 f7             	mov	r15, rsi
ffffffff80007009: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8000700e: 4c 8b 2e             	mov	r13, qword ptr [rsi]
ffffffff80007011: 4c 8b 76 10          	mov	r14, qword ptr [rsi + 0x10]
ffffffff80007015: 41 0f b7 9d 8e 00 00 00      	movzx	ebx, word ptr [r13 + 0x8e]
ffffffff8000701d: 4b 8d 7c b5 60       	lea	rdi, [r13 + 4*r14 + 0x60]
ffffffff80007022: 43 8b 44 b5 60       	mov	eax, dword ptr [r13 + 4*r14 + 0x60]
ffffffff80007027: 89 44 24 04          	mov	dword ptr [rsp + 0x4], eax
ffffffff8000702b: 4a 8d 34 b5 64 00 00 00      	lea	rsi, [4*r14 + 0x64]
ffffffff80007033: 4c 01 ee             	add	rsi, r13
ffffffff80007036: 4d 89 f4             	mov	r12, r14
ffffffff80007039: 49 f7 d4             	not	r12
ffffffff8000703c: 49 01 dc             	add	r12, rbx
ffffffff8000703f: 4a 8d 14 a5 00 00 00 00      	lea	rdx, [4*r12]
ffffffff80007047: 48 8b 2d ea 53 03 00 	mov	rbp, qword ptr [rip + 0x353ea] # 0xffffffff8003c438
ffffffff8000704e: ff d5                	call	rbp
ffffffff80007050: 4a 8d 3c f5 08 00 00 00      	lea	rdi, [8*r14 + 0x8]
ffffffff80007058: 4c 01 ef             	add	rdi, r13
ffffffff8000705b: 4b 8b 44 f5 08       	mov	rax, qword ptr [r13 + 8*r14 + 0x8]
ffffffff80007060: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80007065: 4a 8d 34 f5 10 00 00 00      	lea	rsi, [8*r14 + 0x10]
ffffffff8000706d: 4c 01 ee             	add	rsi, r13
ffffffff80007070: 49 c1 e4 03          	shl	r12, 0x3
ffffffff80007074: 4c 89 e2             	mov	rdx, r12
ffffffff80007077: ff d5                	call	rbp
ffffffff80007079: 8d 43 ff             	lea	eax, [rbx - 0x1]
ffffffff8000707c: 4c 89 eb             	mov	rbx, r13
ffffffff8000707f: 66 41 89 85 8e 00 00 00      	mov	word ptr [r13 + 0x8e], ax
ffffffff80007087: 49 8b 6f 08          	mov	rbp, qword ptr [r15 + 0x8]
ffffffff8000708b: 66 83 f8 04          	cmp	ax, 0x4
ffffffff8000708f: 0f 87 39 06 00 00    	ja	0xffffffff800076ce <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff80007095: 48 8b 0b             	mov	rcx, qword ptr [rbx]
ffffffff80007098: 48 85 c9             	test	rcx, rcx
ffffffff8000709b: 0f 84 2d 06 00 00    	je	0xffffffff800076ce <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff800070a1: 48 8d 55 01          	lea	rdx, [rbp + 0x1]
ffffffff800070a5: 0f b7 b3 8c 00 00 00 	movzx	esi, word ptr [rbx + 0x8c]
ffffffff800070ac: 48 85 f6             	test	rsi, rsi
ffffffff800070af: 0f 84 91 00 00 00    	je	0xffffffff80007146 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x156>
ffffffff800070b5: 48 8b bc f1 88 00 00 00      	mov	rdi, qword ptr [rcx + 8*rsi + 0x88]
ffffffff800070bd: 48 ff ce             	dec	rsi
ffffffff800070c0: 48 89 8c 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rcx
ffffffff800070c8: 48 89 94 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rdx
ffffffff800070d0: 48 89 b4 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rsi
ffffffff800070d8: 48 89 bc 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rdi
ffffffff800070e0: 48 89 ac 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], rbp
ffffffff800070e8: 49 89 df             	mov	r15, rbx
ffffffff800070eb: 48 89 9c 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rbx
ffffffff800070f3: 48 89 ac 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rbp
ffffffff800070fb: 0f b7 9f 8e 00 00 00 	movzx	ebx, word ptr [rdi + 0x8e]
ffffffff80007102: 0f b7 c0             	movzx	eax, ax
ffffffff80007105: 8d 0c 03             	lea	ecx, [rbx + rax]
ffffffff80007108: ff c1                	inc	ecx
ffffffff8000710a: 83 f9 0c             	cmp	ecx, 0xc
ffffffff8000710d: 0f 83 c4 00 00 00    	jae	0xffffffff800071d7 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x1e7>
ffffffff80007113: 49 39 c6             	cmp	r14, rax
ffffffff80007116: 0f 87 92 06 00 00    	ja	0xffffffff800077ae <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7be>
ffffffff8000711c: 48 8d bc 24 b0 00 00 00      	lea	rdi, [rsp + 0xb0]
ffffffff80007124: e8 37 f4 ff ff       	call	0xffffffff80006560 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>
ffffffff80007129: 48 89 d5             	mov	rbp, rdx
ffffffff8000712c: 49 01 de             	add	r14, rbx
ffffffff8000712f: 49 ff c6             	inc	r14
ffffffff80007132: 48 89 c3             	mov	rbx, rax
ffffffff80007135: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff80007138: 48 85 c0             	test	rax, rax
ffffffff8000713b: 0f 85 ba 00 00 00    	jne	0xffffffff800071fb <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff80007141: e9 88 05 00 00       	jmp	0xffffffff800076ce <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff80007146: 66 83 b9 8e 00 00 00 00      	cmp	word ptr [rcx + 0x8e], 0x0
ffffffff8000714e: 0f 84 72 06 00 00    	je	0xffffffff800077c6 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7d6>
ffffffff80007154: 48 8b b1 98 00 00 00 	mov	rsi, qword ptr [rcx + 0x98]
ffffffff8000715b: 48 89 8c 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rcx
ffffffff80007163: 48 89 94 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rdx
ffffffff8000716b: 48 c7 84 24 f8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xf8], 0x0
ffffffff80007177: 48 89 9c 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rbx
ffffffff8000717f: 48 89 ac 24 08 01 00 00      	mov	qword ptr [rsp + 0x108], rbp
ffffffff80007187: 48 89 b4 24 10 01 00 00      	mov	qword ptr [rsp + 0x110], rsi
ffffffff8000718f: 48 89 ac 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rbp
ffffffff80007197: 0f b7 c0             	movzx	eax, ax
ffffffff8000719a: 0f b7 8e 8e 00 00 00 	movzx	ecx, word ptr [rsi + 0x8e]
ffffffff800071a1: 01 c1                	add	ecx, eax
ffffffff800071a3: ff c1                	inc	ecx
ffffffff800071a5: 83 f9 0c             	cmp	ecx, 0xc
ffffffff800071a8: 0f 83 02 05 00 00    	jae	0xffffffff800076b0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6c0>
ffffffff800071ae: 49 39 c6             	cmp	r14, rax
ffffffff800071b1: 0f 87 f7 05 00 00    	ja	0xffffffff800077ae <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7be>
ffffffff800071b7: 48 8d bc 24 e8 00 00 00      	lea	rdi, [rsp + 0xe8]
ffffffff800071bf: e8 9c f3 ff ff       	call	0xffffffff80006560 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>
ffffffff800071c4: 48 89 c3             	mov	rbx, rax
ffffffff800071c7: 48 89 d5             	mov	rbp, rdx
ffffffff800071ca: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff800071cd: 48 85 c0             	test	rax, rax
ffffffff800071d0: 75 29                	jne	0xffffffff800071fb <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff800071d2: e9 f7 04 00 00       	jmp	0xffffffff800076ce <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff800071d7: 48 8d bc 24 b0 00 00 00      	lea	rdi, [rsp + 0xb0]
ffffffff800071df: be 01 00 00 00       	mov	esi, 0x1
ffffffff800071e4: e8 17 e7 ff ff       	call	0xffffffff80005900 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>
ffffffff800071e9: 49 ff c6             	inc	r14
ffffffff800071ec: 4c 89 fb             	mov	rbx, r15
ffffffff800071ef: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff800071f2: 48 85 c0             	test	rax, rax
ffffffff800071f5: 0f 84 d3 04 00 00    	je	0xffffffff800076ce <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff800071fb: 48 89 5c 24 38       	mov	qword ptr [rsp + 0x38], rbx
ffffffff80007200: 0f b7 88 8e 00 00 00 	movzx	ecx, word ptr [rax + 0x8e]
ffffffff80007207: 66 83 f9 04          	cmp	cx, 0x4
ffffffff8000720b: 76 18                	jbe	0xffffffff80007225 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x235>
ffffffff8000720d: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80007212: 8b 4c 24 04          	mov	ecx, dword ptr [rsp + 0x4]
ffffffff80007216: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8000721b: 48 8b 5c 24 38       	mov	rbx, qword ptr [rsp + 0x38]
ffffffff80007220: e9 b7 04 00 00       	jmp	0xffffffff800076dc <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6ec>
ffffffff80007225: 48 8d 55 01          	lea	rdx, [rbp + 0x1]
ffffffff80007229: 4c 89 74 24 60       	mov	qword ptr [rsp + 0x60], r14
ffffffff8000722e: 48 89 6c 24 40       	mov	qword ptr [rsp + 0x40], rbp
ffffffff80007233: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80007240: 0f b7 c9             	movzx	ecx, cx
ffffffff80007243: 48 8b 18             	mov	rbx, qword ptr [rax]
ffffffff80007246: 48 85 db             	test	rbx, rbx
ffffffff80007249: 0f 84 b1 04 00 00    	je	0xffffffff80007700 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x710>
ffffffff8000724f: 48 8d 7a 01          	lea	rdi, [rdx + 0x1]
ffffffff80007253: 44 0f b7 a0 8c 00 00 00      	movzx	r12d, word ptr [rax + 0x8c]
ffffffff8000725b: 4d 85 e4             	test	r12, r12
ffffffff8000725e: 48 89 7c 24 50       	mov	qword ptr [rsp + 0x50], rdi
ffffffff80007263: 0f 84 87 00 00 00    	je	0xffffffff800072f0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x300>
ffffffff80007269: 4e 8b ac e3 88 00 00 00      	mov	r13, qword ptr [rbx + 8*r12 + 0x88]
ffffffff80007271: 49 ff cc             	dec	r12
ffffffff80007274: 48 89 9c 24 20 01 00 00      	mov	qword ptr [rsp + 0x120], rbx
ffffffff8000727c: 48 89 bc 24 28 01 00 00      	mov	qword ptr [rsp + 0x128], rdi
ffffffff80007284: 4c 89 a4 24 30 01 00 00      	mov	qword ptr [rsp + 0x130], r12
ffffffff8000728c: 4c 89 ac 24 38 01 00 00      	mov	qword ptr [rsp + 0x138], r13
ffffffff80007294: 48 89 94 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], rdx
ffffffff8000729c: 48 89 84 24 48 01 00 00      	mov	qword ptr [rsp + 0x148], rax
ffffffff800072a4: 48 89 94 24 50 01 00 00      	mov	qword ptr [rsp + 0x150], rdx
ffffffff800072ac: 41 0f b7 b5 8e 00 00 00      	movzx	esi, word ptr [r13 + 0x8e]
ffffffff800072b4: 8d 14 31             	lea	edx, [rcx + rsi]
ffffffff800072b7: ff c2                	inc	edx
ffffffff800072b9: 83 fa 0c             	cmp	edx, 0xc
ffffffff800072bc: 0f 83 54 04 00 00    	jae	0xffffffff80007716 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x726>
ffffffff800072c2: 48 8d 56 01          	lea	rdx, [rsi + 0x1]
ffffffff800072c6: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff800072cb: 48 8d 14 0e          	lea	rdx, [rsi + rcx]
ffffffff800072cf: 48 ff c2             	inc	rdx
ffffffff800072d2: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff800072d7: 0f b7 b3 8e 00 00 00 	movzx	esi, word ptr [rbx + 0x8e]
ffffffff800072de: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800072e3: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff800072e8: e9 8a 00 00 00       	jmp	0xffffffff80007377 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x387>
ffffffff800072ed: 0f 1f 00             	nop	dword ptr [rax]
ffffffff800072f0: 0f b7 b3 8e 00 00 00 	movzx	esi, word ptr [rbx + 0x8e]
ffffffff800072f7: 66 85 f6             	test	si, si
ffffffff800072fa: 0f 84 5f 04 00 00    	je	0xffffffff8000775f <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x76f>
ffffffff80007300: 4c 8b 83 98 00 00 00 	mov	r8, qword ptr [rbx + 0x98]
ffffffff80007307: 48 89 5c 24 78       	mov	qword ptr [rsp + 0x78], rbx
ffffffff8000730c: 48 89 bc 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rdi
ffffffff80007314: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80007320: 48 89 84 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rax
ffffffff80007328: 48 89 94 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rdx
ffffffff80007330: 4c 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], r8
ffffffff80007338: 48 89 94 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rdx
ffffffff80007340: 45 0f b7 88 8e 00 00 00      	movzx	r9d, word ptr [r8 + 0x8e]
ffffffff80007348: 4a 8d 14 09          	lea	rdx, [rcx + r9]
ffffffff8000734c: 48 ff c2             	inc	rdx
ffffffff8000734f: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80007353: 0f 83 d7 03 00 00    	jae	0xffffffff80007730 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x740>
ffffffff80007359: 48 8d 79 01          	lea	rdi, [rcx + 0x1]
ffffffff8000735d: 48 89 7c 24 18       	mov	qword ptr [rsp + 0x18], rdi
ffffffff80007362: 49 89 c5             	mov	r13, rax
ffffffff80007365: 4c 89 44 24 20       	mov	qword ptr [rsp + 0x20], r8
ffffffff8000736a: 45 31 e4             	xor	r12d, r12d
ffffffff8000736d: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80007372: 4c 89 4c 24 30       	mov	qword ptr [rsp + 0x30], r9
ffffffff80007377: 0f b7 c6             	movzx	eax, si
ffffffff8000737a: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8000737f: 48 89 54 24 48       	mov	qword ptr [rsp + 0x48], rdx
ffffffff80007384: 66 41 89 95 8e 00 00 00      	mov	word ptr [r13 + 0x8e], dx
ffffffff8000738c: 4a 8d 3c a3          	lea	rdi, [rbx + 4*r12]
ffffffff80007390: 48 83 c7 60          	add	rdi, 0x60
ffffffff80007394: 46 8b 74 a3 60       	mov	r14d, dword ptr [rbx + 4*r12 + 0x60]
ffffffff80007399: 4a 8d 34 a3          	lea	rsi, [rbx + 4*r12]
ffffffff8000739d: 48 83 c6 64          	add	rsi, 0x64
ffffffff800073a1: 4d 89 e7             	mov	r15, r12
ffffffff800073a4: 49 f7 d7             	not	r15
ffffffff800073a7: 49 01 c7             	add	r15, rax
ffffffff800073aa: 4a 8d 14 bd 00 00 00 00      	lea	rdx, [4*r15]
ffffffff800073b2: 48 8b 05 7f 50 03 00 	mov	rax, qword ptr [rip + 0x3507f] # 0xffffffff8003c438
ffffffff800073b9: ff d0                	call	rax
ffffffff800073bb: 48 8b 6c 24 28       	mov	rbp, qword ptr [rsp + 0x28]
ffffffff800073c0: 45 89 74 ad 60       	mov	dword ptr [r13 + 4*rbp + 0x60], r14d
ffffffff800073c5: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff800073ca: 48 8d 70 60          	lea	rsi, [rax + 0x60]
ffffffff800073ce: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff800073d3: 48 8d 3c 85 60 00 00 00      	lea	rdi, [4*rax + 0x60]
ffffffff800073db: 4c 01 ef             	add	rdi, r13
ffffffff800073de: 4c 8b 74 24 30       	mov	r14, qword ptr [rsp + 0x30]
ffffffff800073e3: 42 8d 14 b5 00 00 00 00      	lea	edx, [4*r14]
ffffffff800073eb: ff 15 3f 50 03 00    	call	qword ptr [rip + 0x3503f] # 0xffffffff8003c430
ffffffff800073f1: 4a 8d 3c e3          	lea	rdi, [rbx + 8*r12]
ffffffff800073f5: 48 83 c7 08          	add	rdi, 0x8
ffffffff800073f9: 4a 8b 44 e3 08       	mov	rax, qword ptr [rbx + 8*r12 + 0x8]
ffffffff800073fe: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff80007403: 4a 8d 34 e3          	lea	rsi, [rbx + 8*r12]
ffffffff80007407: 48 83 c6 10          	add	rsi, 0x10
ffffffff8000740b: 49 c1 e7 03          	shl	r15, 0x3
ffffffff8000740f: 4c 89 fa             	mov	rdx, r15
ffffffff80007412: ff 15 20 50 03 00    	call	qword ptr [rip + 0x35020] # 0xffffffff8003c438
ffffffff80007418: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8000741d: 49 89 44 ed 08       	mov	qword ptr [r13 + 8*rbp + 0x8], rax
ffffffff80007422: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80007427: 48 8d 70 08          	lea	rsi, [rax + 0x8]
ffffffff8000742b: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80007430: 48 8d 3c c5 08 00 00 00      	lea	rdi, [8*rax + 0x8]
ffffffff80007438: 4c 01 ef             	add	rdi, r13
ffffffff8000743b: 42 8d 14 f5 00 00 00 00      	lea	edx, [8*r14]
ffffffff80007443: ff 15 e7 4f 03 00    	call	qword ptr [rip + 0x34fe7] # 0xffffffff8003c430
ffffffff80007449: 4d 8d 74 24 01       	lea	r14, [r12 + 0x1]
ffffffff8000744e: 4a 8d 3c e3          	lea	rdi, [rbx + 8*r12]
ffffffff80007452: 48 81 c7 98 00 00 00 	add	rdi, 0x98
ffffffff80007459: 4a 8d 34 e3          	lea	rsi, [rbx + 8*r12]
ffffffff8000745d: 48 81 c6 a0 00 00 00 	add	rsi, 0xa0
ffffffff80007464: 4c 89 fa             	mov	rdx, r15
ffffffff80007467: ff 15 cb 4f 03 00    	call	qword ptr [rip + 0x34fcb] # 0xffffffff8003c438
ffffffff8000746d: 48 8b 74 24 70       	mov	rsi, qword ptr [rsp + 0x70]
ffffffff80007472: 4c 39 f6             	cmp	rsi, r14
ffffffff80007475: 41 b7 01             	mov	r15b, 0x1
ffffffff80007478: 0f 86 9c 00 00 00    	jbe	0xffffffff8000751a <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff8000747e: 89 f1                	mov	ecx, esi
ffffffff80007480: 44 29 f1             	sub	ecx, r14d
ffffffff80007483: 83 e1 03             	and	ecx, 0x3
ffffffff80007486: 0f 84 07 02 00 00    	je	0xffffffff80007693 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6a3>
ffffffff8000748c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80007490: 49 8d 46 01          	lea	rax, [r14 + 0x1]
ffffffff80007494: 4a 8b 94 f3 90 00 00 00      	mov	rdx, qword ptr [rbx + 8*r14 + 0x90]
ffffffff8000749c: 48 89 1a             	mov	qword ptr [rdx], rbx
ffffffff8000749f: 66 44 89 b2 8c 00 00 00      	mov	word ptr [rdx + 0x8c], r14w
ffffffff800074a7: 49 89 c6             	mov	r14, rax
ffffffff800074aa: 48 ff c9             	dec	rcx
ffffffff800074ad: 75 e1                	jne	0xffffffff80007490 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4a0>
ffffffff800074af: 49 f7 dc             	neg	r12
ffffffff800074b2: 4a 8d 0c 26          	lea	rcx, [rsi + r12]
ffffffff800074b6: 48 83 c1 fe          	add	rcx, -0x2
ffffffff800074ba: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff800074be: 72 5a                	jb	0xffffffff8000751a <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff800074c0: 48 8b 8c c3 90 00 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0x90]
ffffffff800074c8: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff800074cb: 66 89 81 8c 00 00 00 	mov	word ptr [rcx + 0x8c], ax
ffffffff800074d2: 48 8b 8c c3 98 00 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0x98]
ffffffff800074da: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff800074dd: 8d 50 01             	lea	edx, [rax + 0x1]
ffffffff800074e0: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff800074e7: 48 8b 8c c3 a0 00 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0xa0]
ffffffff800074ef: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff800074f2: 8d 50 02             	lea	edx, [rax + 0x2]
ffffffff800074f5: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff800074fc: 48 8b 8c c3 a8 00 00 00      	mov	rcx, qword ptr [rbx + 8*rax + 0xa8]
ffffffff80007504: 48 89 19             	mov	qword ptr [rcx], rbx
ffffffff80007507: 8d 50 03             	lea	edx, [rax + 0x3]
ffffffff8000750a: 66 89 91 8c 00 00 00 	mov	word ptr [rcx + 0x8c], dx
ffffffff80007511: 48 83 c0 04          	add	rax, 0x4
ffffffff80007515: 48 39 f0             	cmp	rax, rsi
ffffffff80007518: 75 a6                	jne	0xffffffff800074c0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4d0>
ffffffff8000751a: 66 ff 8b 8e 00 00 00 	dec	word ptr [rbx + 0x8e]
ffffffff80007521: b9 90 00 00 00       	mov	ecx, 0x90
ffffffff80007526: 48 83 7c 24 50 02    	cmp	qword ptr [rsp + 0x50], 0x2
ffffffff8000752c: 4c 8b 74 24 60       	mov	r14, qword ptr [rsp + 0x60]
ffffffff80007531: 48 8b 6c 24 40       	mov	rbp, qword ptr [rsp + 0x40]
ffffffff80007536: 4c 8b 64 24 20       	mov	r12, qword ptr [rsp + 0x20]
ffffffff8000753b: 0f 82 0c 01 00 00    	jb	0xffffffff8000764d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff80007541: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff80007546: 48 ff c2             	inc	rdx
ffffffff80007549: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8000754e: 48 2b 44 24 28       	sub	rax, qword ptr [rsp + 0x28]
ffffffff80007553: 48 39 c2             	cmp	rdx, rax
ffffffff80007556: 0f 85 eb 01 00 00    	jne	0xffffffff80007747 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x757>
ffffffff8000755c: 49 8d 85 90 00 00 00 	lea	rax, [r13 + 0x90]
ffffffff80007563: 48 8b 6c 24 18       	mov	rbp, qword ptr [rsp + 0x18]
ffffffff80007568: 48 8d 3c e8          	lea	rdi, [rax + 8*rbp]
ffffffff8000756c: 49 8d b4 24 90 00 00 00      	lea	rsi, [r12 + 0x90]
ffffffff80007574: c1 e2 03             	shl	edx, 0x3
ffffffff80007577: ff 15 b3 4e 03 00    	call	qword ptr [rip + 0x34eb3] # 0xffffffff8003c430
ffffffff8000757d: 48 8b 7c 24 48       	mov	rdi, qword ptr [rsp + 0x48]
ffffffff80007582: 89 f9                	mov	ecx, edi
ffffffff80007584: 29 e9                	sub	ecx, ebp
ffffffff80007586: ff c1                	inc	ecx
ffffffff80007588: 48 89 e8             	mov	rax, rbp
ffffffff8000758b: 83 e1 03             	and	ecx, 0x3
ffffffff8000758e: 74 2e                	je	0xffffffff800075be <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5ce>
ffffffff80007590: 48 89 ea             	mov	rdx, rbp
ffffffff80007593: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff800075a0: 48 8d 42 01          	lea	rax, [rdx + 0x1]
ffffffff800075a4: 49 8b b4 d5 90 00 00 00      	mov	rsi, qword ptr [r13 + 8*rdx + 0x90]
ffffffff800075ac: 4c 89 2e             	mov	qword ptr [rsi], r13
ffffffff800075af: 66 89 96 8c 00 00 00 	mov	word ptr [rsi + 0x8c], dx
ffffffff800075b6: 48 89 c2             	mov	rdx, rax
ffffffff800075b9: 48 ff c9             	dec	rcx
ffffffff800075bc: 75 e2                	jne	0xffffffff800075a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5b0>
ffffffff800075be: 48 89 fa             	mov	rdx, rdi
ffffffff800075c1: 48 29 ea             	sub	rdx, rbp
ffffffff800075c4: b9 f0 00 00 00       	mov	ecx, 0xf0
ffffffff800075c9: 48 83 fa 03          	cmp	rdx, 0x3
ffffffff800075cd: 48 8b 6c 24 40       	mov	rbp, qword ptr [rsp + 0x40]
ffffffff800075d2: 72 79                	jb	0xffffffff8000764d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff800075d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800075e0: 49 8b 94 c5 90 00 00 00      	mov	rdx, qword ptr [r13 + 8*rax + 0x90]
ffffffff800075e8: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff800075eb: 66 89 82 8c 00 00 00 	mov	word ptr [rdx + 0x8c], ax
ffffffff800075f2: 49 8b 94 c5 98 00 00 00      	mov	rdx, qword ptr [r13 + 8*rax + 0x98]
ffffffff800075fa: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff800075fd: 8d 70 01             	lea	esi, [rax + 0x1]
ffffffff80007600: 66 89 b2 8c 00 00 00 	mov	word ptr [rdx + 0x8c], si
ffffffff80007607: 49 8b 94 c5 a0 00 00 00      	mov	rdx, qword ptr [r13 + 8*rax + 0xa0]
ffffffff8000760f: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff80007612: 8d 70 02             	lea	esi, [rax + 0x2]
ffffffff80007615: 66 89 b2 8c 00 00 00 	mov	word ptr [rdx + 0x8c], si
ffffffff8000761c: 49 8b 94 c5 a8 00 00 00      	mov	rdx, qword ptr [r13 + 8*rax + 0xa8]
ffffffff80007624: 4c 89 2a             	mov	qword ptr [rdx], r13
ffffffff80007627: 48 8d 70 03          	lea	rsi, [rax + 0x3]
ffffffff8000762b: 66 89 b2 8c 00 00 00 	mov	word ptr [rdx + 0x8c], si
ffffffff80007632: 48 83 c0 04          	add	rax, 0x4
ffffffff80007636: 48 39 fe             	cmp	rsi, rdi
ffffffff80007639: 75 a5                	jne	0xffffffff800075e0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5f0>
ffffffff8000763b: eb 10                	jmp	0xffffffff8000764d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff8000763d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80007640: f3 90                	pause
ffffffff80007642: 0f b6 05 b7 39 02 00 	movzx	eax, byte ptr [rip + 0x239b7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007649: 84 c0                	test	al, al
ffffffff8000764b: 75 f3                	jne	0xffffffff80007640 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x650>
ffffffff8000764d: 31 c0                	xor	eax, eax
ffffffff8000764f: f0                   	lock
ffffffff80007650: 44 0f b0 3d a8 39 02 00      	cmpxchg	byte ptr [rip + 0x239a8], r15b # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007658: 75 e8                	jne	0xffffffff80007642 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x652>
ffffffff8000765a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8000765f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80007666: 4c 89 e6             	mov	rsi, r12
ffffffff80007669: e8 82 51 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000766e: c6 05 8b 39 02 00 00 	mov	byte ptr [rip + 0x2398b], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007675: 0f b7 8b 8e 00 00 00 	movzx	ecx, word ptr [rbx + 0x8e]
ffffffff8000767c: 48 89 d8             	mov	rax, rbx
ffffffff8000767f: 48 8b 54 24 50       	mov	rdx, qword ptr [rsp + 0x50]
ffffffff80007684: 66 83 f9 04          	cmp	cx, 0x4
ffffffff80007688: 0f 86 b2 fb ff ff    	jbe	0xffffffff80007240 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x250>
ffffffff8000768e: e9 7a fb ff ff       	jmp	0xffffffff8000720d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80007693: 4c 89 f0             	mov	rax, r14
ffffffff80007696: 49 f7 dc             	neg	r12
ffffffff80007699: 4a 8d 0c 26          	lea	rcx, [rsi + r12]
ffffffff8000769d: 48 83 c1 fe          	add	rcx, -0x2
ffffffff800076a1: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff800076a5: 0f 83 15 fe ff ff    	jae	0xffffffff800074c0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4d0>
ffffffff800076ab: e9 6a fe ff ff       	jmp	0xffffffff8000751a <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff800076b0: 48 8d bc 24 e8 00 00 00      	lea	rdi, [rsp + 0xe8]
ffffffff800076b8: be 01 00 00 00       	mov	esi, 0x1
ffffffff800076bd: e8 0e e5 ff ff       	call	0xffffffff80005bd0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>
ffffffff800076c2: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff800076c5: 48 85 c0             	test	rax, rax
ffffffff800076c8: 0f 85 2d fb ff ff    	jne	0xffffffff800071fb <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff800076ce: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800076d3: 8b 4c 24 04          	mov	ecx, dword ptr [rsp + 0x4]
ffffffff800076d7: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff800076dc: 89 08                	mov	dword ptr [rax], ecx
ffffffff800076de: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff800076e2: 48 89 58 10          	mov	qword ptr [rax + 0x10], rbx
ffffffff800076e6: 48 89 68 18          	mov	qword ptr [rax + 0x18], rbp
ffffffff800076ea: 4c 89 70 20          	mov	qword ptr [rax + 0x20], r14
ffffffff800076ee: 48 81 c4 88 01 00 00 	add	rsp, 0x188
ffffffff800076f5: 5b                   	pop	rbx
ffffffff800076f6: 41 5c                	pop	r12
ffffffff800076f8: 41 5d                	pop	r13
ffffffff800076fa: 41 5e                	pop	r14
ffffffff800076fc: 41 5f                	pop	r15
ffffffff800076fe: 5d                   	pop	rbp
ffffffff800076ff: c3                   	ret
ffffffff80007700: 48 85 c9             	test	rcx, rcx
ffffffff80007703: 0f 85 04 fb ff ff    	jne	0xffffffff8000720d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80007709: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff8000770e: c6 00 01             	mov	byte ptr [rax], 0x1
ffffffff80007711: e9 f7 fa ff ff       	jmp	0xffffffff8000720d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80007716: be 05 00 00 00       	mov	esi, 0x5
ffffffff8000771b: 48 29 ce             	sub	rsi, rcx
ffffffff8000771e: 48 8d bc 24 20 01 00 00      	lea	rdi, [rsp + 0x120]
ffffffff80007726: e8 d5 e1 ff ff       	call	0xffffffff80005900 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>
ffffffff8000772b: e9 dd fa ff ff       	jmp	0xffffffff8000720d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80007730: be 05 00 00 00       	mov	esi, 0x5
ffffffff80007735: 48 29 ce             	sub	rsi, rcx
ffffffff80007738: 48 8d 7c 24 78       	lea	rdi, [rsp + 0x78]
ffffffff8000773d: e8 8e e4 ff ff       	call	0xffffffff80005bd0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>
ffffffff80007742: e9 c6 fa ff ff       	jmp	0xffffffff8000720d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80007747: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000774c: 48 c7 c7 90 26 02 80 	mov	rdi, -0x7ffdd970
ffffffff80007753: 48 c7 c2 b8 26 02 80 	mov	rdx, -0x7ffdd948
ffffffff8000775a: e8 91 99 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000775f: 48 c7 84 24 58 01 00 00 28 26 02 80  	mov	qword ptr [rsp + 0x158], -0x7ffdd9d8
ffffffff8000776b: 48 c7 84 24 60 01 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x160], 0x1
ffffffff80007777: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x178], 0x0
ffffffff80007783: 48 89 e0             	mov	rax, rsp
ffffffff80007786: 48 89 84 24 68 01 00 00      	mov	qword ptr [rsp + 0x168], rax
ffffffff8000778e: 48 c7 84 24 70 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x170], 0x0
ffffffff8000779a: 48 8d bc 24 58 01 00 00      	lea	rdi, [rsp + 0x158]
ffffffff800077a2: 48 c7 c6 38 26 02 80 	mov	rsi, -0x7ffdd9c8
ffffffff800077a9: e8 c2 98 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff800077ae: be 8e 00 00 00       	mov	esi, 0x8e
ffffffff800077b3: 48 c7 c7 c8 28 02 80 	mov	rdi, -0x7ffdd738
ffffffff800077ba: 48 c7 c2 58 29 02 80 	mov	rdx, -0x7ffdd6a8
ffffffff800077c1: e8 2a 99 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800077c6: 48 c7 44 24 78 28 26 02 80   	mov	qword ptr [rsp + 0x78], -0x7ffdd9d8
ffffffff800077cf: 48 c7 84 24 80 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x80], 0x1
ffffffff800077db: 48 c7 84 24 98 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x98], 0x0
ffffffff800077e7: 48 89 e0             	mov	rax, rsp
ffffffff800077ea: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rax
ffffffff800077f2: 48 c7 84 24 90 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x90], 0x0
ffffffff800077fe: 48 8d 7c 24 78       	lea	rdi, [rsp + 0x78]
ffffffff80007803: 48 c7 c6 38 26 02 80 	mov	rsi, -0x7ffdd9c8
ffffffff8000780a: e8 61 98 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000780f: cc                   	int3

ffffffff80007810 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7>:
ffffffff80007810: 53                   	push	rbx
ffffffff80007811: 48 83 ec 60          	sub	rsp, 0x60
ffffffff80007815: 48 89 fb             	mov	rbx, rdi
ffffffff80007818: 48 8b 06             	mov	rax, qword ptr [rsi]
ffffffff8000781b: 48 8b 7e 08          	mov	rdi, qword ptr [rsi + 0x8]
ffffffff8000781f: 48 8b 4e 10          	mov	rcx, qword ptr [rsi + 0x10]
ffffffff80007823: 48 85 ff             	test	rdi, rdi
ffffffff80007826: 0f 84 e4 01 00 00    	je	0xffffffff80007a10 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x200>
ffffffff8000782c: 48 8b 8c c8 90 00 00 00      	mov	rcx, qword ptr [rax + 8*rcx + 0x90]
ffffffff80007834: 48 89 f8             	mov	rax, rdi
ffffffff80007837: 48 ff c8             	dec	rax
ffffffff8000783a: 0f 84 be 00 00 00    	je	0xffffffff800078fe <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0xee>
ffffffff80007840: 48 83 c7 fe          	add	rdi, -0x2
ffffffff80007844: 48 89 c6             	mov	rsi, rax
ffffffff80007847: 48 83 e6 07          	and	rsi, 0x7
ffffffff8000784b: 74 1e                	je	0xffffffff8000786b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x5b>
ffffffff8000784d: 45 31 c0             	xor	r8d, r8d
ffffffff80007850: 44 0f b7 89 8e 00 00 00      	movzx	r9d, word ptr [rcx + 0x8e]
ffffffff80007858: 4a 8b 8c c9 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*r9 + 0x90]
ffffffff80007860: 49 ff c0             	inc	r8
ffffffff80007863: 4c 39 c6             	cmp	rsi, r8
ffffffff80007866: 75 e8                	jne	0xffffffff80007850 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x40>
ffffffff80007868: 4c 29 c0             	sub	rax, r8
ffffffff8000786b: 48 83 ff 07          	cmp	rdi, 0x7
ffffffff8000786f: 0f 82 89 00 00 00    	jb	0xffffffff800078fe <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0xee>
ffffffff80007875: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80007880: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff80007887: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff8000788f: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff80007896: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff8000789e: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078a5: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078ad: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078b4: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078bc: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078c3: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078cb: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078d2: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078da: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078e1: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078e9: 0f b7 b1 8e 00 00 00 	movzx	esi, word ptr [rcx + 0x8e]
ffffffff800078f0: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff800078f8: 48 83 c0 f8          	add	rax, -0x8
ffffffff800078fc: 75 82                	jne	0xffffffff80007880 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x70>
ffffffff800078fe: 0f b7 81 8e 00 00 00 	movzx	eax, word ptr [rcx + 0x8e]
ffffffff80007905: 48 ff c8             	dec	rax
ffffffff80007908: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8000790d: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80007916: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8000791b: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff80007920: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff80007925: e8 c6 f6 ff ff       	call	0xffffffff80006ff0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>
ffffffff8000792a: 8b 54 24 38          	mov	edx, dword ptr [rsp + 0x38]
ffffffff8000792e: 4c 8b 44 24 40       	mov	r8, qword ptr [rsp + 0x40]
ffffffff80007933: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80007938: 48 8b 74 24 50       	mov	rsi, qword ptr [rsp + 0x50]
ffffffff8000793d: 48 8b 7c 24 58       	mov	rdi, qword ptr [rsp + 0x58]
ffffffff80007942: 0f b7 88 8e 00 00 00 	movzx	ecx, word ptr [rax + 0x8e]
ffffffff80007949: 48 39 cf             	cmp	rdi, rcx
ffffffff8000794c: 72 18                	jb	0xffffffff80007966 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x156>
ffffffff8000794e: 66 90                	nop
ffffffff80007950: 0f b7 b8 8c 00 00 00 	movzx	edi, word ptr [rax + 0x8c]
ffffffff80007957: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff8000795a: 48 ff c6             	inc	rsi
ffffffff8000795d: 66 3b b8 8e 00 00 00 	cmp	di, word ptr [rax + 0x8e]
ffffffff80007964: 73 ea                	jae	0xffffffff80007950 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x140>
ffffffff80007966: 8b 4c b8 60          	mov	ecx, dword ptr [rax + 4*rdi + 0x60]
ffffffff8000796a: 89 54 b8 60          	mov	dword ptr [rax + 4*rdi + 0x60], edx
ffffffff8000796e: 48 8b 54 f8 08       	mov	rdx, qword ptr [rax + 8*rdi + 0x8]
ffffffff80007973: 4c 89 44 f8 08       	mov	qword ptr [rax + 8*rdi + 0x8], r8
ffffffff80007978: 48 85 f6             	test	rsi, rsi
ffffffff8000797b: 0f 84 b8 00 00 00    	je	0xffffffff80007a39 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x229>
ffffffff80007981: 48 8b 84 f8 98 00 00 00      	mov	rax, qword ptr [rax + 8*rdi + 0x98]
ffffffff80007989: 49 89 f0             	mov	r8, rsi
ffffffff8000798c: 49 ff c8             	dec	r8
ffffffff8000798f: 0f 84 a9 00 00 00    	je	0xffffffff80007a3e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x22e>
ffffffff80007995: 48 83 c6 fe          	add	rsi, -0x2
ffffffff80007999: 4c 89 c7             	mov	rdi, r8
ffffffff8000799c: 48 83 e7 07          	and	rdi, 0x7
ffffffff800079a0: 74 20                	je	0xffffffff800079c2 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1b2>
ffffffff800079a2: 45 31 c9             	xor	r9d, r9d
ffffffff800079a5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800079b0: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079b7: 49 ff c1             	inc	r9
ffffffff800079ba: 4c 39 cf             	cmp	rdi, r9
ffffffff800079bd: 75 f1                	jne	0xffffffff800079b0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1a0>
ffffffff800079bf: 4d 29 c8             	sub	r8, r9
ffffffff800079c2: 31 ff                	xor	edi, edi
ffffffff800079c4: 48 83 fe 07          	cmp	rsi, 0x7
ffffffff800079c8: 72 76                	jb	0xffffffff80007a40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff800079ca: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800079d0: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079d7: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079de: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079e5: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079ec: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079f3: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff800079fa: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff80007a01: 48 8b 80 90 00 00 00 	mov	rax, qword ptr [rax + 0x90]
ffffffff80007a08: 49 83 c0 f8          	add	r8, -0x8
ffffffff80007a0c: 75 c2                	jne	0xffffffff800079d0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1c0>
ffffffff80007a0e: eb 30                	jmp	0xffffffff80007a40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff80007a10: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80007a15: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff80007a1e: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80007a23: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff80007a28: 48 89 df             	mov	rdi, rbx
ffffffff80007a2b: e8 c0 f5 ff ff       	call	0xffffffff80006ff0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>
ffffffff80007a30: 48 89 d8             	mov	rax, rbx
ffffffff80007a33: 48 83 c4 60          	add	rsp, 0x60
ffffffff80007a37: 5b                   	pop	rbx
ffffffff80007a38: c3                   	ret
ffffffff80007a39: 48 ff c7             	inc	rdi
ffffffff80007a3c: eb 02                	jmp	0xffffffff80007a40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff80007a3e: 31 ff                	xor	edi, edi
ffffffff80007a40: 89 0b                	mov	dword ptr [rbx], ecx
ffffffff80007a42: 48 89 53 08          	mov	qword ptr [rbx + 0x8], rdx
ffffffff80007a46: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff80007a4a: 48 c7 43 18 00 00 00 00      	mov	qword ptr [rbx + 0x18], 0x0
ffffffff80007a52: 48 89 7b 20          	mov	qword ptr [rbx + 0x20], rdi
ffffffff80007a56: 48 89 d8             	mov	rax, rbx
ffffffff80007a59: 48 83 c4 60          	add	rsp, 0x60
ffffffff80007a5d: 5b                   	pop	rbx
ffffffff80007a5e: c3                   	ret
ffffffff80007a5f: cc                   	int3

ffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>:
ffffffff80007a60: 53                   	push	rbx
ffffffff80007a61: 48 83 ec 50          	sub	rsp, 0x50
ffffffff80007a65: 48 89 fb             	mov	rbx, rdi
ffffffff80007a68: 48 8b 06             	mov	rax, qword ptr [rsi]
ffffffff80007a6b: 48 8b 7e 08          	mov	rdi, qword ptr [rsi + 0x8]
ffffffff80007a6f: 48 8b 4e 10          	mov	rcx, qword ptr [rsi + 0x10]
ffffffff80007a73: 48 85 ff             	test	rdi, rdi
ffffffff80007a76: 0f 84 7c 01 00 00    	je	0xffffffff80007bf8 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x198>
ffffffff80007a7c: 48 8b 4c c8 68       	mov	rcx, qword ptr [rax + 8*rcx + 0x68]
ffffffff80007a81: 48 89 f8             	mov	rax, rdi
ffffffff80007a84: 48 ff c8             	dec	rax
ffffffff80007a87: 0f 84 81 00 00 00    	je	0xffffffff80007b0e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0xae>
ffffffff80007a8d: 48 83 c7 fe          	add	rdi, -0x2
ffffffff80007a91: 48 89 c6             	mov	rsi, rax
ffffffff80007a94: 48 83 e6 07          	and	rsi, 0x7
ffffffff80007a98: 74 1b                	je	0xffffffff80007ab5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x55>
ffffffff80007a9a: 45 31 c0             	xor	r8d, r8d
ffffffff80007a9d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80007aa0: 44 0f b7 49 62       	movzx	r9d, word ptr [rcx + 0x62]
ffffffff80007aa5: 4a 8b 4c c9 68       	mov	rcx, qword ptr [rcx + 8*r9 + 0x68]
ffffffff80007aaa: 49 ff c0             	inc	r8
ffffffff80007aad: 4c 39 c6             	cmp	rsi, r8
ffffffff80007ab0: 75 ee                	jne	0xffffffff80007aa0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x40>
ffffffff80007ab2: 4c 29 c0             	sub	rax, r8
ffffffff80007ab5: 48 83 ff 07          	cmp	rdi, 0x7
ffffffff80007ab9: 72 53                	jb	0xffffffff80007b0e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0xae>
ffffffff80007abb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80007ac0: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007ac4: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007ac9: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007acd: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007ad2: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007ad6: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007adb: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007adf: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007ae4: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007ae8: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007aed: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007af1: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007af6: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007afa: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007aff: 0f b7 71 62          	movzx	esi, word ptr [rcx + 0x62]
ffffffff80007b03: 48 8b 4c f1 68       	mov	rcx, qword ptr [rcx + 8*rsi + 0x68]
ffffffff80007b08: 48 83 c0 f8          	add	rax, -0x8
ffffffff80007b0c: 75 b2                	jne	0xffffffff80007ac0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x60>
ffffffff80007b0e: 0f b7 41 62          	movzx	eax, word ptr [rcx + 0x62]
ffffffff80007b12: 48 ff c8             	dec	rax
ffffffff80007b15: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80007b1a: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80007b23: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80007b28: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80007b2d: 48 8d 74 24 18       	lea	rsi, [rsp + 0x18]
ffffffff80007b32: e8 d9 ed ff ff       	call	0xffffffff80006910 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>
ffffffff80007b37: 48 8b 7c 24 30       	mov	rdi, qword ptr [rsp + 0x30]
ffffffff80007b3c: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff80007b41: 48 8b 54 24 40       	mov	rdx, qword ptr [rsp + 0x40]
ffffffff80007b46: 48 8b 74 24 48       	mov	rsi, qword ptr [rsp + 0x48]
ffffffff80007b4b: 0f b7 48 62          	movzx	ecx, word ptr [rax + 0x62]
ffffffff80007b4f: 48 39 ce             	cmp	rsi, rcx
ffffffff80007b52: 72 1c                	jb	0xffffffff80007b70 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x110>
ffffffff80007b54: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80007b60: 0f b7 70 60          	movzx	esi, word ptr [rax + 0x60]
ffffffff80007b64: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff80007b67: 48 ff c2             	inc	rdx
ffffffff80007b6a: 66 3b 70 62          	cmp	si, word ptr [rax + 0x62]
ffffffff80007b6e: 73 f0                	jae	0xffffffff80007b60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x100>
ffffffff80007b70: 48 8b 4c f0 08       	mov	rcx, qword ptr [rax + 8*rsi + 0x8]
ffffffff80007b75: 48 89 7c f0 08       	mov	qword ptr [rax + 8*rsi + 0x8], rdi
ffffffff80007b7a: 48 85 d2             	test	rdx, rdx
ffffffff80007b7d: 0f 84 9b 00 00 00    	je	0xffffffff80007c1e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1be>
ffffffff80007b83: 48 8b 44 f0 70       	mov	rax, qword ptr [rax + 8*rsi + 0x70]
ffffffff80007b88: 48 89 d7             	mov	rdi, rdx
ffffffff80007b8b: 48 ff cf             	dec	rdi
ffffffff80007b8e: 0f 84 8f 00 00 00    	je	0xffffffff80007c23 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c3>
ffffffff80007b94: 48 83 c2 fe          	add	rdx, -0x2
ffffffff80007b98: 48 89 fe             	mov	rsi, rdi
ffffffff80007b9b: 48 83 e6 07          	and	rsi, 0x7
ffffffff80007b9f: 74 1e                	je	0xffffffff80007bbf <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x15f>
ffffffff80007ba1: 45 31 c0             	xor	r8d, r8d
ffffffff80007ba4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80007bb0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bb4: 49 ff c0             	inc	r8
ffffffff80007bb7: 4c 39 c6             	cmp	rsi, r8
ffffffff80007bba: 75 f4                	jne	0xffffffff80007bb0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x150>
ffffffff80007bbc: 4c 29 c7             	sub	rdi, r8
ffffffff80007bbf: 31 f6                	xor	esi, esi
ffffffff80007bc1: 48 83 fa 07          	cmp	rdx, 0x7
ffffffff80007bc5: 72 5e                	jb	0xffffffff80007c25 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80007bc7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80007bd0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bd4: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bd8: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bdc: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007be0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007be4: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007be8: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bec: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007bf0: 48 83 c7 f8          	add	rdi, -0x8
ffffffff80007bf4: 75 da                	jne	0xffffffff80007bd0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x170>
ffffffff80007bf6: eb 2d                	jmp	0xffffffff80007c25 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80007bf8: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80007bfc: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff80007c05: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80007c0a: 48 89 e6             	mov	rsi, rsp
ffffffff80007c0d: 48 89 df             	mov	rdi, rbx
ffffffff80007c10: e8 fb ec ff ff       	call	0xffffffff80006910 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>
ffffffff80007c15: 48 89 d8             	mov	rax, rbx
ffffffff80007c18: 48 83 c4 50          	add	rsp, 0x50
ffffffff80007c1c: 5b                   	pop	rbx
ffffffff80007c1d: c3                   	ret
ffffffff80007c1e: 48 ff c6             	inc	rsi
ffffffff80007c21: eb 02                	jmp	0xffffffff80007c25 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80007c23: 31 f6                	xor	esi, esi
ffffffff80007c25: 48 89 0b             	mov	qword ptr [rbx], rcx
ffffffff80007c28: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff80007c2c: 48 c7 43 10 00 00 00 00      	mov	qword ptr [rbx + 0x10], 0x0
ffffffff80007c34: 48 89 73 18          	mov	qword ptr [rbx + 0x18], rsi
ffffffff80007c38: 48 89 d8             	mov	rax, rbx
ffffffff80007c3b: 48 83 c4 50          	add	rsp, 0x50
ffffffff80007c3f: 5b                   	pop	rbx
ffffffff80007c40: c3                   	ret
ffffffff80007c41: cc                   	int3
ffffffff80007c42: cc                   	int3
ffffffff80007c43: cc                   	int3
ffffffff80007c44: cc                   	int3
ffffffff80007c45: cc                   	int3
ffffffff80007c46: cc                   	int3
ffffffff80007c47: cc                   	int3
ffffffff80007c48: cc                   	int3
ffffffff80007c49: cc                   	int3
ffffffff80007c4a: cc                   	int3
ffffffff80007c4b: cc                   	int3
ffffffff80007c4c: cc                   	int3
ffffffff80007c4d: cc                   	int3
ffffffff80007c4e: cc                   	int3
ffffffff80007c4f: cc                   	int3

ffffffff80007c50 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb>:
ffffffff80007c50: 55                   	push	rbp
ffffffff80007c51: 41 57                	push	r15
ffffffff80007c53: 41 56                	push	r14
ffffffff80007c55: 41 55                	push	r13
ffffffff80007c57: 41 54                	push	r12
ffffffff80007c59: 53                   	push	rbx
ffffffff80007c5a: 50                   	push	rax
ffffffff80007c5b: 48 89 f3             	mov	rbx, rsi
ffffffff80007c5e: 48 8b 36             	mov	rsi, qword ptr [rsi]
ffffffff80007c61: 4c 8b 7b 08          	mov	r15, qword ptr [rbx + 0x8]
ffffffff80007c65: 4c 8b 63 10          	mov	r12, qword ptr [rbx + 0x10]
ffffffff80007c69: 0f b7 46 62          	movzx	eax, word ptr [rsi + 0x62]
ffffffff80007c6d: 49 39 c4             	cmp	r12, rax
ffffffff80007c70: 73 4e                	jae	0xffffffff80007cc0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x70>
ffffffff80007c72: 49 89 f5             	mov	r13, rsi
ffffffff80007c75: 4d 85 ff             	test	r15, r15
ffffffff80007c78: 0f 84 ce 00 00 00    	je	0xffffffff80007d4c <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xfc>
ffffffff80007c7e: 4b 8b 44 e5 70       	mov	rax, qword ptr [r13 + 8*r12 + 0x70]
ffffffff80007c83: 4c 89 f9             	mov	rcx, r15
ffffffff80007c86: 48 ff c9             	dec	rcx
ffffffff80007c89: 74 2e                	je	0xffffffff80007cb9 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x69>
ffffffff80007c8b: 49 8d 57 fe          	lea	rdx, [r15 - 0x2]
ffffffff80007c8f: 48 89 ce             	mov	rsi, rcx
ffffffff80007c92: 48 83 e6 07          	and	rsi, 0x7
ffffffff80007c96: 74 17                	je	0xffffffff80007caf <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x5f>
ffffffff80007c98: 45 31 c0             	xor	r8d, r8d
ffffffff80007c9b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80007ca0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007ca4: 49 ff c0             	inc	r8
ffffffff80007ca7: 4c 39 c6             	cmp	rsi, r8
ffffffff80007caa: 75 f4                	jne	0xffffffff80007ca0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x50>
ffffffff80007cac: 4c 29 c1             	sub	rcx, r8
ffffffff80007caf: 48 83 fa 07          	cmp	rdx, 0x7
ffffffff80007cb3: 0f 83 9d 00 00 00    	jae	0xffffffff80007d56 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x106>
ffffffff80007cb9: 31 d2                	xor	edx, edx
ffffffff80007cbb: e9 c6 00 00 00       	jmp	0xffffffff80007d86 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x136>
ffffffff80007cc0: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff80007cc4: bd 68 00 00 00       	mov	ebp, 0x68
ffffffff80007cc9: 41 b6 01             	mov	r14b, 0x1
ffffffff80007ccc: eb 27                	jmp	0xffffffff80007cf5 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xa5>
ffffffff80007cce: 66 90                	nop
ffffffff80007cd0: 49 ff c7             	inc	r15
ffffffff80007cd3: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80007cd8: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80007cdf: e8 0c 4b 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80007ce4: c6 05 15 33 02 00 00 	mov	byte ptr [rip + 0x23315], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007ceb: 4c 89 ee             	mov	rsi, r13
ffffffff80007cee: 66 45 3b 65 62       	cmp	r12w, word ptr [r13 + 0x62]
ffffffff80007cf3: 72 4a                	jb	0xffffffff80007d3f <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xef>
ffffffff80007cf5: 4c 8b 2e             	mov	r13, qword ptr [rsi]
ffffffff80007cf8: 4d 85 ed             	test	r13, r13
ffffffff80007cfb: 0f 84 b1 00 00 00    	je	0xffffffff80007db2 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x162>
ffffffff80007d01: 4d 85 ff             	test	r15, r15
ffffffff80007d04: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80007d09: 48 0f 44 cd          	cmove	rcx, rbp
ffffffff80007d0d: 44 0f b7 66 60       	movzx	r12d, word ptr [rsi + 0x60]
ffffffff80007d12: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80007d20: 31 c0                	xor	eax, eax
ffffffff80007d22: f0                   	lock
ffffffff80007d23: 44 0f b0 35 d5 32 02 00      	cmpxchg	byte ptr [rip + 0x232d5], r14b # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007d2b: 75 05                	jne	0xffffffff80007d32 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xe2>
ffffffff80007d2d: eb a1                	jmp	0xffffffff80007cd0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x80>
ffffffff80007d2f: 90                   	nop
ffffffff80007d30: f3 90                	pause
ffffffff80007d32: 0f b6 05 c7 32 02 00 	movzx	eax, byte ptr [rip + 0x232c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80007d39: 84 c0                	test	al, al
ffffffff80007d3b: 75 f3                	jne	0xffffffff80007d30 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xe0>
ffffffff80007d3d: eb e1                	jmp	0xffffffff80007d20 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xd0>
ffffffff80007d3f: 48 8b 3c 24          	mov	rdi, qword ptr [rsp]
ffffffff80007d43: 4d 85 ff             	test	r15, r15
ffffffff80007d46: 0f 85 32 ff ff ff    	jne	0xffffffff80007c7e <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x2e>
ffffffff80007d4c: 49 8d 54 24 01       	lea	rdx, [r12 + 0x1]
ffffffff80007d51: 4c 89 e8             	mov	rax, r13
ffffffff80007d54: eb 30                	jmp	0xffffffff80007d86 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x136>
ffffffff80007d56: 31 d2                	xor	edx, edx
ffffffff80007d58: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80007d60: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d64: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d68: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d6c: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d70: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d74: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d78: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d7c: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80007d80: 48 83 c1 f8          	add	rcx, -0x8
ffffffff80007d84: 75 da                	jne	0xffffffff80007d60 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x110>
ffffffff80007d86: 4c 89 2f             	mov	qword ptr [rdi], r13
ffffffff80007d89: 4c 89 7f 08          	mov	qword ptr [rdi + 0x8], r15
ffffffff80007d8d: 4c 89 67 10          	mov	qword ptr [rdi + 0x10], r12
ffffffff80007d91: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff80007d94: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff80007d9c: 48 89 53 10          	mov	qword ptr [rbx + 0x10], rdx
ffffffff80007da0: 48 89 f8             	mov	rax, rdi
ffffffff80007da3: 48 83 c4 08          	add	rsp, 0x8
ffffffff80007da7: 5b                   	pop	rbx
ffffffff80007da8: 41 5c                	pop	r12
ffffffff80007daa: 41 5d                	pop	r13
ffffffff80007dac: 41 5e                	pop	r14
ffffffff80007dae: 41 5f                	pop	r15
ffffffff80007db0: 5d                   	pop	rbp
ffffffff80007db1: c3                   	ret
ffffffff80007db2: 4d 85 ff             	test	r15, r15
ffffffff80007db5: b9 68 00 00 00       	mov	ecx, 0x68
ffffffff80007dba: b8 c8 00 00 00       	mov	eax, 0xc8
ffffffff80007dbf: 48 0f 44 c1          	cmove	rax, rcx
ffffffff80007dc3: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80007dc8: 48 89 f7             	mov	rdi, rsi
ffffffff80007dcb: 48 89 c6             	mov	rsi, rax
ffffffff80007dce: e8 8d 11 00 00       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80007dd3: 48 c7 c7 40 2a 02 80 	mov	rdi, -0x7ffdd5c0
ffffffff80007dda: e8 61 98 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80007ddf: cc                   	int3

ffffffff80007de0 <<&T as core::fmt::Debug>::fmt::hfbfd823d349428cd>:
ffffffff80007de0: 48 81 ec c8 00 00 00 	sub	rsp, 0xc8
ffffffff80007de7: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80007dea: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff80007ded: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff80007df1: 48 8b 76 38          	mov	rsi, qword ptr [rsi + 0x38]
ffffffff80007df5: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80007df9: 48 c7 44 24 08 c0 2b 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdd440
ffffffff80007e02: 48 c7 44 24 10 b0 9d 00 80   	mov	qword ptr [rsp + 0x10], -0x7fff6250
ffffffff80007e0b: 48 89 e0             	mov	rax, rsp
ffffffff80007e0e: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80007e13: 48 c7 44 24 20 70 de 01 80   	mov	qword ptr [rsp + 0x20], -0x7ffe2190
ffffffff80007e1c: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff80007e25: 48 c7 44 24 68 02 00 00 00   	mov	qword ptr [rsp + 0x68], 0x2
ffffffff80007e2e: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 0x78], 0x0
ffffffff80007e37: 48 c7 84 24 80 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 0x80], 0x20
ffffffff80007e43: c6 84 24 88 00 00 00 03      	mov	byte ptr [rsp + 0x88], 0x3
ffffffff80007e4b: 48 c7 84 24 90 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x90], 0x2
ffffffff80007e57: 48 c7 84 24 a0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa0], 0x2
ffffffff80007e63: 48 c7 84 24 b0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x1
ffffffff80007e6f: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff80007e79: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff80007e81: c6 84 24 c0 00 00 00 03      	mov	byte ptr [rsp + 0xc0], 0x3
ffffffff80007e89: 48 c7 44 24 28 e0 2b 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdd420
ffffffff80007e92: 48 c7 44 24 30 03 00 00 00   	mov	qword ptr [rsp + 0x30], 0x3
ffffffff80007e9b: 48 8d 44 24 58       	lea	rax, [rsp + 0x58]
ffffffff80007ea0: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80007ea5: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff80007eae: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80007eb3: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80007eb8: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff80007ec1: 48 8d 54 24 28       	lea	rdx, [rsp + 0x28]
ffffffff80007ec6: e8 05 63 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80007ecb: 48 81 c4 c8 00 00 00 	add	rsp, 0xc8
ffffffff80007ed2: c3                   	ret
ffffffff80007ed3: cc                   	int3
ffffffff80007ed4: cc                   	int3
ffffffff80007ed5: cc                   	int3
ffffffff80007ed6: cc                   	int3
ffffffff80007ed7: cc                   	int3
ffffffff80007ed8: cc                   	int3
ffffffff80007ed9: cc                   	int3
ffffffff80007eda: cc                   	int3
ffffffff80007edb: cc                   	int3
ffffffff80007edc: cc                   	int3
ffffffff80007edd: cc                   	int3
ffffffff80007ede: cc                   	int3
ffffffff80007edf: cc                   	int3

ffffffff80007ee0 <<core::fmt::Error as core::fmt::Debug>::fmt::hca9d617326e586b8.llvm.4796390557109910071>:
ffffffff80007ee0: 48 89 f7             	mov	rdi, rsi
ffffffff80007ee3: ba 05 00 00 00       	mov	edx, 0x5
ffffffff80007ee8: 48 c7 c6 08 2b 02 80 	mov	rsi, -0x7ffdd4f8
ffffffff80007eef: e9 3c 6b 01 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80007ef4: cc                   	int3
ffffffff80007ef5: cc                   	int3
ffffffff80007ef6: cc                   	int3
ffffffff80007ef7: cc                   	int3
ffffffff80007ef8: cc                   	int3
ffffffff80007ef9: cc                   	int3
ffffffff80007efa: cc                   	int3
ffffffff80007efb: cc                   	int3
ffffffff80007efc: cc                   	int3
ffffffff80007efd: cc                   	int3
ffffffff80007efe: cc                   	int3
ffffffff80007eff: cc                   	int3

ffffffff80007f00 <<log::SetLoggerError as core::fmt::Debug>::fmt::hb3316e653009feb4.llvm.4796390557109910071>:
ffffffff80007f00: 50                   	push	rax
ffffffff80007f01: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff80007f05: 48 89 e1             	mov	rcx, rsp
ffffffff80007f08: ba 0e 00 00 00       	mov	edx, 0xe
ffffffff80007f0d: 48 89 f7             	mov	rdi, rsi
ffffffff80007f10: 48 c7 c6 30 2b 02 80 	mov	rsi, -0x7ffdd4d0
ffffffff80007f17: 49 c7 c0 10 2b 02 80 	mov	r8, -0x7ffdd4f0
ffffffff80007f1e: e8 8d 6c 01 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80007f23: 59                   	pop	rcx
ffffffff80007f24: c3                   	ret
ffffffff80007f25: cc                   	int3
ffffffff80007f26: cc                   	int3
ffffffff80007f27: cc                   	int3
ffffffff80007f28: cc                   	int3
ffffffff80007f29: cc                   	int3
ffffffff80007f2a: cc                   	int3
ffffffff80007f2b: cc                   	int3
ffffffff80007f2c: cc                   	int3
ffffffff80007f2d: cc                   	int3
ffffffff80007f2e: cc                   	int3
ffffffff80007f2f: cc                   	int3

ffffffff80007f30 <<x86_64::structures::paging::page::Page<S> as core::fmt::Debug>::fmt::hbb47ba6d67e6256c>:
ffffffff80007f30: 48 81 ec c8 00 00 00 	sub	rsp, 0xc8
ffffffff80007f37: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80007f3a: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80007f3e: 48 c7 44 24 08 c0 2b 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdd440
ffffffff80007f47: 48 c7 44 24 10 b0 9d 00 80   	mov	qword ptr [rsp + 0x10], -0x7fff6250
ffffffff80007f50: 48 89 e0             	mov	rax, rsp
ffffffff80007f53: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80007f58: 48 c7 44 24 20 70 de 01 80   	mov	qword ptr [rsp + 0x20], -0x7ffe2190
ffffffff80007f61: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff80007f6a: 48 c7 44 24 68 02 00 00 00   	mov	qword ptr [rsp + 0x68], 0x2
ffffffff80007f73: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 0x78], 0x0
ffffffff80007f7c: 48 c7 84 24 80 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 0x80], 0x20
ffffffff80007f88: c6 84 24 88 00 00 00 03      	mov	byte ptr [rsp + 0x88], 0x3
ffffffff80007f90: 48 c7 84 24 90 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x90], 0x2
ffffffff80007f9c: 48 c7 84 24 a0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa0], 0x2
ffffffff80007fa8: 48 c7 84 24 b0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x1
ffffffff80007fb4: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff80007fbe: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff80007fc6: c6 84 24 c0 00 00 00 03      	mov	byte ptr [rsp + 0xc0], 0x3
ffffffff80007fce: 48 c7 44 24 28 90 2b 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdd470
ffffffff80007fd7: 48 c7 44 24 30 03 00 00 00   	mov	qword ptr [rsp + 0x30], 0x3
ffffffff80007fe0: 48 8d 44 24 58       	lea	rax, [rsp + 0x58]
ffffffff80007fe5: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80007fea: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff80007ff3: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80007ff8: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80007ffd: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff80008006: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8000800a: 48 8b 76 38          	mov	rsi, qword ptr [rsi + 0x38]
ffffffff8000800e: 48 8d 54 24 28       	lea	rdx, [rsp + 0x28]
ffffffff80008013: e8 b8 61 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80008018: 48 81 c4 c8 00 00 00 	add	rsp, 0xc8
ffffffff8000801f: c3                   	ret

ffffffff80008020 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90>:
ffffffff80008020: 55                   	push	rbp
ffffffff80008021: 41 57                	push	r15
ffffffff80008023: 41 56                	push	r14
ffffffff80008025: 41 55                	push	r13
ffffffff80008027: 41 54                	push	r12
ffffffff80008029: 53                   	push	rbx
ffffffff8000802a: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000802e: 48 89 7c 24 30       	mov	qword ptr [rsp + 0x30], rdi
ffffffff80008033: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000803c: 48 c7 44 24 20 08 00 00 00   	mov	qword ptr [rsp + 0x20], 0x8
ffffffff80008045: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000804e: 41 b6 01             	mov	r14b, 0x1
ffffffff80008051: 31 c0                	xor	eax, eax
ffffffff80008053: eb 1c                	jmp	0xffffffff80008071 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x51>
ffffffff80008055: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80008060: 8b 44 24 0c          	mov	eax, dword ptr [rsp + 0xc]
ffffffff80008064: ff c0                	inc	eax
ffffffff80008066: 3d 00 01 00 00       	cmp	eax, 0x100
ffffffff8000806b: 0f 84 61 02 00 00    	je	0xffffffff800082d2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x2b2>
ffffffff80008071: 89 44 24 0c          	mov	dword ptr [rsp + 0xc], eax
ffffffff80008075: 41 89 c5             	mov	r13d, eax
ffffffff80008078: 41 c1 e5 10          	shl	r13d, 0x10
ffffffff8000807c: 45 31 ff             	xor	r15d, r15d
ffffffff8000807f: eb 1f                	jmp	0xffffffff800080a0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x80>
ffffffff80008081: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80008086: 48 89 2c d8          	mov	qword ptr [rax + 8*rbx], rbp
ffffffff8000808a: 48 ff c3             	inc	rbx
ffffffff8000808d: 48 89 5c 24 28       	mov	qword ptr [rsp + 0x28], rbx
ffffffff80008092: 41 ff c7             	inc	r15d
ffffffff80008095: 41 83 ff 20          	cmp	r15d, 0x20
ffffffff80008099: 74 c5                	je	0xffffffff80008060 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x40>
ffffffff8000809b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800080a0: 31 c0                	xor	eax, eax
ffffffff800080a2: f0                   	lock
ffffffff800080a3: 44 0f b0 35 65 31 02 00      	cmpxchg	byte ptr [rip + 0x23165], r14b # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800080ab: 75 55                	jne	0xffffffff80008102 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xe2>
ffffffff800080ad: 44 89 f9             	mov	ecx, r15d
ffffffff800080b0: c1 e1 0b             	shl	ecx, 0xb
ffffffff800080b3: 42 8d 04 29          	lea	eax, [rcx + r13]
ffffffff800080b7: 05 00 00 00 80       	add	eax, 0x80000000
ffffffff800080bc: c6 05 4d 31 02 00 00 	mov	byte ptr [rip + 0x2314d], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800080c3: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff800080c7: ef                   	out	dx, eax
ffffffff800080c8: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff800080cc: ed                   	in	eax, dx
ffffffff800080cd: 89 c7                	mov	edi, eax
ffffffff800080cf: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff800080d3: 31 c0                	xor	eax, eax
ffffffff800080d5: ef                   	out	dx, eax
ffffffff800080d6: 66 83 ff ff          	cmp	di, -0x1
ffffffff800080da: 74 b6                	je	0xffffffff80008092 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x72>
ffffffff800080dc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800080e0: 31 c0                	xor	eax, eax
ffffffff800080e2: f0                   	lock
ffffffff800080e3: 44 0f b0 35 25 31 02 00      	cmpxchg	byte ptr [rip + 0x23125], r14b # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800080eb: 75 05                	jne	0xffffffff800080f2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xd2>
ffffffff800080ed: eb 20                	jmp	0xffffffff8000810f <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xef>
ffffffff800080ef: 90                   	nop
ffffffff800080f0: f3 90                	pause
ffffffff800080f2: 0f b6 05 17 31 02 00 	movzx	eax, byte ptr [rip + 0x23117] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800080f9: 84 c0                	test	al, al
ffffffff800080fb: 75 f3                	jne	0xffffffff800080f0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xd0>
ffffffff800080fd: eb e1                	jmp	0xffffffff800080e0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xc0>
ffffffff800080ff: 90                   	nop
ffffffff80008100: f3 90                	pause
ffffffff80008102: 0f b6 05 07 31 02 00 	movzx	eax, byte ptr [rip + 0x23107] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff80008109: 84 c0                	test	al, al
ffffffff8000810b: 75 f3                	jne	0xffffffff80008100 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xe0>
ffffffff8000810d: eb 91                	jmp	0xffffffff800080a0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x80>
ffffffff8000810f: 44 01 e9             	add	ecx, r13d
ffffffff80008112: 89 c8                	mov	eax, ecx
ffffffff80008114: 0d 04 00 00 80       	or	eax, 0x80000004
ffffffff80008119: c6 05 f0 30 02 00 00 	mov	byte ptr [rip + 0x230f0], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff80008120: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff80008124: ef                   	out	dx, eax
ffffffff80008125: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff80008129: ed                   	in	eax, dx
ffffffff8000812a: 89 44 24 10          	mov	dword ptr [rsp + 0x10], eax
ffffffff8000812e: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff80008132: 31 c0                	xor	eax, eax
ffffffff80008134: ef                   	out	dx, eax
ffffffff80008135: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80008140: 31 c0                	xor	eax, eax
ffffffff80008142: f0                   	lock
ffffffff80008143: 44 0f b0 35 c5 30 02 00      	cmpxchg	byte ptr [rip + 0x230c5], r14b # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000814b: 75 05                	jne	0xffffffff80008152 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x132>
ffffffff8000814d: eb 10                	jmp	0xffffffff8000815f <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x13f>
ffffffff8000814f: 90                   	nop
ffffffff80008150: f3 90                	pause
ffffffff80008152: 0f b6 05 b7 30 02 00 	movzx	eax, byte ptr [rip + 0x230b7] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff80008159: 84 c0                	test	al, al
ffffffff8000815b: 75 f3                	jne	0xffffffff80008150 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x130>
ffffffff8000815d: eb e1                	jmp	0xffffffff80008140 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x120>
ffffffff8000815f: 89 c8                	mov	eax, ecx
ffffffff80008161: 0d 08 00 00 80       	or	eax, 0x80000008
ffffffff80008166: c6 05 a3 30 02 00 00 	mov	byte ptr [rip + 0x230a3], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000816d: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff80008171: ef                   	out	dx, eax
ffffffff80008172: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff80008176: ed                   	in	eax, dx
ffffffff80008177: 41 89 c4             	mov	r12d, eax
ffffffff8000817a: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000817e: 31 c0                	xor	eax, eax
ffffffff80008180: ef                   	out	dx, eax
ffffffff80008181: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80008190: 31 c0                	xor	eax, eax
ffffffff80008192: f0                   	lock
ffffffff80008193: 44 0f b0 35 75 30 02 00      	cmpxchg	byte ptr [rip + 0x23075], r14b # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000819b: 75 05                	jne	0xffffffff800081a2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x182>
ffffffff8000819d: eb 10                	jmp	0xffffffff800081af <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x18f>
ffffffff8000819f: 90                   	nop
ffffffff800081a0: f3 90                	pause
ffffffff800081a2: 0f b6 05 67 30 02 00 	movzx	eax, byte ptr [rip + 0x23067] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800081a9: 84 c0                	test	al, al
ffffffff800081ab: 75 f3                	jne	0xffffffff800081a0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x180>
ffffffff800081ad: eb e1                	jmp	0xffffffff80008190 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x170>
ffffffff800081af: 89 7c 24 14          	mov	dword ptr [rsp + 0x14], edi
ffffffff800081b3: 81 c9 0c 00 00 80    	or	ecx, 0x8000000c
ffffffff800081b9: c6 05 50 30 02 00 00 	mov	byte ptr [rip + 0x23050], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff800081c0: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff800081c4: 89 c8                	mov	eax, ecx
ffffffff800081c6: ef                   	out	dx, eax
ffffffff800081c7: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff800081cb: ed                   	in	eax, dx
ffffffff800081cc: 89 c3                	mov	ebx, eax
ffffffff800081ce: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff800081d2: 31 c0                	xor	eax, eax
ffffffff800081d4: ef                   	out	dx, eax
ffffffff800081d5: 0f b6 05 05 30 02 00 	movzx	eax, byte ptr [rip + 0x23005] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800081dc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800081e0: 31 c0                	xor	eax, eax
ffffffff800081e2: f0                   	lock
ffffffff800081e3: 44 0f b0 35 15 2e 02 00      	cmpxchg	byte ptr [rip + 0x22e15], r14b # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800081eb: 75 05                	jne	0xffffffff800081f2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1d2>
ffffffff800081ed: eb 10                	jmp	0xffffffff800081ff <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1df>
ffffffff800081ef: 90                   	nop
ffffffff800081f0: f3 90                	pause
ffffffff800081f2: 0f b6 05 07 2e 02 00 	movzx	eax, byte ptr [rip + 0x22e07] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800081f9: 84 c0                	test	al, al
ffffffff800081fb: 75 f3                	jne	0xffffffff800081f0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1d0>
ffffffff800081fd: eb e1                	jmp	0xffffffff800081e0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1c0>
ffffffff800081ff: be 08 00 00 00       	mov	esi, 0x8
ffffffff80008204: ba 28 00 00 00       	mov	edx, 0x28
ffffffff80008209: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008210: e8 3b 48 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80008215: c6 05 e4 2d 02 00 00 	mov	byte ptr [rip + 0x22de4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000821c: 48 85 c0             	test	rax, rax
ffffffff8000821f: 0f 84 db 00 00 00    	je	0xffffffff80008300 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x2e0>
ffffffff80008225: 48 89 c5             	mov	rbp, rax
ffffffff80008228: 44 8b 54 24 14       	mov	r10d, dword ptr [rsp + 0x14]
ffffffff8000822d: 44 89 d0             	mov	eax, r10d
ffffffff80008230: c1 e8 10             	shr	eax, 0x10
ffffffff80008233: 44 8b 5c 24 10       	mov	r11d, dword ptr [rsp + 0x10]
ffffffff80008238: 44 89 d9             	mov	ecx, r11d
ffffffff8000823b: c1 e9 10             	shr	ecx, 0x10
ffffffff8000823e: 44 89 e2             	mov	edx, r12d
ffffffff80008241: c1 ea 18             	shr	edx, 0x18
ffffffff80008244: 44 89 e6             	mov	esi, r12d
ffffffff80008247: c1 ee 10             	shr	esi, 0x10
ffffffff8000824a: 44 89 e7             	mov	edi, r12d
ffffffff8000824d: c1 ef 08             	shr	edi, 0x8
ffffffff80008250: 41 89 d8             	mov	r8d, ebx
ffffffff80008253: 41 c1 e8 10          	shr	r8d, 0x10
ffffffff80008257: 41 89 d9             	mov	r9d, ebx
ffffffff8000825a: 41 c1 e9 18          	shr	r9d, 0x18
ffffffff8000825e: 48 c7 45 00 01 00 00 00      	mov	qword ptr [rbp], 0x1
ffffffff80008266: 48 c7 45 08 01 00 00 00      	mov	qword ptr [rbp + 0x8], 0x1
ffffffff8000826e: c6 45 10 00          	mov	byte ptr [rbp + 0x10], 0x0
ffffffff80008272: 66 89 45 12          	mov	word ptr [rbp + 0x12], ax
ffffffff80008276: 66 44 89 55 14       	mov	word ptr [rbp + 0x14], r10w
ffffffff8000827b: 66 89 4d 16          	mov	word ptr [rbp + 0x16], cx
ffffffff8000827f: 66 44 89 5d 18       	mov	word ptr [rbp + 0x18], r11w
ffffffff80008284: 8b 44 24 0c          	mov	eax, dword ptr [rsp + 0xc]
ffffffff80008288: 88 45 1a             	mov	byte ptr [rbp + 0x1a], al
ffffffff8000828b: 44 88 7d 1b          	mov	byte ptr [rbp + 0x1b], r15b
ffffffff8000828f: 88 55 1c             	mov	byte ptr [rbp + 0x1c], dl
ffffffff80008292: 40 88 75 1d          	mov	byte ptr [rbp + 0x1d], sil
ffffffff80008296: 40 88 7d 1e          	mov	byte ptr [rbp + 0x1e], dil
ffffffff8000829a: 44 88 65 1f          	mov	byte ptr [rbp + 0x1f], r12b
ffffffff8000829e: 44 88 4d 20          	mov	byte ptr [rbp + 0x20], r9b
ffffffff800082a2: 44 88 45 21          	mov	byte ptr [rbp + 0x21], r8b
ffffffff800082a6: 88 7d 22             	mov	byte ptr [rbp + 0x22], bh
ffffffff800082a9: 88 5d 23             	mov	byte ptr [rbp + 0x23], bl
ffffffff800082ac: 48 8b 5c 24 28       	mov	rbx, qword ptr [rsp + 0x28]
ffffffff800082b1: 48 3b 5c 24 18       	cmp	rbx, qword ptr [rsp + 0x18]
ffffffff800082b6: 0f 85 c5 fd ff ff    	jne	0xffffffff80008081 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x61>
ffffffff800082bc: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff800082c1: 48 c7 c6 58 2c 02 80 	mov	rsi, -0x7ffdd3a8
ffffffff800082c8: e8 a3 af 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff800082cd: e9 af fd ff ff       	jmp	0xffffffff80008081 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x61>
ffffffff800082d2: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff800082d7: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff800082dc: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff800082e0: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff800082e5: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff800082ea: 48 89 48 08          	mov	qword ptr [rax + 0x8], rcx
ffffffff800082ee: 48 89 10             	mov	qword ptr [rax], rdx
ffffffff800082f1: 48 83 c4 38          	add	rsp, 0x38
ffffffff800082f5: 5b                   	pop	rbx
ffffffff800082f6: 41 5c                	pop	r12
ffffffff800082f8: 41 5d                	pop	r13
ffffffff800082fa: 41 5e                	pop	r14
ffffffff800082fc: 41 5f                	pop	r15
ffffffff800082fe: 5d                   	pop	rbp
ffffffff800082ff: c3                   	ret
ffffffff80008300: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80008305: be 28 00 00 00       	mov	esi, 0x28
ffffffff8000830a: e8 a3 58 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000830f: cc                   	int3

ffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>:
ffffffff80008310: 53                   	push	rbx
ffffffff80008311: 48 83 ec 10          	sub	rsp, 0x10
ffffffff80008315: 48 89 fb             	mov	rbx, rdi
ffffffff80008318: 0f b6 05 ff 2e 02 00 	movzx	eax, byte ptr [rip + 0x22eff] # 0xffffffff8002b21e <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071+0x4>
ffffffff8000831f: 3c 02                	cmp	al, 0x2
ffffffff80008321: 75 53                	jne	0xffffffff80008376 <taos::devices::serial::_print::h2727b219b98997eb+0x66>
ffffffff80008323: b1 01                	mov	cl, 0x1
ffffffff80008325: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80008330: 31 c0                	xor	eax, eax
ffffffff80008332: f0                   	lock
ffffffff80008333: 0f b0 0d e0 2e 02 00 	cmpxchg	byte ptr [rip + 0x22ee0], cl # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff8000833a: 75 06                	jne	0xffffffff80008342 <taos::devices::serial::_print::h2727b219b98997eb+0x32>
ffffffff8000833c: eb 11                	jmp	0xffffffff8000834f <taos::devices::serial::_print::h2727b219b98997eb+0x3f>
ffffffff8000833e: 66 90                	nop
ffffffff80008340: f3 90                	pause
ffffffff80008342: 0f b6 05 d1 2e 02 00 	movzx	eax, byte ptr [rip + 0x22ed1] # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008349: 84 c0                	test	al, al
ffffffff8000834b: 75 f3                	jne	0xffffffff80008340 <taos::devices::serial::_print::h2727b219b98997eb+0x30>
ffffffff8000834d: eb e1                	jmp	0xffffffff80008330 <taos::devices::serial::_print::h2727b219b98997eb+0x20>
ffffffff8000834f: 48 c7 c7 1c b2 02 80 	mov	rdi, -0x7ffd4de4
ffffffff80008356: 48 c7 c6 40 2b 02 80 	mov	rsi, -0x7ffdd4c0
ffffffff8000835d: 48 89 da             	mov	rdx, rbx
ffffffff80008360: e8 6b 5e 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80008365: 84 c0                	test	al, al
ffffffff80008367: 75 1b                	jne	0xffffffff80008384 <taos::devices::serial::_print::h2727b219b98997eb+0x74>
ffffffff80008369: c6 05 aa 2e 02 00 00 	mov	byte ptr [rip + 0x22eaa], 0x0 # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008370: 48 83 c4 10          	add	rsp, 0x10
ffffffff80008374: 5b                   	pop	rbx
ffffffff80008375: c3                   	ret
ffffffff80008376: 48 c7 c7 1a b2 02 80 	mov	rdi, -0x7ffd4de6
ffffffff8000837d: e8 ce 6e 00 00       	call	0xffffffff8000f250 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910>
ffffffff80008382: eb 9f                	jmp	0xffffffff80008323 <taos::devices::serial::_print::h2727b219b98997eb+0x13>
ffffffff80008384: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff80008389: be 19 00 00 00       	mov	esi, 0x19
ffffffff8000838e: 48 c7 c7 90 2c 02 80 	mov	rdi, -0x7ffdd370
ffffffff80008395: 48 c7 c1 70 2c 02 80 	mov	rcx, -0x7ffdd390
ffffffff8000839c: 49 c7 c0 c0 2c 02 80 	mov	r8, -0x7ffdd340
ffffffff800083a3: e8 b8 87 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff800083a8: cc                   	int3
ffffffff800083a9: cc                   	int3
ffffffff800083aa: cc                   	int3
ffffffff800083ab: cc                   	int3
ffffffff800083ac: cc                   	int3
ffffffff800083ad: cc                   	int3
ffffffff800083ae: cc                   	int3
ffffffff800083af: cc                   	int3

ffffffff800083b0 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>:
ffffffff800083b0: 53                   	push	rbx
ffffffff800083b1: 48 83 ec 20          	sub	rsp, 0x20
ffffffff800083b5: b9 32 08 00 00       	mov	ecx, 0x832
ffffffff800083ba: 0f 32                	rdmsr
ffffffff800083bc: 0d 00 00 01 00       	or	eax, 0x10000
ffffffff800083c1: 0f 30                	wrmsr
ffffffff800083c3: 31 f6                	xor	esi, esi
ffffffff800083c5: b9 3e 08 00 00       	mov	ecx, 0x83e
ffffffff800083ca: b8 0b 00 00 00       	mov	eax, 0xb
ffffffff800083cf: 31 d2                	xor	edx, edx
ffffffff800083d1: 0f 30                	wrmsr
ffffffff800083d3: b9 38 08 00 00       	mov	ecx, 0x838
ffffffff800083d8: b8 ff ff ff ff       	mov	eax, 0xffffffff
ffffffff800083dd: 31 d2                	xor	edx, edx
ffffffff800083df: 0f 30                	wrmsr
ffffffff800083e1: 66 ba 61 00          	mov	dx, 0x61
ffffffff800083e5: b0 01                	mov	al, 0x1
ffffffff800083e7: ee                   	out	dx, al
ffffffff800083e8: 66 ba 43 00          	mov	dx, 0x43
ffffffff800083ec: b0 b6                	mov	al, -0x4a
ffffffff800083ee: ee                   	out	dx, al
ffffffff800083ef: 66 ba 42 00          	mov	dx, 0x42
ffffffff800083f3: b0 0b                	mov	al, 0xb
ffffffff800083f5: ee                   	out	dx, al
ffffffff800083f6: b0 e9                	mov	al, -0x17
ffffffff800083f8: ee                   	out	dx, al
ffffffff800083f9: 66 ba 61 00          	mov	dx, 0x61
ffffffff800083fd: ec                   	in	al, dx
ffffffff800083fe: 89 c1                	mov	ecx, eax
ffffffff80008400: 80 e1 20             	and	cl, 0x20
ffffffff80008403: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80008410: 66 ba 61 00          	mov	dx, 0x61
ffffffff80008414: ec                   	in	al, dx
ffffffff80008415: 24 20                	and	al, 0x20
ffffffff80008417: 31 d2                	xor	edx, edx
ffffffff80008419: 38 c8                	cmp	al, cl
ffffffff8000841b: 0f 95 c2             	setne	dl
ffffffff8000841e: 01 d6                	add	esi, edx
ffffffff80008420: 89 c1                	mov	ecx, eax
ffffffff80008422: 83 fe 28             	cmp	esi, 0x28
ffffffff80008425: 72 e9                	jb	0xffffffff80008410 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x60>
ffffffff80008427: 66 ba 61 00          	mov	dx, 0x61
ffffffff8000842b: 31 c0                	xor	eax, eax
ffffffff8000842d: ee                   	out	dx, al
ffffffff8000842e: b9 39 08 00 00       	mov	ecx, 0x839
ffffffff80008433: 0f 32                	rdmsr
ffffffff80008435: 85 ff                	test	edi, edi
ffffffff80008437: 0f 84 e7 01 00 00    	je	0xffffffff80008624 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x274>
ffffffff8000843d: f7 d0                	not	eax
ffffffff8000843f: 31 d2                	xor	edx, edx
ffffffff80008441: f7 f7                	div	edi
ffffffff80008443: 89 c3                	mov	ebx, eax
ffffffff80008445: 89 05 c9 2d 02 00    	mov	dword ptr [rip + 0x22dc9], eax # 0xffffffff8002b214 <taos::interrupts::x2apic::CALIBRATED_TIMER_COUNT::h692544a125c19776.0>
ffffffff8000844b: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80008450: e8 5b 43 01 00       	call	0xffffffff8001c7b0 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>
ffffffff80008455: 83 7c 24 18 00       	cmp	dword ptr [rsp + 0x18], 0x0
ffffffff8000845a: 0f 84 71 01 00 00    	je	0xffffffff800085d1 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x221>
ffffffff80008460: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80008465: 31 c9                	xor	ecx, ecx
ffffffff80008467: 48 89 de             	mov	rsi, rbx
ffffffff8000846a: 0f a2                	cpuid
ffffffff8000846c: 48 87 f3             	xchg	rsi, rbx
ffffffff8000846f: 83 7c 24 08 03       	cmp	dword ptr [rsp + 0x8], 0x3
ffffffff80008474: 0f 84 57 01 00 00    	je	0xffffffff800085d1 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x221>
ffffffff8000847a: 81 e1 00 00 20 00    	and	ecx, 0x200000
ffffffff80008480: 0f 84 4b 01 00 00    	je	0xffffffff800085d1 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x221>
ffffffff80008486: b9 1b 00 00 00       	mov	ecx, 0x1b
ffffffff8000848b: 0f 32                	rdmsr
ffffffff8000848d: 0d 00 0c 00 00       	or	eax, 0xc00
ffffffff80008492: 0f 30                	wrmsr
ffffffff80008494: 0f 32                	rdmsr
ffffffff80008496: 89 c1                	mov	ecx, eax
ffffffff80008498: f7 d1                	not	ecx
ffffffff8000849a: b0 02                	mov	al, 0x2
ffffffff8000849c: f7 c1 00 0c 00 00    	test	ecx, 0xc00
ffffffff800084a2: 0f 85 23 01 00 00    	jne	0xffffffff800085cb <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x21b>
ffffffff800084a8: b9 0f 08 00 00       	mov	ecx, 0x80f
ffffffff800084ad: b8 ff 01 00 00       	mov	eax, 0x1ff
ffffffff800084b2: 31 d2                	xor	edx, edx
ffffffff800084b4: 0f 30                	wrmsr
ffffffff800084b6: b9 08 08 00 00       	mov	ecx, 0x808
ffffffff800084bb: 31 c0                	xor	eax, eax
ffffffff800084bd: 31 d2                	xor	edx, edx
ffffffff800084bf: 0f 30                	wrmsr
ffffffff800084c1: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff800084c6: 0f 32                	rdmsr
ffffffff800084c8: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff800084cc: 89 c1                	mov	ecx, eax
ffffffff800084ce: 48 09 d1             	or	rcx, rdx
ffffffff800084d1: b0 06                	mov	al, 0x6
ffffffff800084d3: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff800084d7: 0f 87 ee 00 00 00    	ja	0xffffffff800085cb <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x21b>
ffffffff800084dd: b9 32 08 00 00       	mov	ecx, 0x832
ffffffff800084e2: b8 20 00 02 00       	mov	eax, 0x20020
ffffffff800084e7: 31 d2                	xor	edx, edx
ffffffff800084e9: 0f 30                	wrmsr
ffffffff800084eb: b9 3e 08 00 00       	mov	ecx, 0x83e
ffffffff800084f0: b8 0b 00 00 00       	mov	eax, 0xb
ffffffff800084f5: 31 d2                	xor	edx, edx
ffffffff800084f7: 0f 30                	wrmsr
ffffffff800084f9: b9 38 08 00 00       	mov	ecx, 0x838
ffffffff800084fe: 89 d8                	mov	eax, ebx
ffffffff80008500: 31 d2                	xor	edx, edx
ffffffff80008502: 0f 30                	wrmsr
ffffffff80008504: 0f b6 05 f5 2e 02 00 	movzx	eax, byte ptr [rip + 0x22ef5] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000850b: 3c 02                	cmp	al, 0x2
ffffffff8000850d: 0f 85 c6 00 00 00    	jne	0xffffffff800085d9 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x229>
ffffffff80008513: 0f b7 1d de 2e 02 00 	movzx	ebx, word ptr [rip + 0x22ede] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff8000851a: 0f b6 05 df 2e 02 00 	movzx	eax, byte ptr [rip + 0x22edf] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff80008521: 3c 02                	cmp	al, 0x2
ffffffff80008523: 0f 85 d2 00 00 00    	jne	0xffffffff800085fb <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x24b>
ffffffff80008529: 48 be 00 00 00 00 00 80 00 00	movabs	rsi, 0x800000000000
ffffffff80008533: 0f b7 05 ba 2e 02 00 	movzx	eax, word ptr [rip + 0x22eba] # 0xffffffff8002b3f4 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x54>
ffffffff8000853a: c1 e3 10             	shl	ebx, 0x10
ffffffff8000853d: 09 c3                	or	ebx, eax
ffffffff8000853f: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80008544: 0f 32                	rdmsr
ffffffff80008546: b9 80 00 00 c0       	mov	ecx, 0xc0000080
ffffffff8000854b: 0f 32                	rdmsr
ffffffff8000854d: 83 c8 01             	or	eax, 0x1
ffffffff80008550: 0f 30                	wrmsr
ffffffff80008552: 48 c7 c2 9c 9b 00 80 	mov	rdx, -0x7fff6464
ffffffff80008559: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8000855d: b9 82 00 00 c0       	mov	ecx, 0xc0000082
ffffffff80008562: 48 c7 c0 9c 9b 00 80 	mov	rax, -0x7fff6464
ffffffff80008569: 0f 30                	wrmsr
ffffffff8000856b: b9 84 00 00 c0       	mov	ecx, 0xc0000084
ffffffff80008570: b8 00 02 00 00       	mov	eax, 0x200
ffffffff80008575: 31 d2                	xor	edx, edx
ffffffff80008577: 0f 30                	wrmsr
ffffffff80008579: b9 81 00 00 c0       	mov	ecx, 0xc0000081
ffffffff8000857e: 31 c0                	xor	eax, eax
ffffffff80008580: 89 da                	mov	edx, ebx
ffffffff80008582: 0f 30                	wrmsr
ffffffff80008584: b9 02 01 00 c0       	mov	ecx, 0xc0000102
ffffffff80008589: 0f 32                	rdmsr
ffffffff8000858b: 48 89 d1             	mov	rcx, rdx
ffffffff8000858e: 48 c1 e1 20          	shl	rcx, 0x20
ffffffff80008592: 48 01 f1             	add	rcx, rsi
ffffffff80008595: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff80008599: 75 71                	jne	0xffffffff8000860c <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x25c>
ffffffff8000859b: 48 bf 00 00 00 00 00 00 01 00	movabs	rdi, 0x1000000000000
ffffffff800085a5: b9 02 01 00 c0       	mov	ecx, 0xc0000102
ffffffff800085aa: 0f 30                	wrmsr
ffffffff800085ac: b9 01 01 00 c0       	mov	ecx, 0xc0000101
ffffffff800085b1: 0f 32                	rdmsr
ffffffff800085b3: 48 89 d1             	mov	rcx, rdx
ffffffff800085b6: 48 c1 e1 20          	shl	rcx, 0x20
ffffffff800085ba: 48 01 f1             	add	rcx, rsi
ffffffff800085bd: 48 39 f9             	cmp	rcx, rdi
ffffffff800085c0: 73 4a                	jae	0xffffffff8000860c <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x25c>
ffffffff800085c2: b9 01 01 00 c0       	mov	ecx, 0xc0000101
ffffffff800085c7: 0f 30                	wrmsr
ffffffff800085c9: b0 07                	mov	al, 0x7
ffffffff800085cb: 48 83 c4 20          	add	rsp, 0x20
ffffffff800085cf: 5b                   	pop	rbx
ffffffff800085d0: c3                   	ret
ffffffff800085d1: 31 c0                	xor	eax, eax
ffffffff800085d3: 48 83 c4 20          	add	rsp, 0x20
ffffffff800085d7: 5b                   	pop	rbx
ffffffff800085d8: c3                   	ret
ffffffff800085d9: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff800085e0: e8 bb 69 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff800085e5: 0f b7 1d 0c 2e 02 00 	movzx	ebx, word ptr [rip + 0x22e0c] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff800085ec: 0f b6 05 0d 2e 02 00 	movzx	eax, byte ptr [rip + 0x22e0d] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff800085f3: 3c 02                	cmp	al, 0x2
ffffffff800085f5: 0f 84 2e ff ff ff    	je	0xffffffff80008529 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x179>
ffffffff800085fb: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff80008602: e8 99 69 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff80008607: e9 1d ff ff ff       	jmp	0xffffffff80008529 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x179>
ffffffff8000860c: be 36 00 00 00       	mov	esi, 0x36
ffffffff80008611: 48 c7 c7 58 2a 02 80 	mov	rdi, -0x7ffdd5a8
ffffffff80008618: 48 c7 c2 f0 2a 02 80 	mov	rdx, -0x7ffdd510
ffffffff8000861f: e8 cc 8a 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80008624: 48 c7 c7 f0 2c 02 80 	mov	rdi, -0x7ffdd310
ffffffff8000862b: e8 30 77 01 00       	call	0xffffffff8001fd60 <core::panicking::panic_const::panic_const_div_by_zero::h64ab67691243fe14>

ffffffff80008630 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9>:
ffffffff80008630: 53                   	push	rbx
ffffffff80008631: 48 83 ec 20          	sub	rsp, 0x20
ffffffff80008635: 8b 1d d9 2b 02 00    	mov	ebx, dword ptr [rip + 0x22bd9] # 0xffffffff8002b214 <taos::interrupts::x2apic::CALIBRATED_TIMER_COUNT::h692544a125c19776.0>
ffffffff8000863b: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80008640: e8 6b 41 01 00       	call	0xffffffff8001c7b0 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>
ffffffff80008645: 83 7c 24 18 00       	cmp	dword ptr [rsp + 0x18], 0x0
ffffffff8000864a: 0f 84 71 01 00 00    	je	0xffffffff800087c1 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x191>
ffffffff80008650: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80008655: 31 c9                	xor	ecx, ecx
ffffffff80008657: 48 89 de             	mov	rsi, rbx
ffffffff8000865a: 0f a2                	cpuid
ffffffff8000865c: 48 87 f3             	xchg	rsi, rbx
ffffffff8000865f: 83 7c 24 08 03       	cmp	dword ptr [rsp + 0x8], 0x3
ffffffff80008664: 0f 84 57 01 00 00    	je	0xffffffff800087c1 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x191>
ffffffff8000866a: 81 e1 00 00 20 00    	and	ecx, 0x200000
ffffffff80008670: 0f 84 4b 01 00 00    	je	0xffffffff800087c1 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x191>
ffffffff80008676: b9 1b 00 00 00       	mov	ecx, 0x1b
ffffffff8000867b: 0f 32                	rdmsr
ffffffff8000867d: 0d 00 0c 00 00       	or	eax, 0xc00
ffffffff80008682: 0f 30                	wrmsr
ffffffff80008684: 0f 32                	rdmsr
ffffffff80008686: 89 c1                	mov	ecx, eax
ffffffff80008688: f7 d1                	not	ecx
ffffffff8000868a: b0 02                	mov	al, 0x2
ffffffff8000868c: f7 c1 00 0c 00 00    	test	ecx, 0xc00
ffffffff80008692: 0f 85 23 01 00 00    	jne	0xffffffff800087bb <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x18b>
ffffffff80008698: b9 0f 08 00 00       	mov	ecx, 0x80f
ffffffff8000869d: b8 ff 01 00 00       	mov	eax, 0x1ff
ffffffff800086a2: 31 d2                	xor	edx, edx
ffffffff800086a4: 0f 30                	wrmsr
ffffffff800086a6: b9 08 08 00 00       	mov	ecx, 0x808
ffffffff800086ab: 31 c0                	xor	eax, eax
ffffffff800086ad: 31 d2                	xor	edx, edx
ffffffff800086af: 0f 30                	wrmsr
ffffffff800086b1: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff800086b6: 0f 32                	rdmsr
ffffffff800086b8: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff800086bc: 89 c1                	mov	ecx, eax
ffffffff800086be: 48 09 d1             	or	rcx, rdx
ffffffff800086c1: b0 06                	mov	al, 0x6
ffffffff800086c3: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff800086c7: 0f 87 ee 00 00 00    	ja	0xffffffff800087bb <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x18b>
ffffffff800086cd: b9 32 08 00 00       	mov	ecx, 0x832
ffffffff800086d2: b8 20 00 02 00       	mov	eax, 0x20020
ffffffff800086d7: 31 d2                	xor	edx, edx
ffffffff800086d9: 0f 30                	wrmsr
ffffffff800086db: b9 3e 08 00 00       	mov	ecx, 0x83e
ffffffff800086e0: b8 0b 00 00 00       	mov	eax, 0xb
ffffffff800086e5: 31 d2                	xor	edx, edx
ffffffff800086e7: 0f 30                	wrmsr
ffffffff800086e9: b9 38 08 00 00       	mov	ecx, 0x838
ffffffff800086ee: 89 d8                	mov	eax, ebx
ffffffff800086f0: 31 d2                	xor	edx, edx
ffffffff800086f2: 0f 30                	wrmsr
ffffffff800086f4: 0f b6 05 05 2d 02 00 	movzx	eax, byte ptr [rip + 0x22d05] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff800086fb: 3c 02                	cmp	al, 0x2
ffffffff800086fd: 0f 85 c6 00 00 00    	jne	0xffffffff800087c9 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x199>
ffffffff80008703: 0f b7 1d ee 2c 02 00 	movzx	ebx, word ptr [rip + 0x22cee] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff8000870a: 0f b6 05 ef 2c 02 00 	movzx	eax, byte ptr [rip + 0x22cef] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff80008711: 3c 02                	cmp	al, 0x2
ffffffff80008713: 0f 85 d2 00 00 00    	jne	0xffffffff800087eb <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x1bb>
ffffffff80008719: 48 be 00 00 00 00 00 80 00 00	movabs	rsi, 0x800000000000
ffffffff80008723: 0f b7 05 ca 2c 02 00 	movzx	eax, word ptr [rip + 0x22cca] # 0xffffffff8002b3f4 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x54>
ffffffff8000872a: c1 e3 10             	shl	ebx, 0x10
ffffffff8000872d: 09 c3                	or	ebx, eax
ffffffff8000872f: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80008734: 0f 32                	rdmsr
ffffffff80008736: b9 80 00 00 c0       	mov	ecx, 0xc0000080
ffffffff8000873b: 0f 32                	rdmsr
ffffffff8000873d: 83 c8 01             	or	eax, 0x1
ffffffff80008740: 0f 30                	wrmsr
ffffffff80008742: 48 c7 c2 9c 9b 00 80 	mov	rdx, -0x7fff6464
ffffffff80008749: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8000874d: b9 82 00 00 c0       	mov	ecx, 0xc0000082
ffffffff80008752: 48 c7 c0 9c 9b 00 80 	mov	rax, -0x7fff6464
ffffffff80008759: 0f 30                	wrmsr
ffffffff8000875b: b9 84 00 00 c0       	mov	ecx, 0xc0000084
ffffffff80008760: b8 00 02 00 00       	mov	eax, 0x200
ffffffff80008765: 31 d2                	xor	edx, edx
ffffffff80008767: 0f 30                	wrmsr
ffffffff80008769: b9 81 00 00 c0       	mov	ecx, 0xc0000081
ffffffff8000876e: 31 c0                	xor	eax, eax
ffffffff80008770: 89 da                	mov	edx, ebx
ffffffff80008772: 0f 30                	wrmsr
ffffffff80008774: b9 02 01 00 c0       	mov	ecx, 0xc0000102
ffffffff80008779: 0f 32                	rdmsr
ffffffff8000877b: 48 89 d1             	mov	rcx, rdx
ffffffff8000877e: 48 c1 e1 20          	shl	rcx, 0x20
ffffffff80008782: 48 01 f1             	add	rcx, rsi
ffffffff80008785: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff80008789: 75 71                	jne	0xffffffff800087fc <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x1cc>
ffffffff8000878b: 48 bf 00 00 00 00 00 00 01 00	movabs	rdi, 0x1000000000000
ffffffff80008795: b9 02 01 00 c0       	mov	ecx, 0xc0000102
ffffffff8000879a: 0f 30                	wrmsr
ffffffff8000879c: b9 01 01 00 c0       	mov	ecx, 0xc0000101
ffffffff800087a1: 0f 32                	rdmsr
ffffffff800087a3: 48 89 d1             	mov	rcx, rdx
ffffffff800087a6: 48 c1 e1 20          	shl	rcx, 0x20
ffffffff800087aa: 48 01 f1             	add	rcx, rsi
ffffffff800087ad: 48 39 f9             	cmp	rcx, rdi
ffffffff800087b0: 73 4a                	jae	0xffffffff800087fc <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0x1cc>
ffffffff800087b2: b9 01 01 00 c0       	mov	ecx, 0xc0000101
ffffffff800087b7: 0f 30                	wrmsr
ffffffff800087b9: b0 07                	mov	al, 0x7
ffffffff800087bb: 48 83 c4 20          	add	rsp, 0x20
ffffffff800087bf: 5b                   	pop	rbx
ffffffff800087c0: c3                   	ret
ffffffff800087c1: 31 c0                	xor	eax, eax
ffffffff800087c3: 48 83 c4 20          	add	rsp, 0x20
ffffffff800087c7: 5b                   	pop	rbx
ffffffff800087c8: c3                   	ret
ffffffff800087c9: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff800087d0: e8 cb 67 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff800087d5: 0f b7 1d 1c 2c 02 00 	movzx	ebx, word ptr [rip + 0x22c1c] # 0xffffffff8002b3f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x58>
ffffffff800087dc: 0f b6 05 1d 2c 02 00 	movzx	eax, byte ptr [rip + 0x22c1d] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff800087e3: 3c 02                	cmp	al, 0x2
ffffffff800087e5: 0f 84 2e ff ff ff    	je	0xffffffff80008719 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xe9>
ffffffff800087eb: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff800087f2: e8 a9 67 00 00       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff800087f7: e9 1d ff ff ff       	jmp	0xffffffff80008719 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xe9>
ffffffff800087fc: be 36 00 00 00       	mov	esi, 0x36
ffffffff80008801: 48 c7 c7 58 2a 02 80 	mov	rdi, -0x7ffdd5a8
ffffffff80008808: 48 c7 c2 f0 2a 02 80 	mov	rdx, -0x7ffdd510
ffffffff8000880f: e8 dc 88 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80008814: cc                   	int3
ffffffff80008815: cc                   	int3
ffffffff80008816: cc                   	int3
ffffffff80008817: cc                   	int3
ffffffff80008818: cc                   	int3
ffffffff80008819: cc                   	int3
ffffffff8000881a: cc                   	int3
ffffffff8000881b: cc                   	int3
ffffffff8000881c: cc                   	int3
ffffffff8000881d: cc                   	int3
ffffffff8000881e: cc                   	int3
ffffffff8000881f: cc                   	int3

ffffffff80008820 <<taos::logging::Logger as log::Log>::enabled::h3d1632a01728b17f>:
ffffffff80008820: 48 8b 05 01 3c 03 00 	mov	rax, qword ptr [rip + 0x33c01] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80008827: 48 39 06             	cmp	qword ptr [rsi], rax
ffffffff8000882a: 0f 96 c0             	setbe	al
ffffffff8000882d: c3                   	ret
ffffffff8000882e: cc                   	int3
ffffffff8000882f: cc                   	int3

ffffffff80008830 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566>:
ffffffff80008830: 53                   	push	rbx
ffffffff80008831: 48 83 ec 70          	sub	rsp, 0x70
ffffffff80008835: 48 8b 4e 30          	mov	rcx, qword ptr [rsi + 0x30]
ffffffff80008839: 48 8b 05 e8 3b 03 00 	mov	rax, qword ptr [rip + 0x33be8] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80008840: 48 39 c1             	cmp	rcx, rax
ffffffff80008843: 0f 87 dc 00 00 00    	ja	0xffffffff80008925 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xf5>
ffffffff80008849: 48 89 fb             	mov	rbx, rdi
ffffffff8000884c: b2 01                	mov	dl, 0x1
ffffffff8000884e: 66 90                	nop
ffffffff80008850: 31 c0                	xor	eax, eax
ffffffff80008852: f0                   	lock
ffffffff80008853: 0f b0 13             	cmpxchg	byte ptr [rbx], dl
ffffffff80008856: 75 0a                	jne	0xffffffff80008862 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x32>
ffffffff80008858: eb 11                	jmp	0xffffffff8000886b <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x3b>
ffffffff8000885a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80008860: f3 90                	pause
ffffffff80008862: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff80008865: 84 c0                	test	al, al
ffffffff80008867: 75 f7                	jne	0xffffffff80008860 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x30>
ffffffff80008869: eb e5                	jmp	0xffffffff80008850 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x20>
ffffffff8000886b: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80008870: 48 83 c6 50          	add	rsi, 0x50
ffffffff80008874: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff80008879: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8000887e: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80008883: 48 c7 44 24 28 b0 c5 01 80   	mov	qword ptr [rsp + 0x28], -0x7ffe3a50
ffffffff8000888c: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80008891: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80008896: 48 c7 44 24 38 d0 9d 00 80   	mov	qword ptr [rsp + 0x38], -0x7fff6230
ffffffff8000889f: 48 c7 44 24 40 10 2d 02 80   	mov	qword ptr [rsp + 0x40], -0x7ffdd2f0
ffffffff800088a8: 48 c7 44 24 48 03 00 00 00   	mov	qword ptr [rsp + 0x48], 0x3
ffffffff800088b1: 48 c7 44 24 60 00 00 00 00   	mov	qword ptr [rsp + 0x60], 0x0
ffffffff800088ba: 48 8d 44 24 20       	lea	rax, [rsp + 0x20]
ffffffff800088bf: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff800088c4: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff800088cd: 0f b6 05 4a 29 02 00 	movzx	eax, byte ptr [rip + 0x2294a] # 0xffffffff8002b21e <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071+0x4>
ffffffff800088d4: 3c 02                	cmp	al, 0x2
ffffffff800088d6: 75 53                	jne	0xffffffff8000892b <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xfb>
ffffffff800088d8: b1 01                	mov	cl, 0x1
ffffffff800088da: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800088e0: 31 c0                	xor	eax, eax
ffffffff800088e2: f0                   	lock
ffffffff800088e3: 0f b0 0d 30 29 02 00 	cmpxchg	byte ptr [rip + 0x22930], cl # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff800088ea: 75 06                	jne	0xffffffff800088f2 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xc2>
ffffffff800088ec: eb 11                	jmp	0xffffffff800088ff <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xcf>
ffffffff800088ee: 66 90                	nop
ffffffff800088f0: f3 90                	pause
ffffffff800088f2: 0f b6 05 21 29 02 00 	movzx	eax, byte ptr [rip + 0x22921] # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff800088f9: 84 c0                	test	al, al
ffffffff800088fb: 75 f3                	jne	0xffffffff800088f0 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xc0>
ffffffff800088fd: eb e1                	jmp	0xffffffff800088e0 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xb0>
ffffffff800088ff: 48 8d 54 24 40       	lea	rdx, [rsp + 0x40]
ffffffff80008904: 48 c7 c7 1c b2 02 80 	mov	rdi, -0x7ffd4de4
ffffffff8000890b: 48 c7 c6 40 2b 02 80 	mov	rsi, -0x7ffdd4c0
ffffffff80008912: e8 b9 58 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80008917: 84 c0                	test	al, al
ffffffff80008919: 75 1e                	jne	0xffffffff80008939 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x109>
ffffffff8000891b: c6 05 f8 28 02 00 00 	mov	byte ptr [rip + 0x228f8], 0x0 # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008922: c6 03 00             	mov	byte ptr [rbx], 0x0
ffffffff80008925: 48 83 c4 70          	add	rsp, 0x70
ffffffff80008929: 5b                   	pop	rbx
ffffffff8000892a: c3                   	ret
ffffffff8000892b: 48 c7 c7 1a b2 02 80 	mov	rdi, -0x7ffd4de6
ffffffff80008932: e8 19 69 00 00       	call	0xffffffff8000f250 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910>
ffffffff80008937: eb 9f                	jmp	0xffffffff800088d8 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xa8>
ffffffff80008939: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff8000893e: be 19 00 00 00       	mov	esi, 0x19
ffffffff80008943: 48 c7 c7 90 2c 02 80 	mov	rdi, -0x7ffdd370
ffffffff8000894a: 48 c7 c1 70 2c 02 80 	mov	rcx, -0x7ffdd390
ffffffff80008951: 49 c7 c0 c0 2c 02 80 	mov	r8, -0x7ffdd340
ffffffff80008958: e8 03 82 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000895d: cc                   	int3
ffffffff8000895e: cc                   	int3
ffffffff8000895f: cc                   	int3

ffffffff80008960 <<taos::logging::Logger as log::Log>::flush::hdc342436406cf131.llvm.4796390557109910071>:
ffffffff80008960: c3                   	ret
ffffffff80008961: cc                   	int3
ffffffff80008962: cc                   	int3
ffffffff80008963: cc                   	int3
ffffffff80008964: cc                   	int3
ffffffff80008965: cc                   	int3
ffffffff80008966: cc                   	int3
ffffffff80008967: cc                   	int3
ffffffff80008968: cc                   	int3
ffffffff80008969: cc                   	int3
ffffffff8000896a: cc                   	int3
ffffffff8000896b: cc                   	int3
ffffffff8000896c: cc                   	int3
ffffffff8000896d: cc                   	int3
ffffffff8000896e: cc                   	int3
ffffffff8000896f: cc                   	int3

ffffffff80008970 <taos::memory::heap::init_heap::hd4797709bd4047f7>:
ffffffff80008970: 55                   	push	rbp
ffffffff80008971: 41 57                	push	r15
ffffffff80008973: 41 56                	push	r14
ffffffff80008975: 41 55                	push	r13
ffffffff80008977: 41 54                	push	r12
ffffffff80008979: 53                   	push	rbx
ffffffff8000897a: 48 83 ec 68          	sub	rsp, 0x68
ffffffff8000897e: 48 89 7c 24 48       	mov	qword ptr [rsp + 0x48], rdi
ffffffff80008983: 48 bf 00 00 00 00 00 81 ff ff	movabs	rdi, -0x7f0000000000
ffffffff8000898d: 49 be 00 00 00 00 00 00 01 00	movabs	r14, 0x1000000000000
ffffffff80008997: 49 bf 00 f0 ff ff ff 7f 00 00	movabs	r15, 0x7ffffffff000
ffffffff800089a1: 4c 8d a7 00 f0 4f 00 	lea	r12, [rdi + 0x4ff000]
ffffffff800089a8: 40 b5 01             	mov	bpl, 0x1
ffffffff800089ab: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800089b0: 48 81 ff 00 f0 ff ff 	cmp	rdi, -0x1000
ffffffff800089b7: 73 47                	jae	0xffffffff80008a00 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x90>
ffffffff800089b9: 49 8d 04 3f          	lea	rax, [r15 + rdi]
ffffffff800089bd: 48 05 00 20 00 00    	add	rax, 0x2000
ffffffff800089c3: 4c 39 f0             	cmp	rax, r14
ffffffff800089c6: 0f 83 de 04 00 00    	jae	0xffffffff80008eaa <taos::memory::heap::init_heap::hd4797709bd4047f7+0x53a>
ffffffff800089cc: 49 89 fd             	mov	r13, rdi
ffffffff800089cf: 49 c1 e5 10          	shl	r13, 0x10
ffffffff800089d3: 49 81 e5 00 00 00 f0 	and	r13, -0x10000000
ffffffff800089da: 49 81 c5 00 00 00 10 	add	r13, 0x10000000
ffffffff800089e1: 49 c1 fd 10          	sar	r13, 0x10
ffffffff800089e5: 0f b6 05 ac 28 02 00 	movzx	eax, byte ptr [rip + 0x228ac] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff800089ec: 3c 02                	cmp	al, 0x2
ffffffff800089ee: 74 7d                	je	0xffffffff80008a6d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff800089f0: eb 4c                	jmp	0xffffffff80008a3e <taos::memory::heap::init_heap::hd4797709bd4047f7+0xce>
ffffffff800089f2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80008a00: 49 81 fc 00 10 00 00 	cmp	r12, 0x1000
ffffffff80008a07: 0f 82 b5 04 00 00    	jb	0xffffffff80008ec2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x552>
ffffffff80008a0d: 4b 8d 04 3c          	lea	rax, [r12 + r15]
ffffffff80008a11: 4c 39 f0             	cmp	rax, r14
ffffffff80008a14: 0f 83 90 04 00 00    	jae	0xffffffff80008eaa <taos::memory::heap::init_heap::hd4797709bd4047f7+0x53a>
ffffffff80008a1a: 49 c1 e4 10          	shl	r12, 0x10
ffffffff80008a1e: 49 81 c4 00 00 00 f0 	add	r12, -0x10000000
ffffffff80008a25: 49 c1 fc 10          	sar	r12, 0x10
ffffffff80008a29: 49 81 e4 00 f0 ff ff 	and	r12, -0x1000
ffffffff80008a30: 49 89 fd             	mov	r13, rdi
ffffffff80008a33: 0f b6 05 5e 28 02 00 	movzx	eax, byte ptr [rip + 0x2285e] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff80008a3a: 3c 02                	cmp	al, 0x2
ffffffff80008a3c: 74 2f                	je	0xffffffff80008a6d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff80008a3e: 48 89 fb             	mov	rbx, rdi
ffffffff80008a41: 48 c7 c7 80 b2 02 80 	mov	rdi, -0x7ffd4d80
ffffffff80008a48: e8 03 5d 00 00       	call	0xffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>
ffffffff80008a4d: 48 89 df             	mov	rdi, rbx
ffffffff80008a50: eb 1b                	jmp	0xffffffff80008a6d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff80008a52: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80008a60: f3 90                	pause
ffffffff80008a62: 0f b6 05 17 28 02 00 	movzx	eax, byte ptr [rip + 0x22817] # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80008a69: 84 c0                	test	al, al
ffffffff80008a6b: 75 f3                	jne	0xffffffff80008a60 <taos::memory::heap::init_heap::hd4797709bd4047f7+0xf0>
ffffffff80008a6d: 31 c0                	xor	eax, eax
ffffffff80008a6f: f0                   	lock
ffffffff80008a70: 40 0f b0 2d 08 28 02 00      	cmpxchg	byte ptr [rip + 0x22808], bpl # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80008a78: 75 e8                	jne	0xffffffff80008a62 <taos::memory::heap::init_heap::hd4797709bd4047f7+0xf2>
ffffffff80008a7a: 48 c7 c6 88 b2 02 80 	mov	rsi, -0x7ffd4d78
ffffffff80008a81: 31 d2                	xor	edx, edx
ffffffff80008a83: e8 d8 80 00 00       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff80008a88: c6 05 f1 27 02 00 00 	mov	byte ptr [rip + 0x227f1], 0x0 # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80008a8f: 4c 89 ef             	mov	rdi, r13
ffffffff80008a92: 4d 39 e5             	cmp	r13, r12
ffffffff80008a95: 0f 86 15 ff ff ff    	jbe	0xffffffff800089b0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x40>
ffffffff80008a9b: b1 01                	mov	cl, 0x1
ffffffff80008a9d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80008aa0: 31 c0                	xor	eax, eax
ffffffff80008aa2: f0                   	lock
ffffffff80008aa3: 0f b0 0d 8e 25 02 00 	cmpxchg	byte ptr [rip + 0x2258e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80008aaa: 75 06                	jne	0xffffffff80008ab2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x142>
ffffffff80008aac: eb 11                	jmp	0xffffffff80008abf <taos::memory::heap::init_heap::hd4797709bd4047f7+0x14f>
ffffffff80008aae: 66 90                	nop
ffffffff80008ab0: f3 90                	pause
ffffffff80008ab2: 0f b6 05 7f 25 02 00 	movzx	eax, byte ptr [rip + 0x2257f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80008ab9: 84 c0                	test	al, al
ffffffff80008abb: 75 f3                	jne	0xffffffff80008ab0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x140>
ffffffff80008abd: eb e1                	jmp	0xffffffff80008aa0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x130>
ffffffff80008abf: 48 83 3d 79 25 02 00 00      	cmp	qword ptr [rip + 0x22579], 0x0 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80008ac7: 74 3b                	je	0xffffffff80008b04 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x194>
ffffffff80008ac9: 48 c7 04 24 70 2e 02 80      	mov	qword ptr [rsp], -0x7ffdd190
ffffffff80008ad1: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff80008ada: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80008ae3: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff80008aec: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff80008af5: 48 89 e7             	mov	rdi, rsp
ffffffff80008af8: 48 c7 c6 98 2e 02 80 	mov	rsi, -0x7ffdd168
ffffffff80008aff: e8 6c 85 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80008b04: 48 83 3d 3c 25 02 00 00      	cmp	qword ptr [rip + 0x2253c], 0x0 # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff80008b0c: 0f 84 e0 03 00 00    	je	0xffffffff80008ef2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x582>
ffffffff80008b12: 48 8b 35 4f 25 02 00 	mov	rsi, qword ptr [rip + 0x2254f] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff80008b19: 48 8b 05 30 25 02 00 	mov	rax, qword ptr [rip + 0x22530] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff80008b20: 48 8b 0d 51 25 02 00 	mov	rcx, qword ptr [rip + 0x22551] # 0xffffffff8002b078 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x40>
ffffffff80008b27: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff80008b30: 48 89 4c 24 58       	mov	qword ptr [rsp + 0x58], rcx
ffffffff80008b35: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff80008b3a: 48 89 e7             	mov	rdi, rsp
ffffffff80008b3d: 4c 8d 74 24 50       	lea	r14, [rsp + 0x50]
ffffffff80008b42: 4c 89 f2             	mov	rdx, r14
ffffffff80008b45: e8 b6 07 00 00       	call	0xffffffff80009300 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa>
ffffffff80008b4a: 48 8b 05 ef 24 02 00 	mov	rax, qword ptr [rip + 0x224ef] # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80008b51: 48 83 f8 03          	cmp	rax, 0x3
ffffffff80008b55: 0f 84 f7 01 00 00    	je	0xffffffff80008d52 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3e2>
ffffffff80008b5b: 48 85 c0             	test	rax, rax
ffffffff80008b5e: 0f 84 ee 01 00 00    	je	0xffffffff80008d52 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3e2>
ffffffff80008b64: 83 f8 01             	cmp	eax, 0x1
ffffffff80008b67: 75 46                	jne	0xffffffff80008baf <taos::memory::heap::init_heap::hd4797709bd4047f7+0x23f>
ffffffff80008b69: 48 8b 0d e0 24 02 00 	mov	rcx, qword ptr [rip + 0x224e0] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff80008b70: 48 85 c9             	test	rcx, rcx
ffffffff80008b73: 0f 84 99 00 00 00    	je	0xffffffff80008c12 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2a2>
ffffffff80008b79: 48 8b 35 c8 24 02 00 	mov	rsi, qword ptr [rip + 0x224c8] # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff80008b80: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff80008b84: b2 01                	mov	dl, 0x1
ffffffff80008b86: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80008b90: 31 c0                	xor	eax, eax
ffffffff80008b92: f0                   	lock
ffffffff80008b93: 0f b0 15 66 24 02 00 	cmpxchg	byte ptr [rip + 0x22466], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008b9a: 75 06                	jne	0xffffffff80008ba2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x232>
ffffffff80008b9c: eb 5c                	jmp	0xffffffff80008bfa <taos::memory::heap::init_heap::hd4797709bd4047f7+0x28a>
ffffffff80008b9e: 66 90                	nop
ffffffff80008ba0: f3 90                	pause
ffffffff80008ba2: 0f b6 05 57 24 02 00 	movzx	eax, byte ptr [rip + 0x22457] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008ba9: 84 c0                	test	al, al
ffffffff80008bab: 75 f3                	jne	0xffffffff80008ba0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x230>
ffffffff80008bad: eb e1                	jmp	0xffffffff80008b90 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x220>
ffffffff80008baf: 48 8b 0d b2 24 02 00 	mov	rcx, qword ptr [rip + 0x224b2] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff80008bb6: 48 85 c9             	test	rcx, rcx
ffffffff80008bb9: 0f 84 b2 00 00 00    	je	0xffffffff80008c71 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x301>
ffffffff80008bbf: 48 8b 35 9a 24 02 00 	mov	rsi, qword ptr [rip + 0x2249a] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff80008bc6: 48 c1 e1 02          	shl	rcx, 0x2
ffffffff80008bca: b2 01                	mov	dl, 0x1
ffffffff80008bcc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80008bd0: 31 c0                	xor	eax, eax
ffffffff80008bd2: f0                   	lock
ffffffff80008bd3: 0f b0 15 26 24 02 00 	cmpxchg	byte ptr [rip + 0x22426], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008bda: 74 7d                	je	0xffffffff80008c59 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2e9>
ffffffff80008bdc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80008be0: 0f b6 05 19 24 02 00 	movzx	eax, byte ptr [rip + 0x22419] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008be7: 84 c0                	test	al, al
ffffffff80008be9: 74 e5                	je	0xffffffff80008bd0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x260>
ffffffff80008beb: f3 90                	pause
ffffffff80008bed: 0f b6 05 0c 24 02 00 	movzx	eax, byte ptr [rip + 0x2240c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008bf4: 84 c0                	test	al, al
ffffffff80008bf6: 75 f3                	jne	0xffffffff80008beb <taos::memory::heap::init_heap::hd4797709bd4047f7+0x27b>
ffffffff80008bf8: eb d6                	jmp	0xffffffff80008bd0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x260>
ffffffff80008bfa: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80008bff: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008c06: e8 e5 3b 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008c0b: c6 05 ee 23 02 00 00 	mov	byte ptr [rip + 0x223ee], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008c12: 48 8b 0d 47 24 02 00 	mov	rcx, qword ptr [rip + 0x22447] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff80008c19: 48 85 c9             	test	rcx, rcx
ffffffff80008c1c: 0f 84 30 01 00 00    	je	0xffffffff80008d52 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3e2>
ffffffff80008c22: 48 8b 35 2f 24 02 00 	mov	rsi, qword ptr [rip + 0x2242f] # 0xffffffff8002b058 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x20>
ffffffff80008c29: 48 01 c9             	add	rcx, rcx
ffffffff80008c2c: b2 01                	mov	dl, 0x1
ffffffff80008c2e: 66 90                	nop
ffffffff80008c30: 31 c0                	xor	eax, eax
ffffffff80008c32: f0                   	lock
ffffffff80008c33: 0f b0 15 c6 23 02 00 	cmpxchg	byte ptr [rip + 0x223c6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008c3a: 75 06                	jne	0xffffffff80008c42 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2d2>
ffffffff80008c3c: eb 11                	jmp	0xffffffff80008c4f <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2df>
ffffffff80008c3e: 66 90                	nop
ffffffff80008c40: f3 90                	pause
ffffffff80008c42: 0f b6 05 b7 23 02 00 	movzx	eax, byte ptr [rip + 0x223b7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008c49: 84 c0                	test	al, al
ffffffff80008c4b: 75 f3                	jne	0xffffffff80008c40 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2d0>
ffffffff80008c4d: eb e1                	jmp	0xffffffff80008c30 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2c0>
ffffffff80008c4f: ba 02 00 00 00       	mov	edx, 0x2
ffffffff80008c54: e9 e6 00 00 00       	jmp	0xffffffff80008d3f <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3cf>
ffffffff80008c59: ba 02 00 00 00       	mov	edx, 0x2
ffffffff80008c5e: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008c65: e8 86 3b 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008c6a: c6 05 8f 23 02 00 00 	mov	byte ptr [rip + 0x2238f], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008c71: 4c 8b 3d e0 23 02 00 	mov	r15, qword ptr [rip + 0x223e0] # 0xffffffff8002b058 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x20>
ffffffff80008c78: 4d 85 ff             	test	r15, r15
ffffffff80008c7b: 74 72                	je	0xffffffff80008cef <taos::memory::heap::init_heap::hd4797709bd4047f7+0x37f>
ffffffff80008c7d: 4c 8b 25 cc 23 02 00 	mov	r12, qword ptr [rip + 0x223cc] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff80008c84: 40 b5 01             	mov	bpl, 0x1
ffffffff80008c87: 45 31 ed             	xor	r13d, r13d
ffffffff80008c8a: eb 28                	jmp	0xffffffff80008cb4 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x344>
ffffffff80008c8c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80008c90: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff80008c94: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80008c99: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008ca0: e8 4b 3b 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008ca5: c6 05 54 23 02 00 00 	mov	byte ptr [rip + 0x22354], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008cac: 49 ff c5             	inc	r13
ffffffff80008caf: 4d 39 fd             	cmp	r13, r15
ffffffff80008cb2: 74 3b                	je	0xffffffff80008cef <taos::memory::heap::init_heap::hd4797709bd4047f7+0x37f>
ffffffff80008cb4: 4a 8d 04 6d 00 00 00 00      	lea	rax, [2*r13]
ffffffff80008cbc: 4c 01 e8             	add	rax, r13
ffffffff80008cbf: 49 8b 0c c4          	mov	rcx, qword ptr [r12 + 8*rax]
ffffffff80008cc3: 48 85 c9             	test	rcx, rcx
ffffffff80008cc6: 74 e4                	je	0xffffffff80008cac <taos::memory::heap::init_heap::hd4797709bd4047f7+0x33c>
ffffffff80008cc8: 49 8d 04 c4          	lea	rax, [r12 + 8*rax]
ffffffff80008ccc: 48 8b 70 08          	mov	rsi, qword ptr [rax + 0x8]
ffffffff80008cd0: 31 c0                	xor	eax, eax
ffffffff80008cd2: f0                   	lock
ffffffff80008cd3: 40 0f b0 2d 25 23 02 00      	cmpxchg	byte ptr [rip + 0x22325], bpl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008cdb: 75 05                	jne	0xffffffff80008ce2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x372>
ffffffff80008cdd: eb b1                	jmp	0xffffffff80008c90 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x320>
ffffffff80008cdf: 90                   	nop
ffffffff80008ce0: f3 90                	pause
ffffffff80008ce2: 0f b6 05 17 23 02 00 	movzx	eax, byte ptr [rip + 0x22317] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008ce9: 84 c0                	test	al, al
ffffffff80008ceb: 75 f3                	jne	0xffffffff80008ce0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x370>
ffffffff80008ced: eb e1                	jmp	0xffffffff80008cd0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x360>
ffffffff80008cef: 48 8b 05 52 23 02 00 	mov	rax, qword ptr [rip + 0x22352] # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff80008cf6: 48 85 c0             	test	rax, rax
ffffffff80008cf9: 74 57                	je	0xffffffff80008d52 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3e2>
ffffffff80008cfb: 48 8b 35 4e 23 02 00 	mov	rsi, qword ptr [rip + 0x2234e] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff80008d02: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80008d06: 48 8d 0c 40          	lea	rcx, [rax + 2*rax]
ffffffff80008d0a: b2 01                	mov	dl, 0x1
ffffffff80008d0c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80008d10: 31 c0                	xor	eax, eax
ffffffff80008d12: f0                   	lock
ffffffff80008d13: 0f b0 15 e6 22 02 00 	cmpxchg	byte ptr [rip + 0x222e6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008d1a: 74 1e                	je	0xffffffff80008d3a <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3ca>
ffffffff80008d1c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80008d20: 0f b6 05 d9 22 02 00 	movzx	eax, byte ptr [rip + 0x222d9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008d27: 84 c0                	test	al, al
ffffffff80008d29: 74 e5                	je	0xffffffff80008d10 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3a0>
ffffffff80008d2b: f3 90                	pause
ffffffff80008d2d: 0f b6 05 cc 22 02 00 	movzx	eax, byte ptr [rip + 0x222cc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008d34: 84 c0                	test	al, al
ffffffff80008d36: 75 f3                	jne	0xffffffff80008d2b <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3bb>
ffffffff80008d38: eb d6                	jmp	0xffffffff80008d10 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x3a0>
ffffffff80008d3a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80008d3f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008d46: e8 a5 3a 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008d4b: c6 05 ae 22 02 00 00 	mov	byte ptr [rip + 0x222ae], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008d52: 48 c7 05 e3 22 02 00 02 00 00 00     	mov	qword ptr [rip + 0x222e3], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80008d5d: 48 89 e6             	mov	rsi, rsp
ffffffff80008d60: b9 09 00 00 00       	mov	ecx, 0x9
ffffffff80008d65: 48 c7 c7 48 b0 02 80 	mov	rdi, -0x7ffd4fb8
ffffffff80008d6c: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80008d6f: 48 c7 04 24 28 2e 02 80      	mov	qword ptr [rsp], -0x7ffdd1d8
ffffffff80008d77: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff80008d80: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80008d89: 4c 89 74 24 10       	mov	qword ptr [rsp + 0x10], r14
ffffffff80008d8e: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff80008d97: 0f b6 05 80 24 02 00 	movzx	eax, byte ptr [rip + 0x22480] # 0xffffffff8002b21e <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071+0x4>
ffffffff80008d9e: 3c 02                	cmp	al, 0x2
ffffffff80008da0: 0f 85 e5 00 00 00    	jne	0xffffffff80008e8b <taos::memory::heap::init_heap::hd4797709bd4047f7+0x51b>
ffffffff80008da6: b1 01                	mov	cl, 0x1
ffffffff80008da8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80008db0: 31 c0                	xor	eax, eax
ffffffff80008db2: f0                   	lock
ffffffff80008db3: 0f b0 0d 60 24 02 00 	cmpxchg	byte ptr [rip + 0x22460], cl # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008dba: 75 06                	jne	0xffffffff80008dc2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x452>
ffffffff80008dbc: eb 11                	jmp	0xffffffff80008dcf <taos::memory::heap::init_heap::hd4797709bd4047f7+0x45f>
ffffffff80008dbe: 66 90                	nop
ffffffff80008dc0: f3 90                	pause
ffffffff80008dc2: 0f b6 05 51 24 02 00 	movzx	eax, byte ptr [rip + 0x22451] # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008dc9: 84 c0                	test	al, al
ffffffff80008dcb: 75 f3                	jne	0xffffffff80008dc0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x450>
ffffffff80008dcd: eb e1                	jmp	0xffffffff80008db0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x440>
ffffffff80008dcf: 48 89 e2             	mov	rdx, rsp
ffffffff80008dd2: 48 c7 c7 1c b2 02 80 	mov	rdi, -0x7ffd4de4
ffffffff80008dd9: 48 c7 c6 40 2b 02 80 	mov	rsi, -0x7ffdd4c0
ffffffff80008de0: e8 eb 53 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80008de5: 84 c0                	test	al, al
ffffffff80008de7: 0f 85 e1 00 00 00    	jne	0xffffffff80008ece <taos::memory::heap::init_heap::hd4797709bd4047f7+0x55e>
ffffffff80008ded: c6 05 26 24 02 00 00 	mov	byte ptr [rip + 0x22426], 0x0 # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008df4: c6 05 3d 22 02 00 00 	mov	byte ptr [rip + 0x2223d], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80008dfb: 48 c7 04 24 00 2e 02 80      	mov	qword ptr [rsp], -0x7ffdd200
ffffffff80008e03: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff80008e0c: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80008e15: 4c 89 74 24 10       	mov	qword ptr [rsp + 0x10], r14
ffffffff80008e1a: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff80008e23: 0f b6 05 f4 23 02 00 	movzx	eax, byte ptr [rip + 0x223f4] # 0xffffffff8002b21e <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071+0x4>
ffffffff80008e2a: 3c 02                	cmp	al, 0x2
ffffffff80008e2c: 75 6e                	jne	0xffffffff80008e9c <taos::memory::heap::init_heap::hd4797709bd4047f7+0x52c>
ffffffff80008e2e: b1 01                	mov	cl, 0x1
ffffffff80008e30: 31 c0                	xor	eax, eax
ffffffff80008e32: f0                   	lock
ffffffff80008e33: 0f b0 0d e0 23 02 00 	cmpxchg	byte ptr [rip + 0x223e0], cl # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008e3a: 75 06                	jne	0xffffffff80008e42 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x4d2>
ffffffff80008e3c: eb 11                	jmp	0xffffffff80008e4f <taos::memory::heap::init_heap::hd4797709bd4047f7+0x4df>
ffffffff80008e3e: 66 90                	nop
ffffffff80008e40: f3 90                	pause
ffffffff80008e42: 0f b6 05 d1 23 02 00 	movzx	eax, byte ptr [rip + 0x223d1] # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008e49: 84 c0                	test	al, al
ffffffff80008e4b: 75 f3                	jne	0xffffffff80008e40 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x4d0>
ffffffff80008e4d: eb e1                	jmp	0xffffffff80008e30 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x4c0>
ffffffff80008e4f: 48 89 e2             	mov	rdx, rsp
ffffffff80008e52: 48 c7 c7 1c b2 02 80 	mov	rdi, -0x7ffd4de4
ffffffff80008e59: 48 c7 c6 40 2b 02 80 	mov	rsi, -0x7ffdd4c0
ffffffff80008e60: e8 6b 53 01 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80008e65: 84 c0                	test	al, al
ffffffff80008e67: 75 65                	jne	0xffffffff80008ece <taos::memory::heap::init_heap::hd4797709bd4047f7+0x55e>
ffffffff80008e69: c6 05 aa 23 02 00 00 	mov	byte ptr [rip + 0x223aa], 0x0 # 0xffffffff8002b21a <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.4796390557109910071>
ffffffff80008e70: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80008e75: 48 c7 00 03 00 00 00 	mov	qword ptr [rax], 0x3
ffffffff80008e7c: 48 83 c4 68          	add	rsp, 0x68
ffffffff80008e80: 5b                   	pop	rbx
ffffffff80008e81: 41 5c                	pop	r12
ffffffff80008e83: 41 5d                	pop	r13
ffffffff80008e85: 41 5e                	pop	r14
ffffffff80008e87: 41 5f                	pop	r15
ffffffff80008e89: 5d                   	pop	rbp
ffffffff80008e8a: c3                   	ret
ffffffff80008e8b: 48 c7 c7 1a b2 02 80 	mov	rdi, -0x7ffd4de6
ffffffff80008e92: e8 b9 63 00 00       	call	0xffffffff8000f250 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910>
ffffffff80008e97: e9 0a ff ff ff       	jmp	0xffffffff80008da6 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x436>
ffffffff80008e9c: 48 c7 c7 1a b2 02 80 	mov	rdi, -0x7ffd4de6
ffffffff80008ea3: e8 a8 63 00 00       	call	0xffffffff8000f250 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910>
ffffffff80008ea8: eb 84                	jmp	0xffffffff80008e2e <taos::memory::heap::init_heap::hd4797709bd4047f7+0x4be>
ffffffff80008eaa: be 36 00 00 00       	mov	esi, 0x36
ffffffff80008eaf: 48 c7 c7 58 2a 02 80 	mov	rdi, -0x7ffdd5a8
ffffffff80008eb6: 48 c7 c2 f0 2a 02 80 	mov	rdx, -0x7ffdd510
ffffffff80008ebd: e8 2e 82 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80008ec2: 48 c7 c7 70 2b 02 80 	mov	rdi, -0x7ffdd490
ffffffff80008ec9: e8 72 87 01 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80008ece: 48 8d 54 24 50       	lea	rdx, [rsp + 0x50]
ffffffff80008ed3: be 19 00 00 00       	mov	esi, 0x19
ffffffff80008ed8: 48 c7 c7 90 2c 02 80 	mov	rdi, -0x7ffdd370
ffffffff80008edf: 48 c7 c1 70 2c 02 80 	mov	rcx, -0x7ffdd390
ffffffff80008ee6: 49 c7 c0 c0 2c 02 80 	mov	r8, -0x7ffdd340
ffffffff80008eed: e8 6e 7c 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80008ef2: be 17 00 00 00       	mov	esi, 0x17
ffffffff80008ef7: 48 c7 c7 58 7f 02 80 	mov	rdi, -0x7ffd80a8
ffffffff80008efe: 48 c7 c2 70 7f 02 80 	mov	rdx, -0x7ffd8090
ffffffff80008f05: e8 56 87 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80008f0a: cc                   	int3
ffffffff80008f0b: cc                   	int3
ffffffff80008f0c: cc                   	int3
ffffffff80008f0d: cc                   	int3
ffffffff80008f0e: cc                   	int3
ffffffff80008f0f: cc                   	int3

ffffffff80008f10 <__rust_alloc>:
ffffffff80008f10: 50                   	push	rax
ffffffff80008f11: 48 89 fa             	mov	rdx, rdi
ffffffff80008f14: b1 01                	mov	cl, 0x1
ffffffff80008f16: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80008f20: 31 c0                	xor	eax, eax
ffffffff80008f22: f0                   	lock
ffffffff80008f23: 0f b0 0d d6 20 02 00 	cmpxchg	byte ptr [rip + 0x220d6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008f2a: 75 06                	jne	0xffffffff80008f32 <__rust_alloc+0x22>
ffffffff80008f2c: eb 11                	jmp	0xffffffff80008f3f <__rust_alloc+0x2f>
ffffffff80008f2e: 66 90                	nop
ffffffff80008f30: f3 90                	pause
ffffffff80008f32: 0f b6 05 c7 20 02 00 	movzx	eax, byte ptr [rip + 0x220c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008f39: 84 c0                	test	al, al
ffffffff80008f3b: 75 f3                	jne	0xffffffff80008f30 <__rust_alloc+0x20>
ffffffff80008f3d: eb e1                	jmp	0xffffffff80008f20 <__rust_alloc+0x10>
ffffffff80008f3f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008f46: e8 05 3b 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80008f4b: c6 05 ae 20 02 00 00 	mov	byte ptr [rip + 0x220ae], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008f52: 59                   	pop	rcx
ffffffff80008f53: c3                   	ret
ffffffff80008f54: cc                   	int3
ffffffff80008f55: cc                   	int3
ffffffff80008f56: cc                   	int3
ffffffff80008f57: cc                   	int3
ffffffff80008f58: cc                   	int3
ffffffff80008f59: cc                   	int3
ffffffff80008f5a: cc                   	int3
ffffffff80008f5b: cc                   	int3
ffffffff80008f5c: cc                   	int3
ffffffff80008f5d: cc                   	int3
ffffffff80008f5e: cc                   	int3
ffffffff80008f5f: cc                   	int3

ffffffff80008f60 <__rust_dealloc>:
ffffffff80008f60: 50                   	push	rax
ffffffff80008f61: 48 89 f1             	mov	rcx, rsi
ffffffff80008f64: 48 89 fe             	mov	rsi, rdi
ffffffff80008f67: 40 b7 01             	mov	dil, 0x1
ffffffff80008f6a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80008f70: 31 c0                	xor	eax, eax
ffffffff80008f72: f0                   	lock
ffffffff80008f73: 40 0f b0 3d 85 20 02 00      	cmpxchg	byte ptr [rip + 0x22085], dil # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008f7b: 75 05                	jne	0xffffffff80008f82 <__rust_dealloc+0x22>
ffffffff80008f7d: eb 10                	jmp	0xffffffff80008f8f <__rust_dealloc+0x2f>
ffffffff80008f7f: 90                   	nop
ffffffff80008f80: f3 90                	pause
ffffffff80008f82: 0f b6 05 77 20 02 00 	movzx	eax, byte ptr [rip + 0x22077] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008f89: 84 c0                	test	al, al
ffffffff80008f8b: 75 f3                	jne	0xffffffff80008f80 <__rust_dealloc+0x20>
ffffffff80008f8d: eb e1                	jmp	0xffffffff80008f70 <__rust_dealloc+0x10>
ffffffff80008f8f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80008f96: e8 55 38 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008f9b: c6 05 5e 20 02 00 00 	mov	byte ptr [rip + 0x2205e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80008fa2: 58                   	pop	rax
ffffffff80008fa3: c3                   	ret
ffffffff80008fa4: cc                   	int3
ffffffff80008fa5: cc                   	int3
ffffffff80008fa6: cc                   	int3
ffffffff80008fa7: cc                   	int3
ffffffff80008fa8: cc                   	int3
ffffffff80008fa9: cc                   	int3
ffffffff80008faa: cc                   	int3
ffffffff80008fab: cc                   	int3
ffffffff80008fac: cc                   	int3
ffffffff80008fad: cc                   	int3
ffffffff80008fae: cc                   	int3
ffffffff80008faf: cc                   	int3

ffffffff80008fb0 <__rust_realloc>:
ffffffff80008fb0: 49 89 c8             	mov	r8, rcx
ffffffff80008fb3: 48 89 f1             	mov	rcx, rsi
ffffffff80008fb6: 48 89 fe             	mov	rsi, rdi
ffffffff80008fb9: 48 c7 c7 00 b0 02 80 	mov	rdi, -0x7ffd5000
ffffffff80008fc0: e9 eb a4 00 00       	jmp	0xffffffff800134b0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>
ffffffff80008fc5: cc                   	int3
ffffffff80008fc6: cc                   	int3
ffffffff80008fc7: cc                   	int3
ffffffff80008fc8: cc                   	int3
ffffffff80008fc9: cc                   	int3
ffffffff80008fca: cc                   	int3
ffffffff80008fcb: cc                   	int3
ffffffff80008fcc: cc                   	int3
ffffffff80008fcd: cc                   	int3
ffffffff80008fce: cc                   	int3
ffffffff80008fcf: cc                   	int3

ffffffff80008fd0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451>:
ffffffff80008fd0: 55                   	push	rbp
ffffffff80008fd1: 41 57                	push	r15
ffffffff80008fd3: 41 56                	push	r14
ffffffff80008fd5: 41 55                	push	r13
ffffffff80008fd7: 41 54                	push	r12
ffffffff80008fd9: 53                   	push	rbx
ffffffff80008fda: 48 83 ec 78          	sub	rsp, 0x78
ffffffff80008fde: 49 89 f6             	mov	r14, rsi
ffffffff80008fe1: 48 89 fd             	mov	rbp, rdi
ffffffff80008fe4: 48 85 f6             	test	rsi, rsi
ffffffff80008fe7: 74 0a                	je	0xffffffff80008ff3 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x23>
ffffffff80008fe9: 4d 0f bd fe          	bsr	r15, r14
ffffffff80008fed: 49 83 f7 3f          	xor	r15, 0x3f
ffffffff80008ff1: eb 06                	jmp	0xffffffff80008ff9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x29>
ffffffff80008ff3: 41 bf 40 00 00 00    	mov	r15d, 0x40
ffffffff80008ff9: 4e 8d 24 b5 00 00 00 00      	lea	r12, [4*r14]
ffffffff80009001: 45 31 ed             	xor	r13d, r13d
ffffffff80009004: 4c 89 f0             	mov	rax, r14
ffffffff80009007: 48 c1 e8 3e          	shr	rax, 0x3e
ffffffff8000900b: 0f 85 c8 02 00 00    	jne	0xffffffff800092d9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x309>
ffffffff80009011: 48 b8 fe ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffffe
ffffffff8000901b: 49 39 c4             	cmp	r12, rax
ffffffff8000901e: 0f 87 b5 02 00 00    	ja	0xffffffff800092d9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x309>
ffffffff80009024: 4d 85 e4             	test	r12, r12
ffffffff80009027: 48 89 6c 24 38       	mov	qword ptr [rsp + 0x38], rbp
ffffffff8000902c: 0f 84 f9 00 00 00    	je	0xffffffff8000912b <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x15b>
ffffffff80009032: 0f b6 05 a8 21 02 00 	movzx	eax, byte ptr [rip + 0x221a8] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80009039: b1 01                	mov	cl, 0x1
ffffffff8000903b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80009040: 31 c0                	xor	eax, eax
ffffffff80009042: f0                   	lock
ffffffff80009043: 0f b0 0d b6 1f 02 00 	cmpxchg	byte ptr [rip + 0x21fb6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000904a: 74 1e                	je	0xffffffff8000906a <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x9a>
ffffffff8000904c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80009050: 0f b6 05 a9 1f 02 00 	movzx	eax, byte ptr [rip + 0x21fa9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80009057: 84 c0                	test	al, al
ffffffff80009059: 74 e5                	je	0xffffffff80009040 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x70>
ffffffff8000905b: f3 90                	pause
ffffffff8000905d: 0f b6 05 9c 1f 02 00 	movzx	eax, byte ptr [rip + 0x21f9c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80009064: 84 c0                	test	al, al
ffffffff80009066: 75 f3                	jne	0xffffffff8000905b <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x8b>
ffffffff80009068: eb d6                	jmp	0xffffffff80009040 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x70>
ffffffff8000906a: 41 bd 02 00 00 00    	mov	r13d, 0x2
ffffffff80009070: be 02 00 00 00       	mov	esi, 0x2
ffffffff80009075: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000907c: 4c 89 e2             	mov	rdx, r12
ffffffff8000907f: e8 cc 39 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80009084: c6 05 75 1f 02 00 00 	mov	byte ptr [rip + 0x21f75], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000908b: 48 85 c0             	test	rax, rax
ffffffff8000908e: 0f 84 45 02 00 00    	je	0xffffffff800092d9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x309>
ffffffff80009094: 4c 89 74 24 10       	mov	qword ptr [rsp + 0x10], r14
ffffffff80009099: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000909e: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff800090a7: 4d 85 f6             	test	r14, r14
ffffffff800090aa: 0f 84 9b 00 00 00    	je	0xffffffff8000914b <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x17b>
ffffffff800090b0: 4d 89 fd             	mov	r13, r15
ffffffff800090b3: 31 db                	xor	ebx, ebx
ffffffff800090b5: 4c 8d 7c 24 10       	lea	r15, [rsp + 0x10]
ffffffff800090ba: eb 1d                	jmp	0xffffffff800090d9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x109>
ffffffff800090bc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800090c0: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff800090c5: c7 04 98 00 00 00 00 	mov	dword ptr [rax + 4*rbx], 0x0
ffffffff800090cc: 48 ff c3             	inc	rbx
ffffffff800090cf: 48 89 5c 24 20       	mov	qword ptr [rsp + 0x20], rbx
ffffffff800090d4: 49 39 de             	cmp	r14, rbx
ffffffff800090d7: 74 18                	je	0xffffffff800090f1 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x121>
ffffffff800090d9: 48 3b 5c 24 10       	cmp	rbx, qword ptr [rsp + 0x10]
ffffffff800090de: 75 e0                	jne	0xffffffff800090c0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0xf0>
ffffffff800090e0: 4c 89 ff             	mov	rdi, r15
ffffffff800090e3: 48 c7 c6 00 30 02 80 	mov	rsi, -0x7ffdd000
ffffffff800090ea: e8 01 a3 00 00       	call	0xffffffff800133f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece>
ffffffff800090ef: eb cf                	jmp	0xffffffff800090c0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0xf0>
ffffffff800090f1: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff800090f6: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff800090fb: 4c 39 f1             	cmp	rcx, r14
ffffffff800090fe: 4d 89 ef             	mov	r15, r13
ffffffff80009101: 76 59                	jbe	0xffffffff8000915c <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x18c>
ffffffff80009103: 48 c1 e1 02          	shl	rcx, 0x2
ffffffff80009107: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8000910c: 48 c7 c7 00 b0 02 80 	mov	rdi, -0x7ffd5000
ffffffff80009113: 4d 89 e0             	mov	r8, r12
ffffffff80009116: e8 95 a3 00 00       	call	0xffffffff800134b0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>
ffffffff8000911b: 48 85 c0             	test	rax, rax
ffffffff8000911e: 0f 84 c7 01 00 00    	je	0xffffffff800092eb <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x31b>
ffffffff80009124: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80009129: eb 36                	jmp	0xffffffff80009161 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x191>
ffffffff8000912b: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff80009134: 48 c7 44 24 18 02 00 00 00   	mov	qword ptr [rsp + 0x18], 0x2
ffffffff8000913d: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80009146: b8 02 00 00 00       	mov	eax, 0x2
ffffffff8000914b: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80009150: b3 01                	mov	bl, 0x1
ffffffff80009152: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8000915a: eb 0b                	jmp	0xffffffff80009167 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x197>
ffffffff8000915c: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff80009161: 31 db                	xor	ebx, ebx
ffffffff80009163: 4c 89 34 24          	mov	qword ptr [rsp], r14
ffffffff80009167: 48 c7 44 24 60 00 00 00 00   	mov	qword ptr [rsp + 0x60], 0x0
ffffffff80009170: 48 c7 44 24 68 08 00 00 00   	mov	qword ptr [rsp + 0x68], 0x8
ffffffff80009179: 48 c7 44 24 70 00 00 00 00   	mov	qword ptr [rsp + 0x70], 0x0
ffffffff80009182: ba 40 00 00 00       	mov	edx, 0x40
ffffffff80009187: 4c 89 7c 24 30       	mov	qword ptr [rsp + 0x30], r15
ffffffff8000918c: 4c 29 fa             	sub	rdx, r15
ffffffff8000918f: 48 8d 7c 24 48       	lea	rdi, [rsp + 0x48]
ffffffff80009194: 48 8d 74 24 60       	lea	rsi, [rsp + 0x60]
ffffffff80009199: 48 c7 c1 a0 2f 02 80 	mov	rcx, -0x7ffdd060
ffffffff800091a0: e8 6b b2 00 00       	call	0xffffffff80014410 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8>
ffffffff800091a5: 84 db                	test	bl, bl
ffffffff800091a7: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff800091ac: 0f 85 b0 00 00 00    	jne	0xffffffff80009262 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x292>
ffffffff800091b2: 45 31 ff             	xor	r15d, r15d
ffffffff800091b5: 4d 89 f0             	mov	r8, r14
ffffffff800091b8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800091c0: 49 0f bd e8          	bsr	rbp, r8
ffffffff800091c4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800091d0: 41 bc 01 00 00 00    	mov	r12d, 0x1
ffffffff800091d6: 89 e9                	mov	ecx, ebp
ffffffff800091d8: 49 d3 e4             	shl	r12, cl
ffffffff800091db: 4f 8d 2c 3c          	lea	r13, [r12 + r15]
ffffffff800091df: ff cd                	dec	ebp
ffffffff800091e1: 4d 39 f5             	cmp	r13, r14
ffffffff800091e4: 77 ea                	ja	0xffffffff800091d0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x200>
ffffffff800091e6: ff c5                	inc	ebp
ffffffff800091e8: 0f b7 fd             	movzx	edi, bp
ffffffff800091eb: 48 8b 74 24 58       	mov	rsi, qword ptr [rsp + 0x58]
ffffffff800091f0: 48 39 fe             	cmp	rsi, rdi
ffffffff800091f3: 0f 86 d4 00 00 00    	jbe	0xffffffff800092cd <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x2fd>
ffffffff800091f9: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff800091fe: 48 8d 0c 7f          	lea	rcx, [rdi + 2*rdi]
ffffffff80009202: 48 8d 34 c8          	lea	rsi, [rax + 8*rcx]
ffffffff80009206: 48 8b 5c c8 10       	mov	rbx, qword ptr [rax + 8*rcx + 0x10]
ffffffff8000920b: 48 3b 1c c8          	cmp	rbx, qword ptr [rax + 8*rcx]
ffffffff8000920f: 75 2a                	jne	0xffffffff8000923b <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x26b>
ffffffff80009211: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff80009216: 48 8b 7c 24 28       	mov	rdi, qword ptr [rsp + 0x28]
ffffffff8000921b: 48 c7 c6 d0 2f 02 80 	mov	rsi, -0x7ffdd030
ffffffff80009222: 4c 89 44 24 40       	mov	qword ptr [rsp + 0x40], r8
ffffffff80009227: e8 44 a0 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff8000922c: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff80009231: 4c 8b 44 24 40       	mov	r8, qword ptr [rsp + 0x40]
ffffffff80009236: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8000923b: 48 8b 46 08          	mov	rax, qword ptr [rsi + 0x8]
ffffffff8000923f: 4c 89 3c d8          	mov	qword ptr [rax + 8*rbx], r15
ffffffff80009243: 48 ff c3             	inc	rbx
ffffffff80009246: 48 89 5e 10          	mov	qword ptr [rsi + 0x10], rbx
ffffffff8000924a: 4c 3b 3c 24          	cmp	r15, qword ptr [rsp]
ffffffff8000924e: 73 6a                	jae	0xffffffff800092ba <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x2ea>
ffffffff80009250: 66 42 89 6c ba 02    	mov	word ptr [rdx + 4*r15 + 0x2], bp
ffffffff80009256: 4d 89 ef             	mov	r15, r13
ffffffff80009259: 4d 29 e0             	sub	r8, r12
ffffffff8000925c: 0f 85 5e ff ff ff    	jne	0xffffffff800091c0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451+0x1f0>
ffffffff80009262: be 3f 00 00 00       	mov	esi, 0x3f
ffffffff80009267: 48 2b 74 24 30       	sub	rsi, qword ptr [rsp + 0x30]
ffffffff8000926c: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff80009271: 48 89 50 18          	mov	qword ptr [rax + 0x18], rdx
ffffffff80009275: 48 8b 0c 24          	mov	rcx, qword ptr [rsp]
ffffffff80009279: 48 89 48 20          	mov	qword ptr [rax + 0x20], rcx
ffffffff8000927d: 48 8b 4c 24 48       	mov	rcx, qword ptr [rsp + 0x48]
ffffffff80009282: 48 8b 54 24 50       	mov	rdx, qword ptr [rsp + 0x50]
ffffffff80009287: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff8000928a: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff8000928e: 48 8b 4c 24 58       	mov	rcx, qword ptr [rsp + 0x58]
ffffffff80009293: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff80009297: 4c 89 70 28          	mov	qword ptr [rax + 0x28], r14
ffffffff8000929b: 48 89 70 30          	mov	qword ptr [rax + 0x30], rsi
ffffffff8000929f: 48 c7 40 38 00 00 00 00      	mov	qword ptr [rax + 0x38], 0x0
ffffffff800092a7: 4c 89 70 40          	mov	qword ptr [rax + 0x40], r14
ffffffff800092ab: 48 83 c4 78          	add	rsp, 0x78
ffffffff800092af: 5b                   	pop	rbx
ffffffff800092b0: 41 5c                	pop	r12
ffffffff800092b2: 41 5d                	pop	r13
ffffffff800092b4: 41 5e                	pop	r14
ffffffff800092b6: 41 5f                	pop	r15
ffffffff800092b8: 5d                   	pop	rbp
ffffffff800092b9: c3                   	ret
ffffffff800092ba: 4c 89 ff             	mov	rdi, r15
ffffffff800092bd: 48 8b 34 24          	mov	rsi, qword ptr [rsp]
ffffffff800092c1: 48 c7 c2 e8 2f 02 80 	mov	rdx, -0x7ffdd018
ffffffff800092c8: e8 c4 7e 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800092cd: 48 c7 c2 b8 2f 02 80 	mov	rdx, -0x7ffdd048
ffffffff800092d4: e8 b8 7e 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800092d9: 4c 89 ef             	mov	rdi, r13
ffffffff800092dc: 4c 89 e6             	mov	rsi, r12
ffffffff800092df: 48 c7 c2 70 2f 02 80 	mov	rdx, -0x7ffdd090
ffffffff800092e6: e8 ac 43 01 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800092eb: bf 02 00 00 00       	mov	edi, 0x2
ffffffff800092f0: 4c 89 e6             	mov	rsi, r12
ffffffff800092f3: 48 c7 c2 88 2f 02 80 	mov	rdx, -0x7ffdd078
ffffffff800092fa: e8 98 43 01 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800092ff: cc                   	int3

ffffffff80009300 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa>:
ffffffff80009300: 55                   	push	rbp
ffffffff80009301: 41 57                	push	r15
ffffffff80009303: 41 56                	push	r14
ffffffff80009305: 41 55                	push	r13
ffffffff80009307: 41 54                	push	r12
ffffffff80009309: 53                   	push	rbx
ffffffff8000930a: 48 83 ec 68          	sub	rsp, 0x68
ffffffff8000930e: 49 89 f6             	mov	r14, rsi
ffffffff80009311: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff80009315: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000931a: 48 89 d6             	mov	rsi, rdx
ffffffff8000931d: 48 c7 c2 30 2f 02 80 	mov	rdx, -0x7ffdd0d0
ffffffff80009324: e8 b7 b6 00 00       	call	0xffffffff800149e0 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c>
ffffffff80009329: 4d 8b 7e 08          	mov	r15, qword ptr [r14 + 0x8]
ffffffff8000932d: 4d 8b 66 10          	mov	r12, qword ptr [r14 + 0x10]
ffffffff80009331: 4d 85 ff             	test	r15, r15
ffffffff80009334: 74 3e                	je	0xffffffff80009374 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x74>
ffffffff80009336: 4a 8d 0c fd 00 00 00 00      	lea	rcx, [8*r15]
ffffffff8000933e: 31 d2                	xor	edx, edx
ffffffff80009340: 31 c0                	xor	eax, eax
ffffffff80009342: eb 15                	jmp	0xffffffff80009359 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x59>
ffffffff80009344: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80009350: 48 83 c2 08          	add	rdx, 0x8
ffffffff80009354: 48 39 d1             	cmp	rcx, rdx
ffffffff80009357: 74 1d                	je	0xffffffff80009376 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x76>
ffffffff80009359: 49 8b 34 14          	mov	rsi, qword ptr [r12 + rdx]
ffffffff8000935d: 48 83 7e 10 00       	cmp	qword ptr [rsi + 0x10], 0x0
ffffffff80009362: 75 ec                	jne	0xffffffff80009350 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x50>
ffffffff80009364: 48 8b 7e 08          	mov	rdi, qword ptr [rsi + 0x8]
ffffffff80009368: 48 03 3e             	add	rdi, qword ptr [rsi]
ffffffff8000936b: 48 39 c7             	cmp	rdi, rax
ffffffff8000936e: 48 0f 47 c7          	cmova	rax, rdi
ffffffff80009372: eb dc                	jmp	0xffffffff80009350 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x50>
ffffffff80009374: 31 c0                	xor	eax, eax
ffffffff80009376: 48 89 c5             	mov	rbp, rax
ffffffff80009379: 48 c1 ed 0c          	shr	rbp, 0xc
ffffffff8000937d: 31 db                	xor	ebx, ebx
ffffffff8000937f: a9 ff 0f 00 00       	test	eax, 0xfff
ffffffff80009384: 0f 95 c3             	setne	bl
ffffffff80009387: 48 8d 34 2b          	lea	rsi, [rbx + rbp]
ffffffff8000938b: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80009390: e8 3b fc ff ff       	call	0xffffffff80008fd0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::new::hd4b135fd9abe8451>
ffffffff80009395: 48 01 dd             	add	rbp, rbx
ffffffff80009398: 74 6d                	je	0xffffffff80009407 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x107>
ffffffff8000939a: 4d 85 ff             	test	r15, r15
ffffffff8000939d: 74 6d                	je	0xffffffff8000940c <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x10c>
ffffffff8000939f: 49 c1 e7 03          	shl	r15, 0x3
ffffffff800093a3: 31 db                	xor	ebx, ebx
ffffffff800093a5: 4c 8d 74 24 20       	lea	r14, [rsp + 0x20]
ffffffff800093aa: 45 31 ed             	xor	r13d, r13d
ffffffff800093ad: eb 11                	jmp	0xffffffff800093c0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xc0>
ffffffff800093af: 90                   	nop
ffffffff800093b0: 4c 89 f7             	mov	rdi, r14
ffffffff800093b3: e8 48 01 00 00       	call	0xffffffff80009500 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6>
ffffffff800093b8: 49 ff c5             	inc	r13
ffffffff800093bb: 48 39 eb             	cmp	rbx, rbp
ffffffff800093be: 74 77                	je	0xffffffff80009437 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x137>
ffffffff800093c0: 48 89 de             	mov	rsi, rbx
ffffffff800093c3: 48 ff c3             	inc	rbx
ffffffff800093c6: 48 89 f0             	mov	rax, rsi
ffffffff800093c9: 48 c1 e0 0c          	shl	rax, 0xc
ffffffff800093cd: 31 c9                	xor	ecx, ecx
ffffffff800093cf: eb 18                	jmp	0xffffffff800093e9 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xe9>
ffffffff800093d1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff800093e0: 48 83 c1 08          	add	rcx, 0x8
ffffffff800093e4: 49 39 cf             	cmp	r15, rcx
ffffffff800093e7: 74 c7                	je	0xffffffff800093b0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xb0>
ffffffff800093e9: 49 8b 14 0c          	mov	rdx, qword ptr [r12 + rcx]
ffffffff800093ed: 48 83 7a 10 00       	cmp	qword ptr [rdx + 0x10], 0x0
ffffffff800093f2: 75 ec                	jne	0xffffffff800093e0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xe0>
ffffffff800093f4: 48 8b 3a             	mov	rdi, qword ptr [rdx]
ffffffff800093f7: 48 39 f8             	cmp	rax, rdi
ffffffff800093fa: 72 e4                	jb	0xffffffff800093e0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xe0>
ffffffff800093fc: 48 03 7a 08          	add	rdi, qword ptr [rdx + 0x8]
ffffffff80009400: 48 39 f8             	cmp	rax, rdi
ffffffff80009403: 73 db                	jae	0xffffffff800093e0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xe0>
ffffffff80009405: eb b4                	jmp	0xffffffff800093bb <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0xbb>
ffffffff80009407: 45 31 ed             	xor	r13d, r13d
ffffffff8000940a: eb 2b                	jmp	0xffffffff80009437 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x137>
ffffffff8000940c: 31 f6                	xor	esi, esi
ffffffff8000940e: 4c 8d 74 24 20       	lea	r14, [rsp + 0x20]
ffffffff80009413: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80009420: 48 8d 5e 01          	lea	rbx, [rsi + 0x1]
ffffffff80009424: 4c 89 f7             	mov	rdi, r14
ffffffff80009427: e8 d4 00 00 00       	call	0xffffffff80009500 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6>
ffffffff8000942c: 48 89 de             	mov	rsi, rbx
ffffffff8000942f: 48 39 dd             	cmp	rbp, rbx
ffffffff80009432: 75 ec                	jne	0xffffffff80009420 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x120>
ffffffff80009434: 49 89 ed             	mov	r13, rbp
ffffffff80009437: 4c 8b 74 24 08       	mov	r14, qword ptr [rsp + 0x8]
ffffffff8000943c: 4c 8b 7c 24 10       	mov	r15, qword ptr [rsp + 0x10]
ffffffff80009441: 48 8b 5c 24 18       	mov	rbx, qword ptr [rsp + 0x18]
ffffffff80009446: 48 85 db             	test	rbx, rbx
ffffffff80009449: 74 31                	je	0xffffffff8000947c <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x17c>
ffffffff8000944b: 48 c1 e3 03          	shl	rbx, 0x3
ffffffff8000944f: 31 ed                	xor	ebp, ebp
ffffffff80009451: 4c 8d 64 24 20       	lea	r12, [rsp + 0x20]
ffffffff80009456: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80009460: 49 8b 34 2f          	mov	rsi, qword ptr [r15 + rbp]
ffffffff80009464: 48 c1 ee 0c          	shr	rsi, 0xc
ffffffff80009468: 4c 89 e7             	mov	rdi, r12
ffffffff8000946b: e8 90 00 00 00       	call	0xffffffff80009500 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6>
ffffffff80009470: 49 ff c5             	inc	r13
ffffffff80009473: 48 83 c5 08          	add	rbp, 0x8
ffffffff80009477: 48 39 eb             	cmp	rbx, rbp
ffffffff8000947a: 75 e4                	jne	0xffffffff80009460 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x160>
ffffffff8000947c: 4d 85 f6             	test	r14, r14
ffffffff8000947f: 74 4c                	je	0xffffffff800094cd <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x1cd>
ffffffff80009481: 49 c1 e6 03          	shl	r14, 0x3
ffffffff80009485: b1 01                	mov	cl, 0x1
ffffffff80009487: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80009490: 31 c0                	xor	eax, eax
ffffffff80009492: f0                   	lock
ffffffff80009493: 0f b0 0d 66 1b 02 00 	cmpxchg	byte ptr [rip + 0x21b66], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000949a: 75 06                	jne	0xffffffff800094a2 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x1a2>
ffffffff8000949c: eb 11                	jmp	0xffffffff800094af <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x1af>
ffffffff8000949e: 66 90                	nop
ffffffff800094a0: f3 90                	pause
ffffffff800094a2: 0f b6 05 57 1b 02 00 	movzx	eax, byte ptr [rip + 0x21b57] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800094a9: 84 c0                	test	al, al
ffffffff800094ab: 75 f3                	jne	0xffffffff800094a0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x1a0>
ffffffff800094ad: eb e1                	jmp	0xffffffff80009490 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::init::h7ef344177cdffbaa+0x190>
ffffffff800094af: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800094b4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800094bb: 4c 89 fe             	mov	rsi, r15
ffffffff800094be: 4c 89 f1             	mov	rcx, r14
ffffffff800094c1: e8 2a 33 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800094c6: c6 05 33 1b 02 00 00 	mov	byte ptr [rip + 0x21b33], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800094cd: 4c 29 6c 24 60       	sub	qword ptr [rsp + 0x60], r13
ffffffff800094d2: 4c 01 6c 24 58       	add	qword ptr [rsp + 0x58], r13
ffffffff800094d7: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff800094dc: b9 09 00 00 00       	mov	ecx, 0x9
ffffffff800094e1: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff800094e5: 48 89 c7             	mov	rdi, rax
ffffffff800094e8: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800094eb: 48 83 c4 68          	add	rsp, 0x68
ffffffff800094ef: 5b                   	pop	rbx
ffffffff800094f0: 41 5c                	pop	r12
ffffffff800094f2: 41 5d                	pop	r13
ffffffff800094f4: 41 5e                	pop	r14
ffffffff800094f6: 41 5f                	pop	r15
ffffffff800094f8: 5d                   	pop	rbp
ffffffff800094f9: c3                   	ret
ffffffff800094fa: cc                   	int3
ffffffff800094fb: cc                   	int3
ffffffff800094fc: cc                   	int3
ffffffff800094fd: cc                   	int3
ffffffff800094fe: cc                   	int3
ffffffff800094ff: cc                   	int3

ffffffff80009500 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6>:
ffffffff80009500: 55                   	push	rbp
ffffffff80009501: 41 57                	push	r15
ffffffff80009503: 41 56                	push	r14
ffffffff80009505: 41 55                	push	r13
ffffffff80009507: 41 54                	push	r12
ffffffff80009509: 53                   	push	rbx
ffffffff8000950a: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8000950e: 49 89 f6             	mov	r14, rsi
ffffffff80009511: 48 89 f9             	mov	rcx, rdi
ffffffff80009514: 48 8b 7f 30          	mov	rdi, qword ptr [rdi + 0x30]
ffffffff80009518: 48 8b 41 08          	mov	rax, qword ptr [rcx + 0x8]
ffffffff8000951c: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff80009521: 48 8b 71 10          	mov	rsi, qword ptr [rcx + 0x10]
ffffffff80009525: 4c 8d 7f ff          	lea	r15, [rdi - 0x1]
ffffffff80009529: 48 8d 0c 7f          	lea	rcx, [rdi + 2*rdi]
ffffffff8000952d: 4c 8d 24 c8          	lea	r12, [rax + 8*rcx]
ffffffff80009531: 49 83 c4 e8          	add	r12, -0x18
ffffffff80009535: 48 89 fd             	mov	rbp, rdi
ffffffff80009538: eb 17                	jmp	0xffffffff80009551 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x51>
ffffffff8000953a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80009540: 49 ff cf             	dec	r15
ffffffff80009543: 49 83 c4 e8          	add	r12, -0x18
ffffffff80009547: 48 83 ed 01          	sub	rbp, 0x1
ffffffff8000954b: 0f 82 1e 01 00 00    	jb	0xffffffff8000966f <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x16f>
ffffffff80009551: 48 39 f7             	cmp	rdi, rsi
ffffffff80009554: 0f 83 2b 01 00 00    	jae	0xffffffff80009685 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x185>
ffffffff8000955a: 48 8d 14 6d 00 00 00 00      	lea	rdx, [2*rbp]
ffffffff80009562: 48 01 ea             	add	rdx, rbp
ffffffff80009565: 48 8b 5c d0 10       	mov	rbx, qword ptr [rax + 8*rdx + 0x10]
ffffffff8000956a: 48 85 db             	test	rbx, rbx
ffffffff8000956d: 74 d1                	je	0xffffffff80009540 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x40>
ffffffff8000956f: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff80009575: 89 e9                	mov	ecx, ebp
ffffffff80009577: 49 d3 e0             	shl	r8, cl
ffffffff8000957a: 4c 8d 1c d0          	lea	r11, [rax + 8*rdx]
ffffffff8000957e: 48 8b 4c d0 08       	mov	rcx, qword ptr [rax + 8*rdx + 0x8]
ffffffff80009583: 48 8d 14 dd f8 ff ff ff      	lea	rdx, [8*rbx - 0x8]
ffffffff8000958b: 45 31 c9             	xor	r9d, r9d
ffffffff8000958e: eb 0d                	jmp	0xffffffff8000959d <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x9d>
ffffffff80009590: 49 ff c1             	inc	r9
ffffffff80009593: 48 83 c2 f8          	add	rdx, -0x8
ffffffff80009597: 48 83 fa f8          	cmp	rdx, -0x8
ffffffff8000959b: 74 a3                	je	0xffffffff80009540 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x40>
ffffffff8000959d: 4e 8b 14 c9          	mov	r10, qword ptr [rcx + 8*r9]
ffffffff800095a1: 4d 39 f2             	cmp	r10, r14
ffffffff800095a4: 77 ea                	ja	0xffffffff80009590 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x90>
ffffffff800095a6: 4d 01 c2             	add	r10, r8
ffffffff800095a9: 4d 39 f2             	cmp	r10, r14
ffffffff800095ac: 76 e2                	jbe	0xffffffff80009590 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x90>
ffffffff800095ae: 4a 8d 3c c9          	lea	rdi, [rcx + 8*r9]
ffffffff800095b2: 4e 8b 2c c9          	mov	r13, qword ptr [rcx + 8*r9]
ffffffff800095b6: 4a 8d 34 c9          	lea	rsi, [rcx + 8*r9]
ffffffff800095ba: 48 83 c6 08          	add	rsi, 0x8
ffffffff800095be: 4c 89 5c 24 10       	mov	qword ptr [rsp + 0x10], r11
ffffffff800095c3: ff 15 6f 2e 03 00    	call	qword ptr [rip + 0x32e6f] # 0xffffffff8003c438
ffffffff800095c9: 48 ff cb             	dec	rbx
ffffffff800095cc: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff800095d1: 48 89 58 10          	mov	qword ptr [rax + 0x10], rbx
ffffffff800095d5: 48 85 ed             	test	rbp, rbp
ffffffff800095d8: 75 59                	jne	0xffffffff80009633 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x133>
ffffffff800095da: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800095df: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff800095e3: 49 39 f5             	cmp	r13, rsi
ffffffff800095e6: 0f 83 a5 00 00 00    	jae	0xffffffff80009691 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x191>
ffffffff800095ec: 48 8b 40 18          	mov	rax, qword ptr [rax + 0x18]
ffffffff800095f0: 66 42 c7 04 a8 01 00 	mov	word ptr [rax + 4*r13], 0x1
ffffffff800095f7: 48 83 c4 18          	add	rsp, 0x18
ffffffff800095fb: 5b                   	pop	rbx
ffffffff800095fc: 41 5c                	pop	r12
ffffffff800095fe: 41 5d                	pop	r13
ffffffff80009600: 41 5e                	pop	r14
ffffffff80009602: 41 5f                	pop	r15
ffffffff80009604: 5d                   	pop	rbp
ffffffff80009605: c3                   	ret
ffffffff80009606: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80009610: 4c 89 e7             	mov	rdi, r12
ffffffff80009613: e8 58 9c 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff80009618: 49 8b 44 24 08       	mov	rax, qword ptr [r12 + 0x8]
ffffffff8000961d: 48 89 1c e8          	mov	qword ptr [rax + 8*rbp], rbx
ffffffff80009621: 48 ff c5             	inc	rbp
ffffffff80009624: 49 89 6c 24 10       	mov	qword ptr [r12 + 0x10], rbp
ffffffff80009629: 49 83 c4 e8          	add	r12, -0x18
ffffffff8000962d: 49 83 c7 ff          	add	r15, -0x1
ffffffff80009631: 73 a7                	jae	0xffffffff800095da <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0xda>
ffffffff80009633: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80009638: 44 89 f9             	mov	ecx, r15d
ffffffff8000963b: 48 d3 e0             	shl	rax, cl
ffffffff8000963e: 4c 01 e8             	add	rax, r13
ffffffff80009641: 4c 39 f0             	cmp	rax, r14
ffffffff80009644: 4c 89 eb             	mov	rbx, r13
ffffffff80009647: 48 0f 47 d8          	cmova	rbx, rax
ffffffff8000964b: 4c 0f 46 e8          	cmovbe	r13, rax
ffffffff8000964f: 49 8b 6c 24 10       	mov	rbp, qword ptr [r12 + 0x10]
ffffffff80009654: 49 3b 2c 24          	cmp	rbp, qword ptr [r12]
ffffffff80009658: 75 be                	jne	0xffffffff80009618 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x118>
ffffffff8000965a: 48 c7 c6 78 30 02 80 	mov	rsi, -0x7ffdcf88
ffffffff80009661: 4c 39 f0             	cmp	rax, r14
ffffffff80009664: 77 aa                	ja	0xffffffff80009610 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x110>
ffffffff80009666: 48 c7 c6 60 30 02 80 	mov	rsi, -0x7ffdcfa0
ffffffff8000966d: eb a1                	jmp	0xffffffff80009610 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x110>
ffffffff8000966f: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80009674: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff80009678: 4c 39 f6             	cmp	rsi, r14
ffffffff8000967b: 76 23                	jbe	0xffffffff800096a0 <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0x1a0>
ffffffff8000967d: 4d 89 f5             	mov	r13, r14
ffffffff80009680: e9 67 ff ff ff       	jmp	0xffffffff800095ec <taos::memory::buddy_frame_allocator::BuddyFrameAllocator::reserve_frame::he4d53175ce6746f6+0xec>
ffffffff80009685: 48 c7 c2 30 30 02 80 	mov	rdx, -0x7ffdcfd0
ffffffff8000968c: e8 00 7b 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009691: 4c 89 ef             	mov	rdi, r13
ffffffff80009694: 48 c7 c2 48 30 02 80 	mov	rdx, -0x7ffdcfb8
ffffffff8000969b: e8 f1 7a 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800096a0: 4c 89 f7             	mov	rdi, r14
ffffffff800096a3: 48 c7 c2 18 30 02 80 	mov	rdx, -0x7ffdcfe8
ffffffff800096aa: e8 e2 7a 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800096af: cc                   	int3

ffffffff800096b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da>:
ffffffff800096b0: 55                   	push	rbp
ffffffff800096b1: 41 57                	push	r15
ffffffff800096b3: 41 56                	push	r14
ffffffff800096b5: 41 55                	push	r13
ffffffff800096b7: 41 54                	push	r12
ffffffff800096b9: 53                   	push	rbx
ffffffff800096ba: 48 83 ec 28          	sub	rsp, 0x28
ffffffff800096be: 49 89 f2             	mov	r10, rsi
ffffffff800096c1: 49 89 f9             	mov	r9, rdi
ffffffff800096c4: 48 8b 4e 30          	mov	rcx, qword ptr [rsi + 0x30]
ffffffff800096c8: 4c 8b 7e 08          	mov	r15, qword ptr [rsi + 0x8]
ffffffff800096cc: 4c 8b 6e 10          	mov	r13, qword ptr [rsi + 0x10]
ffffffff800096d0: 31 c0                	xor	eax, eax
ffffffff800096d2: 31 d2                	xor	edx, edx
ffffffff800096d4: 31 f6                	xor	esi, esi
ffffffff800096d6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800096e0: f6 c2 01             	test	dl, 0x1
ffffffff800096e3: 0f 85 34 01 00 00    	jne	0xffffffff8000981d <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x16d>
ffffffff800096e9: 48 89 f7             	mov	rdi, rsi
ffffffff800096ec: 48 39 ce             	cmp	rsi, rcx
ffffffff800096ef: 0f 87 28 01 00 00    	ja	0xffffffff8000981d <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x16d>
ffffffff800096f5: 4c 39 ef             	cmp	rdi, r13
ffffffff800096f8: 0f 83 6c 01 00 00    	jae	0xffffffff8000986a <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x1ba>
ffffffff800096fe: 48 39 cf             	cmp	rdi, rcx
ffffffff80009701: 0f 93 c2             	setae	dl
ffffffff80009704: 48 89 fe             	mov	rsi, rdi
ffffffff80009707: 48 83 d6 00          	adc	rsi, 0x0
ffffffff8000970b: 4c 8d 04 7f          	lea	r8, [rdi + 2*rdi]
ffffffff8000970f: 4b 83 7c c7 10 00    	cmp	qword ptr [r15 + 8*r8 + 0x10], 0x0
ffffffff80009715: 74 c9                	je	0xffffffff800096e0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x30>
ffffffff80009717: 0f b7 ef             	movzx	ebp, di
ffffffff8000971a: 48 8d 0c 6d 00 00 00 00      	lea	rcx, [2*rbp]
ffffffff80009722: 48 01 e9             	add	rcx, rbp
ffffffff80009725: 49 8b 44 cf 10       	mov	rax, qword ptr [r15 + 8*rcx + 0x10]
ffffffff8000972a: 48 85 c0             	test	rax, rax
ffffffff8000972d: 0f 84 64 01 00 00    	je	0xffffffff80009897 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x1e7>
ffffffff80009733: 49 8d 0c cf          	lea	rcx, [r15 + 8*rcx]
ffffffff80009737: 48 8d 50 ff          	lea	rdx, [rax - 0x1]
ffffffff8000973b: 48 89 51 10          	mov	qword ptr [rcx + 0x10], rdx
ffffffff8000973f: 48 8b 49 08          	mov	rcx, qword ptr [rcx + 0x8]
ffffffff80009743: 48 8b 54 c1 f8       	mov	rdx, qword ptr [rcx + 8*rax - 0x8]
ffffffff80009748: 48 85 ed             	test	rbp, rbp
ffffffff8000974b: 0f 84 e1 00 00 00    	je	0xffffffff80009832 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x182>
ffffffff80009751: 4c 89 4c 24 08       	mov	qword ptr [rsp + 0x8], r9
ffffffff80009756: 49 8b 72 20          	mov	rsi, qword ptr [r10 + 0x20]
ffffffff8000975a: 48 ff cd             	dec	rbp
ffffffff8000975d: 4c 89 7c 24 20       	mov	qword ptr [rsp + 0x20], r15
ffffffff80009762: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80009767: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff8000976c: eb 1a                	jmp	0xffffffff80009788 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0xd8>
ffffffff8000976e: 66 90                	nop
ffffffff80009770: 49 8b 46 08          	mov	rax, qword ptr [r14 + 0x8]
ffffffff80009774: 4a 89 1c e0          	mov	qword ptr [rax + 8*r12], rbx
ffffffff80009778: 49 ff c4             	inc	r12
ffffffff8000977b: 4d 89 66 10          	mov	qword ptr [r14 + 0x10], r12
ffffffff8000977f: 48 ff cd             	dec	rbp
ffffffff80009782: 66 83 fd ff          	cmp	bp, -0x1
ffffffff80009786: 74 64                	je	0xffffffff800097ec <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x13c>
ffffffff80009788: bb 01 00 00 00       	mov	ebx, 0x1
ffffffff8000978d: 89 e9                	mov	ecx, ebp
ffffffff8000978f: 48 d3 e3             	shl	rbx, cl
ffffffff80009792: 48 01 d3             	add	rbx, rdx
ffffffff80009795: 48 39 f3             	cmp	rbx, rsi
ffffffff80009798: 0f 83 ea 00 00 00    	jae	0xffffffff80009888 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x1d8>
ffffffff8000979e: 49 8b 42 18          	mov	rax, qword ptr [r10 + 0x18]
ffffffff800097a2: 66 89 6c 98 02       	mov	word ptr [rax + 4*rbx + 0x2], bp
ffffffff800097a7: 0f b7 fd             	movzx	edi, bp
ffffffff800097aa: 49 39 fd             	cmp	r13, rdi
ffffffff800097ad: 0f 86 c6 00 00 00    	jbe	0xffffffff80009879 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x1c9>
ffffffff800097b3: 48 8d 04 7f          	lea	rax, [rdi + 2*rdi]
ffffffff800097b7: 4d 8d 34 c7          	lea	r14, [r15 + 8*rax]
ffffffff800097bb: 4d 8b 64 c7 10       	mov	r12, qword ptr [r15 + 8*rax + 0x10]
ffffffff800097c0: 4d 3b 24 c7          	cmp	r12, qword ptr [r15 + 8*rax]
ffffffff800097c4: 75 aa                	jne	0xffffffff80009770 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0xc0>
ffffffff800097c6: 4c 89 f7             	mov	rdi, r14
ffffffff800097c9: 48 c7 c6 38 32 02 80 	mov	rsi, -0x7ffdcdc8
ffffffff800097d0: 4d 89 d7             	mov	r15, r10
ffffffff800097d3: e8 98 9a 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff800097d8: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff800097dd: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff800097e2: 4d 89 fa             	mov	r10, r15
ffffffff800097e5: 4c 8b 7c 24 20       	mov	r15, qword ptr [rsp + 0x20]
ffffffff800097ea: eb 84                	jmp	0xffffffff80009770 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0xc0>
ffffffff800097ec: 4c 8b 4c 24 08       	mov	r9, qword ptr [rsp + 0x8]
ffffffff800097f1: 49 ff 42 38          	inc	qword ptr [r10 + 0x38]
ffffffff800097f5: 49 ff 4a 40          	dec	qword ptr [r10 + 0x40]
ffffffff800097f9: 48 39 f2             	cmp	rdx, rsi
ffffffff800097fc: 73 45                	jae	0xffffffff80009843 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x193>
ffffffff800097fe: 49 8b 42 18          	mov	rax, qword ptr [r10 + 0x18]
ffffffff80009802: 66 f0 ff 04 90       	lock		inc	word ptr [rax + 4*rdx]
ffffffff80009807: 48 c1 e2 0c          	shl	rdx, 0xc
ffffffff8000980b: 48 89 d0             	mov	rax, rdx
ffffffff8000980e: 48 c1 e8 34          	shr	rax, 0x34
ffffffff80009812: 75 3e                	jne	0xffffffff80009852 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x1a2>
ffffffff80009814: 49 89 51 08          	mov	qword ptr [r9 + 0x8], rdx
ffffffff80009818: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8000981d: 49 89 01             	mov	qword ptr [r9], rax
ffffffff80009820: 4c 89 c8             	mov	rax, r9
ffffffff80009823: 48 83 c4 28          	add	rsp, 0x28
ffffffff80009827: 5b                   	pop	rbx
ffffffff80009828: 41 5c                	pop	r12
ffffffff8000982a: 41 5d                	pop	r13
ffffffff8000982c: 41 5e                	pop	r14
ffffffff8000982e: 41 5f                	pop	r15
ffffffff80009830: 5d                   	pop	rbp
ffffffff80009831: c3                   	ret
ffffffff80009832: 49 8b 72 20          	mov	rsi, qword ptr [r10 + 0x20]
ffffffff80009836: 49 ff 42 38          	inc	qword ptr [r10 + 0x38]
ffffffff8000983a: 49 ff 4a 40          	dec	qword ptr [r10 + 0x40]
ffffffff8000983e: 48 39 f2             	cmp	rdx, rsi
ffffffff80009841: 72 bb                	jb	0xffffffff800097fe <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da+0x14e>
ffffffff80009843: 48 89 d7             	mov	rdi, rdx
ffffffff80009846: 48 c7 c2 f0 31 02 80 	mov	rdx, -0x7ffdce10
ffffffff8000984d: e8 3f 79 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009852: be 43 00 00 00       	mov	esi, 0x43
ffffffff80009857: 48 c7 c7 90 30 02 80 	mov	rdi, -0x7ffdcf70
ffffffff8000985e: 48 c7 c2 30 31 02 80 	mov	rdx, -0x7ffdced0
ffffffff80009865: e8 86 78 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000986a: 4c 89 ee             	mov	rsi, r13
ffffffff8000986d: 48 c7 c2 c0 31 02 80 	mov	rdx, -0x7ffdce40
ffffffff80009874: e8 18 79 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009879: 4c 89 ee             	mov	rsi, r13
ffffffff8000987c: 48 c7 c2 20 32 02 80 	mov	rdx, -0x7ffdcde0
ffffffff80009883: e8 09 79 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009888: 48 89 df             	mov	rdi, rbx
ffffffff8000988b: 48 c7 c2 08 32 02 80 	mov	rdx, -0x7ffdcdf8
ffffffff80009892: e8 fa 78 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009897: be 20 00 00 00       	mov	esi, 0x20
ffffffff8000989c: 48 c7 c7 28 24 02 80 	mov	rdi, -0x7ffddbd8
ffffffff800098a3: 48 c7 c2 d8 31 02 80 	mov	rdx, -0x7ffdce28
ffffffff800098aa: e8 b1 7d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800098af: cc                   	int3

ffffffff800098b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40>:
ffffffff800098b0: 55                   	push	rbp
ffffffff800098b1: 41 57                	push	r15
ffffffff800098b3: 41 56                	push	r14
ffffffff800098b5: 41 55                	push	r13
ffffffff800098b7: 41 54                	push	r12
ffffffff800098b9: 53                   	push	rbx
ffffffff800098ba: 48 83 ec 68          	sub	rsp, 0x68
ffffffff800098be: 48 89 f3             	mov	rbx, rsi
ffffffff800098c1: 48 c1 eb 0c          	shr	rbx, 0xc
ffffffff800098c5: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff800098c9: 48 39 f3             	cmp	rbx, rsi
ffffffff800098cc: 0f 83 10 02 00 00    	jae	0xffffffff80009ae2 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x232>
ffffffff800098d2: 48 8b 6f 18          	mov	rbp, qword ptr [rdi + 0x18]
ffffffff800098d6: 66 b8 ff ff          	mov	ax, 0xffff
ffffffff800098da: 66 f0 0f c1 44 9d 00 	lock		xadd	word ptr [rbp + 4*rbx], ax
ffffffff800098e1: 66 85 c0             	test	ax, ax
ffffffff800098e4: 0f 84 c9 01 00 00    	je	0xffffffff80009ab3 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x203>
ffffffff800098ea: 48 8b 47 30          	mov	rax, qword ptr [rdi + 0x30]
ffffffff800098ee: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff800098f3: 48 85 c0             	test	rax, rax
ffffffff800098f6: 0f 84 49 01 00 00    	je	0xffffffff80009a45 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x195>
ffffffff800098fc: 48 8b 47 28          	mov	rax, qword ptr [rdi + 0x28]
ffffffff80009900: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80009905: 4c 8b 4f 08          	mov	r9, qword ptr [rdi + 0x8]
ffffffff80009909: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff8000990e: 48 8b 47 10          	mov	rax, qword ptr [rdi + 0x10]
ffffffff80009912: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80009917: 45 31 e4             	xor	r12d, r12d
ffffffff8000991a: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff8000991f: eb 57                	jmp	0xffffffff80009978 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0xc8>
ffffffff80009921: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80009930: 48 8d 3c c8          	lea	rdi, [rax + 8*rcx]
ffffffff80009934: 48 8d 34 c8          	lea	rsi, [rax + 8*rcx]
ffffffff80009938: 48 83 c6 08          	add	rsi, 0x8
ffffffff8000993c: 49 89 df             	mov	r15, rbx
ffffffff8000993f: 4c 89 cb             	mov	rbx, r9
ffffffff80009942: 4c 89 54 24 30       	mov	qword ptr [rsp + 0x30], r10
ffffffff80009947: ff 15 eb 2a 03 00    	call	qword ptr [rip + 0x32aeb] # 0xffffffff8003c438
ffffffff8000994d: 49 89 d9             	mov	r9, rbx
ffffffff80009950: 4c 89 fb             	mov	rbx, r15
ffffffff80009953: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff80009958: 49 ff ce             	dec	r14
ffffffff8000995b: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80009960: 4c 89 70 10          	mov	qword ptr [rax + 0x10], r14
ffffffff80009964: 49 f7 d5             	not	r13
ffffffff80009967: 4c 21 eb             	and	rbx, r13
ffffffff8000996a: 49 ff c4             	inc	r12
ffffffff8000996d: 4c 3b 64 24 18       	cmp	r12, qword ptr [rsp + 0x18]
ffffffff80009972: 0f 84 d2 00 00 00    	je	0xffffffff80009a4a <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x19a>
ffffffff80009978: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff8000997e: 44 89 e1             	mov	ecx, r12d
ffffffff80009981: 49 d3 e5             	shl	r13, cl
ffffffff80009984: 48 89 df             	mov	rdi, rbx
ffffffff80009987: 4c 0f bb e7          	btc	rdi, r12
ffffffff8000998b: 48 3b 7c 24 28       	cmp	rdi, qword ptr [rsp + 0x28]
ffffffff80009990: 0f 83 b9 00 00 00    	jae	0xffffffff80009a4f <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x19f>
ffffffff80009996: 48 39 f7             	cmp	rdi, rsi
ffffffff80009999: 0f 83 23 01 00 00    	jae	0xffffffff80009ac2 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x212>
ffffffff8000999f: 0f b7 44 bd 00       	movzx	eax, word ptr [rbp + 4*rdi]
ffffffff800099a4: 66 85 c0             	test	ax, ax
ffffffff800099a7: 0f 85 a2 00 00 00    	jne	0xffffffff80009a4f <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x19f>
ffffffff800099ad: 0f b7 44 bd 02       	movzx	eax, word ptr [rbp + 4*rdi + 0x2]
ffffffff800099b2: 66 44 39 e0          	cmp	ax, r12w
ffffffff800099b6: 0f 85 93 00 00 00    	jne	0xffffffff80009a4f <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x19f>
ffffffff800099bc: 4c 3b 64 24 10       	cmp	r12, qword ptr [rsp + 0x10]
ffffffff800099c1: 0f 84 07 01 00 00    	je	0xffffffff80009ace <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x21e>
ffffffff800099c7: 4b 8d 04 64          	lea	rax, [r12 + 2*r12]
ffffffff800099cb: 4d 8b 74 c1 10       	mov	r14, qword ptr [r9 + 8*rax + 0x10]
ffffffff800099d0: 4d 85 f6             	test	r14, r14
ffffffff800099d3: 74 32                	je	0xffffffff80009a07 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x157>
ffffffff800099d5: 4d 8d 14 c1          	lea	r10, [r9 + 8*rax]
ffffffff800099d9: 49 8b 44 c1 08       	mov	rax, qword ptr [r9 + 8*rax + 0x8]
ffffffff800099de: 4a 8d 14 f5 f8 ff ff ff      	lea	rdx, [8*r14 - 0x8]
ffffffff800099e6: 31 c9                	xor	ecx, ecx
ffffffff800099e8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800099f0: 48 3b 3c c8          	cmp	rdi, qword ptr [rax + 8*rcx]
ffffffff800099f4: 0f 84 36 ff ff ff    	je	0xffffffff80009930 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x80>
ffffffff800099fa: 48 ff c1             	inc	rcx
ffffffff800099fd: 48 83 c2 f8          	add	rdx, -0x8
ffffffff80009a01: 48 83 fa f8          	cmp	rdx, -0x8
ffffffff80009a05: 75 e9                	jne	0xffffffff800099f0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x140>
ffffffff80009a07: 48 c7 44 24 38 b8 32 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdcd48
ffffffff80009a10: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff80009a19: 48 c7 44 24 58 00 00 00 00   	mov	qword ptr [rsp + 0x58], 0x0
ffffffff80009a22: 48 c7 44 24 48 08 00 00 00   	mov	qword ptr [rsp + 0x48], 0x8
ffffffff80009a2b: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff80009a34: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff80009a39: 48 c7 c6 c8 32 02 80 	mov	rsi, -0x7ffdcd38
ffffffff80009a40: e8 2b 76 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80009a45: 45 31 e4             	xor	r12d, r12d
ffffffff80009a48: eb 0a                	jmp	0xffffffff80009a54 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x1a4>
ffffffff80009a4a: 4c 8b 64 24 18       	mov	r12, qword ptr [rsp + 0x18]
ffffffff80009a4f: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff80009a54: 48 39 f3             	cmp	rbx, rsi
ffffffff80009a57: 0f 83 94 00 00 00    	jae	0xffffffff80009af1 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x241>
ffffffff80009a5d: 66 44 89 64 9d 02    	mov	word ptr [rbp + 4*rbx + 0x2], r12w
ffffffff80009a63: 48 8b 77 10          	mov	rsi, qword ptr [rdi + 0x10]
ffffffff80009a67: 49 39 f4             	cmp	r12, rsi
ffffffff80009a6a: 0f 83 90 00 00 00    	jae	0xffffffff80009b00 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x250>
ffffffff80009a70: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff80009a74: 4b 8d 0c 64          	lea	rcx, [r12 + 2*r12]
ffffffff80009a78: 4c 8d 3c c8          	lea	r15, [rax + 8*rcx]
ffffffff80009a7c: 4c 8b 74 c8 10       	mov	r14, qword ptr [rax + 8*rcx + 0x10]
ffffffff80009a81: 4c 3b 34 c8          	cmp	r14, qword ptr [rax + 8*rcx]
ffffffff80009a85: 75 15                	jne	0xffffffff80009a9c <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40+0x1ec>
ffffffff80009a87: 49 89 fc             	mov	r12, rdi
ffffffff80009a8a: 4c 89 ff             	mov	rdi, r15
ffffffff80009a8d: 48 c7 c6 10 33 02 80 	mov	rsi, -0x7ffdccf0
ffffffff80009a94: e8 d7 97 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff80009a99: 4c 89 e7             	mov	rdi, r12
ffffffff80009a9c: 49 8b 47 08          	mov	rax, qword ptr [r15 + 0x8]
ffffffff80009aa0: 4a 89 1c f0          	mov	qword ptr [rax + 8*r14], rbx
ffffffff80009aa4: 49 ff c6             	inc	r14
ffffffff80009aa7: 4d 89 77 10          	mov	qword ptr [r15 + 0x10], r14
ffffffff80009aab: 48 ff 47 40          	inc	qword ptr [rdi + 0x40]
ffffffff80009aaf: 48 ff 4f 38          	dec	qword ptr [rdi + 0x38]
ffffffff80009ab3: 48 83 c4 68          	add	rsp, 0x68
ffffffff80009ab7: 5b                   	pop	rbx
ffffffff80009ab8: 41 5c                	pop	r12
ffffffff80009aba: 41 5d                	pop	r13
ffffffff80009abc: 41 5e                	pop	r14
ffffffff80009abe: 41 5f                	pop	r15
ffffffff80009ac0: 5d                   	pop	rbp
ffffffff80009ac1: c3                   	ret
ffffffff80009ac2: 48 c7 c2 68 32 02 80 	mov	rdx, -0x7ffdcd98
ffffffff80009ac9: e8 c3 76 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009ace: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff80009ad3: 48 89 fe             	mov	rsi, rdi
ffffffff80009ad6: 48 c7 c2 80 32 02 80 	mov	rdx, -0x7ffdcd80
ffffffff80009add: e8 af 76 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009ae2: 48 89 df             	mov	rdi, rbx
ffffffff80009ae5: 48 c7 c2 50 32 02 80 	mov	rdx, -0x7ffdcdb0
ffffffff80009aec: e8 a0 76 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009af1: 48 89 df             	mov	rdi, rbx
ffffffff80009af4: 48 c7 c2 e0 32 02 80 	mov	rdx, -0x7ffdcd20
ffffffff80009afb: e8 91 76 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009b00: 4c 89 e7             	mov	rdi, r12
ffffffff80009b03: 48 c7 c2 f8 32 02 80 	mov	rdx, -0x7ffdcd08
ffffffff80009b0a: e8 82 76 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009b0f: cc                   	int3

ffffffff80009b10 <call_process>:
ffffffff80009b10: 55                   	push	rbp
ffffffff80009b11: 41 57                	push	r15
ffffffff80009b13: 41 56                	push	r14
ffffffff80009b15: 41 55                	push	r13
ffffffff80009b17: 41 54                	push	r12
ffffffff80009b19: 41 53                	push	r11
ffffffff80009b1b: 41 52                	push	r10
ffffffff80009b1d: 41 51                	push	r9
ffffffff80009b1f: 41 50                	push	r8
ffffffff80009b21: 57                   	push	rdi
ffffffff80009b22: 56                   	push	rsi
ffffffff80009b23: 53                   	push	rbx
ffffffff80009b24: 49 89 e3             	mov	r11, rsp
ffffffff80009b27: 4c 89 19             	mov	qword ptr [rcx], r11
ffffffff80009b2a: 56                   	push	rsi
ffffffff80009b2b: 48 8b 47 78          	mov	rax, qword ptr [rdi + 0x78]
ffffffff80009b2f: 50                   	push	rax
ffffffff80009b30: 48 8b 87 88 00 00 00 	mov	rax, qword ptr [rdi + 0x88]
ffffffff80009b37: 50                   	push	rax
ffffffff80009b38: 52                   	push	rdx
ffffffff80009b39: 48 8b 87 80 00 00 00 	mov	rax, qword ptr [rdi + 0x80]
ffffffff80009b40: 50                   	push	rax
ffffffff80009b41: 41 c6 00 02          	mov	byte ptr [r8], 0x2
ffffffff80009b45: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80009b48: 48 8b 5f 08          	mov	rbx, qword ptr [rdi + 0x8]
ffffffff80009b4c: 48 8b 4f 10          	mov	rcx, qword ptr [rdi + 0x10]
ffffffff80009b50: 48 8b 57 18          	mov	rdx, qword ptr [rdi + 0x18]
ffffffff80009b54: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff80009b58: 4c 8b 47 30          	mov	r8, qword ptr [rdi + 0x30]
ffffffff80009b5c: 4c 8b 4f 38          	mov	r9, qword ptr [rdi + 0x38]
ffffffff80009b60: 4c 8b 57 40          	mov	r10, qword ptr [rdi + 0x40]
ffffffff80009b64: 4c 8b 5f 48          	mov	r11, qword ptr [rdi + 0x48]
ffffffff80009b68: 4c 8b 67 50          	mov	r12, qword ptr [rdi + 0x50]
ffffffff80009b6c: 4c 8b 6f 58          	mov	r13, qword ptr [rdi + 0x58]
ffffffff80009b70: 4c 8b 77 60          	mov	r14, qword ptr [rdi + 0x60]
ffffffff80009b74: 4c 8b 7f 68          	mov	r15, qword ptr [rdi + 0x68]
ffffffff80009b78: 48 8b 6f 70          	mov	rbp, qword ptr [rdi + 0x70]
ffffffff80009b7c: 48 8b 7f 28          	mov	rdi, qword ptr [rdi + 0x28]
ffffffff80009b80: fb                   	sti
ffffffff80009b81: 48 cf                	iretq
ffffffff80009b83: cc                   	int3

ffffffff80009b84 <return_process>:
ffffffff80009b84: fa                   	cli
ffffffff80009b85: 5b                   	pop	rbx
ffffffff80009b86: 5e                   	pop	rsi
ffffffff80009b87: 5f                   	pop	rdi
ffffffff80009b88: 41 58                	pop	r8
ffffffff80009b8a: 41 59                	pop	r9
ffffffff80009b8c: 41 5a                	pop	r10
ffffffff80009b8e: 41 5b                	pop	r11
ffffffff80009b90: 41 5c                	pop	r12
ffffffff80009b92: 41 5d                	pop	r13
ffffffff80009b94: 41 5e                	pop	r14
ffffffff80009b96: 41 5f                	pop	r15
ffffffff80009b98: 5d                   	pop	rbp
ffffffff80009b99: c3                   	ret
ffffffff80009b9a: cc                   	int3
ffffffff80009b9b: cc                   	int3

ffffffff80009b9c <syscall_handler_64_naked>:
ffffffff80009b9c: 0f 01 f8             	swapgs
ffffffff80009b9f: 65 48 89 24 25 14 00 00 00   	mov	qword ptr gs:[0x14], rsp
ffffffff80009ba8: 65 48 8b 24 25 04 00 00 00   	mov	rsp, qword ptr gs:[0x4]
ffffffff80009bb1: 55                   	push	rbp
ffffffff80009bb2: 41 57                	push	r15
ffffffff80009bb4: 41 56                	push	r14
ffffffff80009bb6: 41 55                	push	r13
ffffffff80009bb8: 41 54                	push	r12
ffffffff80009bba: 41 53                	push	r11
ffffffff80009bbc: 41 52                	push	r10
ffffffff80009bbe: 41 51                	push	r9
ffffffff80009bc0: 41 50                	push	r8
ffffffff80009bc2: 57                   	push	rdi
ffffffff80009bc3: 56                   	push	rsi
ffffffff80009bc4: 52                   	push	rdx
ffffffff80009bc5: 51                   	push	rcx
ffffffff80009bc6: 53                   	push	rbx
ffffffff80009bc7: 65 4c 8b 24 25 14 00 00 00   	mov	r12, qword ptr gs:[0x14]
ffffffff80009bd0: 41 54                	push	r12
ffffffff80009bd2: 48 83 ec 38          	sub	rsp, 0x38
ffffffff80009bd6: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80009bda: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80009bdf: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff80009be4: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80009be9: 49 89 ca             	mov	r10, rcx
ffffffff80009bec: 4c 89 54 24 20       	mov	qword ptr [rsp + 0x20], r10
ffffffff80009bf1: 4c 89 44 24 28       	mov	qword ptr [rsp + 0x28], r8
ffffffff80009bf6: 4c 89 4c 24 30       	mov	qword ptr [rsp + 0x30], r9
ffffffff80009bfb: 48 89 e7             	mov	rdi, rsp
ffffffff80009bfe: 48 89 e6             	mov	rsi, rsp
ffffffff80009c01: 48 83 c6 38          	add	rsi, 0x38
ffffffff80009c05: e8 c6 13 00 00       	call	0xffffffff8000afd0 <syscall_handler_impl>
ffffffff80009c0a: 48 83 c4 38          	add	rsp, 0x38
ffffffff80009c0e: 48 83 c4 08          	add	rsp, 0x8
ffffffff80009c12: 5b                   	pop	rbx
ffffffff80009c13: 59                   	pop	rcx
ffffffff80009c14: 5a                   	pop	rdx
ffffffff80009c15: 5e                   	pop	rsi
ffffffff80009c16: 5f                   	pop	rdi
ffffffff80009c17: 41 58                	pop	r8
ffffffff80009c19: 41 59                	pop	r9
ffffffff80009c1b: 41 5a                	pop	r10
ffffffff80009c1d: 41 5b                	pop	r11
ffffffff80009c1f: 41 5c                	pop	r12
ffffffff80009c21: 41 5d                	pop	r13
ffffffff80009c23: 41 5e                	pop	r14
ffffffff80009c25: 41 5f                	pop	r15
ffffffff80009c27: 5d                   	pop	rbp
ffffffff80009c28: 65 48 8b 24 25 14 00 00 00   	mov	rsp, qword ptr gs:[0x14]
ffffffff80009c31: 0f 01 f8             	swapgs
ffffffff80009c34: 48 0f 07             	sysretq
ffffffff80009c37: cc                   	int3
ffffffff80009c38: cc                   	int3
ffffffff80009c39: cc                   	int3
ffffffff80009c3a: cc                   	int3
ffffffff80009c3b: cc                   	int3
ffffffff80009c3c: cc                   	int3
ffffffff80009c3d: cc                   	int3
ffffffff80009c3e: cc                   	int3
ffffffff80009c3f: cc                   	int3

ffffffff80009c40 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d>:
ffffffff80009c40: 50                   	push	rax
ffffffff80009c41: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80009c44: 48 8b 08             	mov	rcx, qword ptr [rax]
ffffffff80009c47: 48 85 c9             	test	rcx, rcx
ffffffff80009c4a: 74 2d                	je	0xffffffff80009c79 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0x39>
ffffffff80009c4c: 83 f9 01             	cmp	ecx, 0x1
ffffffff80009c4f: 75 68                	jne	0xffffffff80009cb9 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0x79>
ffffffff80009c51: 48 83 c0 08          	add	rax, 0x8
ffffffff80009c55: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80009c59: 48 89 e1             	mov	rcx, rsp
ffffffff80009c5c: ba 09 00 00 00       	mov	edx, 0x9
ffffffff80009c61: 48 89 f7             	mov	rdi, rsi
ffffffff80009c64: 48 c7 c6 79 33 02 80 	mov	rsi, -0x7ffdcc87
ffffffff80009c6b: 49 c7 c0 50 33 02 80 	mov	r8, -0x7ffdccb0
ffffffff80009c72: e8 39 4f 01 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80009c77: 59                   	pop	rcx
ffffffff80009c78: c3                   	ret
ffffffff80009c79: 4c 8d 48 08          	lea	r9, [rax + 0x8]
ffffffff80009c7d: 48 83 c0 10          	add	rax, 0x10
ffffffff80009c81: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80009c85: 48 83 ec 08          	sub	rsp, 0x8
ffffffff80009c89: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80009c8e: ba 06 00 00 00       	mov	edx, 0x6
ffffffff80009c93: 41 b8 04 00 00 00    	mov	r8d, 0x4
ffffffff80009c99: 48 89 f7             	mov	rdi, rsi
ffffffff80009c9c: 48 c7 c6 70 33 02 80 	mov	rsi, -0x7ffdcc90
ffffffff80009ca3: 48 c7 c1 74 20 02 80 	mov	rcx, -0x7ffddf8c
ffffffff80009caa: 68 50 33 02 80       	push	-0x7ffdccb0
ffffffff80009caf: 50                   	push	rax
ffffffff80009cb0: 6a 03                	push	0x3
ffffffff80009cb2: 68 76 33 02 80       	push	-0x7ffdcc8a
ffffffff80009cb7: eb 3e                	jmp	0xffffffff80009cf7 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0xb7>
ffffffff80009cb9: 4c 8d 48 08          	lea	r9, [rax + 0x8]
ffffffff80009cbd: 48 83 c0 10          	add	rax, 0x10
ffffffff80009cc1: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80009cc5: 48 83 ec 08          	sub	rsp, 0x8
ffffffff80009cc9: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80009cce: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80009cd3: 41 b8 04 00 00 00    	mov	r8d, 0x4
ffffffff80009cd9: 48 89 f7             	mov	rdi, rsi
ffffffff80009cdc: 48 c7 c6 70 22 02 80 	mov	rsi, -0x7ffddd90
ffffffff80009ce3: 48 c7 c1 74 20 02 80 	mov	rcx, -0x7ffddf8c
ffffffff80009cea: 68 88 33 02 80       	push	-0x7ffdcc78
ffffffff80009cef: 50                   	push	rax
ffffffff80009cf0: 6a 03                	push	0x3
ffffffff80009cf2: 68 a8 33 02 80       	push	-0x7ffdcc58
ffffffff80009cf7: 68 30 33 02 80       	push	-0x7ffdccd0
ffffffff80009cfc: e8 8f 4d 01 00       	call	0xffffffff8001ea90 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff80009d01: 48 83 c4 30          	add	rsp, 0x30
ffffffff80009d05: 59                   	pop	rcx
ffffffff80009d06: c3                   	ret
ffffffff80009d07: cc                   	int3
ffffffff80009d08: cc                   	int3
ffffffff80009d09: cc                   	int3
ffffffff80009d0a: cc                   	int3
ffffffff80009d0b: cc                   	int3
ffffffff80009d0c: cc                   	int3
ffffffff80009d0d: cc                   	int3
ffffffff80009d0e: cc                   	int3
ffffffff80009d0f: cc                   	int3

ffffffff80009d10 <<&T as core::fmt::Debug>::fmt::h638a8ad3ef3f1de9>:
ffffffff80009d10: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80009d13: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80009d16: a8 10                	test	al, 0x10
ffffffff80009d18: 0f 85 52 41 01 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80009d1e: a8 20                	test	al, 0x20
ffffffff80009d20: 0f 85 ca 41 01 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80009d26: e9 e5 66 01 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80009d2b: cc                   	int3
ffffffff80009d2c: cc                   	int3
ffffffff80009d2d: cc                   	int3
ffffffff80009d2e: cc                   	int3
ffffffff80009d2f: cc                   	int3

ffffffff80009d30 <<&T as core::fmt::Debug>::fmt::h7015926b2d9d56aa>:
ffffffff80009d30: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80009d33: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80009d36: a8 10                	test	al, 0x10
ffffffff80009d38: 0f 85 52 3f 01 00    	jne	0xffffffff8001dc90 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18>
ffffffff80009d3e: a8 20                	test	al, 0x20
ffffffff80009d40: 0f 85 ba 3f 01 00    	jne	0xffffffff8001dd00 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2>
ffffffff80009d46: e9 45 64 01 00       	jmp	0xffffffff80020190 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b>
ffffffff80009d4b: cc                   	int3
ffffffff80009d4c: cc                   	int3
ffffffff80009d4d: cc                   	int3
ffffffff80009d4e: cc                   	int3
ffffffff80009d4f: cc                   	int3

ffffffff80009d50 <<&T as core::fmt::Debug>::fmt::h9bf6857fe883fa9a>:
ffffffff80009d50: 48 89 f7             	mov	rdi, rsi
ffffffff80009d53: ba 02 00 00 00       	mov	edx, 0x2
ffffffff80009d58: 48 c7 c6 28 33 02 80 	mov	rsi, -0x7ffdccd8
ffffffff80009d5f: e9 4c 4a 01 00       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff80009d64: cc                   	int3
ffffffff80009d65: cc                   	int3
ffffffff80009d66: cc                   	int3
ffffffff80009d67: cc                   	int3
ffffffff80009d68: cc                   	int3
ffffffff80009d69: cc                   	int3
ffffffff80009d6a: cc                   	int3
ffffffff80009d6b: cc                   	int3
ffffffff80009d6c: cc                   	int3
ffffffff80009d6d: cc                   	int3
ffffffff80009d6e: cc                   	int3
ffffffff80009d6f: cc                   	int3

ffffffff80009d70 <<&T as core::fmt::Debug>::fmt::he6ab0644ed46e4da>:
ffffffff80009d70: 48 89 f2             	mov	rdx, rsi
ffffffff80009d73: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80009d76: 48 8b 38             	mov	rdi, qword ptr [rax]
ffffffff80009d79: 48 8b 70 08          	mov	rsi, qword ptr [rax + 0x8]
ffffffff80009d7d: e9 0e 52 01 00       	jmp	0xffffffff8001ef90 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff80009d82: cc                   	int3
ffffffff80009d83: cc                   	int3
ffffffff80009d84: cc                   	int3
ffffffff80009d85: cc                   	int3
ffffffff80009d86: cc                   	int3
ffffffff80009d87: cc                   	int3
ffffffff80009d88: cc                   	int3
ffffffff80009d89: cc                   	int3
ffffffff80009d8a: cc                   	int3
ffffffff80009d8b: cc                   	int3
ffffffff80009d8c: cc                   	int3
ffffffff80009d8d: cc                   	int3
ffffffff80009d8e: cc                   	int3
ffffffff80009d8f: cc                   	int3

ffffffff80009d90 <<&T as core::fmt::Debug>::fmt::hf28f55f836680ef2>:
ffffffff80009d90: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80009d93: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80009d96: a8 10                	test	al, 0x10
ffffffff80009d98: 0f 85 d2 40 01 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80009d9e: a8 20                	test	al, 0x20
ffffffff80009da0: 0f 85 4a 41 01 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80009da6: e9 65 66 01 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80009dab: cc                   	int3
ffffffff80009dac: cc                   	int3
ffffffff80009dad: cc                   	int3
ffffffff80009dae: cc                   	int3
ffffffff80009daf: cc                   	int3

ffffffff80009db0 <<&T as core::fmt::Display>::fmt::h3db49864f978420e>:
ffffffff80009db0: 48 89 f2             	mov	rdx, rsi
ffffffff80009db3: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80009db6: 48 8b 77 08          	mov	rsi, qword ptr [rdi + 0x8]
ffffffff80009dba: 48 89 c7             	mov	rdi, rax
ffffffff80009dbd: e9 6e 55 01 00       	jmp	0xffffffff8001f330 <<str as core::fmt::Display>::fmt::h8862704feddd2413>
ffffffff80009dc2: cc                   	int3
ffffffff80009dc3: cc                   	int3
ffffffff80009dc4: cc                   	int3
ffffffff80009dc5: cc                   	int3
ffffffff80009dc6: cc                   	int3
ffffffff80009dc7: cc                   	int3
ffffffff80009dc8: cc                   	int3
ffffffff80009dc9: cc                   	int3
ffffffff80009dca: cc                   	int3
ffffffff80009dcb: cc                   	int3
ffffffff80009dcc: cc                   	int3
ffffffff80009dcd: cc                   	int3
ffffffff80009dce: cc                   	int3
ffffffff80009dcf: cc                   	int3

ffffffff80009dd0 <<&T as core::fmt::Display>::fmt::h6f93a5d34fda4e37>:
ffffffff80009dd0: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80009dd3: e9 e8 43 01 00       	jmp	0xffffffff8001e1c0 <<core::fmt::Arguments as core::fmt::Display>::fmt::h748934159bb7ee61>
ffffffff80009dd8: cc                   	int3
ffffffff80009dd9: cc                   	int3
ffffffff80009dda: cc                   	int3
ffffffff80009ddb: cc                   	int3
ffffffff80009ddc: cc                   	int3
ffffffff80009ddd: cc                   	int3
ffffffff80009dde: cc                   	int3
ffffffff80009ddf: cc                   	int3

ffffffff80009de0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff80009de0: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80009de3: a8 10                	test	al, 0x10
ffffffff80009de5: 0f 85 85 40 01 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80009deb: a8 20                	test	al, 0x20
ffffffff80009ded: 0f 85 fd 40 01 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80009df3: e9 18 66 01 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80009df8: cc                   	int3
ffffffff80009df9: cc                   	int3
ffffffff80009dfa: cc                   	int3
ffffffff80009dfb: cc                   	int3
ffffffff80009dfc: cc                   	int3
ffffffff80009dfd: cc                   	int3
ffffffff80009dfe: cc                   	int3
ffffffff80009dff: cc                   	int3

ffffffff80009e00 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt::h6ce4b9efecb5b2c5.llvm.16827703523949014305>:
ffffffff80009e00: 50                   	push	rax
ffffffff80009e01: 49 89 f9             	mov	r9, rdi
ffffffff80009e04: 48 8d 47 08          	lea	rax, [rdi + 0x8]
ffffffff80009e08: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80009e0c: 48 83 ec 08          	sub	rsp, 0x8
ffffffff80009e10: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80009e15: ba 09 00 00 00       	mov	edx, 0x9
ffffffff80009e1a: 41 b8 0b 00 00 00    	mov	r8d, 0xb
ffffffff80009e20: 48 89 f7             	mov	rdi, rsi
ffffffff80009e23: 48 c7 c6 d0 33 02 80 	mov	rsi, -0x7ffdcc30
ffffffff80009e2a: 48 c7 c1 d9 33 02 80 	mov	rcx, -0x7ffdcc27
ffffffff80009e31: 68 b0 33 02 80       	push	-0x7ffdcc50
ffffffff80009e36: 50                   	push	rax
ffffffff80009e37: 6a 09                	push	0x9
ffffffff80009e39: 68 e4 33 02 80       	push	-0x7ffdcc1c
ffffffff80009e3e: 68 30 33 02 80       	push	-0x7ffdccd0
ffffffff80009e43: e8 48 4c 01 00       	call	0xffffffff8001ea90 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff80009e48: 48 83 c4 30          	add	rsp, 0x30
ffffffff80009e4c: 59                   	pop	rcx
ffffffff80009e4d: c3                   	ret
ffffffff80009e4e: cc                   	int3
ffffffff80009e4f: cc                   	int3

ffffffff80009e50 <taos::devices::init::h61c9013a5b982c46>:
ffffffff80009e50: 41 56                	push	r14
ffffffff80009e52: 53                   	push	rbx
ffffffff80009e53: 48 83 ec 58          	sub	rsp, 0x58
ffffffff80009e57: 85 ff                	test	edi, edi
ffffffff80009e59: 74 08                	je	0xffffffff80009e63 <taos::devices::init::h61c9013a5b982c46+0x13>
ffffffff80009e5b: 48 83 c4 58          	add	rsp, 0x58
ffffffff80009e5f: 5b                   	pop	rbx
ffffffff80009e60: 41 5e                	pop	r14
ffffffff80009e62: c3                   	ret
ffffffff80009e63: 48 c7 c7 c0 b0 02 80 	mov	rdi, -0x7ffd4f40
ffffffff80009e6a: e8 71 35 01 00       	call	0xffffffff8001d3e0 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff80009e6f: 48 85 c0             	test	rax, rax
ffffffff80009e72: 0f 84 92 00 00 00    	je	0xffffffff80009f0a <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff80009e78: 48 89 c3             	mov	rbx, rax
ffffffff80009e7b: 48 c7 44 24 10 00 34 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdcc00
ffffffff80009e84: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff80009e8d: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff80009e96: 48 89 e0             	mov	rax, rsp
ffffffff80009e99: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80009e9e: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80009ea7: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80009eac: e8 5f e4 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80009eb1: 48 8b 43 10          	mov	rax, qword ptr [rbx + 0x10]
ffffffff80009eb5: 48 85 c0             	test	rax, rax
ffffffff80009eb8: 74 50                	je	0xffffffff80009f0a <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff80009eba: 48 83 7b 08 00       	cmp	qword ptr [rbx + 0x8], 0x0
ffffffff80009ebf: 74 49                	je	0xffffffff80009f0a <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff80009ec1: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff80009ec4: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80009ec9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80009ed0: 48 8d 51 ff          	lea	rdx, [rcx - 0x1]
ffffffff80009ed4: 48 8b 30             	mov	rsi, qword ptr [rax]
ffffffff80009ed7: 48 8b 78 18          	mov	rdi, qword ptr [rax + 0x18]
ffffffff80009edb: 48 83 c7 04          	add	rdi, 0x4
ffffffff80009edf: 48 0f af fa          	imul	rdi, rdx
ffffffff80009ee3: c7 04 3e ff ff ff ff 	mov	dword ptr [rsi + rdi], 0xffffffff
ffffffff80009eea: 48 8b 10             	mov	rdx, qword ptr [rax]
ffffffff80009eed: 48 8b 70 18          	mov	rsi, qword ptr [rax + 0x18]
ffffffff80009ef1: 48 83 c6 04          	add	rsi, 0x4
ffffffff80009ef5: 48 0f af f1          	imul	rsi, rcx
ffffffff80009ef9: c7 04 32 ff ff ff ff 	mov	dword ptr [rdx + rsi], 0xffffffff
ffffffff80009f00: 48 83 c1 02          	add	rcx, 0x2
ffffffff80009f04: 48 83 f9 65          	cmp	rcx, 0x65
ffffffff80009f08: 75 c6                	jne	0xffffffff80009ed0 <taos::devices::init::h61c9013a5b982c46+0x80>
ffffffff80009f0a: 48 8d 5c 24 40       	lea	rbx, [rsp + 0x40]
ffffffff80009f0f: 48 89 df             	mov	rdi, rbx
ffffffff80009f12: e8 09 e1 ff ff       	call	0xffffffff80008020 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90>
ffffffff80009f17: 48 89 df             	mov	rdi, rbx
ffffffff80009f1a: e8 b1 16 00 00       	call	0xffffffff8000b5d0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac>
ffffffff80009f1f: 48 85 c0             	test	rax, rax
ffffffff80009f22: 0f 84 53 01 00 00    	je	0xffffffff8000a07b <taos::devices::init::h61c9013a5b982c46+0x22b>
ffffffff80009f28: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80009f2d: 0f b6 05 64 13 02 00 	movzx	eax, byte ptr [rip + 0x21364] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff80009f34: 3c 02                	cmp	al, 0x2
ffffffff80009f36: 0f 85 2e 01 00 00    	jne	0xffffffff8000a06a <taos::devices::init::h61c9013a5b982c46+0x21a>
ffffffff80009f3c: b1 01                	mov	cl, 0x1
ffffffff80009f3e: 66 90                	nop
ffffffff80009f40: 31 c0                	xor	eax, eax
ffffffff80009f42: f0                   	lock
ffffffff80009f43: 0f b0 0d 36 13 02 00 	cmpxchg	byte ptr [rip + 0x21336], cl # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80009f4a: 75 06                	jne	0xffffffff80009f52 <taos::devices::init::h61c9013a5b982c46+0x102>
ffffffff80009f4c: eb 11                	jmp	0xffffffff80009f5f <taos::devices::init::h61c9013a5b982c46+0x10f>
ffffffff80009f4e: 66 90                	nop
ffffffff80009f50: f3 90                	pause
ffffffff80009f52: 0f b6 05 27 13 02 00 	movzx	eax, byte ptr [rip + 0x21327] # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80009f59: 84 c0                	test	al, al
ffffffff80009f5b: 75 f3                	jne	0xffffffff80009f50 <taos::devices::init::h61c9013a5b982c46+0x100>
ffffffff80009f5d: eb e1                	jmp	0xffffffff80009f40 <taos::devices::init::h61c9013a5b982c46+0xf0>
ffffffff80009f5f: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80009f64: 48 c7 c6 88 b2 02 80 	mov	rsi, -0x7ffd4d78
ffffffff80009f6b: e8 40 17 00 00       	call	0xffffffff8000b6b0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6>
ffffffff80009f70: 3c 06                	cmp	al, 0x6
ffffffff80009f72: 0f 85 1b 01 00 00    	jne	0xffffffff8000a093 <taos::devices::init::h61c9013a5b982c46+0x243>
ffffffff80009f78: 48 c7 44 24 10 80 34 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdcb80
ffffffff80009f81: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff80009f8a: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff80009f93: 48 89 e0             	mov	rax, rsp
ffffffff80009f96: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80009f9b: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80009fa4: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80009fa9: e8 62 e3 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80009fae: c6 05 cb 12 02 00 00 	mov	byte ptr [rip + 0x212cb], 0x0 # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80009fb5: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80009fba: f0                   	lock
ffffffff80009fbb: 48 ff 08             	dec	qword ptr [rax]
ffffffff80009fbe: 75 0a                	jne	0xffffffff80009fca <taos::devices::init::h61c9013a5b982c46+0x17a>
ffffffff80009fc0: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80009fc5: e8 66 8e 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff80009fca: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80009fcf: 4d 85 f6             	test	r14, r14
ffffffff80009fd2: 74 28                	je	0xffffffff80009ffc <taos::devices::init::h61c9013a5b982c46+0x1ac>
ffffffff80009fd4: 48 8b 5c 24 48       	mov	rbx, qword ptr [rsp + 0x48]
ffffffff80009fd9: eb 0e                	jmp	0xffffffff80009fe9 <taos::devices::init::h61c9013a5b982c46+0x199>
ffffffff80009fdb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80009fe0: 48 83 c3 08          	add	rbx, 0x8
ffffffff80009fe4: 49 ff ce             	dec	r14
ffffffff80009fe7: 74 13                	je	0xffffffff80009ffc <taos::devices::init::h61c9013a5b982c46+0x1ac>
ffffffff80009fe9: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff80009fec: f0                   	lock
ffffffff80009fed: 48 ff 08             	dec	qword ptr [rax]
ffffffff80009ff0: 75 ee                	jne	0xffffffff80009fe0 <taos::devices::init::h61c9013a5b982c46+0x190>
ffffffff80009ff2: 48 89 df             	mov	rdi, rbx
ffffffff80009ff5: e8 36 8e 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff80009ffa: eb e4                	jmp	0xffffffff80009fe0 <taos::devices::init::h61c9013a5b982c46+0x190>
ffffffff80009ffc: 48 8b 4c 24 40       	mov	rcx, qword ptr [rsp + 0x40]
ffffffff8000a001: 48 85 c9             	test	rcx, rcx
ffffffff8000a004: 0f 84 51 fe ff ff    	je	0xffffffff80009e5b <taos::devices::init::h61c9013a5b982c46+0xb>
ffffffff8000a00a: 48 8b 74 24 48       	mov	rsi, qword ptr [rsp + 0x48]
ffffffff8000a00f: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8000a013: b2 01                	mov	dl, 0x1
ffffffff8000a015: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8000a020: 31 c0                	xor	eax, eax
ffffffff8000a022: f0                   	lock
ffffffff8000a023: 0f b0 15 d6 0f 02 00 	cmpxchg	byte ptr [rip + 0x20fd6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a02a: 74 1e                	je	0xffffffff8000a04a <taos::devices::init::h61c9013a5b982c46+0x1fa>
ffffffff8000a02c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000a030: 0f b6 05 c9 0f 02 00 	movzx	eax, byte ptr [rip + 0x20fc9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a037: 84 c0                	test	al, al
ffffffff8000a039: 74 e5                	je	0xffffffff8000a020 <taos::devices::init::h61c9013a5b982c46+0x1d0>
ffffffff8000a03b: f3 90                	pause
ffffffff8000a03d: 0f b6 05 bc 0f 02 00 	movzx	eax, byte ptr [rip + 0x20fbc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a044: 84 c0                	test	al, al
ffffffff8000a046: 75 f3                	jne	0xffffffff8000a03b <taos::devices::init::h61c9013a5b982c46+0x1eb>
ffffffff8000a048: eb d6                	jmp	0xffffffff8000a020 <taos::devices::init::h61c9013a5b982c46+0x1d0>
ffffffff8000a04a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8000a04f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000a056: e8 95 27 00 00       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000a05b: c6 05 9e 0f 02 00 00 	mov	byte ptr [rip + 0x20f9e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a062: 48 83 c4 58          	add	rsp, 0x58
ffffffff8000a066: 5b                   	pop	rbx
ffffffff8000a067: 41 5e                	pop	r14
ffffffff8000a069: c3                   	ret
ffffffff8000a06a: 48 c7 c7 80 b2 02 80 	mov	rdi, -0x7ffd4d80
ffffffff8000a071: e8 da 46 00 00       	call	0xffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>
ffffffff8000a076: e9 c1 fe ff ff       	jmp	0xffffffff80009f3c <taos::devices::init::h61c9013a5b982c46+0xec>
ffffffff8000a07b: be 29 00 00 00       	mov	esi, 0x29
ffffffff8000a080: 48 c7 c7 10 34 02 80 	mov	rdi, -0x7ffdcbf0
ffffffff8000a087: 48 c7 c2 50 34 02 80 	mov	rdx, -0x7ffdcbb0
ffffffff8000a08e: e8 cd 75 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000a093: 88 44 24 10          	mov	byte ptr [rsp + 0x10], al
ffffffff8000a097: 48 8d 54 24 10       	lea	rdx, [rsp + 0x10]
ffffffff8000a09c: be 2b 00 00 00       	mov	esi, 0x2b
ffffffff8000a0a1: 48 c7 c7 b0 34 02 80 	mov	rdi, -0x7ffdcb50
ffffffff8000a0a8: 48 c7 c1 90 34 02 80 	mov	rcx, -0x7ffdcb70
ffffffff8000a0af: 49 c7 c0 e0 34 02 80 	mov	r8, -0x7ffdcb20
ffffffff8000a0b6: e8 a5 6a 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000a0bb: cc                   	int3
ffffffff8000a0bc: cc                   	int3
ffffffff8000a0bd: cc                   	int3
ffffffff8000a0be: cc                   	int3
ffffffff8000a0bf: cc                   	int3

ffffffff8000a0c0 <taos::processes::process::get_current_pid::h7a1bafd59875523a>:
ffffffff8000a0c0: 53                   	push	rbx
ffffffff8000a0c1: e8 0a 8a ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8000a0c6: 0f b6 05 73 11 02 00 	movzx	eax, byte ptr [rip + 0x21173] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000a0cd: 3c 02                	cmp	al, 0x2
ffffffff8000a0cf: 0f 85 ea 00 00 00    	jne	0xffffffff8000a1bf <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xff>
ffffffff8000a0d5: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff8000a0df: 48 8b 05 52 11 02 00 	mov	rax, qword ptr [rip + 0x21152] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000a0e6: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000a0eb: f0                   	lock
ffffffff8000a0ec: 48 0f c1 70 10       	xadd	qword ptr [rax + 0x10], rsi
ffffffff8000a0f1: 48 39 ce             	cmp	rsi, rcx
ffffffff8000a0f4: 77 28                	ja	0xffffffff8000a11e <taos::processes::process::get_current_pid::h7a1bafd59875523a+0x5e>
ffffffff8000a0f6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000a100: 40 f6 c6 03          	test	sil, 0x3
ffffffff8000a104: 74 36                	je	0xffffffff8000a13c <taos::processes::process::get_current_pid::h7a1bafd59875523a+0x7c>
ffffffff8000a106: f0                   	lock
ffffffff8000a107: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000a10c: f3 90                	pause
ffffffff8000a10e: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000a113: f0                   	lock
ffffffff8000a114: 48 0f c1 70 10       	xadd	qword ptr [rax + 0x10], rsi
ffffffff8000a119: 48 39 ce             	cmp	rsi, rcx
ffffffff8000a11c: 76 e2                	jbe	0xffffffff8000a100 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0x40>
ffffffff8000a11e: f0                   	lock
ffffffff8000a11f: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000a124: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff8000a129: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff8000a130: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff8000a137: e8 b4 6f 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000a13c: 48 8b 48 18          	mov	rcx, qword ptr [rax + 0x18]
ffffffff8000a140: 48 85 c9             	test	rcx, rcx
ffffffff8000a143: 74 6e                	je	0xffffffff8000a1b3 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xf3>
ffffffff8000a145: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff8000a149: bf ff 00 00 00       	mov	edi, 0xff
ffffffff8000a14e: 44 0f b7 89 8e 00 00 00      	movzx	r9d, word ptr [rcx + 0x8e]
ffffffff8000a156: 45 89 ca             	mov	r10d, r9d
ffffffff8000a159: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff8000a15d: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff8000a164: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8000a170: 4d 85 d2             	test	r10, r10
ffffffff8000a173: 74 2b                	je	0xffffffff8000a1a0 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xe0>
ffffffff8000a175: 45 31 db             	xor	r11d, r11d
ffffffff8000a178: 42 39 54 81 64       	cmp	dword ptr [rcx + 4*r8 + 0x64], edx
ffffffff8000a17d: 41 0f 95 c3          	setne	r11b
ffffffff8000a181: 44 0f 47 df          	cmova	r11d, edi
ffffffff8000a185: 49 ff c0             	inc	r8
ffffffff8000a188: 49 83 c2 fc          	add	r10, -0x4
ffffffff8000a18c: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff8000a190: 74 de                	je	0xffffffff8000a170 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xb0>
ffffffff8000a192: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff8000a196: 45 85 c9             	test	r9d, r9d
ffffffff8000a199: 74 1a                	je	0xffffffff8000a1b5 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xf5>
ffffffff8000a19b: eb 06                	jmp	0xffffffff8000a1a3 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xe3>
ffffffff8000a19d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000a1a0: 4d 89 c8             	mov	r8, r9
ffffffff8000a1a3: 48 83 ee 01          	sub	rsi, 0x1
ffffffff8000a1a7: 72 0a                	jb	0xffffffff8000a1b3 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0xf3>
ffffffff8000a1a9: 4a 8b 8c c1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x90]
ffffffff8000a1b1: eb 9b                	jmp	0xffffffff8000a14e <taos::processes::process::get_current_pid::h7a1bafd59875523a+0x8e>
ffffffff8000a1b3: 31 d2                	xor	edx, edx
ffffffff8000a1b5: f0                   	lock
ffffffff8000a1b6: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000a1bb: 89 d0                	mov	eax, edx
ffffffff8000a1bd: 5b                   	pop	rbx
ffffffff8000a1be: c3                   	ret
ffffffff8000a1bf: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000a1c6: 89 d3                	mov	ebx, edx
ffffffff8000a1c8: e8 33 52 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000a1cd: 89 da                	mov	edx, ebx
ffffffff8000a1cf: e9 01 ff ff ff       	jmp	0xffffffff8000a0d5 <taos::processes::process::get_current_pid::h7a1bafd59875523a+0x15>
ffffffff8000a1d4: cc                   	int3
ffffffff8000a1d5: cc                   	int3
ffffffff8000a1d6: cc                   	int3
ffffffff8000a1d7: cc                   	int3
ffffffff8000a1d8: cc                   	int3
ffffffff8000a1d9: cc                   	int3
ffffffff8000a1da: cc                   	int3
ffffffff8000a1db: cc                   	int3
ffffffff8000a1dc: cc                   	int3
ffffffff8000a1dd: cc                   	int3
ffffffff8000a1de: cc                   	int3
ffffffff8000a1df: cc                   	int3

ffffffff8000a1e0 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837>:
ffffffff8000a1e0: 41 56                	push	r14
ffffffff8000a1e2: 53                   	push	rbx
ffffffff8000a1e3: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8000a1e7: e8 14 06 00 00       	call	0xffffffff8000a800 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305>
ffffffff8000a1ec: 48 89 c3             	mov	rbx, rax
ffffffff8000a1ef: 0f b6 05 eb 0f 02 00 	movzx	eax, byte ptr [rip + 0x20feb] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000a1f6: b1 01                	mov	cl, 0x1
ffffffff8000a1f8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000a200: 31 c0                	xor	eax, eax
ffffffff8000a202: f0                   	lock
ffffffff8000a203: 0f b0 0d f6 0d 02 00 	cmpxchg	byte ptr [rip + 0x20df6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a20a: 75 06                	jne	0xffffffff8000a212 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x32>
ffffffff8000a20c: eb 11                	jmp	0xffffffff8000a21f <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x3f>
ffffffff8000a20e: 66 90                	nop
ffffffff8000a210: f3 90                	pause
ffffffff8000a212: 0f b6 05 e7 0d 02 00 	movzx	eax, byte ptr [rip + 0x20de7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a219: 84 c0                	test	al, al
ffffffff8000a21b: 75 f3                	jne	0xffffffff8000a210 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x30>
ffffffff8000a21d: eb e1                	jmp	0xffffffff8000a200 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x20>
ffffffff8000a21f: be 08 00 00 00       	mov	esi, 0x8
ffffffff8000a224: ba 08 01 00 00       	mov	edx, 0x108
ffffffff8000a229: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000a230: e8 1b 28 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000a235: c6 05 c4 0d 02 00 00 	mov	byte ptr [rip + 0x20dc4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a23c: 48 85 c0             	test	rax, rax
ffffffff8000a23f: 0f 84 1d 01 00 00    	je	0xffffffff8000a362 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x182>
ffffffff8000a245: 49 89 c6             	mov	r14, rax
ffffffff8000a248: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000a24f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff8000a257: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff8000a25f: 48 c7 40 18 08 00 00 00      	mov	qword ptr [rax + 0x18], 0x8
ffffffff8000a267: 48 89 c7             	mov	rdi, rax
ffffffff8000a26a: 48 83 c7 20          	add	rdi, 0x20
ffffffff8000a26e: ba b0 00 00 00       	mov	edx, 0xb0
ffffffff8000a273: 31 f6                	xor	esi, esi
ffffffff8000a275: ff 15 c5 21 03 00    	call	qword ptr [rip + 0x321c5] # 0xffffffff8003c440
ffffffff8000a27b: 49 89 9e d0 00 00 00 	mov	qword ptr [r14 + 0xd0], rbx
ffffffff8000a282: 48 b8 00 00 00 00 00 09 00 00	movabs	rax, 0x90000000000
ffffffff8000a28c: 49 89 86 d8 00 00 00 	mov	qword ptr [r14 + 0xd8], rax
ffffffff8000a293: 49 c7 86 e0 00 00 00 00 00 00 00     	mov	qword ptr [r14 + 0xe0], 0x0
ffffffff8000a29e: 49 c7 86 e8 00 00 00 00 00 00 00     	mov	qword ptr [r14 + 0xe8], 0x0
ffffffff8000a2a9: 49 c7 86 f0 00 00 00 00 00 00 00     	mov	qword ptr [r14 + 0xf0], 0x0
ffffffff8000a2b4: 49 c7 86 f8 00 00 00 00 00 00 00     	mov	qword ptr [r14 + 0xf8], 0x0
ffffffff8000a2bf: 49 c7 86 fd 00 00 00 00 00 00 00     	mov	qword ptr [r14 + 0xfd], 0x0
ffffffff8000a2ca: 4c 89 74 24 08       	mov	qword ptr [rsp + 0x8], r14
ffffffff8000a2cf: 0f b6 05 6a 0f 02 00 	movzx	eax, byte ptr [rip + 0x20f6a] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000a2d6: 3c 02                	cmp	al, 0x2
ffffffff8000a2d8: 75 77                	jne	0xffffffff8000a351 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x171>
ffffffff8000a2da: 48 8b 1d 57 0f 02 00 	mov	rbx, qword ptr [rip + 0x20f57] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000a2e1: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000a2e6: 31 c0                	xor	eax, eax
ffffffff8000a2e8: f0                   	lock
ffffffff8000a2e9: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000a2ee: 74 0c                	je	0xffffffff8000a2fc <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x11c>
ffffffff8000a2f0: f3 90                	pause
ffffffff8000a2f2: 31 c0                	xor	eax, eax
ffffffff8000a2f4: f0                   	lock
ffffffff8000a2f5: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000a2fa: 75 f4                	jne	0xffffffff8000a2f0 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x110>
ffffffff8000a2fc: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8000a301: f0                   	lock
ffffffff8000a302: 48 ff 02             	inc	qword ptr [rdx]
ffffffff8000a305: 7e 6a                	jle	0xffffffff8000a371 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x191>
ffffffff8000a307: 48 8d 7b 18          	lea	rdi, [rbx + 0x18]
ffffffff8000a30b: 31 f6                	xor	esi, esi
ffffffff8000a30d: e8 1e 7b 00 00       	call	0xffffffff80011e30 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b>
ffffffff8000a312: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000a317: 48 85 c0             	test	rax, rax
ffffffff8000a31a: 74 10                	je	0xffffffff8000a32c <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x14c>
ffffffff8000a31c: f0                   	lock
ffffffff8000a31d: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000a320: 75 0a                	jne	0xffffffff8000a32c <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x14c>
ffffffff8000a322: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000a327: e8 34 88 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000a32c: f0                   	lock
ffffffff8000a32d: 48 83 63 10 fc       	and	qword ptr [rbx + 0x10], -0x4
ffffffff8000a332: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000a337: f0                   	lock
ffffffff8000a338: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000a33b: 75 0a                	jne	0xffffffff8000a347 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0x167>
ffffffff8000a33d: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000a342: e8 19 88 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000a347: 31 c0                	xor	eax, eax
ffffffff8000a349: 48 83 c4 18          	add	rsp, 0x18
ffffffff8000a34d: 5b                   	pop	rbx
ffffffff8000a34e: 41 5e                	pop	r14
ffffffff8000a350: c3                   	ret
ffffffff8000a351: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000a358: e8 a3 50 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000a35d: e9 78 ff ff ff       	jmp	0xffffffff8000a2da <taos::processes::process::create_placeholder_process::h6869b1eb5f733837+0xfa>
ffffffff8000a362: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000a367: be 08 01 00 00       	mov	esi, 0x108
ffffffff8000a36c: e8 41 38 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000a371: 0f 0b                	ud2
ffffffff8000a373: cc                   	int3
ffffffff8000a374: cc                   	int3
ffffffff8000a375: cc                   	int3
ffffffff8000a376: cc                   	int3
ffffffff8000a377: cc                   	int3
ffffffff8000a378: cc                   	int3
ffffffff8000a379: cc                   	int3
ffffffff8000a37a: cc                   	int3
ffffffff8000a37b: cc                   	int3
ffffffff8000a37c: cc                   	int3
ffffffff8000a37d: cc                   	int3
ffffffff8000a37e: cc                   	int3
ffffffff8000a37f: cc                   	int3

ffffffff8000a380 <taos::processes::process::create_process::ha385fce1049c264a>:
ffffffff8000a380: 55                   	push	rbp
ffffffff8000a381: 41 57                	push	r15
ffffffff8000a383: 41 56                	push	r14
ffffffff8000a385: 41 54                	push	r12
ffffffff8000a387: 53                   	push	rbx
ffffffff8000a388: 48 81 ec 90 00 00 00 	sub	rsp, 0x90
ffffffff8000a38f: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8000a394: f0                   	lock
ffffffff8000a395: 0f c1 05 94 0c 02 00 	xadd	dword ptr [rip + 0x20c94], eax # 0xffffffff8002b030 <taos::processes::process::NEXT_PID::h2fc14043a26d336e>
ffffffff8000a39c: 89 44 24 0c          	mov	dword ptr [rsp + 0xc], eax
ffffffff8000a3a0: b1 01                	mov	cl, 0x1
ffffffff8000a3a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000a3b0: 31 c0                	xor	eax, eax
ffffffff8000a3b2: f0                   	lock
ffffffff8000a3b3: 0f b0 0d 7e 0c 02 00 	cmpxchg	byte ptr [rip + 0x20c7e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000a3ba: 75 06                	jne	0xffffffff8000a3c2 <taos::processes::process::create_process::ha385fce1049c264a+0x42>
ffffffff8000a3bc: eb 11                	jmp	0xffffffff8000a3cf <taos::processes::process::create_process::ha385fce1049c264a+0x4f>
ffffffff8000a3be: 66 90                	nop
ffffffff8000a3c0: f3 90                	pause
ffffffff8000a3c2: 0f b6 05 6f 0c 02 00 	movzx	eax, byte ptr [rip + 0x20c6f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000a3c9: 84 c0                	test	al, al
ffffffff8000a3cb: 75 f3                	jne	0xffffffff8000a3c0 <taos::processes::process::create_process::ha385fce1049c264a+0x40>
ffffffff8000a3cd: eb e1                	jmp	0xffffffff8000a3b0 <taos::processes::process::create_process::ha385fce1049c264a+0x30>
ffffffff8000a3cf: 83 3d 6a 0c 02 00 02 	cmp	dword ptr [rip + 0x20c6a], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000a3d6: 74 3e                	je	0xffffffff8000a416 <taos::processes::process::create_process::ha385fce1049c264a+0x96>
ffffffff8000a3d8: 48 c7 44 24 18 c0 3d 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc240
ffffffff8000a3e1: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000a3ea: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000a3f3: 48 c7 44 24 28 08 00 00 00   	mov	qword ptr [rsp + 0x28], 0x8
ffffffff8000a3fc: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000a405: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000a40a: 48 c7 c6 f0 3d 02 80 	mov	rsi, -0x7ffdc210
ffffffff8000a411: e8 5a 6c 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000a416: 49 89 fe             	mov	r14, rdi
ffffffff8000a419: 49 89 f7             	mov	r15, rsi
ffffffff8000a41c: 48 c7 44 24 48 88 b0 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffd4f78
ffffffff8000a425: 48 c7 44 24 50 10 04 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffdfbf0
ffffffff8000a42e: 48 c7 44 24 18 a0 31 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdce60
ffffffff8000a437: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8000a440: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000a449: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff8000a44e: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000a453: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8000a45c: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000a461: e8 aa de ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000a466: c6 05 cb 0b 02 00 00 	mov	byte ptr [rip + 0x20bcb], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000a46d: e8 8e 03 00 00       	call	0xffffffff8000a800 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305>
ffffffff8000a472: 48 89 c3             	mov	rbx, rax
ffffffff8000a475: 0f b6 05 2c 0e 02 00 	movzx	eax, byte ptr [rip + 0x20e2c] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a47c: 3c 02                	cmp	al, 0x2
ffffffff8000a47e: 0f 85 05 03 00 00    	jne	0xffffffff8000a789 <taos::processes::process::create_process::ha385fce1049c264a+0x409>
ffffffff8000a484: 4c 8b 25 15 0e 02 00 	mov	r12, qword ptr [rip + 0x20e15] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000a48b: 49 01 dc             	add	r12, rbx
ffffffff8000a48e: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000a498: 4c 01 e0             	add	rax, r12
ffffffff8000a49b: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000a49f: 0f 85 28 03 00 00    	jne	0xffffffff8000a7cd <taos::processes::process::create_process::ha385fce1049c264a+0x44d>
ffffffff8000a4a5: 0f b6 05 fc 0d 02 00 	movzx	eax, byte ptr [rip + 0x20dfc] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a4ac: 3c 02                	cmp	al, 0x2
ffffffff8000a4ae: 0f 85 e6 02 00 00    	jne	0xffffffff8000a79a <taos::processes::process::create_process::ha385fce1049c264a+0x41a>
ffffffff8000a4b4: 48 8b 05 e5 0d 02 00 	mov	rax, qword ptr [rip + 0x20de5] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000a4bb: 4c 89 64 24 70       	mov	qword ptr [rsp + 0x70], r12
ffffffff8000a4c0: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8000a4c5: 0f b6 05 cc 0d 02 00 	movzx	eax, byte ptr [rip + 0x20dcc] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff8000a4cc: 3c 02                	cmp	al, 0x2
ffffffff8000a4ce: 0f 85 d7 02 00 00    	jne	0xffffffff8000a7ab <taos::processes::process::create_process::ha385fce1049c264a+0x42b>
ffffffff8000a4d4: 41 b4 01             	mov	r12b, 0x1
ffffffff8000a4d7: 31 c0                	xor	eax, eax
ffffffff8000a4d9: f0                   	lock
ffffffff8000a4da: 44 0f b0 25 9e 0d 02 00      	cmpxchg	byte ptr [rip + 0x20d9e], r12b # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a4e2: 4c 89 fe             	mov	rsi, r15
ffffffff8000a4e5: 4c 89 f7             	mov	rdi, r14
ffffffff8000a4e8: 75 08                	jne	0xffffffff8000a4f2 <taos::processes::process::create_process::ha385fce1049c264a+0x172>
ffffffff8000a4ea: eb 1e                	jmp	0xffffffff8000a50a <taos::processes::process::create_process::ha385fce1049c264a+0x18a>
ffffffff8000a4ec: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000a4f0: f3 90                	pause
ffffffff8000a4f2: 0f b6 05 87 0d 02 00 	movzx	eax, byte ptr [rip + 0x20d87] # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a4f9: 84 c0                	test	al, al
ffffffff8000a4fb: 75 f3                	jne	0xffffffff8000a4f0 <taos::processes::process::create_process::ha385fce1049c264a+0x170>
ffffffff8000a4fd: 31 c0                	xor	eax, eax
ffffffff8000a4ff: f0                   	lock
ffffffff8000a500: 44 0f b0 25 78 0d 02 00      	cmpxchg	byte ptr [rip + 0x20d78], r12b # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a508: 75 e8                	jne	0xffffffff8000a4f2 <taos::processes::process::create_process::ha385fce1049c264a+0x172>
ffffffff8000a50a: 48 8d 54 24 70       	lea	rdx, [rsp + 0x70]
ffffffff8000a50f: 48 c7 c1 88 b2 02 80 	mov	rcx, -0x7ffd4d78
ffffffff8000a516: e8 c5 93 00 00       	call	0xffffffff800138e0 <taos::processes::loader::load_elf::ha68086dbc075a067>
ffffffff8000a51b: 49 89 c6             	mov	r14, rax
ffffffff8000a51e: 49 89 d7             	mov	r15, rdx
ffffffff8000a521: c6 05 58 0d 02 00 00 	mov	byte ptr [rip + 0x20d58], 0x0 # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a528: 8b 6c 24 0c          	mov	ebp, dword ptr [rsp + 0xc]
ffffffff8000a52c: 0f b6 05 ae 0c 02 00 	movzx	eax, byte ptr [rip + 0x20cae] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000a533: 31 c0                	xor	eax, eax
ffffffff8000a535: f0                   	lock
ffffffff8000a536: 44 0f b0 25 c2 0a 02 00      	cmpxchg	byte ptr [rip + 0x20ac2], r12b # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a53e: 74 29                	je	0xffffffff8000a569 <taos::processes::process::create_process::ha385fce1049c264a+0x1e9>
ffffffff8000a540: b1 01                	mov	cl, 0x1
ffffffff8000a542: eb 0e                	jmp	0xffffffff8000a552 <taos::processes::process::create_process::ha385fce1049c264a+0x1d2>
ffffffff8000a544: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8000a550: f3 90                	pause
ffffffff8000a552: 0f b6 05 a7 0a 02 00 	movzx	eax, byte ptr [rip + 0x20aa7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a559: 84 c0                	test	al, al
ffffffff8000a55b: 75 f3                	jne	0xffffffff8000a550 <taos::processes::process::create_process::ha385fce1049c264a+0x1d0>
ffffffff8000a55d: 31 c0                	xor	eax, eax
ffffffff8000a55f: f0                   	lock
ffffffff8000a560: 0f b0 0d 99 0a 02 00 	cmpxchg	byte ptr [rip + 0x20a99], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a567: 75 e9                	jne	0xffffffff8000a552 <taos::processes::process::create_process::ha385fce1049c264a+0x1d2>
ffffffff8000a569: be 08 00 00 00       	mov	esi, 0x8
ffffffff8000a56e: ba 08 01 00 00       	mov	edx, 0x108
ffffffff8000a573: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000a57a: e8 d1 24 00 00       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000a57f: c6 05 7a 0a 02 00 00 	mov	byte ptr [rip + 0x20a7a], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000a586: 48 85 c0             	test	rax, rax
ffffffff8000a589: 0f 84 56 02 00 00    	je	0xffffffff8000a7e5 <taos::processes::process::create_process::ha385fce1049c264a+0x465>
ffffffff8000a58f: 49 89 c4             	mov	r12, rax
ffffffff8000a592: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000a599: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff8000a5a1: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff8000a5a9: 48 c7 40 18 08 00 00 00      	mov	qword ptr [rax + 0x18], 0x8
ffffffff8000a5b1: 48 89 c7             	mov	rdi, rax
ffffffff8000a5b4: 48 83 c7 20          	add	rdi, 0x20
ffffffff8000a5b8: ba 98 00 00 00       	mov	edx, 0x98
ffffffff8000a5bd: 31 f6                	xor	esi, esi
ffffffff8000a5bf: ff 15 7b 1e 03 00    	call	qword ptr [rip + 0x31e7b] # 0xffffffff8003c440
ffffffff8000a5c5: 4d 89 b4 24 b8 00 00 00      	mov	qword ptr [r12 + 0xb8], r14
ffffffff8000a5cd: 4d 89 bc 24 c0 00 00 00      	mov	qword ptr [r12 + 0xc0], r15
ffffffff8000a5d5: 49 c7 84 24 c8 00 00 00 02 02 00 00  	mov	qword ptr [r12 + 0xc8], 0x202
ffffffff8000a5e1: 49 89 9c 24 d0 00 00 00      	mov	qword ptr [r12 + 0xd0], rbx
ffffffff8000a5e9: 48 b8 00 00 00 00 00 09 00 00	movabs	rax, 0x90000000000
ffffffff8000a5f3: 49 89 84 24 d8 00 00 00      	mov	qword ptr [r12 + 0xd8], rax
ffffffff8000a5fb: 49 c7 84 24 e0 00 00 00 00 00 00 00  	mov	qword ptr [r12 + 0xe0], 0x0
ffffffff8000a607: 49 c7 84 24 e8 00 00 00 00 00 00 00  	mov	qword ptr [r12 + 0xe8], 0x0
ffffffff8000a613: 49 c7 84 24 f0 00 00 00 00 00 00 00  	mov	qword ptr [r12 + 0xf0], 0x0
ffffffff8000a61f: 49 c7 84 24 f8 00 00 00 00 00 00 00  	mov	qword ptr [r12 + 0xf8], 0x0
ffffffff8000a62b: 41 89 ac 24 00 01 00 00      	mov	dword ptr [r12 + 0x100], ebp
ffffffff8000a633: 41 c6 84 24 04 01 00 00 00   	mov	byte ptr [r12 + 0x104], 0x0
ffffffff8000a63c: 4c 89 64 24 10       	mov	qword ptr [rsp + 0x10], r12
ffffffff8000a641: 0f b6 05 f8 0b 02 00 	movzx	eax, byte ptr [rip + 0x20bf8] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000a648: 3c 02                	cmp	al, 0x2
ffffffff8000a64a: 0f 85 6c 01 00 00    	jne	0xffffffff8000a7bc <taos::processes::process::create_process::ha385fce1049c264a+0x43c>
ffffffff8000a650: 48 8b 1d e1 0b 02 00 	mov	rbx, qword ptr [rip + 0x20be1] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000a657: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000a65c: 31 c0                	xor	eax, eax
ffffffff8000a65e: f0                   	lock
ffffffff8000a65f: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000a664: 74 16                	je	0xffffffff8000a67c <taos::processes::process::create_process::ha385fce1049c264a+0x2fc>
ffffffff8000a666: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000a670: f3 90                	pause
ffffffff8000a672: 31 c0                	xor	eax, eax
ffffffff8000a674: f0                   	lock
ffffffff8000a675: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000a67a: 75 f4                	jne	0xffffffff8000a670 <taos::processes::process::create_process::ha385fce1049c264a+0x2f0>
ffffffff8000a67c: 8b 74 24 0c          	mov	esi, dword ptr [rsp + 0xc]
ffffffff8000a680: 48 8b 54 24 10       	mov	rdx, qword ptr [rsp + 0x10]
ffffffff8000a685: f0                   	lock
ffffffff8000a686: 48 ff 02             	inc	qword ptr [rdx]
ffffffff8000a689: 0f 8e 65 01 00 00    	jle	0xffffffff8000a7f4 <taos::processes::process::create_process::ha385fce1049c264a+0x474>
ffffffff8000a68f: 48 8d 7b 18          	lea	rdi, [rbx + 0x18]
ffffffff8000a693: e8 98 77 00 00       	call	0xffffffff80011e30 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b>
ffffffff8000a698: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000a69d: 48 85 c0             	test	rax, rax
ffffffff8000a6a0: 74 10                	je	0xffffffff8000a6b2 <taos::processes::process::create_process::ha385fce1049c264a+0x332>
ffffffff8000a6a2: f0                   	lock
ffffffff8000a6a3: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000a6a6: 75 0a                	jne	0xffffffff8000a6b2 <taos::processes::process::create_process::ha385fce1049c264a+0x332>
ffffffff8000a6a8: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000a6ad: e8 ae 84 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000a6b2: f0                   	lock
ffffffff8000a6b3: 48 83 63 10 fc       	and	qword ptr [rbx + 0x10], -0x4
ffffffff8000a6b8: 48 8b 05 69 1d 03 00 	mov	rax, qword ptr [rip + 0x31d69] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000a6bf: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000a6c3: 0f 82 95 00 00 00    	jb	0xffffffff8000a75e <taos::processes::process::create_process::ha385fce1049c264a+0x3de>
ffffffff8000a6c9: 48 8d 44 24 0c       	lea	rax, [rsp + 0xc]
ffffffff8000a6ce: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff8000a6d6: 48 c7 84 24 88 00 00 00 f0 02 02 80  	mov	qword ptr [rsp + 0x88], -0x7ffdfd10
ffffffff8000a6e2: 48 c7 44 24 18 c8 35 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdca38
ffffffff8000a6eb: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000a6f4: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000a6fd: 48 8d 84 24 80 00 00 00      	lea	rax, [rsp + 0x80]
ffffffff8000a705: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000a70a: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8000a713: 48 c7 c7 f0 35 02 80 	mov	rdi, -0x7ffdca10
ffffffff8000a71a: e8 81 20 01 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000a71f: 48 c7 44 24 48 08 36 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdc9f8
ffffffff8000a728: 48 c7 44 24 50 18 00 00 00   	mov	qword ptr [rsp + 0x50], 0x18
ffffffff8000a731: 48 c7 44 24 58 08 36 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdc9f8
ffffffff8000a73a: 48 c7 44 24 60 18 00 00 00   	mov	qword ptr [rsp + 0x60], 0x18
ffffffff8000a743: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8000a748: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000a74d: 48 8d 54 24 48       	lea	rdx, [rsp + 0x48]
ffffffff8000a752: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000a757: 31 c9                	xor	ecx, ecx
ffffffff8000a759: e8 02 1f 01 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000a75e: 8b 5c 24 0c          	mov	ebx, dword ptr [rsp + 0xc]
ffffffff8000a762: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000a767: f0                   	lock
ffffffff8000a768: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000a76b: 75 0a                	jne	0xffffffff8000a777 <taos::processes::process::create_process::ha385fce1049c264a+0x3f7>
ffffffff8000a76d: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000a772: e8 e9 83 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000a777: 89 d8                	mov	eax, ebx
ffffffff8000a779: 48 81 c4 90 00 00 00 	add	rsp, 0x90
ffffffff8000a780: 5b                   	pop	rbx
ffffffff8000a781: 41 5c                	pop	r12
ffffffff8000a783: 41 5e                	pop	r14
ffffffff8000a785: 41 5f                	pop	r15
ffffffff8000a787: 5d                   	pop	rbp
ffffffff8000a788: c3                   	ret
ffffffff8000a789: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000a790: e8 7b 4b 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000a795: e9 ea fc ff ff       	jmp	0xffffffff8000a484 <taos::processes::process::create_process::ha385fce1049c264a+0x104>
ffffffff8000a79a: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000a7a1: e8 6a 4b 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000a7a6: e9 09 fd ff ff       	jmp	0xffffffff8000a4b4 <taos::processes::process::create_process::ha385fce1049c264a+0x134>
ffffffff8000a7ab: 48 c7 c7 80 b2 02 80 	mov	rdi, -0x7ffd4d80
ffffffff8000a7b2: e8 99 3f 00 00       	call	0xffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>
ffffffff8000a7b7: e9 18 fd ff ff       	jmp	0xffffffff8000a4d4 <taos::processes::process::create_process::ha385fce1049c264a+0x154>
ffffffff8000a7bc: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000a7c3: e8 38 4c 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000a7c8: e9 83 fe ff ff       	jmp	0xffffffff8000a650 <taos::processes::process::create_process::ha385fce1049c264a+0x2d0>
ffffffff8000a7cd: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000a7d2: 48 c7 c7 f8 34 02 80 	mov	rdi, -0x7ffdcb08
ffffffff8000a7d9: 48 c7 c2 90 35 02 80 	mov	rdx, -0x7ffdca70
ffffffff8000a7e0: e8 0b 69 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000a7e5: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000a7ea: be 08 01 00 00       	mov	esi, 0x108
ffffffff8000a7ef: e8 be 33 01 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000a7f4: 0f 0b                	ud2
ffffffff8000a7f6: cc                   	int3
ffffffff8000a7f7: cc                   	int3
ffffffff8000a7f8: cc                   	int3
ffffffff8000a7f9: cc                   	int3
ffffffff8000a7fa: cc                   	int3
ffffffff8000a7fb: cc                   	int3
ffffffff8000a7fc: cc                   	int3
ffffffff8000a7fd: cc                   	int3
ffffffff8000a7fe: cc                   	int3
ffffffff8000a7ff: cc                   	int3

ffffffff8000a800 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305>:
ffffffff8000a800: 41 57                	push	r15
ffffffff8000a802: 41 56                	push	r14
ffffffff8000a804: 53                   	push	rbx
ffffffff8000a805: 48 83 ec 10          	sub	rsp, 0x10
ffffffff8000a809: 48 89 e7             	mov	rdi, rsp
ffffffff8000a80c: e8 2f 2b 00 00       	call	0xffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>
ffffffff8000a811: f6 04 24 01          	test	byte ptr [rsp], 0x1
ffffffff8000a815: 0f 84 23 01 00 00    	je	0xffffffff8000a93e <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x13e>
ffffffff8000a81b: 48 8b 5c 24 08       	mov	rbx, qword ptr [rsp + 0x8]
ffffffff8000a820: 0f b6 05 81 0a 02 00 	movzx	eax, byte ptr [rip + 0x20a81] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a827: 3c 02                	cmp	al, 0x2
ffffffff8000a829: 0f 85 d5 00 00 00    	jne	0xffffffff8000a904 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x104>
ffffffff8000a82f: 4c 8b 35 6a 0a 02 00 	mov	r14, qword ptr [rip + 0x20a6a] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000a836: 49 01 de             	add	r14, rbx
ffffffff8000a839: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000a843: 4c 01 f0             	add	rax, r14
ffffffff8000a846: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000a84a: 0f 85 d6 00 00 00    	jne	0xffffffff8000a926 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x126>
ffffffff8000a850: 0f b6 05 41 0a 02 00 	movzx	eax, byte ptr [rip + 0x20a41] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff8000a857: 3c 02                	cmp	al, 0x2
ffffffff8000a859: 0f 85 b6 00 00 00    	jne	0xffffffff8000a915 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x115>
ffffffff8000a85f: b1 01                	mov	cl, 0x1
ffffffff8000a861: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000a870: 31 c0                	xor	eax, eax
ffffffff8000a872: f0                   	lock
ffffffff8000a873: 0f b0 0d 06 0a 02 00 	cmpxchg	byte ptr [rip + 0x20a06], cl # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a87a: 75 06                	jne	0xffffffff8000a882 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x82>
ffffffff8000a87c: eb 11                	jmp	0xffffffff8000a88f <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x8f>
ffffffff8000a87e: 66 90                	nop
ffffffff8000a880: f3 90                	pause
ffffffff8000a882: 0f b6 05 f7 09 02 00 	movzx	eax, byte ptr [rip + 0x209f7] # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a889: 84 c0                	test	al, al
ffffffff8000a88b: 75 f3                	jne	0xffffffff8000a880 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x80>
ffffffff8000a88d: eb e1                	jmp	0xffffffff8000a870 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x70>
ffffffff8000a88f: 45 31 ff             	xor	r15d, r15d
ffffffff8000a892: ba 00 10 00 00       	mov	edx, 0x1000
ffffffff8000a897: 4c 89 f7             	mov	rdi, r14
ffffffff8000a89a: 31 f6                	xor	esi, esi
ffffffff8000a89c: ff 15 9e 1b 03 00    	call	qword ptr [rip + 0x31b9e] # 0xffffffff8003c440
ffffffff8000a8a2: 48 8b 05 df 09 02 00 	mov	rax, qword ptr [rip + 0x209df] # 0xffffffff8002b288 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x8>
ffffffff8000a8a9: 49 81 c6 18 08 00 00 	add	r14, 0x818
ffffffff8000a8b0: 4a 8b 8c f8 00 08 00 00      	mov	rcx, qword ptr [rax + 8*r15 + 0x800]
ffffffff8000a8b8: 4b 89 4c fe e8       	mov	qword ptr [r14 + 8*r15 - 0x18], rcx
ffffffff8000a8bd: 4a 8b 8c f8 08 08 00 00      	mov	rcx, qword ptr [rax + 8*r15 + 0x808]
ffffffff8000a8c5: 4b 89 4c fe f0       	mov	qword ptr [r14 + 8*r15 - 0x10], rcx
ffffffff8000a8ca: 4a 8b 8c f8 10 08 00 00      	mov	rcx, qword ptr [rax + 8*r15 + 0x810]
ffffffff8000a8d2: 4b 89 4c fe f8       	mov	qword ptr [r14 + 8*r15 - 0x8], rcx
ffffffff8000a8d7: 4a 8b 8c f8 18 08 00 00      	mov	rcx, qword ptr [rax + 8*r15 + 0x818]
ffffffff8000a8df: 4b 89 0c fe          	mov	qword ptr [r14 + 8*r15], rcx
ffffffff8000a8e3: 49 83 c7 04          	add	r15, 0x4
ffffffff8000a8e7: 49 81 ff 00 01 00 00 	cmp	r15, 0x100
ffffffff8000a8ee: 75 c0                	jne	0xffffffff8000a8b0 <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0xb0>
ffffffff8000a8f0: c6 05 89 09 02 00 00 	mov	byte ptr [rip + 0x20989], 0x0 # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff8000a8f7: 48 89 d8             	mov	rax, rbx
ffffffff8000a8fa: 48 83 c4 10          	add	rsp, 0x10
ffffffff8000a8fe: 5b                   	pop	rbx
ffffffff8000a8ff: 41 5e                	pop	r14
ffffffff8000a901: 41 5f                	pop	r15
ffffffff8000a903: c3                   	ret
ffffffff8000a904: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000a90b: e8 00 4a 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000a910: e9 1a ff ff ff       	jmp	0xffffffff8000a82f <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x2f>
ffffffff8000a915: 48 c7 c7 80 b2 02 80 	mov	rdi, -0x7ffd4d80
ffffffff8000a91c: e8 2f 3e 00 00       	call	0xffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>
ffffffff8000a921: e9 39 ff ff ff       	jmp	0xffffffff8000a85f <taos::processes::process::create_process_page_table::h280d8fb0921ae257.llvm.16827703523949014305+0x5f>
ffffffff8000a926: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000a92b: 48 c7 c7 f8 34 02 80 	mov	rdi, -0x7ffdcb08
ffffffff8000a932: 48 c7 c2 90 35 02 80 	mov	rdx, -0x7ffdca70
ffffffff8000a939: e8 b2 67 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000a93e: be 1d 00 00 00       	mov	esi, 0x1d
ffffffff8000a943: 48 c7 c7 20 36 02 80 	mov	rdi, -0x7ffdc9e0
ffffffff8000a94a: 48 c7 c2 40 36 02 80 	mov	rdx, -0x7ffdc9c0
ffffffff8000a951: e8 0a 6d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000a956: cc                   	int3
ffffffff8000a957: cc                   	int3
ffffffff8000a958: cc                   	int3
ffffffff8000a959: cc                   	int3
ffffffff8000a95a: cc                   	int3
ffffffff8000a95b: cc                   	int3
ffffffff8000a95c: cc                   	int3
ffffffff8000a95d: cc                   	int3
ffffffff8000a95e: cc                   	int3
ffffffff8000a95f: cc                   	int3

ffffffff8000a960 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4>:
ffffffff8000a960: 41 57                	push	r15
ffffffff8000a962: 41 56                	push	r14
ffffffff8000a964: 41 55                	push	r13
ffffffff8000a966: 41 54                	push	r12
ffffffff8000a968: 53                   	push	rbx
ffffffff8000a969: 48 8b 9f c0 00 00 00 	mov	rbx, qword ptr [rdi + 0xc0]
ffffffff8000a970: 0f b6 05 31 09 02 00 	movzx	eax, byte ptr [rip + 0x20931] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a977: 3c 02                	cmp	al, 0x2
ffffffff8000a979: 0f 85 9a 00 00 00    	jne	0xffffffff8000aa19 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0xb9>
ffffffff8000a97f: 4c 8b 35 1a 09 02 00 	mov	r14, qword ptr [rip + 0x2091a] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000a986: 49 01 de             	add	r14, rbx
ffffffff8000a989: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000a993: 4c 01 f0             	add	rax, r14
ffffffff8000a996: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000a99a: 0f 85 9b 00 00 00    	jne	0xffffffff8000aa3b <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0xdb>
ffffffff8000a9a0: 0f b6 05 01 09 02 00 	movzx	eax, byte ptr [rip + 0x20901] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a9a7: 3c 02                	cmp	al, 0x2
ffffffff8000a9a9: 0f 85 7b 00 00 00    	jne	0xffffffff8000aa2a <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0xca>
ffffffff8000a9af: 45 31 ff             	xor	r15d, r15d
ffffffff8000a9b2: 49 bc 00 f0 ff ff ff ff 0f 00	movabs	r12, 0xffffffffff000
ffffffff8000a9bc: eb 22                	jmp	0xffffffff8000a9e0 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x80>
ffffffff8000a9be: 66 90                	nop
ffffffff8000a9c0: 4c 21 e7             	and	rdi, r12
ffffffff8000a9c3: 48 8b 15 d6 08 02 00 	mov	rdx, qword ptr [rip + 0x208d6] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000a9ca: be 03 00 00 00       	mov	esi, 0x3
ffffffff8000a9cf: e8 8c 00 00 00       	call	0xffffffff8000aa60 <taos::processes::process::free_page_table::h8d7964e60db0207d>
ffffffff8000a9d4: 49 ff c7             	inc	r15
ffffffff8000a9d7: 49 81 ff 00 01 00 00 	cmp	r15, 0x100
ffffffff8000a9de: 74 28                	je	0xffffffff8000aa08 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0xa8>
ffffffff8000a9e0: 4b 8b 3c fe          	mov	rdi, qword ptr [r14 + 8*r15]
ffffffff8000a9e4: 48 85 ff             	test	rdi, rdi
ffffffff8000a9e7: 74 eb                	je	0xffffffff8000a9d4 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x74>
ffffffff8000a9e9: 0f b6 05 b8 08 02 00 	movzx	eax, byte ptr [rip + 0x208b8] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000a9f0: 3c 02                	cmp	al, 0x2
ffffffff8000a9f2: 74 cc                	je	0xffffffff8000a9c0 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x60>
ffffffff8000a9f4: 49 89 fd             	mov	r13, rdi
ffffffff8000a9f7: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000a9fe: e8 0d 49 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000aa03: 4c 89 ef             	mov	rdi, r13
ffffffff8000aa06: eb b8                	jmp	0xffffffff8000a9c0 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x60>
ffffffff8000aa08: 48 89 df             	mov	rdi, rbx
ffffffff8000aa0b: 5b                   	pop	rbx
ffffffff8000aa0c: 41 5c                	pop	r12
ffffffff8000aa0e: 41 5d                	pop	r13
ffffffff8000aa10: 41 5e                	pop	r14
ffffffff8000aa12: 41 5f                	pop	r15
ffffffff8000aa14: e9 e7 29 00 00       	jmp	0xffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>
ffffffff8000aa19: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000aa20: e8 eb 48 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000aa25: e9 55 ff ff ff       	jmp	0xffffffff8000a97f <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x1f>
ffffffff8000aa2a: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000aa31: e8 da 48 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000aa36: e9 74 ff ff ff       	jmp	0xffffffff8000a9af <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4+0x4f>
ffffffff8000aa3b: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000aa40: 48 c7 c7 f8 34 02 80 	mov	rdi, -0x7ffdcb08
ffffffff8000aa47: 48 c7 c2 90 35 02 80 	mov	rdx, -0x7ffdca70
ffffffff8000aa4e: e8 9d 66 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000aa53: cc                   	int3
ffffffff8000aa54: cc                   	int3
ffffffff8000aa55: cc                   	int3
ffffffff8000aa56: cc                   	int3
ffffffff8000aa57: cc                   	int3
ffffffff8000aa58: cc                   	int3
ffffffff8000aa59: cc                   	int3
ffffffff8000aa5a: cc                   	int3
ffffffff8000aa5b: cc                   	int3
ffffffff8000aa5c: cc                   	int3
ffffffff8000aa5d: cc                   	int3
ffffffff8000aa5e: cc                   	int3
ffffffff8000aa5f: cc                   	int3

ffffffff8000aa60 <taos::processes::process::free_page_table::h8d7964e60db0207d>:
ffffffff8000aa60: 55                   	push	rbp
ffffffff8000aa61: 41 57                	push	r15
ffffffff8000aa63: 41 56                	push	r14
ffffffff8000aa65: 41 55                	push	r13
ffffffff8000aa67: 41 54                	push	r12
ffffffff8000aa69: 53                   	push	rbx
ffffffff8000aa6a: 50                   	push	rax
ffffffff8000aa6b: 48 89 fb             	mov	rbx, rdi
ffffffff8000aa6e: 49 bf 00 f0 ff ff ff ff 0f 00	movabs	r15, 0xffffffffff000
ffffffff8000aa78: 4c 8d 24 3a          	lea	r12, [rdx + rdi]
ffffffff8000aa7c: 40 80 fe 01          	cmp	sil, 0x1
ffffffff8000aa80: 76 4a                	jbe	0xffffffff8000aacc <taos::processes::process::free_page_table::h8d7964e60db0207d+0x6c>
ffffffff8000aa82: 49 89 d6             	mov	r14, rdx
ffffffff8000aa85: 40 fe ce             	dec	sil
ffffffff8000aa88: 45 31 ed             	xor	r13d, r13d
ffffffff8000aa8b: 40 0f b6 ee          	movzx	ebp, sil
ffffffff8000aa8f: eb 1b                	jmp	0xffffffff8000aaac <taos::processes::process::free_page_table::h8d7964e60db0207d+0x4c>
ffffffff8000aa91: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000aaa0: 49 ff c5             	inc	r13
ffffffff8000aaa3: 49 81 fd 00 02 00 00 	cmp	r13, 0x200
ffffffff8000aaaa: 74 5b                	je	0xffffffff8000ab07 <taos::processes::process::free_page_table::h8d7964e60db0207d+0xa7>
ffffffff8000aaac: 4b 8b 3c ec          	mov	rdi, qword ptr [r12 + 8*r13]
ffffffff8000aab0: 48 85 ff             	test	rdi, rdi
ffffffff8000aab3: 74 eb                	je	0xffffffff8000aaa0 <taos::processes::process::free_page_table::h8d7964e60db0207d+0x40>
ffffffff8000aab5: 4c 21 ff             	and	rdi, r15
ffffffff8000aab8: 89 ee                	mov	esi, ebp
ffffffff8000aaba: 4c 89 f2             	mov	rdx, r14
ffffffff8000aabd: e8 9e ff ff ff       	call	0xffffffff8000aa60 <taos::processes::process::free_page_table::h8d7964e60db0207d>
ffffffff8000aac2: 4b c7 04 ec 00 00 00 00      	mov	qword ptr [r12 + 8*r13], 0x0
ffffffff8000aaca: eb d4                	jmp	0xffffffff8000aaa0 <taos::processes::process::free_page_table::h8d7964e60db0207d+0x40>
ffffffff8000aacc: 45 31 f6             	xor	r14d, r14d
ffffffff8000aacf: eb 1b                	jmp	0xffffffff8000aaec <taos::processes::process::free_page_table::h8d7964e60db0207d+0x8c>
ffffffff8000aad1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000aae0: 49 ff c6             	inc	r14
ffffffff8000aae3: 49 81 fe 00 02 00 00 	cmp	r14, 0x200
ffffffff8000aaea: 74 1b                	je	0xffffffff8000ab07 <taos::processes::process::free_page_table::h8d7964e60db0207d+0xa7>
ffffffff8000aaec: 4b 8b 3c f4          	mov	rdi, qword ptr [r12 + 8*r14]
ffffffff8000aaf0: 48 85 ff             	test	rdi, rdi
ffffffff8000aaf3: 74 eb                	je	0xffffffff8000aae0 <taos::processes::process::free_page_table::h8d7964e60db0207d+0x80>
ffffffff8000aaf5: 4c 21 ff             	and	rdi, r15
ffffffff8000aaf8: e8 03 29 00 00       	call	0xffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>
ffffffff8000aafd: 4b c7 04 f4 00 00 00 00      	mov	qword ptr [r12 + 8*r14], 0x0
ffffffff8000ab05: eb d9                	jmp	0xffffffff8000aae0 <taos::processes::process::free_page_table::h8d7964e60db0207d+0x80>
ffffffff8000ab07: 48 89 df             	mov	rdi, rbx
ffffffff8000ab0a: 48 83 c4 08          	add	rsp, 0x8
ffffffff8000ab0e: 5b                   	pop	rbx
ffffffff8000ab0f: 41 5c                	pop	r12
ffffffff8000ab11: 41 5d                	pop	r13
ffffffff8000ab13: 41 5e                	pop	r14
ffffffff8000ab15: 41 5f                	pop	r15
ffffffff8000ab17: 5d                   	pop	rbp
ffffffff8000ab18: e9 e3 28 00 00       	jmp	0xffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>
ffffffff8000ab1d: cc                   	int3
ffffffff8000ab1e: cc                   	int3
ffffffff8000ab1f: cc                   	int3

ffffffff8000ab20 <taos::processes::process::preempt_process::h6f424ea80533199d>:
ffffffff8000ab20: 41 57                	push	r15
ffffffff8000ab22: 41 56                	push	r14
ffffffff8000ab24: 41 55                	push	r13
ffffffff8000ab26: 41 54                	push	r12
ffffffff8000ab28: 53                   	push	rbx
ffffffff8000ab29: 48 83 ec 10          	sub	rsp, 0x10
ffffffff8000ab2d: 49 89 fe             	mov	r14, rdi
ffffffff8000ab30: e8 9b 7f ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8000ab35: 85 d2                	test	edx, edx
ffffffff8000ab37: 0f 84 12 02 00 00    	je	0xffffffff8000ad4f <taos::processes::process::preempt_process::h6f424ea80533199d+0x22f>
ffffffff8000ab3d: 89 d3                	mov	ebx, edx
ffffffff8000ab3f: 0f b6 05 fa 06 02 00 	movzx	eax, byte ptr [rip + 0x206fa] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000ab46: 3c 02                	cmp	al, 0x2
ffffffff8000ab48: 0f 85 0f 02 00 00    	jne	0xffffffff8000ad5d <taos::processes::process::preempt_process::h6f424ea80533199d+0x23d>
ffffffff8000ab4e: 4c 8b 3d e3 06 02 00 	mov	r15, qword ptr [rip + 0x206e3] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000ab55: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000ab5a: 31 c0                	xor	eax, eax
ffffffff8000ab5c: f0                   	lock
ffffffff8000ab5d: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff8000ab62: 74 18                	je	0xffffffff8000ab7c <taos::processes::process::preempt_process::h6f424ea80533199d+0x5c>
ffffffff8000ab64: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8000ab70: f3 90                	pause
ffffffff8000ab72: 31 c0                	xor	eax, eax
ffffffff8000ab74: f0                   	lock
ffffffff8000ab75: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff8000ab7a: 75 f4                	jne	0xffffffff8000ab70 <taos::processes::process::preempt_process::h6f424ea80533199d+0x50>
ffffffff8000ab7c: 49 8b 47 18          	mov	rax, qword ptr [r15 + 0x18]
ffffffff8000ab80: 48 85 c0             	test	rax, rax
ffffffff8000ab83: 0f 84 e5 01 00 00    	je	0xffffffff8000ad6e <taos::processes::process::preempt_process::h6f424ea80533199d+0x24e>
ffffffff8000ab89: 49 8b 4f 20          	mov	rcx, qword ptr [r15 + 0x20]
ffffffff8000ab8d: ba ff 00 00 00       	mov	edx, 0xff
ffffffff8000ab92: 0f b7 b8 8e 00 00 00 	movzx	edi, word ptr [rax + 0x8e]
ffffffff8000ab99: 41 89 f8             	mov	r8d, edi
ffffffff8000ab9c: 41 c1 e0 02          	shl	r8d, 0x2
ffffffff8000aba0: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff8000aba7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8000abb0: 4d 85 c0             	test	r8, r8
ffffffff8000abb3: 74 2b                	je	0xffffffff8000abe0 <taos::processes::process::preempt_process::h6f424ea80533199d+0xc0>
ffffffff8000abb5: 45 31 c9             	xor	r9d, r9d
ffffffff8000abb8: 39 5c b0 64          	cmp	dword ptr [rax + 4*rsi + 0x64], ebx
ffffffff8000abbc: 41 0f 95 c1          	setne	r9b
ffffffff8000abc0: 44 0f 47 ca          	cmova	r9d, edx
ffffffff8000abc4: 48 ff c6             	inc	rsi
ffffffff8000abc7: 49 83 c0 fc          	add	r8, -0x4
ffffffff8000abcb: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff8000abcf: 74 df                	je	0xffffffff8000abb0 <taos::processes::process::preempt_process::h6f424ea80533199d+0x90>
ffffffff8000abd1: 41 0f b6 f9          	movzx	edi, r9b
ffffffff8000abd5: 85 ff                	test	edi, edi
ffffffff8000abd7: 74 1e                	je	0xffffffff8000abf7 <taos::processes::process::preempt_process::h6f424ea80533199d+0xd7>
ffffffff8000abd9: eb 08                	jmp	0xffffffff8000abe3 <taos::processes::process::preempt_process::h6f424ea80533199d+0xc3>
ffffffff8000abdb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8000abe0: 48 89 fe             	mov	rsi, rdi
ffffffff8000abe3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff8000abe7: 0f 82 81 01 00 00    	jb	0xffffffff8000ad6e <taos::processes::process::preempt_process::h6f424ea80533199d+0x24e>
ffffffff8000abed: 48 8b 84 f0 90 00 00 00      	mov	rax, qword ptr [rax + 8*rsi + 0x90]
ffffffff8000abf5: eb 9b                	jmp	0xffffffff8000ab92 <taos::processes::process::preempt_process::h6f424ea80533199d+0x72>
ffffffff8000abf7: 4c 8b 64 f0 08       	mov	r12, qword ptr [rax + 8*rsi + 0x8]
ffffffff8000abfc: 41 80 bc 24 04 01 00 00 02   	cmp	byte ptr [r12 + 0x104], 0x2
ffffffff8000ac05: 0f 85 1a 01 00 00    	jne	0xffffffff8000ad25 <taos::processes::process::preempt_process::h6f424ea80533199d+0x205>
ffffffff8000ac0b: 4d 8b 6c 24 38       	mov	r13, qword ptr [r12 + 0x38]
ffffffff8000ac10: e8 bb 78 ff ff       	call	0xffffffff800024d0 <taos::events::runner_timestamp::h2cb14dada03374ba>
ffffffff8000ac15: 49 39 c5             	cmp	r13, rax
ffffffff8000ac18: 0f 86 07 01 00 00    	jbe	0xffffffff8000ad25 <taos::processes::process::preempt_process::h6f424ea80533199d+0x205>
ffffffff8000ac1e: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8000ac21: 49 89 44 24 40       	mov	qword ptr [r12 + 0x40], rax
ffffffff8000ac26: 49 8b 46 08          	mov	rax, qword ptr [r14 + 0x8]
ffffffff8000ac2a: 49 89 44 24 48       	mov	qword ptr [r12 + 0x48], rax
ffffffff8000ac2f: 49 8b 46 10          	mov	rax, qword ptr [r14 + 0x10]
ffffffff8000ac33: 49 89 44 24 50       	mov	qword ptr [r12 + 0x50], rax
ffffffff8000ac38: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8000ac3c: 49 89 44 24 58       	mov	qword ptr [r12 + 0x58], rax
ffffffff8000ac41: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8000ac45: 49 89 44 24 60       	mov	qword ptr [r12 + 0x60], rax
ffffffff8000ac4a: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff8000ac4e: 49 89 44 24 68       	mov	qword ptr [r12 + 0x68], rax
ffffffff8000ac53: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8000ac57: 49 89 44 24 70       	mov	qword ptr [r12 + 0x70], rax
ffffffff8000ac5c: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8000ac60: 49 89 44 24 78       	mov	qword ptr [r12 + 0x78], rax
ffffffff8000ac65: 49 8b 46 40          	mov	rax, qword ptr [r14 + 0x40]
ffffffff8000ac69: 49 89 84 24 80 00 00 00      	mov	qword ptr [r12 + 0x80], rax
ffffffff8000ac71: 49 8b 46 48          	mov	rax, qword ptr [r14 + 0x48]
ffffffff8000ac75: 49 89 84 24 88 00 00 00      	mov	qword ptr [r12 + 0x88], rax
ffffffff8000ac7d: 49 8b 46 50          	mov	rax, qword ptr [r14 + 0x50]
ffffffff8000ac81: 49 89 84 24 90 00 00 00      	mov	qword ptr [r12 + 0x90], rax
ffffffff8000ac89: 49 8b 46 58          	mov	rax, qword ptr [r14 + 0x58]
ffffffff8000ac8d: 49 89 84 24 98 00 00 00      	mov	qword ptr [r12 + 0x98], rax
ffffffff8000ac95: 49 8b 46 60          	mov	rax, qword ptr [r14 + 0x60]
ffffffff8000ac99: 49 89 84 24 a0 00 00 00      	mov	qword ptr [r12 + 0xa0], rax
ffffffff8000aca1: 49 8b 46 68          	mov	rax, qword ptr [r14 + 0x68]
ffffffff8000aca5: 49 89 84 24 a8 00 00 00      	mov	qword ptr [r12 + 0xa8], rax
ffffffff8000acad: 49 8b 46 70          	mov	rax, qword ptr [r14 + 0x70]
ffffffff8000acb1: 49 89 84 24 b0 00 00 00      	mov	qword ptr [r12 + 0xb0], rax
ffffffff8000acb9: 49 8b 86 90 00 00 00 	mov	rax, qword ptr [r14 + 0x90]
ffffffff8000acc0: 49 89 84 24 b8 00 00 00      	mov	qword ptr [r12 + 0xb8], rax
ffffffff8000acc8: 49 8b 46 78          	mov	rax, qword ptr [r14 + 0x78]
ffffffff8000accc: 49 89 84 24 c0 00 00 00      	mov	qword ptr [r12 + 0xc0], rax
ffffffff8000acd4: 49 8b 86 88 00 00 00 	mov	rax, qword ptr [r14 + 0x88]
ffffffff8000acdb: 49 89 84 24 c8 00 00 00      	mov	qword ptr [r12 + 0xc8], rax
ffffffff8000ace3: 41 c6 84 24 04 01 00 00 01   	mov	byte ptr [r12 + 0x104], 0x1
ffffffff8000acec: 4d 8b 74 24 28       	mov	r14, qword ptr [r12 + 0x28]
ffffffff8000acf1: 4d 8b 64 24 30       	mov	r12, qword ptr [r12 + 0x30]
ffffffff8000acf6: f0                   	lock
ffffffff8000acf7: 49 83 67 10 fc       	and	qword ptr [r15 + 0x10], -0x4
ffffffff8000acfc: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff8000ad01: 0f 32                	rdmsr
ffffffff8000ad03: 89 44 24 08          	mov	dword ptr [rsp + 0x8], eax
ffffffff8000ad07: 89 5c 24 0c          	mov	dword ptr [rsp + 0xc], ebx
ffffffff8000ad0b: 9c                   	pushfq
ffffffff8000ad0c: 58                   	pop	rax
ffffffff8000ad0d: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000ad12: 75 19                	jne	0xffffffff8000ad2d <taos::processes::process::preempt_process::h6f424ea80533199d+0x20d>
ffffffff8000ad14: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000ad19: 48 8d 74 24 0c       	lea	rsi, [rsp + 0xc]
ffffffff8000ad1e: e8 fd 6c ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000ad23: eb 19                	jmp	0xffffffff8000ad3e <taos::processes::process::preempt_process::h6f424ea80533199d+0x21e>
ffffffff8000ad25: f0                   	lock
ffffffff8000ad26: 49 83 67 10 fc       	and	qword ptr [r15 + 0x10], -0x4
ffffffff8000ad2b: eb 22                	jmp	0xffffffff8000ad4f <taos::processes::process::preempt_process::h6f424ea80533199d+0x22f>
ffffffff8000ad2d: fa                   	cli
ffffffff8000ad2e: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000ad33: 48 8d 74 24 0c       	lea	rsi, [rsp + 0xc]
ffffffff8000ad38: e8 e3 6c ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000ad3d: fb                   	sti
ffffffff8000ad3e: 4c 89 f4             	mov	rsp, r14
ffffffff8000ad41: 41 54                	push	r12
ffffffff8000ad43: b9 0b 08 00 00       	mov	ecx, 0x80b
ffffffff8000ad48: 31 c0                	xor	eax, eax
ffffffff8000ad4a: 31 d2                	xor	edx, edx
ffffffff8000ad4c: 0f 30                	wrmsr
ffffffff8000ad4e: c3                   	ret
ffffffff8000ad4f: 48 83 c4 10          	add	rsp, 0x10
ffffffff8000ad53: 5b                   	pop	rbx
ffffffff8000ad54: 41 5c                	pop	r12
ffffffff8000ad56: 41 5d                	pop	r13
ffffffff8000ad58: 41 5e                	pop	r14
ffffffff8000ad5a: 41 5f                	pop	r15
ffffffff8000ad5c: c3                   	ret
ffffffff8000ad5d: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000ad64: e8 97 46 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000ad69: e9 e0 fd ff ff       	jmp	0xffffffff8000ab4e <taos::processes::process::preempt_process::h6f424ea80533199d+0x2e>
ffffffff8000ad6e: be 11 00 00 00       	mov	esi, 0x11
ffffffff8000ad73: 48 c7 c7 58 36 02 80 	mov	rdi, -0x7ffdc9a8
ffffffff8000ad7a: 48 c7 c2 70 36 02 80 	mov	rdx, -0x7ffdc990
ffffffff8000ad81: e8 da 68 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000ad86: cc                   	int3
ffffffff8000ad87: cc                   	int3
ffffffff8000ad88: cc                   	int3
ffffffff8000ad89: cc                   	int3
ffffffff8000ad8a: cc                   	int3
ffffffff8000ad8b: cc                   	int3
ffffffff8000ad8c: cc                   	int3
ffffffff8000ad8d: cc                   	int3
ffffffff8000ad8e: cc                   	int3
ffffffff8000ad8f: cc                   	int3

ffffffff8000ad90 <taos::processes::process::sleep_process::h931370410c459b8f>:
ffffffff8000ad90: 55                   	push	rbp
ffffffff8000ad91: 41 57                	push	r15
ffffffff8000ad93: 41 56                	push	r14
ffffffff8000ad95: 53                   	push	rbx
ffffffff8000ad96: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8000ad9a: 48 89 f3             	mov	rbx, rsi
ffffffff8000ad9d: 49 89 fe             	mov	r14, rdi
ffffffff8000ada0: e8 2b 7d ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8000ada5: 85 d2                	test	edx, edx
ffffffff8000ada7: 0f 84 e8 01 00 00    	je	0xffffffff8000af95 <taos::processes::process::sleep_process::h931370410c459b8f+0x205>
ffffffff8000adad: 0f b6 05 8c 04 02 00 	movzx	eax, byte ptr [rip + 0x2048c] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000adb4: 3c 02                	cmp	al, 0x2
ffffffff8000adb6: 0f 85 e4 01 00 00    	jne	0xffffffff8000afa0 <taos::processes::process::sleep_process::h931370410c459b8f+0x210>
ffffffff8000adbc: 48 8b 0d 75 04 02 00 	mov	rcx, qword ptr [rip + 0x20475] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000adc3: be 01 00 00 00       	mov	esi, 0x1
ffffffff8000adc8: 31 c0                	xor	eax, eax
ffffffff8000adca: f0                   	lock
ffffffff8000adcb: 48 0f b1 71 10       	cmpxchg	qword ptr [rcx + 0x10], rsi
ffffffff8000add0: 74 1a                	je	0xffffffff8000adec <taos::processes::process::sleep_process::h931370410c459b8f+0x5c>
ffffffff8000add2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000ade0: f3 90                	pause
ffffffff8000ade2: 31 c0                	xor	eax, eax
ffffffff8000ade4: f0                   	lock
ffffffff8000ade5: 48 0f b1 71 10       	cmpxchg	qword ptr [rcx + 0x10], rsi
ffffffff8000adea: 75 f4                	jne	0xffffffff8000ade0 <taos::processes::process::sleep_process::h931370410c459b8f+0x50>
ffffffff8000adec: 48 8b 41 18          	mov	rax, qword ptr [rcx + 0x18]
ffffffff8000adf0: 48 85 c0             	test	rax, rax
ffffffff8000adf3: 0f 84 bc 01 00 00    	je	0xffffffff8000afb5 <taos::processes::process::sleep_process::h931370410c459b8f+0x225>
ffffffff8000adf9: 48 8b 71 20          	mov	rsi, qword ptr [rcx + 0x20]
ffffffff8000adfd: bf ff 00 00 00       	mov	edi, 0xff
ffffffff8000ae02: 44 0f b7 88 8e 00 00 00      	movzx	r9d, word ptr [rax + 0x8e]
ffffffff8000ae0a: 45 89 ca             	mov	r10d, r9d
ffffffff8000ae0d: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff8000ae11: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff8000ae18: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000ae20: 4d 85 d2             	test	r10, r10
ffffffff8000ae23: 74 2b                	je	0xffffffff8000ae50 <taos::processes::process::sleep_process::h931370410c459b8f+0xc0>
ffffffff8000ae25: 45 31 db             	xor	r11d, r11d
ffffffff8000ae28: 42 39 54 80 64       	cmp	dword ptr [rax + 4*r8 + 0x64], edx
ffffffff8000ae2d: 41 0f 95 c3          	setne	r11b
ffffffff8000ae31: 44 0f 47 df          	cmova	r11d, edi
ffffffff8000ae35: 49 ff c0             	inc	r8
ffffffff8000ae38: 49 83 c2 fc          	add	r10, -0x4
ffffffff8000ae3c: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff8000ae40: 74 de                	je	0xffffffff8000ae20 <taos::processes::process::sleep_process::h931370410c459b8f+0x90>
ffffffff8000ae42: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff8000ae46: 45 85 c9             	test	r9d, r9d
ffffffff8000ae49: 74 1c                	je	0xffffffff8000ae67 <taos::processes::process::sleep_process::h931370410c459b8f+0xd7>
ffffffff8000ae4b: eb 06                	jmp	0xffffffff8000ae53 <taos::processes::process::sleep_process::h931370410c459b8f+0xc3>
ffffffff8000ae4d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000ae50: 4d 89 c8             	mov	r8, r9
ffffffff8000ae53: 48 83 ee 01          	sub	rsi, 0x1
ffffffff8000ae57: 0f 82 58 01 00 00    	jb	0xffffffff8000afb5 <taos::processes::process::sleep_process::h931370410c459b8f+0x225>
ffffffff8000ae5d: 4a 8b 84 c0 90 00 00 00      	mov	rax, qword ptr [rax + 8*r8 + 0x90]
ffffffff8000ae65: eb 9b                	jmp	0xffffffff8000ae02 <taos::processes::process::sleep_process::h931370410c459b8f+0x72>
ffffffff8000ae67: 4a 8b 44 c0 08       	mov	rax, qword ptr [rax + 8*r8 + 0x8]
ffffffff8000ae6c: 49 8b 36             	mov	rsi, qword ptr [r14]
ffffffff8000ae6f: 48 89 70 40          	mov	qword ptr [rax + 0x40], rsi
ffffffff8000ae73: 49 8b 76 08          	mov	rsi, qword ptr [r14 + 0x8]
ffffffff8000ae77: 48 89 70 48          	mov	qword ptr [rax + 0x48], rsi
ffffffff8000ae7b: 49 8b 76 10          	mov	rsi, qword ptr [r14 + 0x10]
ffffffff8000ae7f: 48 89 70 50          	mov	qword ptr [rax + 0x50], rsi
ffffffff8000ae83: 49 8b 76 18          	mov	rsi, qword ptr [r14 + 0x18]
ffffffff8000ae87: 48 89 70 58          	mov	qword ptr [rax + 0x58], rsi
ffffffff8000ae8b: 49 8b 76 20          	mov	rsi, qword ptr [r14 + 0x20]
ffffffff8000ae8f: 48 89 70 60          	mov	qword ptr [rax + 0x60], rsi
ffffffff8000ae93: 49 8b 76 28          	mov	rsi, qword ptr [r14 + 0x28]
ffffffff8000ae97: 48 89 70 68          	mov	qword ptr [rax + 0x68], rsi
ffffffff8000ae9b: 49 8b 76 30          	mov	rsi, qword ptr [r14 + 0x30]
ffffffff8000ae9f: 48 89 70 70          	mov	qword ptr [rax + 0x70], rsi
ffffffff8000aea3: 49 8b 76 38          	mov	rsi, qword ptr [r14 + 0x38]
ffffffff8000aea7: 48 89 70 78          	mov	qword ptr [rax + 0x78], rsi
ffffffff8000aeab: 49 8b 76 40          	mov	rsi, qword ptr [r14 + 0x40]
ffffffff8000aeaf: 48 89 b0 80 00 00 00 	mov	qword ptr [rax + 0x80], rsi
ffffffff8000aeb6: 49 8b 76 48          	mov	rsi, qword ptr [r14 + 0x48]
ffffffff8000aeba: 48 89 b0 88 00 00 00 	mov	qword ptr [rax + 0x88], rsi
ffffffff8000aec1: 49 8b 76 50          	mov	rsi, qword ptr [r14 + 0x50]
ffffffff8000aec5: 48 89 b0 90 00 00 00 	mov	qword ptr [rax + 0x90], rsi
ffffffff8000aecc: 49 8b 76 58          	mov	rsi, qword ptr [r14 + 0x58]
ffffffff8000aed0: 48 89 b0 98 00 00 00 	mov	qword ptr [rax + 0x98], rsi
ffffffff8000aed7: 49 8b 76 60          	mov	rsi, qword ptr [r14 + 0x60]
ffffffff8000aedb: 48 89 b0 a0 00 00 00 	mov	qword ptr [rax + 0xa0], rsi
ffffffff8000aee2: 49 8b 76 68          	mov	rsi, qword ptr [r14 + 0x68]
ffffffff8000aee6: 48 89 b0 a8 00 00 00 	mov	qword ptr [rax + 0xa8], rsi
ffffffff8000aeed: 49 8b 76 70          	mov	rsi, qword ptr [r14 + 0x70]
ffffffff8000aef1: 48 89 b0 b0 00 00 00 	mov	qword ptr [rax + 0xb0], rsi
ffffffff8000aef8: 49 8b b6 90 00 00 00 	mov	rsi, qword ptr [r14 + 0x90]
ffffffff8000aeff: 48 89 b0 b8 00 00 00 	mov	qword ptr [rax + 0xb8], rsi
ffffffff8000af06: 49 8b 76 78          	mov	rsi, qword ptr [r14 + 0x78]
ffffffff8000af0a: 48 89 b0 c0 00 00 00 	mov	qword ptr [rax + 0xc0], rsi
ffffffff8000af11: 49 8b b6 88 00 00 00 	mov	rsi, qword ptr [r14 + 0x88]
ffffffff8000af18: 48 89 b0 c8 00 00 00 	mov	qword ptr [rax + 0xc8], rsi
ffffffff8000af1f: c6 80 04 01 00 00 03 	mov	byte ptr [rax + 0x104], 0x3
ffffffff8000af26: 4c 8b 70 28          	mov	r14, qword ptr [rax + 0x28]
ffffffff8000af2a: 4c 8b 78 30          	mov	r15, qword ptr [rax + 0x30]
ffffffff8000af2e: f0                   	lock
ffffffff8000af2f: 48 83 61 10 fc       	and	qword ptr [rcx + 0x10], -0x4
ffffffff8000af34: 89 14 24             	mov	dword ptr [rsp], edx
ffffffff8000af37: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8000af3c: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff8000af41: 0f 32                	rdmsr
ffffffff8000af43: 89 44 24 04          	mov	dword ptr [rsp + 0x4], eax
ffffffff8000af47: 48 8d 44 24 04       	lea	rax, [rsp + 0x4]
ffffffff8000af4c: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000af51: 48 89 e0             	mov	rax, rsp
ffffffff8000af54: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000af59: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000af5e: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8000af63: 9c                   	pushfq
ffffffff8000af64: 58                   	pop	rax
ffffffff8000af65: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000af6a: 75 0c                	jne	0xffffffff8000af78 <taos::processes::process::sleep_process::h931370410c459b8f+0x1e8>
ffffffff8000af6c: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000af71: e8 ca 76 ff ff       	call	0xffffffff80002640 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804>
ffffffff8000af76: eb 0c                	jmp	0xffffffff8000af84 <taos::processes::process::sleep_process::h931370410c459b8f+0x1f4>
ffffffff8000af78: fa                   	cli
ffffffff8000af79: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000af7e: e8 bd 76 ff ff       	call	0xffffffff80002640 <taos::events::nanosleep_current_process::{{closure}}::hc7724261b05c7632.llvm.4738937846055189804>
ffffffff8000af83: fb                   	sti
ffffffff8000af84: 4c 89 f4             	mov	rsp, r14
ffffffff8000af87: 41 57                	push	r15
ffffffff8000af89: b9 0b 08 00 00       	mov	ecx, 0x80b
ffffffff8000af8e: 31 c0                	xor	eax, eax
ffffffff8000af90: 31 d2                	xor	edx, edx
ffffffff8000af92: 0f 30                	wrmsr
ffffffff8000af94: c3                   	ret
ffffffff8000af95: 48 83 c4 28          	add	rsp, 0x28
ffffffff8000af99: 5b                   	pop	rbx
ffffffff8000af9a: 41 5e                	pop	r14
ffffffff8000af9c: 41 5f                	pop	r15
ffffffff8000af9e: 5d                   	pop	rbp
ffffffff8000af9f: c3                   	ret
ffffffff8000afa0: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000afa7: 89 d5                	mov	ebp, edx
ffffffff8000afa9: e8 52 44 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000afae: 89 ea                	mov	edx, ebp
ffffffff8000afb0: e9 07 fe ff ff       	jmp	0xffffffff8000adbc <taos::processes::process::sleep_process::h931370410c459b8f+0x2c>
ffffffff8000afb5: be 11 00 00 00       	mov	esi, 0x11
ffffffff8000afba: 48 c7 c7 58 36 02 80 	mov	rdi, -0x7ffdc9a8
ffffffff8000afc1: 48 c7 c2 88 36 02 80 	mov	rdx, -0x7ffdc978
ffffffff8000afc8: e8 93 66 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000afcd: cc                   	int3
ffffffff8000afce: cc                   	int3
ffffffff8000afcf: cc                   	int3

ffffffff8000afd0 <syscall_handler_impl>:
ffffffff8000afd0: 41 57                	push	r15
ffffffff8000afd2: 41 56                	push	r14
ffffffff8000afd4: 41 54                	push	r12
ffffffff8000afd6: 53                   	push	rbx
ffffffff8000afd7: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8000afde: 49 89 f7             	mov	r15, rsi
ffffffff8000afe1: 49 89 fe             	mov	r14, rdi
ffffffff8000afe4: 48 89 bc 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rdi
ffffffff8000afec: 48 8d 84 24 80 00 00 00      	lea	rax, [rsp + 0x80]
ffffffff8000aff4: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8000aff9: 48 c7 44 24 78 f0 de 01 80   	mov	qword ptr [rsp + 0x78], -0x7ffe2110
ffffffff8000b002: 48 c7 44 24 08 02 00 00 00   	mov	qword ptr [rsp + 0x8], 0x2
ffffffff8000b00b: 48 c7 44 24 18 02 00 00 00   	mov	qword ptr [rsp + 0x18], 0x2
ffffffff8000b014: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b01d: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8000b027: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8000b02c: c6 44 24 38 03       	mov	byte ptr [rsp + 0x38], 0x3
ffffffff8000b031: 48 c7 44 24 40 20 37 02 80   	mov	qword ptr [rsp + 0x40], -0x7ffdc8e0
ffffffff8000b03a: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff8000b043: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000b048: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8000b04d: 48 c7 44 24 68 01 00 00 00   	mov	qword ptr [rsp + 0x68], 0x1
ffffffff8000b056: 4c 8d 64 24 70       	lea	r12, [rsp + 0x70]
ffffffff8000b05b: 4c 89 64 24 50       	mov	qword ptr [rsp + 0x50], r12
ffffffff8000b060: 48 c7 44 24 58 01 00 00 00   	mov	qword ptr [rsp + 0x58], 0x1
ffffffff8000b069: 48 8d 5c 24 40       	lea	rbx, [rsp + 0x40]
ffffffff8000b06e: 48 89 df             	mov	rdi, rbx
ffffffff8000b071: e8 9a d2 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b076: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff8000b07b: 48 c7 44 24 48 10 04 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdfbf0
ffffffff8000b084: 48 c7 44 24 08 50 37 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc8b0
ffffffff8000b08d: 48 c7 44 24 10 02 00 00 00   	mov	qword ptr [rsp + 0x10], 0x2
ffffffff8000b096: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b09f: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff8000b0a4: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000b0ad: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b0b2: e8 59 d2 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b0b7: 41 8b 06             	mov	eax, dword ptr [r14]
ffffffff8000b0ba: 83 f8 22             	cmp	eax, 0x22
ffffffff8000b0bd: 7f 1b                	jg	0xffffffff8000b0da <syscall_handler_impl+0x10a>
ffffffff8000b0bf: 83 f8 03             	cmp	eax, 0x3
ffffffff8000b0c2: 74 2e                	je	0xffffffff8000b0f2 <syscall_handler_impl+0x122>
ffffffff8000b0c4: 83 f8 05             	cmp	eax, 0x5
ffffffff8000b0c7: 0f 85 36 01 00 00    	jne	0xffffffff8000b203 <syscall_handler_impl+0x233>
ffffffff8000b0cd: 4c 89 ff             	mov	rdi, r15
ffffffff8000b0d0: e8 8b 28 00 00       	call	0xffffffff8000d960 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8>
ffffffff8000b0d5: e9 97 00 00 00       	jmp	0xffffffff8000b171 <syscall_handler_impl+0x1a1>
ffffffff8000b0da: 83 f8 23             	cmp	eax, 0x23
ffffffff8000b0dd: 0f 85 9d 00 00 00    	jne	0xffffffff8000b180 <syscall_handler_impl+0x1b0>
ffffffff8000b0e3: 49 8b 76 08          	mov	rsi, qword ptr [r14 + 0x8]
ffffffff8000b0e7: 49 8b 7e 10          	mov	rdi, qword ptr [r14 + 0x10]
ffffffff8000b0eb: e8 a0 fc ff ff       	call	0xffffffff8000ad90 <taos::processes::process::sleep_process::h931370410c459b8f>
ffffffff8000b0f0: eb 7d                	jmp	0xffffffff8000b16f <syscall_handler_impl+0x19f>
ffffffff8000b0f2: 4d 8b 76 08          	mov	r14, qword ptr [r14 + 0x8]
ffffffff8000b0f6: 4c 89 f7             	mov	rdi, r14
ffffffff8000b0f9: e8 42 66 01 00       	call	0xffffffff80021740 <strlen>
ffffffff8000b0fe: 48 8d 50 01          	lea	rdx, [rax + 0x1]
ffffffff8000b102: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b107: 4c 89 f6             	mov	rsi, r14
ffffffff8000b10a: e8 d1 5a 01 00       	call	0xffffffff80020be0 <core::ffi::c_str::CStr::to_str::hb93d7efd1cbb2ca0>
ffffffff8000b10f: 83 7c 24 08 01       	cmp	dword ptr [rsp + 0x8], 0x1
ffffffff8000b114: 0f 84 b1 00 00 00    	je	0xffffffff8000b1cb <syscall_handler_impl+0x1fb>
ffffffff8000b11a: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000b11f: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8000b124: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8000b129: 48 89 4c 24 78       	mov	qword ptr [rsp + 0x78], rcx
ffffffff8000b12e: 4c 89 64 24 40       	mov	qword ptr [rsp + 0x40], r12
ffffffff8000b133: 48 c7 44 24 48 b0 9d 00 80   	mov	qword ptr [rsp + 0x48], -0x7fff6250
ffffffff8000b13c: 48 c7 44 24 08 48 39 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc6b8
ffffffff8000b145: 48 c7 44 24 10 02 00 00 00   	mov	qword ptr [rsp + 0x10], 0x2
ffffffff8000b14e: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b157: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff8000b15c: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000b165: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b16a: e8 a1 d1 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b16f: 31 c0                	xor	eax, eax
ffffffff8000b171: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8000b178: 5b                   	pop	rbx
ffffffff8000b179: 41 5c                	pop	r12
ffffffff8000b17b: 41 5e                	pop	r14
ffffffff8000b17d: 41 5f                	pop	r15
ffffffff8000b17f: c3                   	ret
ffffffff8000b180: 83 f8 3c             	cmp	eax, 0x3c
ffffffff8000b183: 75 7e                	jne	0xffffffff8000b203 <syscall_handler_impl+0x233>
ffffffff8000b185: 49 8b 7e 08          	mov	rdi, qword ptr [r14 + 0x8]
ffffffff8000b189: e8 c2 00 00 00       	call	0xffffffff8000b250 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb>
ffffffff8000b18e: 48 c7 44 24 08 b8 37 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc848
ffffffff8000b197: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b1a0: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b1a9: 48 89 e0             	mov	rax, rsp
ffffffff8000b1ac: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000b1b1: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000b1ba: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b1bf: 48 c7 c6 c8 37 02 80 	mov	rsi, -0x7ffdc838
ffffffff8000b1c6: e8 a5 5e 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b1cb: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000b1d0: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8000b1d5: 48 89 4c 24 48       	mov	qword ptr [rsp + 0x48], rcx
ffffffff8000b1da: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8000b1df: 48 8d 54 24 40       	lea	rdx, [rsp + 0x40]
ffffffff8000b1e4: be 14 00 00 00       	mov	esi, 0x14
ffffffff8000b1e9: 48 c7 c7 88 39 02 80 	mov	rdi, -0x7ffdc678
ffffffff8000b1f0: 48 c7 c1 68 39 02 80 	mov	rcx, -0x7ffdc698
ffffffff8000b1f7: 49 c7 c0 a0 39 02 80 	mov	r8, -0x7ffdc660
ffffffff8000b1fe: e8 5d 59 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000b203: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff8000b208: 48 c7 44 24 48 10 04 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdfbf0
ffffffff8000b211: 48 c7 44 24 08 f8 37 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc808
ffffffff8000b21a: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b223: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b22c: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff8000b231: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000b23a: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b23f: 48 c7 c6 08 38 02 80 	mov	rsi, -0x7ffdc7f8
ffffffff8000b246: e8 25 5e 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b24b: cc                   	int3
ffffffff8000b24c: cc                   	int3
ffffffff8000b24d: cc                   	int3
ffffffff8000b24e: cc                   	int3
ffffffff8000b24f: cc                   	int3

ffffffff8000b250 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb>:
ffffffff8000b250: 41 57                	push	r15
ffffffff8000b252: 41 56                	push	r14
ffffffff8000b254: 41 55                	push	r13
ffffffff8000b256: 41 54                	push	r12
ffffffff8000b258: 53                   	push	rbx
ffffffff8000b259: 48 83 ec 70          	sub	rsp, 0x70
ffffffff8000b25d: 48 89 7c 24 38       	mov	qword ptr [rsp + 0x38], rdi
ffffffff8000b262: 48 83 ff ff          	cmp	rdi, -0x1
ffffffff8000b266: 0f 84 67 02 00 00    	je	0xffffffff8000b4d3 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x283>
ffffffff8000b26c: e8 5f 78 ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8000b271: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8000b276: 89 54 24 48          	mov	dword ptr [rsp + 0x48], edx
ffffffff8000b27a: 85 d2                	test	edx, edx
ffffffff8000b27c: 0f 84 8f 02 00 00    	je	0xffffffff8000b511 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x2c1>
ffffffff8000b282: 48 8d 5c 24 48       	lea	rbx, [rsp + 0x48]
ffffffff8000b287: 48 89 5c 24 50       	mov	qword ptr [rsp + 0x50], rbx
ffffffff8000b28c: 48 c7 44 24 58 f0 02 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfd10
ffffffff8000b295: 48 8d 44 24 38       	lea	rax, [rsp + 0x38]
ffffffff8000b29a: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8000b29f: 48 c7 44 24 68 30 05 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffdfad0
ffffffff8000b2a8: 48 c7 44 24 08 c8 38 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc738
ffffffff8000b2b1: 48 c7 44 24 10 03 00 00 00   	mov	qword ptr [rsp + 0x10], 0x3
ffffffff8000b2ba: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b2c3: 4c 8d 64 24 50       	lea	r12, [rsp + 0x50]
ffffffff8000b2c8: 4c 89 64 24 18       	mov	qword ptr [rsp + 0x18], r12
ffffffff8000b2cd: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8000b2d6: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b2db: e8 30 d0 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b2e0: 0f b6 05 59 ff 01 00 	movzx	eax, byte ptr [rip + 0x1ff59] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000b2e7: 3c 02                	cmp	al, 0x2
ffffffff8000b2e9: 0f 85 d3 01 00 00    	jne	0xffffffff8000b4c2 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x272>
ffffffff8000b2ef: 4c 8b 3d 42 ff 01 00 	mov	r15, qword ptr [rip + 0x1ff42] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000b2f6: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000b2fb: 31 c0                	xor	eax, eax
ffffffff8000b2fd: f0                   	lock
ffffffff8000b2fe: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff8000b303: 74 17                	je	0xffffffff8000b31c <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0xcc>
ffffffff8000b305: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8000b310: f3 90                	pause
ffffffff8000b312: 31 c0                	xor	eax, eax
ffffffff8000b314: f0                   	lock
ffffffff8000b315: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff8000b31a: 75 f4                	jne	0xffffffff8000b310 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0xc0>
ffffffff8000b31c: 49 8b 47 18          	mov	rax, qword ptr [r15 + 0x18]
ffffffff8000b320: 48 85 c0             	test	rax, rax
ffffffff8000b323: 0f 84 64 02 00 00    	je	0xffffffff8000b58d <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x33d>
ffffffff8000b329: 4d 8d 77 18          	lea	r14, [r15 + 0x18]
ffffffff8000b32d: 49 8b 4f 20          	mov	rcx, qword ptr [r15 + 0x20]
ffffffff8000b331: 8b 54 24 48          	mov	edx, dword ptr [rsp + 0x48]
ffffffff8000b335: be ff 00 00 00       	mov	esi, 0xff
ffffffff8000b33a: 44 0f b7 80 8e 00 00 00      	movzx	r8d, word ptr [rax + 0x8e]
ffffffff8000b342: 45 89 c1             	mov	r9d, r8d
ffffffff8000b345: 41 c1 e1 02          	shl	r9d, 0x2
ffffffff8000b349: 48 c7 c7 ff ff ff ff 	mov	rdi, -0x1
ffffffff8000b350: 4d 85 c9             	test	r9, r9
ffffffff8000b353: 74 2b                	je	0xffffffff8000b380 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x130>
ffffffff8000b355: 45 31 d2             	xor	r10d, r10d
ffffffff8000b358: 39 54 b8 64          	cmp	dword ptr [rax + 4*rdi + 0x64], edx
ffffffff8000b35c: 41 0f 95 c2          	setne	r10b
ffffffff8000b360: 44 0f 47 d6          	cmova	r10d, esi
ffffffff8000b364: 48 ff c7             	inc	rdi
ffffffff8000b367: 49 83 c1 fc          	add	r9, -0x4
ffffffff8000b36b: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff8000b36f: 74 df                	je	0xffffffff8000b350 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x100>
ffffffff8000b371: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff8000b375: 45 85 c0             	test	r8d, r8d
ffffffff8000b378: 74 1d                	je	0xffffffff8000b397 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x147>
ffffffff8000b37a: eb 07                	jmp	0xffffffff8000b383 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x133>
ffffffff8000b37c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000b380: 4c 89 c7             	mov	rdi, r8
ffffffff8000b383: 48 83 e9 01          	sub	rcx, 0x1
ffffffff8000b387: 0f 82 00 02 00 00    	jb	0xffffffff8000b58d <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x33d>
ffffffff8000b38d: 48 8b 84 f8 90 00 00 00      	mov	rax, qword ptr [rax + 8*rdi + 0x90]
ffffffff8000b395: eb a3                	jmp	0xffffffff8000b33a <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0xea>
ffffffff8000b397: 4c 8b 6c f8 08       	mov	r13, qword ptr [rax + 8*rdi + 0x8]
ffffffff8000b39c: 49 8d 7d 10          	lea	rdi, [r13 + 0x10]
ffffffff8000b3a0: 41 c6 85 04 01 00 00 04      	mov	byte ptr [r13 + 0x104], 0x4
ffffffff8000b3a8: e8 b3 f5 ff ff       	call	0xffffffff8000a960 <taos::processes::process::clear_process_frames::h3256facfc8bb1fa4>
ffffffff8000b3ad: b1 01                	mov	cl, 0x1
ffffffff8000b3af: 90                   	nop
ffffffff8000b3b0: 31 c0                	xor	eax, eax
ffffffff8000b3b2: f0                   	lock
ffffffff8000b3b3: 0f b0 0d 7e fc 01 00 	cmpxchg	byte ptr [rip + 0x1fc7e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000b3ba: 75 06                	jne	0xffffffff8000b3c2 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x172>
ffffffff8000b3bc: eb 11                	jmp	0xffffffff8000b3cf <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x17f>
ffffffff8000b3be: 66 90                	nop
ffffffff8000b3c0: f3 90                	pause
ffffffff8000b3c2: 0f b6 05 6f fc 01 00 	movzx	eax, byte ptr [rip + 0x1fc6f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000b3c9: 84 c0                	test	al, al
ffffffff8000b3cb: 75 f3                	jne	0xffffffff8000b3c0 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x170>
ffffffff8000b3cd: eb e1                	jmp	0xffffffff8000b3b0 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x160>
ffffffff8000b3cf: 83 3d 6a fc 01 00 02 	cmp	dword ptr [rip + 0x1fc6a], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000b3d6: 74 3e                	je	0xffffffff8000b416 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x1c6>
ffffffff8000b3d8: 48 c7 44 24 08 c0 3d 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc240
ffffffff8000b3e1: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b3ea: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b3f3: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000b3fc: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000b405: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b40a: 48 c7 c6 f0 3d 02 80 	mov	rsi, -0x7ffdc210
ffffffff8000b411: e8 5a 5c 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b416: 48 c7 44 24 50 88 b0 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffd4f78
ffffffff8000b41f: 48 c7 44 24 58 10 04 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfbf0
ffffffff8000b428: 48 c7 44 24 08 a0 31 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdce60
ffffffff8000b431: 48 c7 44 24 10 02 00 00 00   	mov	qword ptr [rsp + 0x10], 0x2
ffffffff8000b43a: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b443: 4c 89 64 24 18       	mov	qword ptr [rsp + 0x18], r12
ffffffff8000b448: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000b451: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b456: e8 b5 ce ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b45b: c6 05 d6 fb 01 00 00 	mov	byte ptr [rip + 0x1fbd6], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000b462: 4c 89 f7             	mov	rdi, r14
ffffffff8000b465: 48 89 de             	mov	rsi, rbx
ffffffff8000b468: e8 63 6f 00 00       	call	0xffffffff800123d0 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1>
ffffffff8000b46d: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8000b472: 48 85 c0             	test	rax, rax
ffffffff8000b475: 74 10                	je	0xffffffff8000b487 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x237>
ffffffff8000b477: f0                   	lock
ffffffff8000b478: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000b47b: 75 0a                	jne	0xffffffff8000b487 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x237>
ffffffff8000b47d: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b482: e8 d9 76 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000b487: 49 8b 45 28          	mov	rax, qword ptr [r13 + 0x28]
ffffffff8000b48b: 49 8b 4d 30          	mov	rcx, qword ptr [r13 + 0x30]
ffffffff8000b48f: f0                   	lock
ffffffff8000b490: 49 83 67 10 fc       	and	qword ptr [r15 + 0x10], -0x4
ffffffff8000b495: 48 89 c4             	mov	rsp, rax
ffffffff8000b498: 51                   	push	rcx
ffffffff8000b499: f9                   	stc
ffffffff8000b49a: 48 83 7c 24 38 ff    	cmp	qword ptr [rsp + 0x38], -0x1
ffffffff8000b4a0: 0f 84 a9 00 00 00    	je	0xffffffff8000b54f <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x2ff>
ffffffff8000b4a6: 0f 01 f8             	swapgs
ffffffff8000b4a9: c3                   	ret
ffffffff8000b4aa: 48 8b 54 24 38       	mov	rdx, qword ptr [rsp + 0x38]
ffffffff8000b4af: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8000b4b4: 48 83 c4 70          	add	rsp, 0x70
ffffffff8000b4b8: 5b                   	pop	rbx
ffffffff8000b4b9: 41 5c                	pop	r12
ffffffff8000b4bb: 41 5d                	pop	r13
ffffffff8000b4bd: 41 5e                	pop	r14
ffffffff8000b4bf: 41 5f                	pop	r15
ffffffff8000b4c1: c3                   	ret
ffffffff8000b4c2: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000b4c9: e8 32 3f 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000b4ce: e9 1c fe ff ff       	jmp	0xffffffff8000b2ef <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb+0x9f>
ffffffff8000b4d3: 48 c7 44 24 08 38 38 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc7c8
ffffffff8000b4dc: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b4e5: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b4ee: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000b4f7: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000b500: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b505: 48 c7 c6 48 38 02 80 	mov	rsi, -0x7ffdc7b8
ffffffff8000b50c: e8 5f 5b 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b511: 48 c7 44 24 08 88 38 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc778
ffffffff8000b51a: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b523: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b52c: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000b535: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000b53e: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b543: 48 c7 c6 98 38 02 80 	mov	rsi, -0x7ffdc768
ffffffff8000b54a: e8 21 5b 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b54f: 48 c7 44 24 08 20 39 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc6e0
ffffffff8000b558: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000b561: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000b56a: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000b573: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000b57c: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b581: 48 c7 c6 30 39 02 80 	mov	rsi, -0x7ffdc6d0
ffffffff8000b588: e8 e3 5a 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b58d: be 11 00 00 00       	mov	esi, 0x11
ffffffff8000b592: 48 c7 c7 58 36 02 80 	mov	rdi, -0x7ffdc9a8
ffffffff8000b599: 48 c7 c2 f8 38 02 80 	mov	rdx, -0x7ffdc708
ffffffff8000b5a0: e8 bb 60 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000b5a5: cc                   	int3
ffffffff8000b5a6: cc                   	int3
ffffffff8000b5a7: cc                   	int3
ffffffff8000b5a8: cc                   	int3
ffffffff8000b5a9: cc                   	int3
ffffffff8000b5aa: cc                   	int3
ffffffff8000b5ab: cc                   	int3
ffffffff8000b5ac: cc                   	int3
ffffffff8000b5ad: cc                   	int3
ffffffff8000b5ae: cc                   	int3
ffffffff8000b5af: cc                   	int3

ffffffff8000b5b0 <<taos::devices::sd_card::SDCardError as core::fmt::Debug>::fmt::h9e8097b605e6f4cc>:
ffffffff8000b5b0: 48 89 f0             	mov	rax, rsi
ffffffff8000b5b3: 0f b6 0f             	movzx	ecx, byte ptr [rdi]
ffffffff8000b5b6: c1 e1 03             	shl	ecx, 0x3
ffffffff8000b5b9: 48 8b 91 18 3a 02 80 	mov	rdx, qword ptr [rcx - 0x7ffdc5e8]
ffffffff8000b5c0: 48 8b b1 48 3a 02 80 	mov	rsi, qword ptr [rcx - 0x7ffdc5b8]
ffffffff8000b5c7: 48 89 c7             	mov	rdi, rax
ffffffff8000b5ca: e9 61 34 01 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000b5cf: cc                   	int3

ffffffff8000b5d0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac>:
ffffffff8000b5d0: 55                   	push	rbp
ffffffff8000b5d1: 41 57                	push	r15
ffffffff8000b5d3: 41 56                	push	r14
ffffffff8000b5d5: 41 54                	push	r12
ffffffff8000b5d7: 53                   	push	rbx
ffffffff8000b5d8: 48 83 ec 10          	sub	rsp, 0x10
ffffffff8000b5dc: 48 8b 47 10          	mov	rax, qword ptr [rdi + 0x10]
ffffffff8000b5e0: 48 85 c0             	test	rax, rax
ffffffff8000b5e3: 0f 84 82 00 00 00    	je	0xffffffff8000b66b <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9b>
ffffffff8000b5e9: 4c 8b 7f 08          	mov	r15, qword ptr [rdi + 0x8]
ffffffff8000b5ed: 4d 8d 24 c7          	lea	r12, [r15 + 8*rax]
ffffffff8000b5f1: 31 db                	xor	ebx, ebx
ffffffff8000b5f3: 40 b5 01             	mov	bpl, 0x1
ffffffff8000b5f6: 4c 8d 74 24 08       	lea	r14, [rsp + 0x8]
ffffffff8000b5fb: eb 0c                	jmp	0xffffffff8000b609 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x39>
ffffffff8000b5fd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000b600: 49 83 c7 08          	add	r15, 0x8
ffffffff8000b604: 4d 39 e7             	cmp	r15, r12
ffffffff8000b607: 74 64                	je	0xffffffff8000b66d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000b609: 49 8b 07             	mov	rax, qword ptr [r15]
ffffffff8000b60c: f0                   	lock
ffffffff8000b60d: 48 ff 00             	inc	qword ptr [rax]
ffffffff8000b610: 0f 8e 8e 00 00 00    	jle	0xffffffff8000b6a4 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xd4>
ffffffff8000b616: 49 8b 0f             	mov	rcx, qword ptr [r15]
ffffffff8000b619: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8000b61e: 66 90                	nop
ffffffff8000b620: 31 c0                	xor	eax, eax
ffffffff8000b622: f0                   	lock
ffffffff8000b623: 40 0f b0 69 10       	cmpxchg	byte ptr [rcx + 0x10], bpl
ffffffff8000b628: 75 08                	jne	0xffffffff8000b632 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x62>
ffffffff8000b62a: eb 14                	jmp	0xffffffff8000b640 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x70>
ffffffff8000b62c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000b630: f3 90                	pause
ffffffff8000b632: 0f b6 41 10          	movzx	eax, byte ptr [rcx + 0x10]
ffffffff8000b636: 84 c0                	test	al, al
ffffffff8000b638: 75 f6                	jne	0xffffffff8000b630 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x60>
ffffffff8000b63a: eb e4                	jmp	0xffffffff8000b620 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x50>
ffffffff8000b63c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000b640: 80 79 1c 08          	cmp	byte ptr [rcx + 0x1c], 0x8
ffffffff8000b644: 75 0c                	jne	0xffffffff8000b652 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x82>
ffffffff8000b646: 80 79 1d 05          	cmp	byte ptr [rcx + 0x1d], 0x5
ffffffff8000b64a: 75 06                	jne	0xffffffff8000b652 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x82>
ffffffff8000b64c: 80 79 1e 01          	cmp	byte ptr [rcx + 0x1e], 0x1
ffffffff8000b650: 76 2b                	jbe	0xffffffff8000b67d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xad>
ffffffff8000b652: c6 41 10 00          	mov	byte ptr [rcx + 0x10], 0x0
ffffffff8000b656: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000b65b: f0                   	lock
ffffffff8000b65c: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000b65f: 75 9f                	jne	0xffffffff8000b600 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x30>
ffffffff8000b661: 4c 89 f7             	mov	rdi, r14
ffffffff8000b664: e8 c7 77 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000b669: eb 95                	jmp	0xffffffff8000b600 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x30>
ffffffff8000b66b: 31 db                	xor	ebx, ebx
ffffffff8000b66d: 48 89 d8             	mov	rax, rbx
ffffffff8000b670: 48 83 c4 10          	add	rsp, 0x10
ffffffff8000b674: 5b                   	pop	rbx
ffffffff8000b675: 41 5c                	pop	r12
ffffffff8000b677: 41 5e                	pop	r14
ffffffff8000b679: 41 5f                	pop	r15
ffffffff8000b67b: 5d                   	pop	rbp
ffffffff8000b67c: c3                   	ret
ffffffff8000b67d: 49 8b 07             	mov	rax, qword ptr [r15]
ffffffff8000b680: f0                   	lock
ffffffff8000b681: 48 ff 00             	inc	qword ptr [rax]
ffffffff8000b684: 7e 1e                	jle	0xffffffff8000b6a4 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xd4>
ffffffff8000b686: 49 8b 1f             	mov	rbx, qword ptr [r15]
ffffffff8000b689: c6 41 10 00          	mov	byte ptr [rcx + 0x10], 0x0
ffffffff8000b68d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000b692: f0                   	lock
ffffffff8000b693: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000b696: 75 d5                	jne	0xffffffff8000b66d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000b698: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000b69d: e8 8e 77 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000b6a2: eb c9                	jmp	0xffffffff8000b66d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000b6a4: 0f 0b                	ud2
ffffffff8000b6a6: cc                   	int3
ffffffff8000b6a7: cc                   	int3
ffffffff8000b6a8: cc                   	int3
ffffffff8000b6a9: cc                   	int3
ffffffff8000b6aa: cc                   	int3
ffffffff8000b6ab: cc                   	int3
ffffffff8000b6ac: cc                   	int3
ffffffff8000b6ad: cc                   	int3
ffffffff8000b6ae: cc                   	int3
ffffffff8000b6af: cc                   	int3

ffffffff8000b6b0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6>:
ffffffff8000b6b0: 55                   	push	rbp
ffffffff8000b6b1: 41 57                	push	r15
ffffffff8000b6b3: 41 56                	push	r14
ffffffff8000b6b5: 41 55                	push	r13
ffffffff8000b6b7: 41 54                	push	r12
ffffffff8000b6b9: 53                   	push	rbx
ffffffff8000b6ba: 48 81 ec b8 01 00 00 	sub	rsp, 0x1b8
ffffffff8000b6c1: 4c 8b 2f             	mov	r13, qword ptr [rdi]
ffffffff8000b6c4: f0                   	lock
ffffffff8000b6c5: 49 ff 45 00          	inc	qword ptr [r13]
ffffffff8000b6c9: 0f 8e d2 05 00 00    	jle	0xffffffff8000bca1 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5f1>
ffffffff8000b6cf: 49 89 f6             	mov	r14, rsi
ffffffff8000b6d2: 4c 89 6c 24 38       	mov	qword ptr [rsp + 0x38], r13
ffffffff8000b6d7: b1 01                	mov	cl, 0x1
ffffffff8000b6d9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff8000b6e0: 31 c0                	xor	eax, eax
ffffffff8000b6e2: f0                   	lock
ffffffff8000b6e3: 41 0f b0 4d 10       	cmpxchg	byte ptr [r13 + 0x10], cl
ffffffff8000b6e8: 75 08                	jne	0xffffffff8000b6f2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x42>
ffffffff8000b6ea: eb 11                	jmp	0xffffffff8000b6fd <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d>
ffffffff8000b6ec: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000b6f0: f3 90                	pause
ffffffff8000b6f2: 41 0f b6 45 10       	movzx	eax, byte ptr [r13 + 0x10]
ffffffff8000b6f7: 84 c0                	test	al, al
ffffffff8000b6f9: 75 f5                	jne	0xffffffff8000b6f0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x40>
ffffffff8000b6fb: eb e3                	jmp	0xffffffff8000b6e0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x30>
ffffffff8000b6fd: 41 0f b6 55 1b       	movzx	edx, byte ptr [r13 + 0x1b]
ffffffff8000b702: 83 fa 1f             	cmp	edx, 0x1f
ffffffff8000b705: 0f 87 1d 05 00 00    	ja	0xffffffff8000bc28 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000b70b: 41 0f b7 4d 18       	movzx	ecx, word ptr [r13 + 0x18]
ffffffff8000b710: 83 e1 fd             	and	ecx, -0x3
ffffffff8000b713: 41 0f b6 75 1a       	movzx	esi, byte ptr [r13 + 0x1a]
ffffffff8000b718: 40 b7 01             	mov	dil, 0x1
ffffffff8000b71b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8000b720: 31 c0                	xor	eax, eax
ffffffff8000b722: f0                   	lock
ffffffff8000b723: 40 0f b0 3d e5 fa 01 00      	cmpxchg	byte ptr [rip + 0x1fae5], dil # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b72b: 75 05                	jne	0xffffffff8000b732 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x82>
ffffffff8000b72d: eb 10                	jmp	0xffffffff8000b73f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8f>
ffffffff8000b72f: 90                   	nop
ffffffff8000b730: f3 90                	pause
ffffffff8000b732: 0f b6 05 d7 fa 01 00 	movzx	eax, byte ptr [rip + 0x1fad7] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b739: 84 c0                	test	al, al
ffffffff8000b73b: 75 f3                	jne	0xffffffff8000b730 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x80>
ffffffff8000b73d: eb e1                	jmp	0xffffffff8000b720 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x70>
ffffffff8000b73f: c1 e2 0b             	shl	edx, 0xb
ffffffff8000b742: c1 e6 10             	shl	esi, 0x10
ffffffff8000b745: 8d 04 16             	lea	eax, [rsi + rdx]
ffffffff8000b748: 05 04 00 00 80       	add	eax, 0x80000004
ffffffff8000b74d: c6 05 bc fa 01 00 00 	mov	byte ptr [rip + 0x1fabc], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b754: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b758: ef                   	out	dx, eax
ffffffff8000b759: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff8000b75d: ed                   	in	eax, dx
ffffffff8000b75e: 25 00 00 ff ff       	and	eax, 0xffff0000
ffffffff8000b763: 09 c8                	or	eax, ecx
ffffffff8000b765: ef                   	out	dx, eax
ffffffff8000b766: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b76a: 31 c0                	xor	eax, eax
ffffffff8000b76c: ef                   	out	dx, eax
ffffffff8000b76d: 41 0f b6 4d 1b       	movzx	ecx, byte ptr [r13 + 0x1b]
ffffffff8000b772: 83 f9 1f             	cmp	ecx, 0x1f
ffffffff8000b775: 0f 87 ad 04 00 00    	ja	0xffffffff8000bc28 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000b77b: 41 0f b6 55 1a       	movzx	edx, byte ptr [r13 + 0x1a]
ffffffff8000b780: 40 b6 01             	mov	sil, 0x1
ffffffff8000b783: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000b790: 31 c0                	xor	eax, eax
ffffffff8000b792: f0                   	lock
ffffffff8000b793: 40 0f b0 35 75 fa 01 00      	cmpxchg	byte ptr [rip + 0x1fa75], sil # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b79b: 75 05                	jne	0xffffffff8000b7a2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xf2>
ffffffff8000b79d: eb 10                	jmp	0xffffffff8000b7af <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xff>
ffffffff8000b79f: 90                   	nop
ffffffff8000b7a0: f3 90                	pause
ffffffff8000b7a2: 0f b6 05 67 fa 01 00 	movzx	eax, byte ptr [rip + 0x1fa67] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b7a9: 84 c0                	test	al, al
ffffffff8000b7ab: 75 f3                	jne	0xffffffff8000b7a0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xf0>
ffffffff8000b7ad: eb e1                	jmp	0xffffffff8000b790 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xe0>
ffffffff8000b7af: c1 e1 0b             	shl	ecx, 0xb
ffffffff8000b7b2: c1 e2 10             	shl	edx, 0x10
ffffffff8000b7b5: 8d 04 0a             	lea	eax, [rdx + rcx]
ffffffff8000b7b8: 05 10 00 00 80       	add	eax, 0x80000010
ffffffff8000b7bd: c6 05 4c fa 01 00 00 	mov	byte ptr [rip + 0x1fa4c], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b7c4: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b7c8: ef                   	out	dx, eax
ffffffff8000b7c9: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff8000b7cd: ed                   	in	eax, dx
ffffffff8000b7ce: 41 89 c7             	mov	r15d, eax
ffffffff8000b7d1: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b7d5: 31 c0                	xor	eax, eax
ffffffff8000b7d7: ef                   	out	dx, eax
ffffffff8000b7d8: 41 81 e7 00 ff ff ff 	and	r15d, 0xffffff00
ffffffff8000b7df: 49 8b 5e 08          	mov	rbx, qword ptr [r14 + 0x8]
ffffffff8000b7e3: 4c 01 fb             	add	rbx, r15
ffffffff8000b7e6: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000b7f0: 48 01 d8             	add	rax, rbx
ffffffff8000b7f3: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000b7f7: 0f 85 43 04 00 00    	jne	0xffffffff8000bc40 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x590>
ffffffff8000b7fd: 48 8d bc 24 08 01 00 00      	lea	rdi, [rsp + 0x108]
ffffffff8000b805: 4c 89 f6             	mov	rsi, r14
ffffffff8000b808: 48 89 da             	mov	rdx, rbx
ffffffff8000b80b: e8 d0 99 00 00       	call	0xffffffff800151e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>
ffffffff8000b810: 48 8b 84 24 08 01 00 00      	mov	rax, qword ptr [rsp + 0x108]
ffffffff8000b818: 48 8d 50 fd          	lea	rdx, [rax - 0x3]
ffffffff8000b81c: 48 8d 70 fe          	lea	rsi, [rax - 0x2]
ffffffff8000b820: 31 c9                	xor	ecx, ecx
ffffffff8000b822: 48 83 fa 02          	cmp	rdx, 0x2
ffffffff8000b826: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff8000b82a: 48 85 c9             	test	rcx, rcx
ffffffff8000b82d: 0f 84 11 01 00 00    	je	0xffffffff8000b944 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x294>
ffffffff8000b833: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff8000b837: 0f 85 ce 08 00 00    	jne	0xffffffff8000c10b <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa5b>
ffffffff8000b83d: 41 81 e7 00 f0 ff ff 	and	r15d, 0xfffff000
ffffffff8000b844: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8000b849: 4c 89 f7             	mov	rdi, r14
ffffffff8000b84c: 4c 89 fe             	mov	rsi, r15
ffffffff8000b84f: e8 5c 57 00 00       	call	0xffffffff80010fb0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>
ffffffff8000b854: 48 89 c3             	mov	rbx, rax
ffffffff8000b857: 41 0f b6 55 1b       	movzx	edx, byte ptr [r13 + 0x1b]
ffffffff8000b85c: 83 fa 1f             	cmp	edx, 0x1f
ffffffff8000b85f: 0f 87 c3 03 00 00    	ja	0xffffffff8000bc28 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000b865: 41 0f b6 75 1a       	movzx	esi, byte ptr [r13 + 0x1a]
ffffffff8000b86a: 41 0f b7 4d 18       	movzx	ecx, word ptr [r13 + 0x18]
ffffffff8000b86f: 83 c9 06             	or	ecx, 0x6
ffffffff8000b872: 40 b7 01             	mov	dil, 0x1
ffffffff8000b875: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8000b880: 31 c0                	xor	eax, eax
ffffffff8000b882: f0                   	lock
ffffffff8000b883: 40 0f b0 3d 85 f9 01 00      	cmpxchg	byte ptr [rip + 0x1f985], dil # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b88b: 75 05                	jne	0xffffffff8000b892 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1e2>
ffffffff8000b88d: eb 10                	jmp	0xffffffff8000b89f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1ef>
ffffffff8000b88f: 90                   	nop
ffffffff8000b890: f3 90                	pause
ffffffff8000b892: 0f b6 05 77 f9 01 00 	movzx	eax, byte ptr [rip + 0x1f977] # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b899: 84 c0                	test	al, al
ffffffff8000b89b: 75 f3                	jne	0xffffffff8000b890 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1e0>
ffffffff8000b89d: eb e1                	jmp	0xffffffff8000b880 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1d0>
ffffffff8000b89f: c1 e2 0b             	shl	edx, 0xb
ffffffff8000b8a2: c1 e6 10             	shl	esi, 0x10
ffffffff8000b8a5: 8d 04 16             	lea	eax, [rsi + rdx]
ffffffff8000b8a8: 05 04 00 00 80       	add	eax, 0x80000004
ffffffff8000b8ad: c6 05 5c f9 01 00 00 	mov	byte ptr [rip + 0x1f95c], 0x0 # 0xffffffff8002b210 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.4796390557109910071>
ffffffff8000b8b4: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b8b8: ef                   	out	dx, eax
ffffffff8000b8b9: 66 ba fc 0c          	mov	dx, 0xcfc
ffffffff8000b8bd: ed                   	in	eax, dx
ffffffff8000b8be: 25 00 00 ff ff       	and	eax, 0xffff0000
ffffffff8000b8c3: 09 c8                	or	eax, ecx
ffffffff8000b8c5: ef                   	out	dx, eax
ffffffff8000b8c6: 66 ba f8 0c          	mov	dx, 0xcf8
ffffffff8000b8ca: 31 c0                	xor	eax, eax
ffffffff8000b8cc: ef                   	out	dx, eax
ffffffff8000b8cd: 4c 8b 73 40          	mov	r14, qword ptr [rbx + 0x40]
ffffffff8000b8d1: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff8000b8d6: 48 89 5c 24 48       	mov	qword ptr [rsp + 0x48], rbx
ffffffff8000b8db: c6 43 2f 01          	mov	byte ptr [rbx + 0x2f], 0x1
ffffffff8000b8df: b8 e8 03 00 00       	mov	eax, 0x3e8
ffffffff8000b8e4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8000b8f0: f6 43 2f 01          	test	byte ptr [rbx + 0x2f], 0x1
ffffffff8000b8f4: 74 28                	je	0xffffffff8000b91e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000b8f6: f3 90                	pause
ffffffff8000b8f8: f6 43 2f 01          	test	byte ptr [rbx + 0x2f], 0x1
ffffffff8000b8fc: 74 20                	je	0xffffffff8000b91e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000b8fe: f3 90                	pause
ffffffff8000b900: f6 43 2f 01          	test	byte ptr [rbx + 0x2f], 0x1
ffffffff8000b904: 74 18                	je	0xffffffff8000b91e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000b906: f3 90                	pause
ffffffff8000b908: f6 43 2f 01          	test	byte ptr [rbx + 0x2f], 0x1
ffffffff8000b90c: 74 10                	je	0xffffffff8000b91e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000b90e: f3 90                	pause
ffffffff8000b910: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000b914: 75 da                	jne	0xffffffff8000b8f0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x240>
ffffffff8000b916: 40 b5 02             	mov	bpl, 0x2
ffffffff8000b919: e9 dc 02 00 00       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b91e: 66 c7 43 34 ff 01    	mov	word ptr [rbx + 0x34], 0x1ff
ffffffff8000b924: 40 b5 05             	mov	bpl, 0x5
ffffffff8000b927: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000b92c: 0f 85 c8 02 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b932: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000b935: a8 03                	test	al, 0x3
ffffffff8000b937: 0f 84 9e 01 00 00    	je	0xffffffff8000badb <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x42b>
ffffffff8000b93d: 31 ed                	xor	ebp, ebp
ffffffff8000b93f: e9 b6 02 00 00       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b944: 4c 8b bc 24 20 01 00 00      	mov	r15, qword ptr [rsp + 0x120]
ffffffff8000b94c: 48 85 c0             	test	rax, rax
ffffffff8000b94f: 0f 84 ca 00 00 00    	je	0xffffffff8000ba1f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x36f>
ffffffff8000b955: 4d 8d 66 08          	lea	r12, [r14 + 0x8]
ffffffff8000b959: 83 f8 01             	cmp	eax, 0x1
ffffffff8000b95c: 0f 85 f3 00 00 00    	jne	0xffffffff8000ba55 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x3a5>
ffffffff8000b962: 48 89 d8             	mov	rax, rbx
ffffffff8000b965: 48 c1 e8 27          	shr	rax, 0x27
ffffffff8000b969: 25 ff 01 00 00       	and	eax, 0x1ff
ffffffff8000b96e: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff8000b971: 48 8b 34 c1          	mov	rsi, qword ptr [rcx + 8*rax]
ffffffff8000b975: 89 f0                	mov	eax, esi
ffffffff8000b977: 25 81 00 00 00       	and	eax, 0x81
ffffffff8000b97c: 40 b5 05             	mov	bpl, 0x5
ffffffff8000b97f: 83 f8 01             	cmp	eax, 0x1
ffffffff8000b982: 0f 85 72 02 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b988: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff8000b992: 49 89 de             	mov	r14, rbx
ffffffff8000b995: 49 c1 ee 1e          	shr	r14, 0x1e
ffffffff8000b999: 48 21 c6             	and	rsi, rax
ffffffff8000b99c: 4c 89 e7             	mov	rdi, r12
ffffffff8000b99f: e8 6c 12 01 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000b9a4: 41 81 e6 ff 01 00 00 	and	r14d, 0x1ff
ffffffff8000b9ab: 4a 8b 34 f0          	mov	rsi, qword ptr [rax + 8*r14]
ffffffff8000b9af: 89 f0                	mov	eax, esi
ffffffff8000b9b1: 25 81 00 00 00       	and	eax, 0x81
ffffffff8000b9b6: 83 f8 01             	cmp	eax, 0x1
ffffffff8000b9b9: 0f 85 3b 02 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b9bf: 49 89 de             	mov	r14, rbx
ffffffff8000b9c2: 49 c1 ee 15          	shr	r14, 0x15
ffffffff8000b9c6: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff8000b9d0: 48 21 c6             	and	rsi, rax
ffffffff8000b9d3: 4c 89 e7             	mov	rdi, r12
ffffffff8000b9d6: e8 35 12 01 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000b9db: 41 81 e6 ff 01 00 00 	and	r14d, 0x1ff
ffffffff8000b9e2: 44 89 f1             	mov	ecx, r14d
ffffffff8000b9e5: 48 8b 0c c8          	mov	rcx, qword ptr [rax + 8*rcx]
ffffffff8000b9e9: 48 85 c9             	test	rcx, rcx
ffffffff8000b9ec: 0f 84 08 02 00 00    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000b9f2: 48 89 da             	mov	rdx, rbx
ffffffff8000b9f5: 48 81 e2 00 00 e0 ff 	and	rdx, -0x200000
ffffffff8000b9fc: 48 be 00 f0 ff ff ff ff 0f 00	movabs	rsi, 0xffffffffff000
ffffffff8000ba06: 48 21 f1             	and	rcx, rsi
ffffffff8000ba09: 49 09 cf             	or	r15, rcx
ffffffff8000ba0c: 49 81 cf 92 00 00 00 	or	r15, 0x92
ffffffff8000ba13: 4e 89 3c f0          	mov	qword ptr [rax + 8*r14], r15
ffffffff8000ba17: 0f 01 3a             	invlpg	byte ptr [rdx]
ffffffff8000ba1a: e9 38 fe ff ff       	jmp	0xffffffff8000b857 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000ba1f: 48 89 da             	mov	rdx, rbx
ffffffff8000ba22: 48 81 e2 00 f0 ff ff 	and	rdx, -0x1000
ffffffff8000ba29: 49 83 cf 12          	or	r15, 0x12
ffffffff8000ba2d: 48 89 e7             	mov	rdi, rsp
ffffffff8000ba30: 4c 89 f6             	mov	rsi, r14
ffffffff8000ba33: 4c 89 f9             	mov	rcx, r15
ffffffff8000ba36: e8 15 99 00 00       	call	0xffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff8000ba3b: 80 3c 24 00          	cmp	byte ptr [rsp], 0x0
ffffffff8000ba3f: 40 b5 05             	mov	bpl, 0x5
ffffffff8000ba42: 0f 85 b2 01 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ba48: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000ba4d: 0f 01 38             	invlpg	byte ptr [rax]
ffffffff8000ba50: e9 02 fe ff ff       	jmp	0xffffffff8000b857 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000ba55: 48 89 d8             	mov	rax, rbx
ffffffff8000ba58: 48 c1 e8 27          	shr	rax, 0x27
ffffffff8000ba5c: 25 ff 01 00 00       	and	eax, 0x1ff
ffffffff8000ba61: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff8000ba64: 48 8b 34 c1          	mov	rsi, qword ptr [rcx + 8*rax]
ffffffff8000ba68: 89 f0                	mov	eax, esi
ffffffff8000ba6a: 25 81 00 00 00       	and	eax, 0x81
ffffffff8000ba6f: 40 b5 05             	mov	bpl, 0x5
ffffffff8000ba72: 83 f8 01             	cmp	eax, 0x1
ffffffff8000ba75: 0f 85 7f 01 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ba7b: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff8000ba85: 49 89 de             	mov	r14, rbx
ffffffff8000ba88: 49 c1 ee 1e          	shr	r14, 0x1e
ffffffff8000ba8c: 48 21 c6             	and	rsi, rax
ffffffff8000ba8f: 4c 89 e7             	mov	rdi, r12
ffffffff8000ba92: e8 79 11 01 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000ba97: 41 81 e6 ff 01 00 00 	and	r14d, 0x1ff
ffffffff8000ba9e: 44 89 f1             	mov	ecx, r14d
ffffffff8000baa1: 48 8b 0c c8          	mov	rcx, qword ptr [rax + 8*rcx]
ffffffff8000baa5: 48 85 c9             	test	rcx, rcx
ffffffff8000baa8: 0f 84 4c 01 00 00    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000baae: 48 89 da             	mov	rdx, rbx
ffffffff8000bab1: 48 81 e2 00 00 00 c0 	and	rdx, -0x40000000
ffffffff8000bab8: 48 be 00 f0 ff ff ff ff 0f 00	movabs	rsi, 0xffffffffff000
ffffffff8000bac2: 48 21 f1             	and	rcx, rsi
ffffffff8000bac5: 49 09 cf             	or	r15, rcx
ffffffff8000bac8: 49 81 cf 92 00 00 00 	or	r15, 0x92
ffffffff8000bacf: 4e 89 3c f0          	mov	qword ptr [rax + 8*r14], r15
ffffffff8000bad3: 0f 01 3a             	invlpg	byte ptr [rdx]
ffffffff8000bad6: e9 7c fd ff ff       	jmp	0xffffffff8000b857 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000badb: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bae0: 0f 84 11 01 00 00    	je	0xffffffff8000bbf7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000bae6: 66 c7 43 36 fb 00    	mov	word ptr [rbx + 0x36], 0xfb
ffffffff8000baec: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000baf1: 0f 85 03 01 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000baf7: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bafa: a8 03                	test	al, 0x3
ffffffff8000bafc: 0f 85 3b fe ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bb02: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bb07: 0f 84 ea 00 00 00    	je	0xffffffff8000bbf7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000bb0d: 66 c7 43 38 ff 01    	mov	word ptr [rbx + 0x38], 0x1ff
ffffffff8000bb13: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bb18: 0f 85 dc 00 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bb1e: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bb21: a8 03                	test	al, 0x3
ffffffff8000bb23: 0f 85 14 fe ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bb29: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bb2e: 0f 84 c3 00 00 00    	je	0xffffffff8000bbf7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000bb34: 66 c7 43 3a fb 00    	mov	word ptr [rbx + 0x3a], 0xfb
ffffffff8000bb3a: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bb3f: 0f 85 b5 00 00 00    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bb45: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bb48: a8 03                	test	al, 0x3
ffffffff8000bb4a: 0f 85 ed fd ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bb50: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bb55: 0f 84 9c 00 00 00    	je	0xffffffff8000bbf7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000bb5b: c6 43 29 00          	mov	byte ptr [rbx + 0x29], 0x0
ffffffff8000bb5f: b0 0e                	mov	al, 0xe
ffffffff8000bb61: 41 f7 c6 00 00 00 01 	test	r14d, 0x1000000
ffffffff8000bb68: 75 19                	jne	0xffffffff8000bb83 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d3>
ffffffff8000bb6a: b0 0a                	mov	al, 0xa
ffffffff8000bb6c: 41 f7 c6 00 00 00 04 	test	r14d, 0x4000000
ffffffff8000bb73: 75 0e                	jne	0xffffffff8000bb83 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d3>
ffffffff8000bb75: b0 0c                	mov	al, 0xc
ffffffff8000bb77: 40 b5 04             	mov	bpl, 0x4
ffffffff8000bb7a: 41 f7 c6 00 00 00 02 	test	r14d, 0x2000000
ffffffff8000bb81: 74 77                	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bb83: 88 43 29             	mov	byte ptr [rbx + 0x29], al
ffffffff8000bb86: 0c 01                	or	al, 0x1
ffffffff8000bb88: 88 43 29             	mov	byte ptr [rbx + 0x29], al
ffffffff8000bb8b: 0f b7 43 2c          	movzx	eax, word ptr [rbx + 0x2c]
ffffffff8000bb8f: 89 c1                	mov	ecx, eax
ffffffff8000bb91: 83 e1 fe             	and	ecx, -0x2
ffffffff8000bb94: 66 89 4b 2c          	mov	word ptr [rbx + 0x2c], cx
ffffffff8000bb98: 25 fe 00 00 00       	and	eax, 0xfe
ffffffff8000bb9d: 8d 88 00 80 00 00    	lea	ecx, [rax + 0x8000]
ffffffff8000bba3: 66 89 4b 2c          	mov	word ptr [rbx + 0x2c], cx
ffffffff8000bba7: 89 c1                	mov	ecx, eax
ffffffff8000bba9: 81 c9 01 80 00 00    	or	ecx, 0x8001
ffffffff8000bbaf: 66 89 4b 2c          	mov	word ptr [rbx + 0x2c], cx
ffffffff8000bbb3: b9 e8 03 00 00       	mov	ecx, 0x3e8
ffffffff8000bbb8: 0f b7 53 2c          	movzx	edx, word ptr [rbx + 0x2c]
ffffffff8000bbbc: f6 c2 02             	test	dl, 0x2
ffffffff8000bbbf: 0f 85 93 00 00 00    	jne	0xffffffff8000bc58 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000bbc5: f3 90                	pause
ffffffff8000bbc7: 0f b7 53 2c          	movzx	edx, word ptr [rbx + 0x2c]
ffffffff8000bbcb: f6 c2 02             	test	dl, 0x2
ffffffff8000bbce: 0f 85 84 00 00 00    	jne	0xffffffff8000bc58 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000bbd4: f3 90                	pause
ffffffff8000bbd6: 0f b7 53 2c          	movzx	edx, word ptr [rbx + 0x2c]
ffffffff8000bbda: f6 c2 02             	test	dl, 0x2
ffffffff8000bbdd: 75 79                	jne	0xffffffff8000bc58 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000bbdf: f3 90                	pause
ffffffff8000bbe1: 0f b7 53 2c          	movzx	edx, word ptr [rbx + 0x2c]
ffffffff8000bbe5: f6 c2 02             	test	dl, 0x2
ffffffff8000bbe8: 75 6e                	jne	0xffffffff8000bc58 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000bbea: f3 90                	pause
ffffffff8000bbec: 40 b5 02             	mov	bpl, 0x2
ffffffff8000bbef: 48 83 c1 fc          	add	rcx, -0x4
ffffffff8000bbf3: 75 c3                	jne	0xffffffff8000bbb8 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x508>
ffffffff8000bbf5: eb 03                	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bbf7: 40 b5 01             	mov	bpl, 0x1
ffffffff8000bbfa: 41 c6 45 10 00       	mov	byte ptr [r13 + 0x10], 0x0
ffffffff8000bbff: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff8000bc04: f0                   	lock
ffffffff8000bc05: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000bc08: 75 0a                	jne	0xffffffff8000bc14 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x564>
ffffffff8000bc0a: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff8000bc0f: e8 1c 72 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000bc14: 89 e8                	mov	eax, ebp
ffffffff8000bc16: 48 81 c4 b8 01 00 00 	add	rsp, 0x1b8
ffffffff8000bc1d: 5b                   	pop	rbx
ffffffff8000bc1e: 41 5c                	pop	r12
ffffffff8000bc20: 41 5d                	pop	r13
ffffffff8000bc22: 41 5e                	pop	r14
ffffffff8000bc24: 41 5f                	pop	r15
ffffffff8000bc26: 5d                   	pop	rbp
ffffffff8000bc27: c3                   	ret
ffffffff8000bc28: be 1d 00 00 00       	mov	esi, 0x1d
ffffffff8000bc2d: 48 c7 c7 22 2c 02 80 	mov	rdi, -0x7ffdd3de
ffffffff8000bc34: 48 c7 c2 40 2c 02 80 	mov	rdx, -0x7ffdd3c0
ffffffff8000bc3b: e8 b0 54 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bc40: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000bc45: 48 c7 c7 8e 3a 02 80 	mov	rdi, -0x7ffdc572
ffffffff8000bc4c: 48 c7 c2 28 3b 02 80 	mov	rdx, -0x7ffdc4d8
ffffffff8000bc53: e8 98 54 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bc58: 0f b7 c0             	movzx	eax, ax
ffffffff8000bc5b: 0d 07 80 00 00       	or	eax, 0x8007
ffffffff8000bc60: 66 89 43 2c          	mov	word ptr [rbx + 0x2c], ax
ffffffff8000bc64: c6 43 2e 0e          	mov	byte ptr [rbx + 0x2e], 0xe
ffffffff8000bc68: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bc6d: 40 b5 05             	mov	bpl, 0x5
ffffffff8000bc70: 75 88                	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bc72: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bc75: a8 03                	test	al, 0x3
ffffffff8000bc77: 0f 85 c0 fc ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bc7d: 40 b5 01             	mov	bpl, 0x1
ffffffff8000bc80: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bc85: 0f 84 6f ff ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bc8b: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000bc92: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bc97: 74 0a                	je	0xffffffff8000bca3 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5f3>
ffffffff8000bc99: 40 b5 05             	mov	bpl, 0x5
ffffffff8000bc9c: e9 59 ff ff ff       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bca1: 0f 0b                	ud2
ffffffff8000bca3: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bca6: a8 03                	test	al, 0x3
ffffffff8000bca8: 0f 85 8f fc ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bcae: 40 b5 01             	mov	bpl, 0x1
ffffffff8000bcb1: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bcb6: 0f 84 3e ff ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bcbc: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bcc1: 75 d6                	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bcc3: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bcc6: a8 03                	test	al, 0x3
ffffffff8000bcc8: 0f 85 6f fc ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bcce: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bcd3: 0f 84 21 ff ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bcd9: 66 c7 43 0e 00 00    	mov	word ptr [rbx + 0xe], 0x0
ffffffff8000bcdf: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bce4: 75 b3                	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bce6: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000bceb: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000bcef: 0f 84 51 04 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000bcf5: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bcf9: f6 c1 01             	test	cl, 0x1
ffffffff8000bcfc: 75 1b                	jne	0xffffffff8000bd19 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000bcfe: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd02: f6 c1 01             	test	cl, 0x1
ffffffff8000bd05: 75 12                	jne	0xffffffff8000bd19 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000bd07: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd0b: f6 c1 01             	test	cl, 0x1
ffffffff8000bd0e: 75 09                	jne	0xffffffff8000bd19 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000bd10: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd14: f6 c1 01             	test	cl, 0x1
ffffffff8000bd17: 74 d2                	je	0xffffffff8000bceb <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x63b>
ffffffff8000bd19: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000bd1f: c7 43 08 aa 01 00 00 	mov	dword ptr [rbx + 0x8], 0x1aa
ffffffff8000bd26: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bd2b: 0f 85 68 ff ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bd31: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bd34: a8 03                	test	al, 0x3
ffffffff8000bd36: 0f 85 01 fc ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bd3c: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bd41: 0f 84 b3 fe ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bd47: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bd4c: 0f 85 47 ff ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bd52: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bd55: a8 03                	test	al, 0x3
ffffffff8000bd57: 0f 85 e0 fb ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bd5d: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bd62: 0f 84 92 fe ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bd68: 66 c7 43 0e 1a 08    	mov	word ptr [rbx + 0xe], 0x81a
ffffffff8000bd6e: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bd73: 0f 85 20 ff ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bd79: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000bd7e: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000bd82: 0f 84 be 03 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000bd88: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd8c: f6 c1 01             	test	cl, 0x1
ffffffff8000bd8f: 75 1b                	jne	0xffffffff8000bdac <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000bd91: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd95: f6 c1 01             	test	cl, 0x1
ffffffff8000bd98: 75 12                	jne	0xffffffff8000bdac <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000bd9a: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bd9e: f6 c1 01             	test	cl, 0x1
ffffffff8000bda1: 75 09                	jne	0xffffffff8000bdac <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000bda3: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bda7: f6 c1 01             	test	cl, 0x1
ffffffff8000bdaa: 74 d2                	je	0xffffffff8000bd7e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6ce>
ffffffff8000bdac: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000bdb2: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000bdb9: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bdbe: 0f 85 d5 fe ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bdc4: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bdc7: a8 03                	test	al, 0x3
ffffffff8000bdc9: 0f 85 6e fb ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bdcf: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bdd4: 0f 84 20 fe ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bdda: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bddf: 0f 85 b4 fe ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bde5: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bde8: a8 03                	test	al, 0x3
ffffffff8000bdea: 0f 85 4d fb ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bdf0: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bdf5: 0f 84 ff fd ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bdfb: 66 c7 43 0e 1a 37    	mov	word ptr [rbx + 0xe], 0x371a
ffffffff8000be01: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000be06: 0f 85 8d fe ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000be0c: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000be11: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000be15: 0f 84 2b 03 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000be1b: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000be1f: f6 c1 01             	test	cl, 0x1
ffffffff8000be22: 75 1b                	jne	0xffffffff8000be3f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000be24: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000be28: f6 c1 01             	test	cl, 0x1
ffffffff8000be2b: 75 12                	jne	0xffffffff8000be3f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000be2d: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000be31: f6 c1 01             	test	cl, 0x1
ffffffff8000be34: 75 09                	jne	0xffffffff8000be3f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000be36: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000be3a: f6 c1 01             	test	cl, 0x1
ffffffff8000be3d: 74 d2                	je	0xffffffff8000be11 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x761>
ffffffff8000be3f: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000be45: 8b 43 10             	mov	eax, dword ptr [rbx + 0x10]
ffffffff8000be48: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000be4d: 0f 85 46 fe ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000be53: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000be56: a8 03                	test	al, 0x3
ffffffff8000be58: 0f 85 df fa ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000be5e: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000be63: 0f 84 91 fd ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000be69: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000be6e: 0f 85 25 fe ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000be74: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000be77: a8 03                	test	al, 0x3
ffffffff8000be79: 0f 85 be fa ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000be7f: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000be84: 0f 84 70 fd ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000be8a: 66 c7 43 0e 02 29    	mov	word ptr [rbx + 0xe], 0x2902
ffffffff8000be90: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000be95: 0f 85 fe fd ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000be9b: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000bea0: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000bea4: 0f 84 9c 02 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000beaa: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000beae: f6 c1 01             	test	cl, 0x1
ffffffff8000beb1: 75 1b                	jne	0xffffffff8000bece <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000beb3: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000beb7: f6 c1 01             	test	cl, 0x1
ffffffff8000beba: 75 12                	jne	0xffffffff8000bece <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000bebc: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bec0: f6 c1 01             	test	cl, 0x1
ffffffff8000bec3: 75 09                	jne	0xffffffff8000bece <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000bec5: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bec9: f6 c1 01             	test	cl, 0x1
ffffffff8000becc: 74 d2                	je	0xffffffff8000bea0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x7f0>
ffffffff8000bece: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000bed4: 8b 43 10             	mov	eax, dword ptr [rbx + 0x10]
ffffffff8000bed7: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000bede: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bee3: 0f 85 b0 fd ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bee9: 8b 4b 24             	mov	ecx, dword ptr [rbx + 0x24]
ffffffff8000beec: f6 c1 03             	test	cl, 0x3
ffffffff8000beef: 0f 85 48 fa ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bef5: f7 c1 fc ff ff f7    	test	ecx, 0xf7fffffc
ffffffff8000befb: 0f 84 f9 fc ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bf01: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bf06: 0f 85 8d fd ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bf0c: 8b 4b 24             	mov	ecx, dword ptr [rbx + 0x24]
ffffffff8000bf0f: f6 c1 03             	test	cl, 0x3
ffffffff8000bf12: 0f 85 25 fa ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bf18: f7 c1 fc ff ff f7    	test	ecx, 0xf7fffffc
ffffffff8000bf1e: 0f 84 d6 fc ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bf24: 66 c7 43 0e 00 00    	mov	word ptr [rbx + 0xe], 0x0
ffffffff8000bf2a: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bf2f: 0f 85 64 fd ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bf35: 44 0f b6 f8          	movzx	r15d, al
ffffffff8000bf39: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000bf3e: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000bf42: 0f 84 fe 01 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000bf48: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bf4c: f6 c1 01             	test	cl, 0x1
ffffffff8000bf4f: 75 1b                	jne	0xffffffff8000bf6c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000bf51: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bf55: f6 c1 01             	test	cl, 0x1
ffffffff8000bf58: 75 12                	jne	0xffffffff8000bf6c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000bf5a: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bf5e: f6 c1 01             	test	cl, 0x1
ffffffff8000bf61: 75 09                	jne	0xffffffff8000bf6c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000bf63: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bf67: f6 c1 01             	test	cl, 0x1
ffffffff8000bf6a: 74 d2                	je	0xffffffff8000bf3e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x88e>
ffffffff8000bf6c: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000bf72: c7 43 08 aa 01 00 00 	mov	dword ptr [rbx + 0x8], 0x1aa
ffffffff8000bf79: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bf7e: 0f 85 15 fd ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bf84: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bf87: a8 03                	test	al, 0x3
ffffffff8000bf89: 0f 85 ae f9 ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bf8f: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bf94: 0f 84 60 fc ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bf9a: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bf9f: 0f 85 f4 fc ff ff    	jne	0xffffffff8000bc99 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000bfa5: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8000bfa8: a8 03                	test	al, 0x3
ffffffff8000bfaa: 0f 85 8d f9 ff ff    	jne	0xffffffff8000b93d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000bfb0: a9 fc ff ff f7       	test	eax, 0xf7fffffc
ffffffff8000bfb5: 0f 84 3f fc ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bfbb: 66 c7 43 0e 1a 08    	mov	word ptr [rbx + 0xe], 0x81a
ffffffff8000bfc1: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000bfc6: 40 b5 05             	mov	bpl, 0x5
ffffffff8000bfc9: 0f 85 2b fc ff ff    	jne	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000bfcf: b8 ec 03 00 00       	mov	eax, 0x3ec
ffffffff8000bfd4: 48 83 c0 fc          	add	rax, -0x4
ffffffff8000bfd8: 0f 84 68 01 00 00    	je	0xffffffff8000c146 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000bfde: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bfe2: f6 c1 01             	test	cl, 0x1
ffffffff8000bfe5: 75 1b                	jne	0xffffffff8000c002 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000bfe7: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bfeb: f6 c1 01             	test	cl, 0x1
ffffffff8000bfee: 75 12                	jne	0xffffffff8000c002 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000bff0: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bff4: f6 c1 01             	test	cl, 0x1
ffffffff8000bff7: 75 09                	jne	0xffffffff8000c002 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000bff9: 0f b7 4b 30          	movzx	ecx, word ptr [rbx + 0x30]
ffffffff8000bffd: f6 c1 01             	test	cl, 0x1
ffffffff8000c000: 74 d2                	je	0xffffffff8000bfd4 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x924>
ffffffff8000c002: 66 c7 43 30 01 00    	mov	word ptr [rbx + 0x30], 0x1
ffffffff8000c008: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000c00f: 48 89 e7             	mov	rdi, rsp
ffffffff8000c012: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c017: ba 37 00 00 00       	mov	edx, 0x37
ffffffff8000c01c: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8000c021: e8 5a 04 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c026: 83 3c 24 03          	cmp	dword ptr [rsp], 0x3
ffffffff8000c02a: 0f 84 4c 02 00 00    	je	0xffffffff8000c27c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000c030: 41 81 cf 00 00 40 00 	or	r15d, 0x400000
ffffffff8000c037: 44 89 7b 08          	mov	dword ptr [rbx + 0x8], r15d
ffffffff8000c03b: 48 89 e7             	mov	rdi, rsp
ffffffff8000c03e: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c043: ba 29 00 00 00       	mov	edx, 0x29
ffffffff8000c048: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff8000c04d: e8 2e 04 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c052: 83 3c 24 03          	cmp	dword ptr [rsp], 0x3
ffffffff8000c056: 0f 84 20 02 00 00    	je	0xffffffff8000c27c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000c05c: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000c063: 48 89 e7             	mov	rdi, rsp
ffffffff8000c066: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c06b: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8000c070: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000c075: e8 06 04 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c07a: 83 3c 24 03          	cmp	dword ptr [rsp], 0x3
ffffffff8000c07e: 0f 84 f8 01 00 00    	je	0xffffffff8000c27c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000c084: c7 43 08 00 00 00 00 	mov	dword ptr [rbx + 0x8], 0x0
ffffffff8000c08b: 48 89 e7             	mov	rdi, rsp
ffffffff8000c08e: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c093: ba 03 00 00 00       	mov	edx, 0x3
ffffffff8000c098: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8000c09d: e8 de 03 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c0a2: 8b 04 24             	mov	eax, dword ptr [rsp]
ffffffff8000c0a5: 0f b6 6c 24 04       	movzx	ebp, byte ptr [rsp + 0x4]
ffffffff8000c0aa: 83 f8 03             	cmp	eax, 0x3
ffffffff8000c0ad: 0f 84 47 fb ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000c0b3: 83 f8 01             	cmp	eax, 0x1
ffffffff8000c0b6: 0f 85 9f 00 00 00    	jne	0xffffffff8000c15b <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xaab>
ffffffff8000c0bc: 40 0f b6 c5          	movzx	eax, bpl
ffffffff8000c0c0: 0f b6 4c 24 07       	movzx	ecx, byte ptr [rsp + 0x7]
ffffffff8000c0c5: c1 e1 10             	shl	ecx, 0x10
ffffffff8000c0c8: 0f b7 6c 24 05       	movzx	ebp, word ptr [rsp + 0x5]
ffffffff8000c0cd: 09 cd                	or	ebp, ecx
ffffffff8000c0cf: c1 e5 08             	shl	ebp, 0x8
ffffffff8000c0d2: 09 c5                	or	ebp, eax
ffffffff8000c0d4: 89 6b 08             	mov	dword ptr [rbx + 0x8], ebp
ffffffff8000c0d7: 48 89 e7             	mov	rdi, rsp
ffffffff8000c0da: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c0df: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8000c0e4: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000c0e9: e8 92 03 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c0ee: 8b 04 24             	mov	eax, dword ptr [rsp]
ffffffff8000c0f1: 83 f8 02             	cmp	eax, 0x2
ffffffff8000c0f4: 0f 84 9c 00 00 00    	je	0xffffffff8000c196 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xae6>
ffffffff8000c0fa: 83 f8 03             	cmp	eax, 0x3
ffffffff8000c0fd: 0f 84 79 01 00 00    	je	0xffffffff8000c27c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000c103: 45 31 f6             	xor	r14d, r14d
ffffffff8000c106: e9 31 01 00 00       	jmp	0xffffffff8000c23c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xb8c>
ffffffff8000c10b: 48 c7 04 24 68 3b 02 80      	mov	qword ptr [rsp], -0x7ffdc498
ffffffff8000c113: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff8000c11c: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000c125: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff8000c12e: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000c137: 48 89 e7             	mov	rdi, rsp
ffffffff8000c13a: 48 c7 c6 78 3b 02 80 	mov	rsi, -0x7ffdc488
ffffffff8000c141: e8 2a 4f 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c146: 31 c0                	xor	eax, eax
ffffffff8000c148: 66 83 7b 32 00       	cmp	word ptr [rbx + 0x32], 0x0
ffffffff8000c14d: 0f 95 c0             	setne	al
ffffffff8000c150: 8d 2c 40             	lea	ebp, [rax + 2*rax]
ffffffff8000c153: 83 c5 02             	add	ebp, 0x2
ffffffff8000c156: e9 9f fa ff ff       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000c15b: 48 c7 04 24 b8 3b 02 80      	mov	qword ptr [rsp], -0x7ffdc448
ffffffff8000c163: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff8000c16c: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000c175: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff8000c17e: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000c187: 48 89 e7             	mov	rdi, rsp
ffffffff8000c18a: 48 c7 c6 c8 3b 02 80 	mov	rsi, -0x7ffdc438
ffffffff8000c191: e8 da 4e 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c196: 4c 8b 4c 24 18       	mov	r9, qword ptr [rsp + 0x18]
ffffffff8000c19b: 4c 8b 44 24 10       	mov	r8, qword ptr [rsp + 0x10]
ffffffff8000c1a0: 48 89 e7             	mov	rdi, rsp
ffffffff8000c1a3: 4c 89 f6             	mov	rsi, r14
ffffffff8000c1a6: 48 89 da             	mov	rdx, rbx
ffffffff8000c1a9: 89 e9                	mov	ecx, ebp
ffffffff8000c1ab: e8 50 02 00 00       	call	0xffffffff8000c400 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358>
ffffffff8000c1b0: 80 3c 24 00          	cmp	byte ptr [rsp], 0x0
ffffffff8000c1b4: 74 0a                	je	0xffffffff8000c1c0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xb10>
ffffffff8000c1b6: 0f b6 6c 24 01       	movzx	ebp, byte ptr [rsp + 0x1]
ffffffff8000c1bb: e9 3a fa ff ff       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000c1c0: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff8000c1c5: 48 89 84 24 82 01 00 00      	mov	qword ptr [rsp + 0x182], rax
ffffffff8000c1cd: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8000c1d2: 48 89 8c 24 7a 01 00 00      	mov	qword ptr [rsp + 0x17a], rcx
ffffffff8000c1da: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff8000c1df: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff8000c1e4: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8000c1e9: 48 89 b4 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rsi
ffffffff8000c1f1: 48 89 bc 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rdi
ffffffff8000c1f9: 48 89 94 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rdx
ffffffff8000c201: 48 89 8c 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rcx
ffffffff8000c209: 48 89 84 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rax
ffffffff8000c211: 48 89 84 24 aa 00 00 00      	mov	qword ptr [rsp + 0xaa], rax
ffffffff8000c219: 48 89 8c 24 a2 00 00 00      	mov	qword ptr [rsp + 0xa2], rcx
ffffffff8000c221: 48 89 94 24 9a 00 00 00      	mov	qword ptr [rsp + 0x9a], rdx
ffffffff8000c229: 48 89 bc 24 92 00 00 00      	mov	qword ptr [rsp + 0x92], rdi
ffffffff8000c231: 48 89 b4 24 8a 00 00 00      	mov	qword ptr [rsp + 0x8a], rsi
ffffffff8000c239: 41 b6 01             	mov	r14b, 0x1
ffffffff8000c23c: 89 6b 08             	mov	dword ptr [rbx + 0x8], ebp
ffffffff8000c23f: 48 89 e7             	mov	rdi, rsp
ffffffff8000c242: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c247: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8000c24c: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8000c251: e8 2a 02 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c256: 83 3c 24 03          	cmp	dword ptr [rsp], 0x3
ffffffff8000c25a: 74 20                	je	0xffffffff8000c27c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000c25c: 89 6b 08             	mov	dword ptr [rbx + 0x8], ebp
ffffffff8000c25f: 48 89 e7             	mov	rdi, rsp
ffffffff8000c262: 48 8d 74 24 40       	lea	rsi, [rsp + 0x40]
ffffffff8000c267: ba 07 00 00 00       	mov	edx, 0x7
ffffffff8000c26c: b9 03 00 00 00       	mov	ecx, 0x3
ffffffff8000c271: e8 0a 02 00 00       	call	0xffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000c276: 83 3c 24 03          	cmp	dword ptr [rsp], 0x3
ffffffff8000c27a: 75 0a                	jne	0xffffffff8000c286 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbd6>
ffffffff8000c27c: 0f b6 6c 24 04       	movzx	ebp, byte ptr [rsp + 0x4]
ffffffff8000c281: e9 74 f9 ff ff       	jmp	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000c286: 48 8b 84 24 aa 00 00 00      	mov	rax, qword ptr [rsp + 0xaa]
ffffffff8000c28e: 48 89 44 24 76       	mov	qword ptr [rsp + 0x76], rax
ffffffff8000c293: 48 8b 84 24 a4 00 00 00      	mov	rax, qword ptr [rsp + 0xa4]
ffffffff8000c29b: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8000c2a0: 48 8b 84 24 9c 00 00 00      	mov	rax, qword ptr [rsp + 0x9c]
ffffffff8000c2a8: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8000c2ad: 48 8b 84 24 94 00 00 00      	mov	rax, qword ptr [rsp + 0x94]
ffffffff8000c2b5: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8000c2ba: 48 8b 84 24 84 00 00 00      	mov	rax, qword ptr [rsp + 0x84]
ffffffff8000c2c2: 48 8b 8c 24 8c 00 00 00      	mov	rcx, qword ptr [rsp + 0x8c]
ffffffff8000c2ca: 48 89 4c 24 58       	mov	qword ptr [rsp + 0x58], rcx
ffffffff8000c2cf: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8000c2d4: 40 b5 05             	mov	bpl, 0x5
ffffffff8000c2d7: 45 84 f6             	test	r14b, r14b
ffffffff8000c2da: 0f 84 1a f9 ff ff    	je	0xffffffff8000bbfa <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000c2e0: 48 8b 44 24 76       	mov	rax, qword ptr [rsp + 0x76]
ffffffff8000c2e5: 48 8b 4c 24 6e       	mov	rcx, qword ptr [rsp + 0x6e]
ffffffff8000c2ea: 48 8b 54 24 66       	mov	rdx, qword ptr [rsp + 0x66]
ffffffff8000c2ef: 48 8b 74 24 56       	mov	rsi, qword ptr [rsp + 0x56]
ffffffff8000c2f4: 48 8b 7c 24 5e       	mov	rdi, qword ptr [rsp + 0x5e]
ffffffff8000c2f9: 48 89 b4 24 34 01 00 00      	mov	qword ptr [rsp + 0x134], rsi
ffffffff8000c301: 48 89 bc 24 3c 01 00 00      	mov	qword ptr [rsp + 0x13c], rdi
ffffffff8000c309: 48 89 b4 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rsi
ffffffff8000c311: 48 89 bc 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rdi
ffffffff8000c319: 48 89 94 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rdx
ffffffff8000c321: 48 89 8c 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], rcx
ffffffff8000c329: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rax
ffffffff8000c331: 48 8b 84 24 d8 00 00 00      	mov	rax, qword ptr [rsp + 0xd8]
ffffffff8000c339: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8000c33e: 48 8b 84 24 d0 00 00 00      	mov	rax, qword ptr [rsp + 0xd0]
ffffffff8000c346: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000c34b: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 0xc8]
ffffffff8000c353: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000c358: 48 8b 84 24 b8 00 00 00      	mov	rax, qword ptr [rsp + 0xb8]
ffffffff8000c360: 48 8b 8c 24 c0 00 00 00      	mov	rcx, qword ptr [rsp + 0xc0]
ffffffff8000c368: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8000c36d: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8000c371: b1 01                	mov	cl, 0x1
ffffffff8000c373: 31 c0                	xor	eax, eax
ffffffff8000c375: f0                   	lock
ffffffff8000c376: 0f b0 0d cb ee 01 00 	cmpxchg	byte ptr [rip + 0x1eecb], cl # 0xffffffff8002b248 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000c37d: 75 04                	jne	0xffffffff8000c383 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcd3>
ffffffff8000c37f: eb 0f                	jmp	0xffffffff8000c390 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xce0>
ffffffff8000c381: f3 90                	pause
ffffffff8000c383: 0f b6 05 be ee 01 00 	movzx	eax, byte ptr [rip + 0x1eebe] # 0xffffffff8002b248 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000c38a: 84 c0                	test	al, al
ffffffff8000c38c: 75 f3                	jne	0xffffffff8000c381 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcd1>
ffffffff8000c38e: eb e3                	jmp	0xffffffff8000c373 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcc3>
ffffffff8000c390: 48 c7 05 b5 ee 01 00 01 00 00 00     	mov	qword ptr [rip + 0x1eeb5], 0x1 # 0xffffffff8002b250 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x8>
ffffffff8000c39b: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff8000c39f: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8000c3a4: 48 89 05 ad ee 01 00 	mov	qword ptr [rip + 0x1eead], rax # 0xffffffff8002b258 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x10>
ffffffff8000c3ab: 48 89 0d ae ee 01 00 	mov	qword ptr [rip + 0x1eeae], rcx # 0xffffffff8002b260 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x18>
ffffffff8000c3b2: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000c3b7: 48 89 05 aa ee 01 00 	mov	qword ptr [rip + 0x1eeaa], rax # 0xffffffff8002b268 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x20>
ffffffff8000c3be: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000c3c3: 48 89 05 a6 ee 01 00 	mov	qword ptr [rip + 0x1eea6], rax # 0xffffffff8002b270 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x28>
ffffffff8000c3ca: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8000c3cf: 48 89 05 a2 ee 01 00 	mov	qword ptr [rip + 0x1eea2], rax # 0xffffffff8002b278 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x30>
ffffffff8000c3d6: c6 05 6b ee 01 00 00 	mov	byte ptr [rip + 0x1ee6b], 0x0 # 0xffffffff8002b248 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000c3dd: 41 c6 45 10 00       	mov	byte ptr [r13 + 0x10], 0x0
ffffffff8000c3e2: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff8000c3e7: f0                   	lock
ffffffff8000c3e8: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000c3eb: 75 0a                	jne	0xffffffff8000c3f7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xd47>
ffffffff8000c3ed: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff8000c3f2: e8 39 6a 00 00       	call	0xffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000c3f7: 40 b5 06             	mov	bpl, 0x6
ffffffff8000c3fa: e9 15 f8 ff ff       	jmp	0xffffffff8000bc14 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x564>
ffffffff8000c3ff: cc                   	int3

ffffffff8000c400 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358>:
ffffffff8000c400: 4c 89 c8             	mov	rax, r9
ffffffff8000c403: 48 c1 e8 3e          	shr	rax, 0x3e
ffffffff8000c407: 83 f8 01             	cmp	eax, 0x1
ffffffff8000c40a: 75 2a                	jne	0xffffffff8000c436 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358+0x36>
ffffffff8000c40c: 4d 0f a4 c1 10       	shld	r9, r8, 0x10
ffffffff8000c411: 41 81 e1 ff ff ff 00 	and	r9d, 0xffffff
ffffffff8000c418: 49 ff c1             	inc	r9
ffffffff8000c41b: 48 89 77 08          	mov	qword ptr [rdi + 0x8], rsi
ffffffff8000c41f: 48 89 57 10          	mov	qword ptr [rdi + 0x10], rdx
ffffffff8000c423: 48 c7 47 18 00 02 00 00      	mov	qword ptr [rdi + 0x18], 0x200
ffffffff8000c42b: 4c 89 4f 20          	mov	qword ptr [rdi + 0x20], r9
ffffffff8000c42f: 89 4f 28             	mov	dword ptr [rdi + 0x28], ecx
ffffffff8000c432: c6 07 00             	mov	byte ptr [rdi], 0x0
ffffffff8000c435: c3                   	ret
ffffffff8000c436: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000c43a: 48 c7 44 24 08 18 3c 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc3e8
ffffffff8000c443: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000c44c: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000c455: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000c45e: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000c467: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000c46c: 48 c7 c6 28 3c 02 80 	mov	rsi, -0x7ffdc3d8
ffffffff8000c473: e8 f8 4b 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c478: cc                   	int3
ffffffff8000c479: cc                   	int3
ffffffff8000c47a: cc                   	int3
ffffffff8000c47b: cc                   	int3
ffffffff8000c47c: cc                   	int3
ffffffff8000c47d: cc                   	int3
ffffffff8000c47e: cc                   	int3
ffffffff8000c47f: cc                   	int3

ffffffff8000c480 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>:
ffffffff8000c480: 48 8b 46 08          	mov	rax, qword ptr [rsi + 0x8]
ffffffff8000c484: 40 b6 05             	mov	sil, 0x5
ffffffff8000c487: 66 83 78 32 00       	cmp	word ptr [rax + 0x32], 0x0
ffffffff8000c48c: 74 0b                	je	0xffffffff8000c499 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x19>
ffffffff8000c48e: 40 88 77 04          	mov	byte ptr [rdi + 0x4], sil
ffffffff8000c492: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c498: c3                   	ret
ffffffff8000c499: 8b 70 24             	mov	esi, dword ptr [rax + 0x24]
ffffffff8000c49c: 40 f6 c6 03          	test	sil, 0x3
ffffffff8000c4a0: 74 0d                	je	0xffffffff8000c4af <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x2f>
ffffffff8000c4a2: 31 f6                	xor	esi, esi
ffffffff8000c4a4: 40 88 77 04          	mov	byte ptr [rdi + 0x4], sil
ffffffff8000c4a8: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c4ae: c3                   	ret
ffffffff8000c4af: f7 c6 fc ff ff f7    	test	esi, 0xf7fffffc
ffffffff8000c4b5: 74 38                	je	0xffffffff8000c4ef <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x6f>
ffffffff8000c4b7: 0f b6 d2             	movzx	edx, dl
ffffffff8000c4ba: c1 e2 08             	shl	edx, 0x8
ffffffff8000c4bd: 48 0f be f1          	movsx	rsi, cl
ffffffff8000c4c1: 49 c7 c0 fe ff ff ff 	mov	r8, -0x2
ffffffff8000c4c8: 66 41 0b 94 70 40 3c 02 80   	or	dx, word ptr [r8 + 2*rsi - 0x7ffdc3c0]
ffffffff8000c4d1: 41 0f b7 b4 70 52 3c 02 80   	movzx	esi, word ptr [r8 + 2*rsi - 0x7ffdc3ae]
ffffffff8000c4da: 41 b0 05             	mov	r8b, 0x5
ffffffff8000c4dd: 66 83 78 32 00       	cmp	word ptr [rax + 0x32], 0x0
ffffffff8000c4e2: 74 19                	je	0xffffffff8000c4fd <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x7d>
ffffffff8000c4e4: 44 88 47 04          	mov	byte ptr [rdi + 0x4], r8b
ffffffff8000c4e8: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c4ee: c3                   	ret
ffffffff8000c4ef: 40 b6 01             	mov	sil, 0x1
ffffffff8000c4f2: 40 88 77 04          	mov	byte ptr [rdi + 0x4], sil
ffffffff8000c4f6: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c4fc: c3                   	ret
ffffffff8000c4fd: 44 8b 40 24          	mov	r8d, dword ptr [rax + 0x24]
ffffffff8000c501: 41 f6 c0 03          	test	r8b, 0x3
ffffffff8000c505: 74 0e                	je	0xffffffff8000c515 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x95>
ffffffff8000c507: 45 31 c0             	xor	r8d, r8d
ffffffff8000c50a: 44 88 47 04          	mov	byte ptr [rdi + 0x4], r8b
ffffffff8000c50e: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c514: c3                   	ret
ffffffff8000c515: 41 f7 c0 fc ff ff f7 	test	r8d, 0xf7fffffc
ffffffff8000c51c: 74 18                	je	0xffffffff8000c536 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xb6>
ffffffff8000c51e: 09 d6                	or	esi, edx
ffffffff8000c520: 66 89 70 0e          	mov	word ptr [rax + 0xe], si
ffffffff8000c524: 66 83 78 32 00       	cmp	word ptr [rax + 0x32], 0x0
ffffffff8000c529: 74 19                	je	0xffffffff8000c544 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xc4>
ffffffff8000c52b: c6 47 04 05          	mov	byte ptr [rdi + 0x4], 0x5
ffffffff8000c52f: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c535: c3                   	ret
ffffffff8000c536: 41 b0 01             	mov	r8b, 0x1
ffffffff8000c539: 44 88 47 04          	mov	byte ptr [rdi + 0x4], r8b
ffffffff8000c53d: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c543: c3                   	ret
ffffffff8000c544: ba ec 03 00 00       	mov	edx, 0x3ec
ffffffff8000c549: 48 83 c2 fc          	add	rdx, -0x4
ffffffff8000c54d: 74 7b                	je	0xffffffff8000c5ca <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x14a>
ffffffff8000c54f: 0f b7 70 30          	movzx	esi, word ptr [rax + 0x30]
ffffffff8000c553: 40 f6 c6 01          	test	sil, 0x1
ffffffff8000c557: 75 1e                	jne	0xffffffff8000c577 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000c559: 0f b7 70 30          	movzx	esi, word ptr [rax + 0x30]
ffffffff8000c55d: 40 f6 c6 01          	test	sil, 0x1
ffffffff8000c561: 75 14                	jne	0xffffffff8000c577 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000c563: 0f b7 70 30          	movzx	esi, word ptr [rax + 0x30]
ffffffff8000c567: 40 f6 c6 01          	test	sil, 0x1
ffffffff8000c56b: 75 0a                	jne	0xffffffff8000c577 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000c56d: 0f b7 70 30          	movzx	esi, word ptr [rax + 0x30]
ffffffff8000c571: 40 f6 c6 01          	test	sil, 0x1
ffffffff8000c575: 74 d2                	je	0xffffffff8000c549 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xc9>
ffffffff8000c577: 66 c7 40 30 01 00    	mov	word ptr [rax + 0x30], 0x1
ffffffff8000c57d: 8b 50 10             	mov	edx, dword ptr [rax + 0x10]
ffffffff8000c580: 80 f9 01             	cmp	cl, 0x1
ffffffff8000c583: 75 32                	jne	0xffffffff8000c5b7 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x137>
ffffffff8000c585: 89 d1                	mov	ecx, edx
ffffffff8000c587: 8b 70 14             	mov	esi, dword ptr [rax + 0x14]
ffffffff8000c58a: 44 8b 40 18          	mov	r8d, dword ptr [rax + 0x18]
ffffffff8000c58e: 44 8b 48 1c          	mov	r9d, dword ptr [rax + 0x1c]
ffffffff8000c592: 49 c1 e1 28          	shl	r9, 0x28
ffffffff8000c596: 49 c1 e0 08          	shl	r8, 0x8
ffffffff8000c59a: 89 f0                	mov	eax, esi
ffffffff8000c59c: c1 e8 18             	shr	eax, 0x18
ffffffff8000c59f: 4c 09 c0             	or	rax, r8
ffffffff8000c5a2: 4c 09 c8             	or	rax, r9
ffffffff8000c5a5: 48 c1 e6 28          	shl	rsi, 0x28
ffffffff8000c5a9: 48 c1 e1 08          	shl	rcx, 0x8
ffffffff8000c5ad: 48 09 f1             	or	rcx, rsi
ffffffff8000c5b0: be 02 00 00 00       	mov	esi, 0x2
ffffffff8000c5b5: eb 05                	jmp	0xffffffff8000c5bc <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x13c>
ffffffff8000c5b7: be 01 00 00 00       	mov	esi, 0x1
ffffffff8000c5bc: 89 37                	mov	dword ptr [rdi], esi
ffffffff8000c5be: 89 57 04             	mov	dword ptr [rdi + 0x4], edx
ffffffff8000c5c1: 48 89 4f 10          	mov	qword ptr [rdi + 0x10], rcx
ffffffff8000c5c5: 48 89 47 18          	mov	qword ptr [rdi + 0x18], rax
ffffffff8000c5c9: c3                   	ret
ffffffff8000c5ca: 66 83 78 32 00       	cmp	word ptr [rax + 0x32], 0x0
ffffffff8000c5cf: 0f 85 56 ff ff ff    	jne	0xffffffff8000c52b <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xab>
ffffffff8000c5d5: c6 47 04 02          	mov	byte ptr [rdi + 0x4], 0x2
ffffffff8000c5d9: c7 07 03 00 00 00    	mov	dword ptr [rdi], 0x3
ffffffff8000c5df: c3                   	ret

ffffffff8000c5e0 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858>:
ffffffff8000c5e0: 41 57                	push	r15
ffffffff8000c5e2: 41 56                	push	r14
ffffffff8000c5e4: 41 55                	push	r13
ffffffff8000c5e6: 41 54                	push	r12
ffffffff8000c5e8: 53                   	push	rbx
ffffffff8000c5e9: 4d 89 c6             	mov	r14, r8
ffffffff8000c5ec: 49 89 cc             	mov	r12, rcx
ffffffff8000c5ef: 48 89 f3             	mov	rbx, rsi
ffffffff8000c5f2: 49 89 ff             	mov	r15, rdi
ffffffff8000c5f5: 49 01 f4             	add	r12, rsi
ffffffff8000c5f8: 4c 89 e7             	mov	rdi, r12
ffffffff8000c5fb: e8 60 ff 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000c600: 49 89 c5             	mov	r13, rax
ffffffff8000c603: 49 01 de             	add	r14, rbx
ffffffff8000c606: 4c 89 f7             	mov	rdi, r14
ffffffff8000c609: e8 52 ff 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000c60e: 49 39 c5             	cmp	r13, rax
ffffffff8000c611: 74 4b                	je	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c613: 49 89 c6             	mov	r14, rax
ffffffff8000c616: 4c 89 e7             	mov	rdi, r12
ffffffff8000c619: e8 42 ff 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000c61e: 4c 8b 28             	mov	r13, qword ptr [rax]
ffffffff8000c621: 49 39 c5             	cmp	r13, rax
ffffffff8000c624: 76 10                	jbe	0xffffffff8000c636 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x56>
ffffffff8000c626: 4d 8b 65 00          	mov	r12, qword ptr [r13]
ffffffff8000c62a: 4d 39 ee             	cmp	r14, r13
ffffffff8000c62d: 77 12                	ja	0xffffffff8000c641 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x61>
ffffffff8000c62f: 73 2d                	jae	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c631: 4d 89 2e             	mov	qword ptr [r14], r13
ffffffff8000c634: eb 28                	jmp	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c636: 4d 89 ec             	mov	r12, r13
ffffffff8000c639: 49 89 c5             	mov	r13, rax
ffffffff8000c63c: 4d 39 ee             	cmp	r14, r13
ffffffff8000c63f: 76 ee                	jbe	0xffffffff8000c62f <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x4f>
ffffffff8000c641: 4c 89 e7             	mov	rdi, r12
ffffffff8000c644: e8 37 ff 00 00       	call	0xffffffff8001c580 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff8000c649: 41 f6 c4 02          	test	r12b, 0x2
ffffffff8000c64d: 74 0d                	je	0xffffffff8000c65c <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7c>
ffffffff8000c64f: 49 8b 55 18          	mov	rdx, qword ptr [r13 + 0x18]
ffffffff8000c653: 4e 8d 24 2a          	lea	r12, [rdx + r13]
ffffffff8000c657: 4d 39 e6             	cmp	r14, r12
ffffffff8000c65a: 76 0f                	jbe	0xffffffff8000c66b <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x8b>
ffffffff8000c65c: 31 db                	xor	ebx, ebx
ffffffff8000c65e: 48 89 d8             	mov	rax, rbx
ffffffff8000c661: 5b                   	pop	rbx
ffffffff8000c662: 41 5c                	pop	r12
ffffffff8000c664: 41 5d                	pop	r13
ffffffff8000c666: 41 5e                	pop	r14
ffffffff8000c668: 41 5f                	pop	r15
ffffffff8000c66a: c3                   	ret
ffffffff8000c66b: 48 81 fa 00 01 00 00 	cmp	rdx, 0x100
ffffffff8000c672: 73 0a                	jae	0xffffffff8000c67e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x9e>
ffffffff8000c674: 48 83 c2 e8          	add	rdx, -0x18
ffffffff8000c678: 48 c1 ea 03          	shr	rdx, 0x3
ffffffff8000c67c: eb 3d                	jmp	0xffffffff8000c6bb <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xdb>
ffffffff8000c67e: 48 81 fa 00 02 00 00 	cmp	rdx, 0x200
ffffffff8000c685: 73 0a                	jae	0xffffffff8000c691 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xb1>
ffffffff8000c687: 48 c1 ea 04          	shr	rdx, 0x4
ffffffff8000c68b: 48 83 c2 0d          	add	rdx, 0xd
ffffffff8000c68f: eb 2a                	jmp	0xffffffff8000c6bb <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xdb>
ffffffff8000c691: 48 0f bd f2          	bsr	rsi, rdx
ffffffff8000c695: 48 83 f6 3f          	xor	rsi, 0x3f
ffffffff8000c699: b1 3d                	mov	cl, 0x3d
ffffffff8000c69b: 40 28 f1             	sub	cl, sil
ffffffff8000c69e: 48 d3 ea             	shr	rdx, cl
ffffffff8000c6a1: c1 e6 02             	shl	esi, 0x2
ffffffff8000c6a4: 48 29 f2             	sub	rdx, rsi
ffffffff8000c6a7: 48 81 c2 01 01 00 00 	add	rdx, 0x101
ffffffff8000c6ae: 48 83 fa 7f          	cmp	rdx, 0x7f
ffffffff8000c6b2: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000c6b7: 48 0f 43 d1          	cmovae	rdx, rcx
ffffffff8000c6bb: 49 8b 4d 08          	mov	rcx, qword ptr [r13 + 0x8]
ffffffff8000c6bf: 49 8b 75 10          	mov	rsi, qword ptr [r13 + 0x10]
ffffffff8000c6c3: 48 89 0e             	mov	qword ptr [rsi], rcx
ffffffff8000c6c6: 48 85 c9             	test	rcx, rcx
ffffffff8000c6c9: 74 04                	je	0xffffffff8000c6cf <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xef>
ffffffff8000c6cb: 48 89 71 08          	mov	qword ptr [rcx + 0x8], rsi
ffffffff8000c6cf: 49 8b 7f 20          	mov	rdi, qword ptr [r15 + 0x20]
ffffffff8000c6d3: 48 83 3c d7 00       	cmp	qword ptr [rdi + 8*rdx], 0x0
ffffffff8000c6d8: 75 1a                	jne	0xffffffff8000c6f4 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x114>
ffffffff8000c6da: 31 f6                	xor	esi, esi
ffffffff8000c6dc: 48 83 fa 40          	cmp	rdx, 0x40
ffffffff8000c6e0: 40 0f 93 c6          	setae	sil
ffffffff8000c6e4: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8000c6ea: 89 d1                	mov	ecx, edx
ffffffff8000c6ec: 49 d3 e0             	shl	r8, cl
ffffffff8000c6ef: 4d 31 44 f7 10       	xor	qword ptr [r15 + 8*rsi + 0x10], r8
ffffffff8000c6f4: 4c 89 e1             	mov	rcx, r12
ffffffff8000c6f7: 4c 29 f1             	sub	rcx, r14
ffffffff8000c6fa: 48 83 f9 17          	cmp	rcx, 0x17
ffffffff8000c6fe: 76 24                	jbe	0xffffffff8000c724 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x144>
ffffffff8000c700: 4c 89 f2             	mov	rdx, r14
ffffffff8000c703: 48 83 c2 08          	add	rdx, 0x8
ffffffff8000c707: 4c 89 e6             	mov	rsi, r12
ffffffff8000c70a: 48 29 d6             	sub	rsi, rdx
ffffffff8000c70d: 48 83 c6 08          	add	rsi, 0x8
ffffffff8000c711: 48 81 fe 00 01 00 00 	cmp	rsi, 0x100
ffffffff8000c718: 73 28                	jae	0xffffffff8000c742 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x162>
ffffffff8000c71a: 48 8d 4e e8          	lea	rcx, [rsi - 0x18]
ffffffff8000c71e: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000c722: eb 62                	jmp	0xffffffff8000c786 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1a6>
ffffffff8000c724: 4c 89 e7             	mov	rdi, r12
ffffffff8000c727: 48 89 c6             	mov	rsi, rax
ffffffff8000c72a: 31 d2                	xor	edx, edx
ffffffff8000c72c: e8 3f fe 00 00       	call	0xffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000c731: 4d 39 e6             	cmp	r14, r12
ffffffff8000c734: 0f 84 24 ff ff ff    	je	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c73a: 4d 89 26             	mov	qword ptr [r14], r12
ffffffff8000c73d: e9 1c ff ff ff       	jmp	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c742: 48 81 fe 00 02 00 00 	cmp	rsi, 0x200
ffffffff8000c749: 73 0d                	jae	0xffffffff8000c758 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x178>
ffffffff8000c74b: 48 89 f1             	mov	rcx, rsi
ffffffff8000c74e: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000c752: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000c756: eb 2e                	jmp	0xffffffff8000c786 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1a6>
ffffffff8000c758: 4c 0f bd c6          	bsr	r8, rsi
ffffffff8000c75c: 49 83 f0 3f          	xor	r8, 0x3f
ffffffff8000c760: b1 3d                	mov	cl, 0x3d
ffffffff8000c762: 44 28 c1             	sub	cl, r8b
ffffffff8000c765: 49 89 f1             	mov	r9, rsi
ffffffff8000c768: 49 d3 e9             	shr	r9, cl
ffffffff8000c76b: 41 c1 e0 02          	shl	r8d, 0x2
ffffffff8000c76f: 4d 29 c1             	sub	r9, r8
ffffffff8000c772: 49 81 c1 01 01 00 00 	add	r9, 0x101
ffffffff8000c779: 49 83 f9 7f          	cmp	r9, 0x7f
ffffffff8000c77d: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000c782: 49 0f 42 c9          	cmovb	rcx, r9
ffffffff8000c786: 4c 8d 04 cf          	lea	r8, [rdi + 8*rcx]
ffffffff8000c78a: 48 8b 3c cf          	mov	rdi, qword ptr [rdi + 8*rcx]
ffffffff8000c78e: 48 85 ff             	test	rdi, rdi
ffffffff8000c791: 74 14                	je	0xffffffff8000c7a7 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1c7>
ffffffff8000c793: 49 89 7e 08          	mov	qword ptr [r14 + 0x8], rdi
ffffffff8000c797: 4d 89 46 10          	mov	qword ptr [r14 + 0x10], r8
ffffffff8000c79b: 49 89 10             	mov	qword ptr [r8], rdx
ffffffff8000c79e: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000c7a2: 49 89 f8             	mov	r8, rdi
ffffffff8000c7a5: eb 24                	jmp	0xffffffff8000c7cb <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1eb>
ffffffff8000c7a7: 31 ff                	xor	edi, edi
ffffffff8000c7a9: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000c7ad: 40 0f 93 c7          	setae	dil
ffffffff8000c7b1: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff8000c7b7: 49 d3 e1             	shl	r9, cl
ffffffff8000c7ba: 4d 31 4c ff 10       	xor	qword ptr [r15 + 8*rdi + 0x10], r9
ffffffff8000c7bf: 49 c7 46 08 00 00 00 00      	mov	qword ptr [r14 + 0x8], 0x0
ffffffff8000c7c7: 4d 89 46 10          	mov	qword ptr [r14 + 0x10], r8
ffffffff8000c7cb: 49 89 10             	mov	qword ptr [r8], rdx
ffffffff8000c7ce: 49 89 76 18          	mov	qword ptr [r14 + 0x18], rsi
ffffffff8000c7d2: 49 89 34 24          	mov	qword ptr [r12], rsi
ffffffff8000c7d6: 4c 89 f7             	mov	rdi, r14
ffffffff8000c7d9: 48 89 c6             	mov	rsi, rax
ffffffff8000c7dc: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8000c7e1: e8 8a fd 00 00       	call	0xffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000c7e6: e9 73 fe ff ff       	jmp	0xffffffff8000c65e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000c7eb: cc                   	int3
ffffffff8000c7ec: cc                   	int3
ffffffff8000c7ed: cc                   	int3
ffffffff8000c7ee: cc                   	int3
ffffffff8000c7ef: cc                   	int3

ffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>:
ffffffff8000c7f0: 41 57                	push	r15
ffffffff8000c7f2: 41 56                	push	r14
ffffffff8000c7f4: 41 54                	push	r12
ffffffff8000c7f6: 53                   	push	rbx
ffffffff8000c7f7: 50                   	push	rax
ffffffff8000c7f8: 48 89 fb             	mov	rbx, rdi
ffffffff8000c7fb: 48 8d 3c 0e          	lea	rdi, [rsi + rcx]
ffffffff8000c7ff: e8 5c fd 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000c804: 4c 8b 20             	mov	r12, qword ptr [rax]
ffffffff8000c807: 49 39 c4             	cmp	r12, rax
ffffffff8000c80a: 76 06                	jbe	0xffffffff8000c812 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x22>
ffffffff8000c80c: 4d 8b 3c 24          	mov	r15, qword ptr [r12]
ffffffff8000c810: eb 06                	jmp	0xffffffff8000c818 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x28>
ffffffff8000c812: 4d 89 e7             	mov	r15, r12
ffffffff8000c815: 49 89 c4             	mov	r12, rax
ffffffff8000c818: 4c 89 ff             	mov	rdi, r15
ffffffff8000c81b: e8 60 fd 00 00       	call	0xffffffff8001c580 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff8000c820: 49 89 c6             	mov	r14, rax
ffffffff8000c823: 48 8b 40 f8          	mov	rax, qword ptr [rax - 0x8]
ffffffff8000c827: a8 01                	test	al, 0x1
ffffffff8000c829: 75 15                	jne	0xffffffff8000c840 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x50>
ffffffff8000c82b: 49 29 c6             	sub	r14, rax
ffffffff8000c82e: 48 3d 00 01 00 00    	cmp	rax, 0x100
ffffffff8000c834: 73 26                	jae	0xffffffff8000c85c <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x6c>
ffffffff8000c836: 48 83 c0 e8          	add	rax, -0x18
ffffffff8000c83a: 48 c1 e8 03          	shr	rax, 0x3
ffffffff8000c83e: eb 56                	jmp	0xffffffff8000c896 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xa6>
ffffffff8000c840: 4c 89 f7             	mov	rdi, r14
ffffffff8000c843: 48 83 c7 f8          	add	rdi, -0x8
ffffffff8000c847: e8 44 fd 00 00       	call	0xffffffff8001c590 <talc::talc::tag::Tag::set_above_free::hb00f2bbb4a63b30b>
ffffffff8000c84c: 49 8d 44 24 08       	lea	rax, [r12 + 0x8]
ffffffff8000c851: 41 f6 c7 02          	test	r15b, 0x2
ffffffff8000c855: 74 68                	je	0xffffffff8000c8bf <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xcf>
ffffffff8000c857: e9 a6 00 00 00       	jmp	0xffffffff8000c902 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x112>
ffffffff8000c85c: 48 3d 00 02 00 00    	cmp	rax, 0x200
ffffffff8000c862: 73 0a                	jae	0xffffffff8000c86e <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x7e>
ffffffff8000c864: 48 c1 e8 04          	shr	rax, 0x4
ffffffff8000c868: 48 83 c0 0d          	add	rax, 0xd
ffffffff8000c86c: eb 28                	jmp	0xffffffff8000c896 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xa6>
ffffffff8000c86e: 48 0f bd d0          	bsr	rdx, rax
ffffffff8000c872: 48 83 f2 3f          	xor	rdx, 0x3f
ffffffff8000c876: b1 3d                	mov	cl, 0x3d
ffffffff8000c878: 28 d1                	sub	cl, dl
ffffffff8000c87a: 48 d3 e8             	shr	rax, cl
ffffffff8000c87d: c1 e2 02             	shl	edx, 0x2
ffffffff8000c880: 48 29 d0             	sub	rax, rdx
ffffffff8000c883: 48 05 01 01 00 00    	add	rax, 0x101
ffffffff8000c889: 48 83 f8 7f          	cmp	rax, 0x7f
ffffffff8000c88d: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000c892: 48 0f 43 c1          	cmovae	rax, rcx
ffffffff8000c896: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff8000c899: 49 8b 56 08          	mov	rdx, qword ptr [r14 + 0x8]
ffffffff8000c89d: 48 89 0a             	mov	qword ptr [rdx], rcx
ffffffff8000c8a0: 48 85 c9             	test	rcx, rcx
ffffffff8000c8a3: 74 04                	je	0xffffffff8000c8a9 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xb9>
ffffffff8000c8a5: 48 89 51 08          	mov	qword ptr [rcx + 0x8], rdx
ffffffff8000c8a9: 48 8b 4b 20          	mov	rcx, qword ptr [rbx + 0x20]
ffffffff8000c8ad: 48 83 3c c1 00       	cmp	qword ptr [rcx + 8*rax], 0x0
ffffffff8000c8b2: 74 2b                	je	0xffffffff8000c8df <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xef>
ffffffff8000c8b4: 49 8d 44 24 08       	lea	rax, [r12 + 0x8]
ffffffff8000c8b9: 41 f6 c7 02          	test	r15b, 0x2
ffffffff8000c8bd: 75 43                	jne	0xffffffff8000c902 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x112>
ffffffff8000c8bf: 48 89 c2             	mov	rdx, rax
ffffffff8000c8c2: 4c 29 f2             	sub	rdx, r14
ffffffff8000c8c5: 48 81 fa 00 01 00 00 	cmp	rdx, 0x100
ffffffff8000c8cc: 0f 83 d9 00 00 00    	jae	0xffffffff8000c9ab <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1bb>
ffffffff8000c8d2: 48 8d 4a e8          	lea	rcx, [rdx - 0x18]
ffffffff8000c8d6: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000c8da: e9 0f 01 00 00       	jmp	0xffffffff8000c9ee <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1fe>
ffffffff8000c8df: 31 d2                	xor	edx, edx
ffffffff8000c8e1: 48 83 f8 40          	cmp	rax, 0x40
ffffffff8000c8e5: 0f 93 c2             	setae	dl
ffffffff8000c8e8: be 01 00 00 00       	mov	esi, 0x1
ffffffff8000c8ed: 89 c1                	mov	ecx, eax
ffffffff8000c8ef: 48 d3 e6             	shl	rsi, cl
ffffffff8000c8f2: 48 31 74 d3 10       	xor	qword ptr [rbx + 8*rdx + 0x10], rsi
ffffffff8000c8f7: 49 8d 44 24 08       	lea	rax, [r12 + 0x8]
ffffffff8000c8fc: 41 f6 c7 02          	test	r15b, 0x2
ffffffff8000c900: 74 bd                	je	0xffffffff8000c8bf <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xcf>
ffffffff8000c902: 49 8b 54 24 18       	mov	rdx, qword ptr [r12 + 0x18]
ffffffff8000c907: 48 81 fa 00 01 00 00 	cmp	rdx, 0x100
ffffffff8000c90e: 73 0a                	jae	0xffffffff8000c91a <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x12a>
ffffffff8000c910: 48 8d 4a e8          	lea	rcx, [rdx - 0x18]
ffffffff8000c914: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000c918: eb 43                	jmp	0xffffffff8000c95d <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x16d>
ffffffff8000c91a: 48 81 fa 00 02 00 00 	cmp	rdx, 0x200
ffffffff8000c921: 73 0d                	jae	0xffffffff8000c930 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x140>
ffffffff8000c923: 48 89 d1             	mov	rcx, rdx
ffffffff8000c926: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000c92a: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000c92e: eb 2d                	jmp	0xffffffff8000c95d <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x16d>
ffffffff8000c930: 48 0f bd f2          	bsr	rsi, rdx
ffffffff8000c934: 48 83 f6 3f          	xor	rsi, 0x3f
ffffffff8000c938: b1 3d                	mov	cl, 0x3d
ffffffff8000c93a: 40 28 f1             	sub	cl, sil
ffffffff8000c93d: 48 89 d7             	mov	rdi, rdx
ffffffff8000c940: 48 d3 ef             	shr	rdi, cl
ffffffff8000c943: c1 e6 02             	shl	esi, 0x2
ffffffff8000c946: 48 29 f7             	sub	rdi, rsi
ffffffff8000c949: 48 81 c7 01 01 00 00 	add	rdi, 0x101
ffffffff8000c950: 48 83 ff 7f          	cmp	rdi, 0x7f
ffffffff8000c954: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000c959: 48 0f 42 cf          	cmovb	rcx, rdi
ffffffff8000c95d: 49 8b 74 24 08       	mov	rsi, qword ptr [r12 + 0x8]
ffffffff8000c962: 49 8b 7c 24 10       	mov	rdi, qword ptr [r12 + 0x10]
ffffffff8000c967: 48 89 37             	mov	qword ptr [rdi], rsi
ffffffff8000c96a: 48 85 f6             	test	rsi, rsi
ffffffff8000c96d: 74 04                	je	0xffffffff8000c973 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x183>
ffffffff8000c96f: 48 89 7e 08          	mov	qword ptr [rsi + 0x8], rdi
ffffffff8000c973: 48 8b 73 20          	mov	rsi, qword ptr [rbx + 0x20]
ffffffff8000c977: 48 83 3c ce 00       	cmp	qword ptr [rsi + 8*rcx], 0x0
ffffffff8000c97c: 75 17                	jne	0xffffffff8000c995 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1a5>
ffffffff8000c97e: 31 f6                	xor	esi, esi
ffffffff8000c980: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000c984: 40 0f 93 c6          	setae	sil
ffffffff8000c988: bf 01 00 00 00       	mov	edi, 0x1
ffffffff8000c98d: 48 d3 e7             	shl	rdi, cl
ffffffff8000c990: 48 31 7c f3 10       	xor	qword ptr [rbx + 8*rsi + 0x10], rdi
ffffffff8000c995: 48 01 d0             	add	rax, rdx
ffffffff8000c998: 48 89 c2             	mov	rdx, rax
ffffffff8000c99b: 4c 29 f2             	sub	rdx, r14
ffffffff8000c99e: 48 81 fa 00 01 00 00 	cmp	rdx, 0x100
ffffffff8000c9a5: 0f 82 27 ff ff ff    	jb	0xffffffff8000c8d2 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xe2>
ffffffff8000c9ab: 48 81 fa 00 02 00 00 	cmp	rdx, 0x200
ffffffff8000c9b2: 73 0d                	jae	0xffffffff8000c9c1 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1d1>
ffffffff8000c9b4: 48 89 d1             	mov	rcx, rdx
ffffffff8000c9b7: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000c9bb: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000c9bf: eb 2d                	jmp	0xffffffff8000c9ee <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1fe>
ffffffff8000c9c1: 48 0f bd f2          	bsr	rsi, rdx
ffffffff8000c9c5: 48 83 f6 3f          	xor	rsi, 0x3f
ffffffff8000c9c9: b1 3d                	mov	cl, 0x3d
ffffffff8000c9cb: 40 28 f1             	sub	cl, sil
ffffffff8000c9ce: 48 89 d7             	mov	rdi, rdx
ffffffff8000c9d1: 48 d3 ef             	shr	rdi, cl
ffffffff8000c9d4: c1 e6 02             	shl	esi, 0x2
ffffffff8000c9d7: 48 29 f7             	sub	rdi, rsi
ffffffff8000c9da: 48 81 c7 01 01 00 00 	add	rdi, 0x101
ffffffff8000c9e1: 48 83 ff 7f          	cmp	rdi, 0x7f
ffffffff8000c9e5: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000c9ea: 48 0f 42 cf          	cmovb	rcx, rdi
ffffffff8000c9ee: 48 8b 7b 20          	mov	rdi, qword ptr [rbx + 0x20]
ffffffff8000c9f2: 48 8d 34 cf          	lea	rsi, [rdi + 8*rcx]
ffffffff8000c9f6: 48 8b 3c cf          	mov	rdi, qword ptr [rdi + 8*rcx]
ffffffff8000c9fa: 48 85 ff             	test	rdi, rdi
ffffffff8000c9fd: 74 13                	je	0xffffffff8000ca12 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x222>
ffffffff8000c9ff: 49 89 3e             	mov	qword ptr [r14], rdi
ffffffff8000ca02: 49 89 76 08          	mov	qword ptr [r14 + 0x8], rsi
ffffffff8000ca06: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff8000ca09: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000ca0d: 48 89 fe             	mov	rsi, rdi
ffffffff8000ca10: eb 23                	jmp	0xffffffff8000ca35 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x245>
ffffffff8000ca12: 31 ff                	xor	edi, edi
ffffffff8000ca14: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000ca18: 40 0f 93 c7          	setae	dil
ffffffff8000ca1c: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8000ca22: 49 d3 e0             	shl	r8, cl
ffffffff8000ca25: 4c 31 44 fb 10       	xor	qword ptr [rbx + 8*rdi + 0x10], r8
ffffffff8000ca2a: 49 c7 06 00 00 00 00 	mov	qword ptr [r14], 0x0
ffffffff8000ca31: 49 89 76 08          	mov	qword ptr [r14 + 0x8], rsi
ffffffff8000ca35: 4c 89 36             	mov	qword ptr [rsi], r14
ffffffff8000ca38: 49 89 56 10          	mov	qword ptr [r14 + 0x10], rdx
ffffffff8000ca3c: 48 89 50 f8          	mov	qword ptr [rax - 0x8], rdx
ffffffff8000ca40: 48 83 c4 08          	add	rsp, 0x8
ffffffff8000ca44: 5b                   	pop	rbx
ffffffff8000ca45: 41 5c                	pop	r12
ffffffff8000ca47: 41 5e                	pop	r14
ffffffff8000ca49: 41 5f                	pop	r15
ffffffff8000ca4b: c3                   	ret
ffffffff8000ca4c: cc                   	int3
ffffffff8000ca4d: cc                   	int3
ffffffff8000ca4e: cc                   	int3
ffffffff8000ca4f: cc                   	int3

ffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>:
ffffffff8000ca50: 55                   	push	rbp
ffffffff8000ca51: 41 57                	push	r15
ffffffff8000ca53: 41 56                	push	r14
ffffffff8000ca55: 41 55                	push	r13
ffffffff8000ca57: 41 54                	push	r12
ffffffff8000ca59: 53                   	push	rbx
ffffffff8000ca5a: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000ca5e: 49 89 d7             	mov	r15, rdx
ffffffff8000ca61: 48 8d 42 0f          	lea	rax, [rdx + 0xf]
ffffffff8000ca65: 48 83 e0 f8          	and	rax, -0x8
ffffffff8000ca69: 48 83 fa 11          	cmp	rdx, 0x11
ffffffff8000ca6d: 41 bd 18 00 00 00    	mov	r13d, 0x18
ffffffff8000ca73: 4c 0f 43 e8          	cmovae	r13, rax
ffffffff8000ca77: 49 0f bd c5          	bsr	rax, r13
ffffffff8000ca7b: 48 83 f0 3f          	xor	rax, 0x3f
ffffffff8000ca7f: b1 3d                	mov	cl, 0x3d
ffffffff8000ca81: 28 c1                	sub	cl, al
ffffffff8000ca83: 4c 89 ea             	mov	rdx, r13
ffffffff8000ca86: 48 d3 ea             	shr	rdx, cl
ffffffff8000ca89: c1 e0 02             	shl	eax, 0x2
ffffffff8000ca8c: 48 29 c2             	sub	rdx, rax
ffffffff8000ca8f: 48 81 c2 01 01 00 00 	add	rdx, 0x101
ffffffff8000ca96: 48 83 fa 7f          	cmp	rdx, 0x7f
ffffffff8000ca9a: b8 7f 00 00 00       	mov	eax, 0x7f
ffffffff8000ca9f: 48 0f 42 c2          	cmovb	rax, rdx
ffffffff8000caa3: 4d 89 e8             	mov	r8, r13
ffffffff8000caa6: 49 c1 e8 04          	shr	r8, 0x4
ffffffff8000caaa: 49 83 c0 0d          	add	r8, 0xd
ffffffff8000caae: 49 8d 55 e8          	lea	rdx, [r13 - 0x18]
ffffffff8000cab2: 48 c1 ea 03          	shr	rdx, 0x3
ffffffff8000cab6: 4c 89 e9             	mov	rcx, r13
ffffffff8000cab9: 48 81 e1 00 ff ff ff 	and	rcx, -0x100
ffffffff8000cac0: 49 81 fd 00 01 00 00 	cmp	r13, 0x100
ffffffff8000cac7: 48 0f 43 d0          	cmovae	rdx, rax
ffffffff8000cacb: 48 83 fa 40          	cmp	rdx, 0x40
ffffffff8000cacf: 0f 92 c0             	setb	al
ffffffff8000cad2: 41 89 d1             	mov	r9d, edx
ffffffff8000cad5: 41 83 e1 3f          	and	r9d, 0x3f
ffffffff8000cad9: 4c 89 4c 24 20       	mov	qword ptr [rsp + 0x20], r9
ffffffff8000cade: 48 81 f9 00 01 00 00 	cmp	rcx, 0x100
ffffffff8000cae5: 41 0f 94 c3          	sete	r11b
ffffffff8000cae9: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff8000caee: 4c 0f 45 c2          	cmovne	r8, rdx
ffffffff8000caf2: 41 08 c3             	or	r11b, al
ffffffff8000caf5: 48 83 fe 09          	cmp	rsi, 0x9
ffffffff8000caf9: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8000cafe: 4c 89 44 24 28       	mov	qword ptr [rsp + 0x28], r8
ffffffff8000cb03: 0f 83 7f 01 00 00    	jae	0xffffffff8000cc88 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x238>
ffffffff8000cb09: 48 89 f3             	mov	rbx, rsi
ffffffff8000cb0c: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000cb15: 45 84 db             	test	r11b, r11b
ffffffff8000cb18: 74 36                	je	0xffffffff8000cb50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x100>
ffffffff8000cb1a: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff8000cb1e: 48 89 d0             	mov	rax, rdx
ffffffff8000cb21: 44 89 c1             	mov	ecx, r8d
ffffffff8000cb24: 48 d3 e8             	shr	rax, cl
ffffffff8000cb27: 48 85 c0             	test	rax, rax
ffffffff8000cb2a: 74 64                	je	0xffffffff8000cb90 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x140>
ffffffff8000cb2c: f3 48 0f bc c8       	tzcnt	rcx, rax
ffffffff8000cb31: 4c 01 c1             	add	rcx, r8
ffffffff8000cb34: 4c 8b 57 18          	mov	r10, qword ptr [rdi + 0x18]
ffffffff8000cb38: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cb3c: 4d 85 d2             	test	r10, r10
ffffffff8000cb3f: 75 6f                	jne	0xffffffff8000cbb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x160>
ffffffff8000cb41: e9 db 00 00 00       	jmp	0xffffffff8000cc21 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff8000cb46: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000cb50: 48 83 7c 24 08 7f    	cmp	qword ptr [rsp + 0x8], 0x7f
ffffffff8000cb56: 0f 87 04 01 00 00    	ja	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cb5c: 4c 8b 57 18          	mov	r10, qword ptr [rdi + 0x18]
ffffffff8000cb60: 4c 89 d0             	mov	rax, r10
ffffffff8000cb63: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8000cb68: 48 d3 e8             	shr	rax, cl
ffffffff8000cb6b: 48 85 c0             	test	rax, rax
ffffffff8000cb6e: 0f 84 ec 00 00 00    	je	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cb74: f3 48 0f bc c8       	tzcnt	rcx, rax
ffffffff8000cb79: 48 03 4c 24 08       	add	rcx, qword ptr [rsp + 0x8]
ffffffff8000cb7e: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff8000cb82: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cb86: 4d 85 d2             	test	r10, r10
ffffffff8000cb89: 75 25                	jne	0xffffffff8000cbb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x160>
ffffffff8000cb8b: e9 91 00 00 00       	jmp	0xffffffff8000cc21 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff8000cb90: 4c 8b 57 18          	mov	r10, qword ptr [rdi + 0x18]
ffffffff8000cb94: 4d 85 d2             	test	r10, r10
ffffffff8000cb97: 0f 84 c3 00 00 00    	je	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cb9d: f3 49 0f bc ca       	tzcnt	rcx, r10
ffffffff8000cba2: 48 83 c9 40          	or	rcx, 0x40
ffffffff8000cba6: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cbaa: 4d 85 d2             	test	r10, r10
ffffffff8000cbad: 74 72                	je	0xffffffff8000cc21 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff8000cbaf: 90                   	nop
ffffffff8000cbb0: f3 4d 0f bc c2       	tzcnt	r8, r10
ffffffff8000cbb5: 49 83 c8 40          	or	r8, 0x40
ffffffff8000cbb9: 48 8d 04 ce          	lea	rax, [rsi + 8*rcx]
ffffffff8000cbbd: 49 89 c4             	mov	r12, rax
ffffffff8000cbc0: 4d 8b 24 24          	mov	r12, qword ptr [r12]
ffffffff8000cbc4: 4d 85 e4             	test	r12, r12
ffffffff8000cbc7: 74 17                	je	0xffffffff8000cbe0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x190>
ffffffff8000cbc9: 49 8b 6c 24 10       	mov	rbp, qword ptr [r12 + 0x10]
ffffffff8000cbce: 4c 39 ed             	cmp	rbp, r13
ffffffff8000cbd1: 72 ed                	jb	0xffffffff8000cbc0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x170>
ffffffff8000cbd3: e9 c8 02 00 00       	jmp	0xffffffff8000cea0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x450>
ffffffff8000cbd8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000cbe0: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff8000cbe4: 48 83 f9 3f          	cmp	rcx, 0x3f
ffffffff8000cbe8: 73 12                	jae	0xffffffff8000cbfc <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1ac>
ffffffff8000cbea: 49 89 d1             	mov	r9, rdx
ffffffff8000cbed: 89 c1                	mov	ecx, eax
ffffffff8000cbef: 49 d3 e9             	shr	r9, cl
ffffffff8000cbf2: 4c 89 c1             	mov	rcx, r8
ffffffff8000cbf5: 4d 85 c9             	test	r9, r9
ffffffff8000cbf8: 75 15                	jne	0xffffffff8000cc0f <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1bf>
ffffffff8000cbfa: eb bd                	jmp	0xffffffff8000cbb9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x169>
ffffffff8000cbfc: 48 83 f9 7e          	cmp	rcx, 0x7e
ffffffff8000cc00: 77 5e                	ja	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cc02: 4d 89 d1             	mov	r9, r10
ffffffff8000cc05: 89 c1                	mov	ecx, eax
ffffffff8000cc07: 49 d3 e9             	shr	r9, cl
ffffffff8000cc0a: 4d 85 c9             	test	r9, r9
ffffffff8000cc0d: 74 51                	je	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cc0f: f3 49 0f bc c9       	tzcnt	rcx, r9
ffffffff8000cc14: 48 01 c1             	add	rcx, rax
ffffffff8000cc17: eb a0                	jmp	0xffffffff8000cbb9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x169>
ffffffff8000cc19: f3 48 0f bc c0       	tzcnt	rax, rax
ffffffff8000cc1e: 48 01 c1             	add	rcx, rax
ffffffff8000cc21: 48 8d 04 ce          	lea	rax, [rsi + 8*rcx]
ffffffff8000cc25: 49 89 c4             	mov	r12, rax
ffffffff8000cc28: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000cc30: 4d 8b 24 24          	mov	r12, qword ptr [r12]
ffffffff8000cc34: 4d 85 e4             	test	r12, r12
ffffffff8000cc37: 74 0f                	je	0xffffffff8000cc48 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1f8>
ffffffff8000cc39: 49 8b 6c 24 10       	mov	rbp, qword ptr [r12 + 0x10]
ffffffff8000cc3e: 4c 39 ed             	cmp	rbp, r13
ffffffff8000cc41: 72 ed                	jb	0xffffffff8000cc30 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1e0>
ffffffff8000cc43: e9 58 02 00 00       	jmp	0xffffffff8000cea0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x450>
ffffffff8000cc48: 48 83 f9 3e          	cmp	rcx, 0x3e
ffffffff8000cc4c: 77 12                	ja	0xffffffff8000cc60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000cc4e: 48 ff c1             	inc	rcx
ffffffff8000cc51: 48 89 d0             	mov	rax, rdx
ffffffff8000cc54: 48 d3 e8             	shr	rax, cl
ffffffff8000cc57: 48 85 c0             	test	rax, rax
ffffffff8000cc5a: 75 bd                	jne	0xffffffff8000cc19 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1c9>
ffffffff8000cc5c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000cc60: 48 89 de             	mov	rsi, rbx
ffffffff8000cc63: 4c 89 fa             	mov	rdx, r15
ffffffff8000cc66: 44 89 dd             	mov	ebp, r11d
ffffffff8000cc69: e8 42 f6 00 00       	call	0xffffffff8001c2b0 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>
ffffffff8000cc6e: 41 89 eb             	mov	r11d, ebp
ffffffff8000cc71: 4c 8b 44 24 28       	mov	r8, qword ptr [rsp + 0x28]
ffffffff8000cc76: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8000cc7b: 84 c0                	test	al, al
ffffffff8000cc7d: 0f 84 92 fe ff ff    	je	0xffffffff8000cb15 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0xc5>
ffffffff8000cc83: e9 41 04 00 00       	jmp	0xffffffff8000d0c9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff8000cc88: 48 8d 5e ff          	lea	rbx, [rsi - 0x1]
ffffffff8000cc8c: 48 89 74 24 30       	mov	qword ptr [rsp + 0x30], rsi
ffffffff8000cc91: 49 89 f6             	mov	r14, rsi
ffffffff8000cc94: 49 f7 de             	neg	r14
ffffffff8000cc97: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000cca0: 44 88 5c 24 07       	mov	byte ptr [rsp + 0x7], r11b
ffffffff8000cca5: 45 84 db             	test	r11b, r11b
ffffffff8000cca8: 74 36                	je	0xffffffff8000cce0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x290>
ffffffff8000ccaa: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff8000ccae: 48 89 d0             	mov	rax, rdx
ffffffff8000ccb1: 44 89 c1             	mov	ecx, r8d
ffffffff8000ccb4: 48 d3 e8             	shr	rax, cl
ffffffff8000ccb7: 48 85 c0             	test	rax, rax
ffffffff8000ccba: 74 67                	je	0xffffffff8000cd23 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x2d3>
ffffffff8000ccbc: f3 48 0f bc c8       	tzcnt	rcx, rax
ffffffff8000ccc1: 4c 01 c1             	add	rcx, r8
ffffffff8000ccc4: 4c 8b 5f 18          	mov	r11, qword ptr [rdi + 0x18]
ffffffff8000ccc8: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cccc: 4d 85 db             	test	r11, r11
ffffffff8000cccf: 75 7f                	jne	0xffffffff8000cd50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x300>
ffffffff8000ccd1: e9 da 00 00 00       	jmp	0xffffffff8000cdb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff8000ccd6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000cce0: 48 81 7c 24 08 80 00 00 00   	cmp	qword ptr [rsp + 0x8], 0x80
ffffffff8000cce9: 0f 83 e1 00 00 00    	jae	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000ccef: 4c 8b 5f 18          	mov	r11, qword ptr [rdi + 0x18]
ffffffff8000ccf3: 4c 89 d8             	mov	rax, r11
ffffffff8000ccf6: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8000ccfb: 48 d3 e8             	shr	rax, cl
ffffffff8000ccfe: 48 85 c0             	test	rax, rax
ffffffff8000cd01: 0f 84 c9 00 00 00    	je	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000cd07: f3 48 0f bc c8       	tzcnt	rcx, rax
ffffffff8000cd0c: 48 03 4c 24 08       	add	rcx, qword ptr [rsp + 0x8]
ffffffff8000cd11: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff8000cd15: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cd19: 4d 85 db             	test	r11, r11
ffffffff8000cd1c: 75 32                	jne	0xffffffff8000cd50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x300>
ffffffff8000cd1e: e9 8d 00 00 00       	jmp	0xffffffff8000cdb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff8000cd23: 4c 8b 5f 18          	mov	r11, qword ptr [rdi + 0x18]
ffffffff8000cd27: 4d 85 db             	test	r11, r11
ffffffff8000cd2a: 0f 84 a0 00 00 00    	je	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000cd30: f3 49 0f bc cb       	tzcnt	rcx, r11
ffffffff8000cd35: 48 83 c9 40          	or	rcx, 0x40
ffffffff8000cd39: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cd3d: 4d 85 db             	test	r11, r11
ffffffff8000cd40: 74 6e                	je	0xffffffff8000cdb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff8000cd42: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000cd50: f3 4d 0f bc c3       	tzcnt	r8, r11
ffffffff8000cd55: 49 83 c8 40          	or	r8, 0x40
ffffffff8000cd59: e9 ba 00 00 00       	jmp	0xffffffff8000ce18 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c8>
ffffffff8000cd5e: 66 90                	nop
ffffffff8000cd60: f3 48 0f bc c0       	tzcnt	rax, rax
ffffffff8000cd65: 48 01 c1             	add	rcx, rax
ffffffff8000cd68: eb 46                	jmp	0xffffffff8000cdb0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff8000cd6a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000cd70: 49 89 c4             	mov	r12, rax
ffffffff8000cd73: 48 85 c0             	test	rax, rax
ffffffff8000cd76: 74 41                	je	0xffffffff8000cdb9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x369>
ffffffff8000cd78: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff8000cd7c: 49 8b 6c 24 10       	mov	rbp, qword ptr [r12 + 0x10]
ffffffff8000cd81: 4c 39 ed             	cmp	rbp, r13
ffffffff8000cd84: 72 ea                	jb	0xffffffff8000cd70 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x320>
ffffffff8000cd86: 4c 01 e5             	add	rbp, r12
ffffffff8000cd89: 4e 8d 0c 23          	lea	r9, [rbx + r12]
ffffffff8000cd8d: 4d 21 f1             	and	r9, r14
ffffffff8000cd90: 4f 8d 04 39          	lea	r8, [r9 + r15]
ffffffff8000cd94: 49 83 c0 08          	add	r8, 0x8
ffffffff8000cd98: 49 39 e8             	cmp	r8, rbp
ffffffff8000cd9b: 77 d3                	ja	0xffffffff8000cd70 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x320>
ffffffff8000cd9d: e9 cb 00 00 00       	jmp	0xffffffff8000ce6d <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x41d>
ffffffff8000cda2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000cdb0: 4c 8b 24 ce          	mov	r12, qword ptr [rsi + 8*rcx]
ffffffff8000cdb4: 4d 85 e4             	test	r12, r12
ffffffff8000cdb7: 75 bf                	jne	0xffffffff8000cd78 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x328>
ffffffff8000cdb9: 48 83 f9 3e          	cmp	rcx, 0x3e
ffffffff8000cdbd: 77 11                	ja	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000cdbf: 48 ff c1             	inc	rcx
ffffffff8000cdc2: 48 89 d0             	mov	rax, rdx
ffffffff8000cdc5: 48 d3 e8             	shr	rax, cl
ffffffff8000cdc8: 48 85 c0             	test	rax, rax
ffffffff8000cdcb: 75 93                	jne	0xffffffff8000cd60 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x310>
ffffffff8000cdcd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000cdd0: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff8000cdd5: 4c 89 fa             	mov	rdx, r15
ffffffff8000cdd8: e8 d3 f4 00 00       	call	0xffffffff8001c2b0 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>
ffffffff8000cddd: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8000cde2: 84 c0                	test	al, al
ffffffff8000cde4: 4c 8b 44 24 28       	mov	r8, qword ptr [rsp + 0x28]
ffffffff8000cde9: 44 0f b6 5c 24 07    	movzx	r11d, byte ptr [rsp + 0x7]
ffffffff8000cdef: 0f 84 b0 fe ff ff    	je	0xffffffff8000cca5 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x255>
ffffffff8000cdf5: e9 cf 02 00 00       	jmp	0xffffffff8000d0c9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff8000cdfa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000ce00: 49 89 d1             	mov	r9, rdx
ffffffff8000ce03: 89 c1                	mov	ecx, eax
ffffffff8000ce05: 49 d3 e9             	shr	r9, cl
ffffffff8000ce08: 4c 89 c1             	mov	rcx, r8
ffffffff8000ce0b: 4d 85 c9             	test	r9, r9
ffffffff8000ce0e: 74 08                	je	0xffffffff8000ce18 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c8>
ffffffff8000ce10: f3 49 0f bc c9       	tzcnt	rcx, r9
ffffffff8000ce15: 48 01 c1             	add	rcx, rax
ffffffff8000ce18: 4c 8b 24 ce          	mov	r12, qword ptr [rsi + 8*rcx]
ffffffff8000ce1c: 4d 85 e4             	test	r12, r12
ffffffff8000ce1f: 75 27                	jne	0xffffffff8000ce48 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f8>
ffffffff8000ce21: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff8000ce25: 48 83 f9 3f          	cmp	rcx, 0x3f
ffffffff8000ce29: 72 d5                	jb	0xffffffff8000ce00 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3b0>
ffffffff8000ce2b: 48 83 f9 7f          	cmp	rcx, 0x7f
ffffffff8000ce2f: 73 9f                	jae	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000ce31: 4d 89 d9             	mov	r9, r11
ffffffff8000ce34: 89 c1                	mov	ecx, eax
ffffffff8000ce36: 49 d3 e9             	shr	r9, cl
ffffffff8000ce39: 4d 85 c9             	test	r9, r9
ffffffff8000ce3c: 75 d2                	jne	0xffffffff8000ce10 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c0>
ffffffff8000ce3e: eb 90                	jmp	0xffffffff8000cdd0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000ce40: 49 89 c4             	mov	r12, rax
ffffffff8000ce43: 48 85 c0             	test	rax, rax
ffffffff8000ce46: 74 d9                	je	0xffffffff8000ce21 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3d1>
ffffffff8000ce48: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff8000ce4c: 49 8b 6c 24 10       	mov	rbp, qword ptr [r12 + 0x10]
ffffffff8000ce51: 4c 39 ed             	cmp	rbp, r13
ffffffff8000ce54: 72 ea                	jb	0xffffffff8000ce40 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f0>
ffffffff8000ce56: 4c 01 e5             	add	rbp, r12
ffffffff8000ce59: 4e 8d 0c 23          	lea	r9, [rbx + r12]
ffffffff8000ce5d: 4d 21 f1             	and	r9, r14
ffffffff8000ce60: 4f 8d 14 39          	lea	r10, [r9 + r15]
ffffffff8000ce64: 49 83 c2 08          	add	r10, 0x8
ffffffff8000ce68: 49 39 ea             	cmp	r10, rbp
ffffffff8000ce6b: 77 d3                	ja	0xffffffff8000ce40 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f0>
ffffffff8000ce6d: 4d 89 ce             	mov	r14, r9
ffffffff8000ce70: 49 8b 54 24 08       	mov	rdx, qword ptr [r12 + 0x8]
ffffffff8000ce75: 48 89 02             	mov	qword ptr [rdx], rax
ffffffff8000ce78: 48 85 c0             	test	rax, rax
ffffffff8000ce7b: 74 04                	je	0xffffffff8000ce81 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x431>
ffffffff8000ce7d: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff8000ce81: 48 83 3c ce 00       	cmp	qword ptr [rsi + 8*rcx], 0x0
ffffffff8000ce86: 75 4f                	jne	0xffffffff8000ced7 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x487>
ffffffff8000ce88: 31 c0                	xor	eax, eax
ffffffff8000ce8a: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000ce8e: 0f 93 c0             	setae	al
ffffffff8000ce91: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8000ce96: 48 d3 e2             	shl	rdx, cl
ffffffff8000ce99: 48 31 54 c7 10       	xor	qword ptr [rdi + 8*rax + 0x10], rdx
ffffffff8000ce9e: eb 37                	jmp	0xffffffff8000ced7 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x487>
ffffffff8000cea0: 49 8b 14 24          	mov	rdx, qword ptr [r12]
ffffffff8000cea4: 49 8b 74 24 08       	mov	rsi, qword ptr [r12 + 0x8]
ffffffff8000cea9: 48 89 16             	mov	qword ptr [rsi], rdx
ffffffff8000ceac: 48 85 d2             	test	rdx, rdx
ffffffff8000ceaf: 74 04                	je	0xffffffff8000ceb5 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x465>
ffffffff8000ceb1: 48 89 72 08          	mov	qword ptr [rdx + 0x8], rsi
ffffffff8000ceb5: 48 83 38 00          	cmp	qword ptr [rax], 0x0
ffffffff8000ceb9: 75 16                	jne	0xffffffff8000ced1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x481>
ffffffff8000cebb: 31 c0                	xor	eax, eax
ffffffff8000cebd: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000cec1: 0f 93 c0             	setae	al
ffffffff8000cec4: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8000cec9: 48 d3 e2             	shl	rdx, cl
ffffffff8000cecc: 48 31 54 c7 10       	xor	qword ptr [rdi + 8*rax + 0x10], rdx
ffffffff8000ced1: 4c 01 e5             	add	rbp, r12
ffffffff8000ced4: 4d 89 e6             	mov	r14, r12
ffffffff8000ced7: 48 8d 5d e8          	lea	rbx, [rbp - 0x18]
ffffffff8000cedb: 4c 39 f3             	cmp	rbx, r14
ffffffff8000cede: 49 0f 43 de          	cmovae	rbx, r14
ffffffff8000cee2: 48 89 d8             	mov	rax, rbx
ffffffff8000cee5: 4c 29 e0             	sub	rax, r12
ffffffff8000cee8: 48 83 f8 17          	cmp	rax, 0x17
ffffffff8000ceec: 76 12                	jbe	0xffffffff8000cf00 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4b0>
ffffffff8000ceee: 48 3d 00 01 00 00    	cmp	rax, 0x100
ffffffff8000cef4: 73 1c                	jae	0xffffffff8000cf12 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4c2>
ffffffff8000cef6: 48 8d 48 e8          	lea	rcx, [rax - 0x18]
ffffffff8000cefa: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000cefe: eb 53                	jmp	0xffffffff8000cf53 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x503>
ffffffff8000cf00: 49 8d 7c 24 f8       	lea	rdi, [r12 - 0x8]
ffffffff8000cf05: e8 96 f6 00 00       	call	0xffffffff8001c5a0 <talc::talc::tag::Tag::clear_above_free::hac6cde6801e53680>
ffffffff8000cf0a: 4c 89 e3             	mov	rbx, r12
ffffffff8000cf0d: e9 98 00 00 00       	jmp	0xffffffff8000cfaa <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x55a>
ffffffff8000cf12: 48 3d 00 02 00 00    	cmp	rax, 0x200
ffffffff8000cf18: 73 0d                	jae	0xffffffff8000cf27 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4d7>
ffffffff8000cf1a: 48 89 c1             	mov	rcx, rax
ffffffff8000cf1d: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000cf21: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000cf25: eb 2c                	jmp	0xffffffff8000cf53 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x503>
ffffffff8000cf27: 48 0f bd d0          	bsr	rdx, rax
ffffffff8000cf2b: 48 83 f2 3f          	xor	rdx, 0x3f
ffffffff8000cf2f: b1 3d                	mov	cl, 0x3d
ffffffff8000cf31: 28 d1                	sub	cl, dl
ffffffff8000cf33: 48 89 c6             	mov	rsi, rax
ffffffff8000cf36: 48 d3 ee             	shr	rsi, cl
ffffffff8000cf39: c1 e2 02             	shl	edx, 0x2
ffffffff8000cf3c: 48 29 d6             	sub	rsi, rdx
ffffffff8000cf3f: 48 81 c6 01 01 00 00 	add	rsi, 0x101
ffffffff8000cf46: 48 83 fe 7f          	cmp	rsi, 0x7f
ffffffff8000cf4a: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000cf4f: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff8000cf53: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8000cf57: 48 8d 14 ce          	lea	rdx, [rsi + 8*rcx]
ffffffff8000cf5b: 48 8b 34 ce          	mov	rsi, qword ptr [rsi + 8*rcx]
ffffffff8000cf5f: 48 85 f6             	test	rsi, rsi
ffffffff8000cf62: 74 15                	je	0xffffffff8000cf79 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x529>
ffffffff8000cf64: 49 89 34 24          	mov	qword ptr [r12], rsi
ffffffff8000cf68: 49 89 54 24 08       	mov	qword ptr [r12 + 0x8], rdx
ffffffff8000cf6d: 4c 89 22             	mov	qword ptr [rdx], r12
ffffffff8000cf70: 48 83 c6 08          	add	rsi, 0x8
ffffffff8000cf74: 48 89 f2             	mov	rdx, rsi
ffffffff8000cf77: eb 25                	jmp	0xffffffff8000cf9e <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x54e>
ffffffff8000cf79: 31 f6                	xor	esi, esi
ffffffff8000cf7b: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000cf7f: 40 0f 93 c6          	setae	sil
ffffffff8000cf83: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8000cf89: 49 d3 e0             	shl	r8, cl
ffffffff8000cf8c: 4c 31 44 f7 10       	xor	qword ptr [rdi + 8*rsi + 0x10], r8
ffffffff8000cf91: 49 c7 04 24 00 00 00 00      	mov	qword ptr [r12], 0x0
ffffffff8000cf99: 49 89 54 24 08       	mov	qword ptr [r12 + 0x8], rdx
ffffffff8000cf9e: 4c 89 22             	mov	qword ptr [rdx], r12
ffffffff8000cfa1: 49 89 44 24 10       	mov	qword ptr [r12 + 0x10], rax
ffffffff8000cfa6: 48 89 43 f8          	mov	qword ptr [rbx - 0x8], rax
ffffffff8000cfaa: 4d 01 f7             	add	r15, r14
ffffffff8000cfad: 4c 89 ff             	mov	rdi, r15
ffffffff8000cfb0: e8 ab f5 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000cfb5: 49 89 c7             	mov	r15, rax
ffffffff8000cfb8: 4c 8d 6b 10          	lea	r13, [rbx + 0x10]
ffffffff8000cfbc: 4c 39 e8             	cmp	rax, r13
ffffffff8000cfbf: 4c 0f 43 e8          	cmovae	r13, rax
ffffffff8000cfc3: 49 8d 55 08          	lea	rdx, [r13 + 0x8]
ffffffff8000cfc7: 48 89 e8             	mov	rax, rbp
ffffffff8000cfca: 48 29 d0             	sub	rax, rdx
ffffffff8000cfcd: 48 83 f8 17          	cmp	rax, 0x17
ffffffff8000cfd1: 76 17                	jbe	0xffffffff8000cfea <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x59a>
ffffffff8000cfd3: 48 3d 00 01 00 00    	cmp	rax, 0x100
ffffffff8000cfd9: 73 36                	jae	0xffffffff8000d011 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x5c1>
ffffffff8000cfdb: 48 8d 48 e8          	lea	rcx, [rax - 0x18]
ffffffff8000cfdf: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000cfe3: 4c 8b 4c 24 10       	mov	r9, qword ptr [rsp + 0x10]
ffffffff8000cfe8: eb 6e                	jmp	0xffffffff8000d058 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x608>
ffffffff8000cfea: 48 83 c5 f8          	add	rbp, -0x8
ffffffff8000cfee: 48 89 ef             	mov	rdi, rbp
ffffffff8000cff1: 48 89 de             	mov	rsi, rbx
ffffffff8000cff4: 31 d2                	xor	edx, edx
ffffffff8000cff6: e8 75 f5 00 00       	call	0xffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000cffb: 49 89 ed             	mov	r13, rbp
ffffffff8000cffe: 4c 89 74 24 18       	mov	qword ptr [rsp + 0x18], r14
ffffffff8000d003: 4d 39 fd             	cmp	r13, r15
ffffffff8000d006: 0f 85 ba 00 00 00    	jne	0xffffffff8000d0c6 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x676>
ffffffff8000d00c: e9 b8 00 00 00       	jmp	0xffffffff8000d0c9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff8000d011: 48 3d 00 02 00 00    	cmp	rax, 0x200
ffffffff8000d017: 4c 8b 4c 24 10       	mov	r9, qword ptr [rsp + 0x10]
ffffffff8000d01c: 73 0d                	jae	0xffffffff8000d02b <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x5db>
ffffffff8000d01e: 48 89 c1             	mov	rcx, rax
ffffffff8000d021: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000d025: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000d029: eb 2d                	jmp	0xffffffff8000d058 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x608>
ffffffff8000d02b: 48 0f bd f0          	bsr	rsi, rax
ffffffff8000d02f: 48 83 f6 3f          	xor	rsi, 0x3f
ffffffff8000d033: b1 3d                	mov	cl, 0x3d
ffffffff8000d035: 40 28 f1             	sub	cl, sil
ffffffff8000d038: 48 89 c7             	mov	rdi, rax
ffffffff8000d03b: 48 d3 ef             	shr	rdi, cl
ffffffff8000d03e: c1 e6 02             	shl	esi, 0x2
ffffffff8000d041: 48 29 f7             	sub	rdi, rsi
ffffffff8000d044: 48 81 c7 01 01 00 00 	add	rdi, 0x101
ffffffff8000d04b: 48 83 ff 7f          	cmp	rdi, 0x7f
ffffffff8000d04f: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000d054: 48 0f 42 cf          	cmovb	rcx, rdi
ffffffff8000d058: 49 8b 79 20          	mov	rdi, qword ptr [r9 + 0x20]
ffffffff8000d05c: 48 8d 34 cf          	lea	rsi, [rdi + 8*rcx]
ffffffff8000d060: 48 8b 3c cf          	mov	rdi, qword ptr [rdi + 8*rcx]
ffffffff8000d064: 48 85 ff             	test	rdi, rdi
ffffffff8000d067: 74 14                	je	0xffffffff8000d07d <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x62d>
ffffffff8000d069: 49 89 7d 08          	mov	qword ptr [r13 + 0x8], rdi
ffffffff8000d06d: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff8000d071: 48 89 16             	mov	qword ptr [rsi], rdx
ffffffff8000d074: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000d078: 48 89 fe             	mov	rsi, rdi
ffffffff8000d07b: eb 24                	jmp	0xffffffff8000d0a1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x651>
ffffffff8000d07d: 31 ff                	xor	edi, edi
ffffffff8000d07f: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000d083: 40 0f 93 c7          	setae	dil
ffffffff8000d087: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8000d08d: 49 d3 e0             	shl	r8, cl
ffffffff8000d090: 4d 31 44 f9 10       	xor	qword ptr [r9 + 8*rdi + 0x10], r8
ffffffff8000d095: 49 c7 45 08 00 00 00 00      	mov	qword ptr [r13 + 0x8], 0x0
ffffffff8000d09d: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff8000d0a1: 48 89 16             	mov	qword ptr [rsi], rdx
ffffffff8000d0a4: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff8000d0a8: 48 89 45 f8          	mov	qword ptr [rbp - 0x8], rax
ffffffff8000d0ac: 4c 89 ef             	mov	rdi, r13
ffffffff8000d0af: 48 89 de             	mov	rsi, rbx
ffffffff8000d0b2: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8000d0b7: e8 b4 f4 00 00       	call	0xffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000d0bc: 4c 89 74 24 18       	mov	qword ptr [rsp + 0x18], r14
ffffffff8000d0c1: 4d 39 fd             	cmp	r13, r15
ffffffff8000d0c4: 74 03                	je	0xffffffff8000d0c9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff8000d0c6: 4d 89 2f             	mov	qword ptr [r15], r13
ffffffff8000d0c9: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000d0ce: 48 83 c4 38          	add	rsp, 0x38
ffffffff8000d0d2: 5b                   	pop	rbx
ffffffff8000d0d3: 41 5c                	pop	r12
ffffffff8000d0d5: 41 5d                	pop	r13
ffffffff8000d0d7: 41 5e                	pop	r14
ffffffff8000d0d9: 41 5f                	pop	r15
ffffffff8000d0db: 5d                   	pop	rbp
ffffffff8000d0dc: c3                   	ret
ffffffff8000d0dd: cc                   	int3
ffffffff8000d0de: cc                   	int3
ffffffff8000d0df: cc                   	int3

ffffffff8000d0e0 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4>:
ffffffff8000d0e0: 55                   	push	rbp
ffffffff8000d0e1: 41 57                	push	r15
ffffffff8000d0e3: 41 56                	push	r14
ffffffff8000d0e5: 41 55                	push	r13
ffffffff8000d0e7: 41 54                	push	r12
ffffffff8000d0e9: 53                   	push	rbx
ffffffff8000d0ea: 50                   	push	rax
ffffffff8000d0eb: 4c 89 c3             	mov	rbx, r8
ffffffff8000d0ee: 49 89 f7             	mov	r15, rsi
ffffffff8000d0f1: 49 89 fe             	mov	r14, rdi
ffffffff8000d0f4: 48 8d 3c 31          	lea	rdi, [rcx + rsi]
ffffffff8000d0f8: e8 63 f4 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000d0fd: 48 8b 28             	mov	rbp, qword ptr [rax]
ffffffff8000d100: 48 39 c5             	cmp	rbp, rax
ffffffff8000d103: 76 06                	jbe	0xffffffff8000d10b <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x2b>
ffffffff8000d105: 4c 8b 6d 00          	mov	r13, qword ptr [rbp]
ffffffff8000d109: eb 06                	jmp	0xffffffff8000d111 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x31>
ffffffff8000d10b: 49 89 ed             	mov	r13, rbp
ffffffff8000d10e: 48 89 c5             	mov	rbp, rax
ffffffff8000d111: 4c 89 ef             	mov	rdi, r13
ffffffff8000d114: e8 67 f4 00 00       	call	0xffffffff8001c580 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff8000d119: 49 89 c4             	mov	r12, rax
ffffffff8000d11c: 49 01 df             	add	r15, rbx
ffffffff8000d11f: 4c 89 ff             	mov	rdi, r15
ffffffff8000d122: e8 39 f4 00 00       	call	0xffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff8000d127: 48 89 c3             	mov	rbx, rax
ffffffff8000d12a: 4d 8d 7c 24 10       	lea	r15, [r12 + 0x10]
ffffffff8000d12f: 4c 39 f8             	cmp	rax, r15
ffffffff8000d132: 4c 0f 43 f8          	cmovae	r15, rax
ffffffff8000d136: 48 89 e8             	mov	rax, rbp
ffffffff8000d139: 4c 29 f8             	sub	rax, r15
ffffffff8000d13c: 48 83 f8 18          	cmp	rax, 0x18
ffffffff8000d140: 72 29                	jb	0xffffffff8000d16b <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x8b>
ffffffff8000d142: 48 8d 45 08          	lea	rax, [rbp + 0x8]
ffffffff8000d146: 49 8d 57 08          	lea	rdx, [r15 + 0x8]
ffffffff8000d14a: 41 f6 c5 02          	test	r13b, 0x2
ffffffff8000d14e: 0f 84 a5 00 00 00    	je	0xffffffff8000d1f9 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x119>
ffffffff8000d154: 48 8b 75 18          	mov	rsi, qword ptr [rbp + 0x18]
ffffffff8000d158: 48 81 fe 00 01 00 00 	cmp	rsi, 0x100
ffffffff8000d15f: 73 1b                	jae	0xffffffff8000d17c <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x9c>
ffffffff8000d161: 48 8d 4e e8          	lea	rcx, [rsi - 0x18]
ffffffff8000d165: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000d169: eb 54                	jmp	0xffffffff8000d1bf <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xdf>
ffffffff8000d16b: 49 89 ef             	mov	r15, rbp
ffffffff8000d16e: 49 39 df             	cmp	r15, rbx
ffffffff8000d171: 0f 85 48 01 00 00    	jne	0xffffffff8000d2bf <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1df>
ffffffff8000d177: e9 46 01 00 00       	jmp	0xffffffff8000d2c2 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1e2>
ffffffff8000d17c: 48 81 fe 00 02 00 00 	cmp	rsi, 0x200
ffffffff8000d183: 73 0d                	jae	0xffffffff8000d192 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xb2>
ffffffff8000d185: 48 89 f1             	mov	rcx, rsi
ffffffff8000d188: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000d18c: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000d190: eb 2d                	jmp	0xffffffff8000d1bf <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xdf>
ffffffff8000d192: 48 0f bd fe          	bsr	rdi, rsi
ffffffff8000d196: 48 83 f7 3f          	xor	rdi, 0x3f
ffffffff8000d19a: b1 3d                	mov	cl, 0x3d
ffffffff8000d19c: 40 28 f9             	sub	cl, dil
ffffffff8000d19f: 49 89 f0             	mov	r8, rsi
ffffffff8000d1a2: 49 d3 e8             	shr	r8, cl
ffffffff8000d1a5: c1 e7 02             	shl	edi, 0x2
ffffffff8000d1a8: 49 29 f8             	sub	r8, rdi
ffffffff8000d1ab: 49 81 c0 01 01 00 00 	add	r8, 0x101
ffffffff8000d1b2: 49 83 f8 7f          	cmp	r8, 0x7f
ffffffff8000d1b6: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000d1bb: 49 0f 42 c8          	cmovb	rcx, r8
ffffffff8000d1bf: 48 8b 7d 08          	mov	rdi, qword ptr [rbp + 0x8]
ffffffff8000d1c3: 4c 8b 45 10          	mov	r8, qword ptr [rbp + 0x10]
ffffffff8000d1c7: 49 89 38             	mov	qword ptr [r8], rdi
ffffffff8000d1ca: 48 85 ff             	test	rdi, rdi
ffffffff8000d1cd: 74 04                	je	0xffffffff8000d1d3 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xf3>
ffffffff8000d1cf: 4c 89 47 08          	mov	qword ptr [rdi + 0x8], r8
ffffffff8000d1d3: 49 8b 7e 20          	mov	rdi, qword ptr [r14 + 0x20]
ffffffff8000d1d7: 48 83 3c cf 00       	cmp	qword ptr [rdi + 8*rcx], 0x0
ffffffff8000d1dc: 75 18                	jne	0xffffffff8000d1f6 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x116>
ffffffff8000d1de: 31 ff                	xor	edi, edi
ffffffff8000d1e0: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000d1e4: 40 0f 93 c7          	setae	dil
ffffffff8000d1e8: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8000d1ee: 49 d3 e0             	shl	r8, cl
ffffffff8000d1f1: 4d 31 44 fe 10       	xor	qword ptr [r14 + 8*rdi + 0x10], r8
ffffffff8000d1f6: 48 01 f0             	add	rax, rsi
ffffffff8000d1f9: 48 89 c6             	mov	rsi, rax
ffffffff8000d1fc: 48 29 d6             	sub	rsi, rdx
ffffffff8000d1ff: 48 81 fe 00 01 00 00 	cmp	rsi, 0x100
ffffffff8000d206: 73 0a                	jae	0xffffffff8000d212 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x132>
ffffffff8000d208: 48 8d 4e e8          	lea	rcx, [rsi - 0x18]
ffffffff8000d20c: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8000d210: eb 43                	jmp	0xffffffff8000d255 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x175>
ffffffff8000d212: 48 81 fe 00 02 00 00 	cmp	rsi, 0x200
ffffffff8000d219: 73 0d                	jae	0xffffffff8000d228 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x148>
ffffffff8000d21b: 48 89 f1             	mov	rcx, rsi
ffffffff8000d21e: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8000d222: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8000d226: eb 2d                	jmp	0xffffffff8000d255 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x175>
ffffffff8000d228: 48 0f bd fe          	bsr	rdi, rsi
ffffffff8000d22c: 48 83 f7 3f          	xor	rdi, 0x3f
ffffffff8000d230: b1 3d                	mov	cl, 0x3d
ffffffff8000d232: 40 28 f9             	sub	cl, dil
ffffffff8000d235: 49 89 f0             	mov	r8, rsi
ffffffff8000d238: 49 d3 e8             	shr	r8, cl
ffffffff8000d23b: c1 e7 02             	shl	edi, 0x2
ffffffff8000d23e: 49 29 f8             	sub	r8, rdi
ffffffff8000d241: 49 81 c0 01 01 00 00 	add	r8, 0x101
ffffffff8000d248: 49 83 f8 7f          	cmp	r8, 0x7f
ffffffff8000d24c: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8000d251: 49 0f 42 c8          	cmovb	rcx, r8
ffffffff8000d255: 4d 8b 46 20          	mov	r8, qword ptr [r14 + 0x20]
ffffffff8000d259: 49 8d 3c c8          	lea	rdi, [r8 + 8*rcx]
ffffffff8000d25d: 4d 8b 04 c8          	mov	r8, qword ptr [r8 + 8*rcx]
ffffffff8000d261: 4d 85 c0             	test	r8, r8
ffffffff8000d264: 74 14                	je	0xffffffff8000d27a <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x19a>
ffffffff8000d266: 4d 89 47 08          	mov	qword ptr [r15 + 0x8], r8
ffffffff8000d26a: 49 89 7f 10          	mov	qword ptr [r15 + 0x10], rdi
ffffffff8000d26e: 48 89 17             	mov	qword ptr [rdi], rdx
ffffffff8000d271: 49 83 c0 08          	add	r8, 0x8
ffffffff8000d275: 4c 89 c7             	mov	rdi, r8
ffffffff8000d278: eb 25                	jmp	0xffffffff8000d29f <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1bf>
ffffffff8000d27a: 45 31 c0             	xor	r8d, r8d
ffffffff8000d27d: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8000d281: 41 0f 93 c0          	setae	r8b
ffffffff8000d285: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff8000d28b: 49 d3 e1             	shl	r9, cl
ffffffff8000d28e: 4f 31 4c c6 10       	xor	qword ptr [r14 + 8*r8 + 0x10], r9
ffffffff8000d293: 49 c7 47 08 00 00 00 00      	mov	qword ptr [r15 + 0x8], 0x0
ffffffff8000d29b: 49 89 7f 10          	mov	qword ptr [r15 + 0x10], rdi
ffffffff8000d29f: 48 89 17             	mov	qword ptr [rdi], rdx
ffffffff8000d2a2: 49 89 77 18          	mov	qword ptr [r15 + 0x18], rsi
ffffffff8000d2a6: 48 89 70 f8          	mov	qword ptr [rax - 0x8], rsi
ffffffff8000d2aa: 4c 89 ff             	mov	rdi, r15
ffffffff8000d2ad: 4c 89 e6             	mov	rsi, r12
ffffffff8000d2b0: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8000d2b5: e8 b6 f2 00 00       	call	0xffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000d2ba: 49 39 df             	cmp	r15, rbx
ffffffff8000d2bd: 74 03                	je	0xffffffff8000d2c2 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1e2>
ffffffff8000d2bf: 4c 89 3b             	mov	qword ptr [rbx], r15
ffffffff8000d2c2: 48 83 c4 08          	add	rsp, 0x8
ffffffff8000d2c6: 5b                   	pop	rbx
ffffffff8000d2c7: 41 5c                	pop	r12
ffffffff8000d2c9: 41 5d                	pop	r13
ffffffff8000d2cb: 41 5e                	pop	r14
ffffffff8000d2cd: 41 5f                	pop	r15
ffffffff8000d2cf: 5d                   	pop	rbp
ffffffff8000d2d0: c3                   	ret
ffffffff8000d2d1: cc                   	int3
ffffffff8000d2d2: cc                   	int3
ffffffff8000d2d3: cc                   	int3
ffffffff8000d2d4: cc                   	int3
ffffffff8000d2d5: cc                   	int3
ffffffff8000d2d6: cc                   	int3
ffffffff8000d2d7: cc                   	int3
ffffffff8000d2d8: cc                   	int3
ffffffff8000d2d9: cc                   	int3
ffffffff8000d2da: cc                   	int3
ffffffff8000d2db: cc                   	int3
ffffffff8000d2dc: cc                   	int3
ffffffff8000d2dd: cc                   	int3
ffffffff8000d2de: cc                   	int3
ffffffff8000d2df: cc                   	int3

ffffffff8000d2e0 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.2547803308408773459>:
ffffffff8000d2e0: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8000d2e3: 48 85 c0             	test	rax, rax
ffffffff8000d2e6: 74 19                	je	0xffffffff8000d301 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.2547803308408773459+0x21>
ffffffff8000d2e8: 83 f8 01             	cmp	eax, 0x1
ffffffff8000d2eb: 75 28                	jne	0xffffffff8000d315 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.2547803308408773459+0x35>
ffffffff8000d2ed: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8000d2f2: 48 89 f7             	mov	rdi, rsi
ffffffff8000d2f5: 48 c7 c6 52 3d 02 80 	mov	rsi, -0x7ffdc2ae
ffffffff8000d2fc: e9 2f 17 01 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000d301: ba 15 00 00 00       	mov	edx, 0x15
ffffffff8000d306: 48 89 f7             	mov	rdi, rsi
ffffffff8000d309: 48 c7 c6 3d 3d 02 80 	mov	rsi, -0x7ffdc2c3
ffffffff8000d310: e9 1b 17 01 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000d315: 50                   	push	rax
ffffffff8000d316: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000d31a: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8000d31e: 48 89 e1             	mov	rcx, rsp
ffffffff8000d321: ba 11 00 00 00       	mov	edx, 0x11
ffffffff8000d326: 48 89 f7             	mov	rdi, rsi
ffffffff8000d329: 48 c7 c6 88 3d 02 80 	mov	rsi, -0x7ffdc278
ffffffff8000d330: 49 c7 c0 68 3d 02 80 	mov	r8, -0x7ffdc298
ffffffff8000d337: e8 74 18 01 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000d33c: 59                   	pop	rcx
ffffffff8000d33d: c3                   	ret
ffffffff8000d33e: cc                   	int3
ffffffff8000d33f: cc                   	int3

ffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>:
ffffffff8000d340: 53                   	push	rbx
ffffffff8000d341: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8000d345: 48 89 fb             	mov	rbx, rdi
ffffffff8000d348: b1 01                	mov	cl, 0x1
ffffffff8000d34a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000d350: 31 c0                	xor	eax, eax
ffffffff8000d352: f0                   	lock
ffffffff8000d353: 0f b0 0d de dc 01 00 	cmpxchg	byte ptr [rip + 0x1dcde], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d35a: 75 06                	jne	0xffffffff8000d362 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x22>
ffffffff8000d35c: eb 11                	jmp	0xffffffff8000d36f <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x2f>
ffffffff8000d35e: 66 90                	nop
ffffffff8000d360: f3 90                	pause
ffffffff8000d362: 0f b6 05 cf dc 01 00 	movzx	eax, byte ptr [rip + 0x1dccf] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d369: 84 c0                	test	al, al
ffffffff8000d36b: 75 f3                	jne	0xffffffff8000d360 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x20>
ffffffff8000d36d: eb e1                	jmp	0xffffffff8000d350 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x10>
ffffffff8000d36f: 48 8b 05 ca dc 01 00 	mov	rax, qword ptr [rip + 0x1dcca] # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000d376: ff 24 c5 68 3c 02 80 	jmp	qword ptr [8*rax - 0x7ffdc398]
ffffffff8000d37d: 48 89 df             	mov	rdi, rbx
ffffffff8000d380: 48 c7 c6 48 b0 02 80 	mov	rsi, -0x7ffd4fb8
ffffffff8000d387: e8 d4 84 00 00       	call	0xffffffff80015860 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>
ffffffff8000d38c: eb 20                	jmp	0xffffffff8000d3ae <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x6e>
ffffffff8000d38e: 48 89 df             	mov	rdi, rbx
ffffffff8000d391: 48 c7 c6 48 b0 02 80 	mov	rsi, -0x7ffd4fb8
ffffffff8000d398: e8 13 c3 ff ff       	call	0xffffffff800096b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da>
ffffffff8000d39d: eb 0f                	jmp	0xffffffff8000d3ae <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0+0x6e>
ffffffff8000d39f: 48 89 df             	mov	rdi, rbx
ffffffff8000d3a2: 48 c7 c6 48 b0 02 80 	mov	rsi, -0x7ffd4fb8
ffffffff8000d3a9: e8 92 77 00 00       	call	0xffffffff80014b40 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444>
ffffffff8000d3ae: c6 05 83 dc 01 00 00 	mov	byte ptr [rip + 0x1dc83], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d3b5: 48 89 d8             	mov	rax, rbx
ffffffff8000d3b8: 48 83 c4 30          	add	rsp, 0x30
ffffffff8000d3bc: 5b                   	pop	rbx
ffffffff8000d3bd: c3                   	ret
ffffffff8000d3be: 48 c7 04 24 28 3e 02 80      	mov	qword ptr [rsp], -0x7ffdc1d8
ffffffff8000d3c6: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff8000d3cf: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000d3d8: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff8000d3e1: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000d3ea: 48 89 e7             	mov	rdi, rsp
ffffffff8000d3ed: 48 c7 c6 38 3e 02 80 	mov	rsi, -0x7ffdc1c8
ffffffff8000d3f4: e8 77 3c 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d3f9: cc                   	int3
ffffffff8000d3fa: cc                   	int3
ffffffff8000d3fb: cc                   	int3
ffffffff8000d3fc: cc                   	int3
ffffffff8000d3fd: cc                   	int3
ffffffff8000d3fe: cc                   	int3
ffffffff8000d3ff: cc                   	int3

ffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>:
ffffffff8000d400: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000d404: 48 89 fe             	mov	rsi, rdi
ffffffff8000d407: b1 01                	mov	cl, 0x1
ffffffff8000d409: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff8000d410: 31 c0                	xor	eax, eax
ffffffff8000d412: f0                   	lock
ffffffff8000d413: 0f b0 0d 1e dc 01 00 	cmpxchg	byte ptr [rip + 0x1dc1e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d41a: 75 06                	jne	0xffffffff8000d422 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d+0x22>
ffffffff8000d41c: eb 11                	jmp	0xffffffff8000d42f <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d+0x2f>
ffffffff8000d41e: 66 90                	nop
ffffffff8000d420: f3 90                	pause
ffffffff8000d422: 0f b6 05 0f dc 01 00 	movzx	eax, byte ptr [rip + 0x1dc0f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d429: 84 c0                	test	al, al
ffffffff8000d42b: 75 f3                	jne	0xffffffff8000d420 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d+0x20>
ffffffff8000d42d: eb e1                	jmp	0xffffffff8000d410 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d+0x10>
ffffffff8000d42f: 48 8b 05 0a dc 01 00 	mov	rax, qword ptr [rip + 0x1dc0a] # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000d436: ff 24 c5 88 3c 02 80 	jmp	qword ptr [8*rax - 0x7ffdc378]
ffffffff8000d43d: 48 c7 c7 48 b0 02 80 	mov	rdi, -0x7ffd4fb8
ffffffff8000d444: e8 37 78 00 00       	call	0xffffffff80014c80 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543>
ffffffff8000d449: c6 05 e8 db 01 00 00 	mov	byte ptr [rip + 0x1dbe8], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d450: 48 83 c4 38          	add	rsp, 0x38
ffffffff8000d454: c3                   	ret
ffffffff8000d455: 48 c7 c7 48 b0 02 80 	mov	rdi, -0x7ffd4fb8
ffffffff8000d45c: e8 4f c4 ff ff       	call	0xffffffff800098b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40>
ffffffff8000d461: c6 05 d0 db 01 00 00 	mov	byte ptr [rip + 0x1dbd0], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d468: 48 83 c4 38          	add	rsp, 0x38
ffffffff8000d46c: c3                   	ret
ffffffff8000d46d: 48 c7 c7 48 b0 02 80 	mov	rdi, -0x7ffd4fb8
ffffffff8000d474: e8 b7 86 00 00       	call	0xffffffff80015b30 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>
ffffffff8000d479: 48 c7 44 24 08 28 3e 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc1d8
ffffffff8000d482: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000d48b: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000d494: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000d49d: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000d4a6: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000d4ab: 48 c7 c6 38 3e 02 80 	mov	rsi, -0x7ffdc1c8
ffffffff8000d4b2: e8 b9 3b 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d4b7: cc                   	int3
ffffffff8000d4b8: cc                   	int3
ffffffff8000d4b9: cc                   	int3
ffffffff8000d4ba: cc                   	int3
ffffffff8000d4bb: cc                   	int3
ffffffff8000d4bc: cc                   	int3
ffffffff8000d4bd: cc                   	int3
ffffffff8000d4be: cc                   	int3
ffffffff8000d4bf: cc                   	int3

ffffffff8000d4c0 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518>:
ffffffff8000d4c0: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8000d4c4: b1 01                	mov	cl, 0x1
ffffffff8000d4c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000d4d0: 31 c0                	xor	eax, eax
ffffffff8000d4d2: f0                   	lock
ffffffff8000d4d3: 0f b0 0d 5e db 01 00 	cmpxchg	byte ptr [rip + 0x1db5e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d4da: 75 06                	jne	0xffffffff8000d4e2 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x22>
ffffffff8000d4dc: eb 11                	jmp	0xffffffff8000d4ef <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x2f>
ffffffff8000d4de: 66 90                	nop
ffffffff8000d4e0: f3 90                	pause
ffffffff8000d4e2: 0f b6 05 4f db 01 00 	movzx	eax, byte ptr [rip + 0x1db4f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d4e9: 84 c0                	test	al, al
ffffffff8000d4eb: 75 f3                	jne	0xffffffff8000d4e0 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x20>
ffffffff8000d4ed: eb e1                	jmp	0xffffffff8000d4d0 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x10>
ffffffff8000d4ef: 83 3d 4a db 01 00 02 	cmp	dword ptr [rip + 0x1db4a], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000d4f6: 74 3e                	je	0xffffffff8000d536 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x76>
ffffffff8000d4f8: 48 c7 44 24 08 c0 3d 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdc240
ffffffff8000d501: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000d50a: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000d513: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000d51c: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000d525: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000d52a: 48 c7 c6 f0 3d 02 80 	mov	rsi, -0x7ffdc210
ffffffff8000d531: e8 3a 3b 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d536: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8000d539: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff8000d53c: 48 c1 e8 0c          	shr	rax, 0xc
ffffffff8000d540: 48 8b 35 21 db 01 00 	mov	rsi, qword ptr [rip + 0x1db21] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000d547: 48 39 f0             	cmp	rax, rsi
ffffffff8000d54a: 73 5d                	jae	0xffffffff8000d5a9 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0xe9>
ffffffff8000d54c: 48 8b 0d 0d db 01 00 	mov	rcx, qword ptr [rip + 0x1db0d] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000d553: 0f b7 04 81          	movzx	eax, word ptr [rcx + 4*rax]
ffffffff8000d557: 66 85 c0             	test	ax, ax
ffffffff8000d55a: 74 15                	je	0xffffffff8000d571 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0xb1>
ffffffff8000d55c: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff8000d560: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff8000d563: 48 c1 e8 0c          	shr	rax, 0xc
ffffffff8000d567: 48 39 f0             	cmp	rax, rsi
ffffffff8000d56a: 73 4c                	jae	0xffffffff8000d5b8 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0xf8>
ffffffff8000d56c: 66 f0 ff 0c 81       	lock		dec	word ptr [rcx + 4*rax]
ffffffff8000d571: 48 8b 47 10          	mov	rax, qword ptr [rdi + 0x10]
ffffffff8000d575: 80 38 01             	cmp	byte ptr [rax], 0x1
ffffffff8000d578: 75 23                	jne	0xffffffff8000d59d <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0xdd>
ffffffff8000d57a: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff8000d57e: 48 8b 38             	mov	rdi, qword ptr [rax]
ffffffff8000d581: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff8000d585: 48 8b 35 dc da 01 00 	mov	rsi, qword ptr [rip + 0x1dadc] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000d58c: 48 39 f7             	cmp	rdi, rsi
ffffffff8000d58f: 73 36                	jae	0xffffffff8000d5c7 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518+0x107>
ffffffff8000d591: 48 8b 05 c8 da 01 00 	mov	rax, qword ptr [rip + 0x1dac8] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000d598: 66 f0 ff 04 b8       	lock		inc	word ptr [rax + 4*rdi]
ffffffff8000d59d: c6 05 94 da 01 00 00 	mov	byte ptr [rip + 0x1da94], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d5a4: 48 83 c4 38          	add	rsp, 0x38
ffffffff8000d5a8: c3                   	ret
ffffffff8000d5a9: 48 89 c7             	mov	rdi, rax
ffffffff8000d5ac: 48 c7 c2 78 31 02 80 	mov	rdx, -0x7ffdce88
ffffffff8000d5b3: e8 d9 3b 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000d5b8: 48 89 c7             	mov	rdi, rax
ffffffff8000d5bb: 48 c7 c2 60 31 02 80 	mov	rdx, -0x7ffdcea0
ffffffff8000d5c2: e8 ca 3b 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000d5c7: 48 c7 c2 48 31 02 80 	mov	rdx, -0x7ffdceb8
ffffffff8000d5ce: e8 be 3b 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000d5d3: cc                   	int3
ffffffff8000d5d4: cc                   	int3
ffffffff8000d5d5: cc                   	int3
ffffffff8000d5d6: cc                   	int3
ffffffff8000d5d7: cc                   	int3
ffffffff8000d5d8: cc                   	int3
ffffffff8000d5d9: cc                   	int3
ffffffff8000d5da: cc                   	int3
ffffffff8000d5db: cc                   	int3
ffffffff8000d5dc: cc                   	int3
ffffffff8000d5dd: cc                   	int3
ffffffff8000d5de: cc                   	int3
ffffffff8000d5df: cc                   	int3

ffffffff8000d5e0 <taos::memory::init::h991c0fb9746e9f2b>:
ffffffff8000d5e0: 55                   	push	rbp
ffffffff8000d5e1: 41 57                	push	r15
ffffffff8000d5e3: 41 56                	push	r14
ffffffff8000d5e5: 41 55                	push	r13
ffffffff8000d5e7: 41 54                	push	r12
ffffffff8000d5e9: 53                   	push	rbx
ffffffff8000d5ea: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8000d5ee: 85 ff                	test	edi, edi
ffffffff8000d5f0: 0f 85 f0 02 00 00    	jne	0xffffffff8000d8e6 <taos::memory::init::h991c0fb9746e9f2b+0x306>
ffffffff8000d5f6: 48 c7 c7 70 b1 02 80 	mov	rdi, -0x7ffd4e90
ffffffff8000d5fd: e8 de fd 00 00       	call	0xffffffff8001d3e0 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff8000d602: 48 85 c0             	test	rax, rax
ffffffff8000d605: 0f 84 ea 02 00 00    	je	0xffffffff8000d8f5 <taos::memory::init::h991c0fb9746e9f2b+0x315>
ffffffff8000d60b: 48 89 c3             	mov	rbx, rax
ffffffff8000d60e: 48 c7 c7 a0 b1 02 80 	mov	rdi, -0x7ffd4e60
ffffffff8000d615: e8 c6 fd 00 00       	call	0xffffffff8001d3e0 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff8000d61a: 48 85 c0             	test	rax, rax
ffffffff8000d61d: 0f 84 ea 02 00 00    	je	0xffffffff8000d90d <taos::memory::init::h991c0fb9746e9f2b+0x32d>
ffffffff8000d623: 4c 8b 70 08          	mov	r14, qword ptr [rax + 0x8]
ffffffff8000d627: 4d 89 f7             	mov	r15, r14
ffffffff8000d62a: 4c 2b 78 10          	sub	r15, qword ptr [rax + 0x10]
ffffffff8000d62e: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8000d636: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8000d63f: 4c 03 3d ea ed 02 00 	add	r15, qword ptr [rip + 0x2edea] # 0xffffffff8003c430
ffffffff8000d646: b1 01                	mov	cl, 0x1
ffffffff8000d648: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000d650: 31 c0                	xor	eax, eax
ffffffff8000d652: f0                   	lock
ffffffff8000d653: 0f b0 0d de d9 01 00 	cmpxchg	byte ptr [rip + 0x1d9de], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d65a: 75 06                	jne	0xffffffff8000d662 <taos::memory::init::h991c0fb9746e9f2b+0x82>
ffffffff8000d65c: eb 11                	jmp	0xffffffff8000d66f <taos::memory::init::h991c0fb9746e9f2b+0x8f>
ffffffff8000d65e: 66 90                	nop
ffffffff8000d660: f3 90                	pause
ffffffff8000d662: 0f b6 05 cf d9 01 00 	movzx	eax, byte ptr [rip + 0x1d9cf] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d669: 84 c0                	test	al, al
ffffffff8000d66b: 75 f3                	jne	0xffffffff8000d660 <taos::memory::init::h991c0fb9746e9f2b+0x80>
ffffffff8000d66d: eb e1                	jmp	0xffffffff8000d650 <taos::memory::init::h991c0fb9746e9f2b+0x70>
ffffffff8000d66f: 48 8b 05 ca d9 01 00 	mov	rax, qword ptr [rip + 0x1d9ca] # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000d676: ff 24 c5 a8 3c 02 80 	jmp	qword ptr [8*rax - 0x7ffdc358]
ffffffff8000d67d: 48 8b 0d cc d9 01 00 	mov	rcx, qword ptr [rip + 0x1d9cc] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff8000d684: 48 85 c9             	test	rcx, rcx
ffffffff8000d687: 0f 84 85 00 00 00    	je	0xffffffff8000d712 <taos::memory::init::h991c0fb9746e9f2b+0x132>
ffffffff8000d68d: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8000d691: 48 8b 35 b0 d9 01 00 	mov	rsi, qword ptr [rip + 0x1d9b0] # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff8000d698: b2 01                	mov	dl, 0x1
ffffffff8000d69a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000d6a0: 31 c0                	xor	eax, eax
ffffffff8000d6a2: f0                   	lock
ffffffff8000d6a3: 0f b0 15 56 d9 01 00 	cmpxchg	byte ptr [rip + 0x1d956], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d6aa: 75 06                	jne	0xffffffff8000d6b2 <taos::memory::init::h991c0fb9746e9f2b+0xd2>
ffffffff8000d6ac: eb 51                	jmp	0xffffffff8000d6ff <taos::memory::init::h991c0fb9746e9f2b+0x11f>
ffffffff8000d6ae: 66 90                	nop
ffffffff8000d6b0: f3 90                	pause
ffffffff8000d6b2: 0f b6 05 47 d9 01 00 	movzx	eax, byte ptr [rip + 0x1d947] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d6b9: 84 c0                	test	al, al
ffffffff8000d6bb: 75 f3                	jne	0xffffffff8000d6b0 <taos::memory::init::h991c0fb9746e9f2b+0xd0>
ffffffff8000d6bd: eb e1                	jmp	0xffffffff8000d6a0 <taos::memory::init::h991c0fb9746e9f2b+0xc0>
ffffffff8000d6bf: 48 8b 0d a2 d9 01 00 	mov	rcx, qword ptr [rip + 0x1d9a2] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000d6c6: 48 85 c9             	test	rcx, rcx
ffffffff8000d6c9: 0f 84 a3 00 00 00    	je	0xffffffff8000d772 <taos::memory::init::h991c0fb9746e9f2b+0x192>
ffffffff8000d6cf: 48 c1 e1 02          	shl	rcx, 0x2
ffffffff8000d6d3: 48 8b 35 86 d9 01 00 	mov	rsi, qword ptr [rip + 0x1d986] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000d6da: b2 01                	mov	dl, 0x1
ffffffff8000d6dc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000d6e0: 31 c0                	xor	eax, eax
ffffffff8000d6e2: f0                   	lock
ffffffff8000d6e3: 0f b0 15 16 d9 01 00 	cmpxchg	byte ptr [rip + 0x1d916], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d6ea: 75 06                	jne	0xffffffff8000d6f2 <taos::memory::init::h991c0fb9746e9f2b+0x112>
ffffffff8000d6ec: eb 71                	jmp	0xffffffff8000d75f <taos::memory::init::h991c0fb9746e9f2b+0x17f>
ffffffff8000d6ee: 66 90                	nop
ffffffff8000d6f0: f3 90                	pause
ffffffff8000d6f2: 0f b6 05 07 d9 01 00 	movzx	eax, byte ptr [rip + 0x1d907] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d6f9: 84 c0                	test	al, al
ffffffff8000d6fb: 75 f3                	jne	0xffffffff8000d6f0 <taos::memory::init::h991c0fb9746e9f2b+0x110>
ffffffff8000d6fd: eb e1                	jmp	0xffffffff8000d6e0 <taos::memory::init::h991c0fb9746e9f2b+0x100>
ffffffff8000d6ff: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000d706: e8 e5 f0 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000d70b: c6 05 ee d8 01 00 00 	mov	byte ptr [rip + 0x1d8ee], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d712: 48 8b 0d 47 d9 01 00 	mov	rcx, qword ptr [rip + 0x1d947] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000d719: 48 85 c9             	test	rcx, rcx
ffffffff8000d71c: 0f 84 40 01 00 00    	je	0xffffffff8000d862 <taos::memory::init::h991c0fb9746e9f2b+0x282>
ffffffff8000d722: 48 01 c9             	add	rcx, rcx
ffffffff8000d725: 48 8b 35 2c d9 01 00 	mov	rsi, qword ptr [rip + 0x1d92c] # 0xffffffff8002b058 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x20>
ffffffff8000d72c: b2 01                	mov	dl, 0x1
ffffffff8000d72e: 66 90                	nop
ffffffff8000d730: 31 c0                	xor	eax, eax
ffffffff8000d732: f0                   	lock
ffffffff8000d733: 0f b0 15 c6 d8 01 00 	cmpxchg	byte ptr [rip + 0x1d8c6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d73a: 75 16                	jne	0xffffffff8000d752 <taos::memory::init::h991c0fb9746e9f2b+0x172>
ffffffff8000d73c: e9 0e 01 00 00       	jmp	0xffffffff8000d84f <taos::memory::init::h991c0fb9746e9f2b+0x26f>
ffffffff8000d741: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000d750: f3 90                	pause
ffffffff8000d752: 0f b6 05 a7 d8 01 00 	movzx	eax, byte ptr [rip + 0x1d8a7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d759: 84 c0                	test	al, al
ffffffff8000d75b: 75 f3                	jne	0xffffffff8000d750 <taos::memory::init::h991c0fb9746e9f2b+0x170>
ffffffff8000d75d: eb d1                	jmp	0xffffffff8000d730 <taos::memory::init::h991c0fb9746e9f2b+0x150>
ffffffff8000d75f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000d766: e8 85 f0 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000d76b: c6 05 8e d8 01 00 00 	mov	byte ptr [rip + 0x1d88e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d772: 48 89 5c 24 10       	mov	qword ptr [rsp + 0x10], rbx
ffffffff8000d777: 4c 8b 25 da d8 01 00 	mov	r12, qword ptr [rip + 0x1d8da] # 0xffffffff8002b058 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x20>
ffffffff8000d77e: 4d 85 e4             	test	r12, r12
ffffffff8000d781: 74 7c                	je	0xffffffff8000d7ff <taos::memory::init::h991c0fb9746e9f2b+0x21f>
ffffffff8000d783: 4c 8b 2d c6 d8 01 00 	mov	r13, qword ptr [rip + 0x1d8c6] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff8000d78a: 40 b5 01             	mov	bpl, 0x1
ffffffff8000d78d: 31 db                	xor	ebx, ebx
ffffffff8000d78f: eb 2e                	jmp	0xffffffff8000d7bf <taos::memory::init::h991c0fb9746e9f2b+0x1df>
ffffffff8000d791: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000d7a0: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8000d7a4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000d7ab: e8 40 f0 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000d7b0: c6 05 49 d8 01 00 00 	mov	byte ptr [rip + 0x1d849], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d7b7: 48 ff c3             	inc	rbx
ffffffff8000d7ba: 4c 39 e3             	cmp	rbx, r12
ffffffff8000d7bd: 74 40                	je	0xffffffff8000d7ff <taos::memory::init::h991c0fb9746e9f2b+0x21f>
ffffffff8000d7bf: 48 8d 04 5b          	lea	rax, [rbx + 2*rbx]
ffffffff8000d7c3: 49 8b 4c c5 00       	mov	rcx, qword ptr [r13 + 8*rax]
ffffffff8000d7c8: 48 85 c9             	test	rcx, rcx
ffffffff8000d7cb: 74 ea                	je	0xffffffff8000d7b7 <taos::memory::init::h991c0fb9746e9f2b+0x1d7>
ffffffff8000d7cd: 48 8d 04 c5 00 00 00 00      	lea	rax, [8*rax]
ffffffff8000d7d5: 4c 01 e8             	add	rax, r13
ffffffff8000d7d8: 48 8b 70 08          	mov	rsi, qword ptr [rax + 0x8]
ffffffff8000d7dc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000d7e0: 31 c0                	xor	eax, eax
ffffffff8000d7e2: f0                   	lock
ffffffff8000d7e3: 40 0f b0 2d 15 d8 01 00      	cmpxchg	byte ptr [rip + 0x1d815], bpl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d7eb: 75 05                	jne	0xffffffff8000d7f2 <taos::memory::init::h991c0fb9746e9f2b+0x212>
ffffffff8000d7ed: eb b1                	jmp	0xffffffff8000d7a0 <taos::memory::init::h991c0fb9746e9f2b+0x1c0>
ffffffff8000d7ef: 90                   	nop
ffffffff8000d7f0: f3 90                	pause
ffffffff8000d7f2: 0f b6 05 07 d8 01 00 	movzx	eax, byte ptr [rip + 0x1d807] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d7f9: 84 c0                	test	al, al
ffffffff8000d7fb: 75 f3                	jne	0xffffffff8000d7f0 <taos::memory::init::h991c0fb9746e9f2b+0x210>
ffffffff8000d7fd: eb e1                	jmp	0xffffffff8000d7e0 <taos::memory::init::h991c0fb9746e9f2b+0x200>
ffffffff8000d7ff: 48 8b 05 42 d8 01 00 	mov	rax, qword ptr [rip + 0x1d842] # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff8000d806: 48 85 c0             	test	rax, rax
ffffffff8000d809: 48 8b 5c 24 10       	mov	rbx, qword ptr [rsp + 0x10]
ffffffff8000d80e: 74 52                	je	0xffffffff8000d862 <taos::memory::init::h991c0fb9746e9f2b+0x282>
ffffffff8000d810: 48 8b 35 39 d8 01 00 	mov	rsi, qword ptr [rip + 0x1d839] # 0xffffffff8002b050 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x18>
ffffffff8000d817: 48 c1 e0 03          	shl	rax, 0x3
ffffffff8000d81b: 48 8d 0c 40          	lea	rcx, [rax + 2*rax]
ffffffff8000d81f: b2 01                	mov	dl, 0x1
ffffffff8000d821: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000d830: 31 c0                	xor	eax, eax
ffffffff8000d832: f0                   	lock
ffffffff8000d833: 0f b0 15 c6 d7 01 00 	cmpxchg	byte ptr [rip + 0x1d7c6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d83a: 75 06                	jne	0xffffffff8000d842 <taos::memory::init::h991c0fb9746e9f2b+0x262>
ffffffff8000d83c: eb 11                	jmp	0xffffffff8000d84f <taos::memory::init::h991c0fb9746e9f2b+0x26f>
ffffffff8000d83e: 66 90                	nop
ffffffff8000d840: f3 90                	pause
ffffffff8000d842: 0f b6 05 b7 d7 01 00 	movzx	eax, byte ptr [rip + 0x1d7b7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d849: 84 c0                	test	al, al
ffffffff8000d84b: 75 f3                	jne	0xffffffff8000d840 <taos::memory::init::h991c0fb9746e9f2b+0x260>
ffffffff8000d84d: eb e1                	jmp	0xffffffff8000d830 <taos::memory::init::h991c0fb9746e9f2b+0x250>
ffffffff8000d84f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000d856: e8 95 ef ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000d85b: c6 05 9e d7 01 00 00 	mov	byte ptr [rip + 0x1d79e], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000d862: 48 c7 05 eb d7 01 00 00 00 00 00     	mov	qword ptr [rip + 0x1d7eb], 0x0 # 0xffffffff8002b058 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x20>
ffffffff8000d86d: 48 c7 05 c8 d7 01 00 00 00 00 00     	mov	qword ptr [rip + 0x1d7c8], 0x0 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000d878: 48 c7 05 c5 d7 01 00 00 00 00 00     	mov	qword ptr [rip + 0x1d7c5], 0x0 # 0xffffffff8002b048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x10>
ffffffff8000d883: 48 89 1d de d7 01 00 	mov	qword ptr [rip + 0x1d7de], rbx # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000d88a: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff8000d88e: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8000d893: 48 89 05 d6 d7 01 00 	mov	qword ptr [rip + 0x1d7d6], rax # 0xffffffff8002b070 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x38>
ffffffff8000d89a: 48 89 0d d7 d7 01 00 	mov	qword ptr [rip + 0x1d7d7], rcx # 0xffffffff8002b078 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x40>
ffffffff8000d8a1: 4c 89 35 d8 d7 01 00 	mov	qword ptr [rip + 0x1d7d8], r14 # 0xffffffff8002b080 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x48>
ffffffff8000d8a8: 4c 89 3d d9 d7 01 00 	mov	qword ptr [rip + 0x1d7d9], r15 # 0xffffffff8002b088 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x50>
ffffffff8000d8af: c6 05 82 d7 01 00 00 	mov	byte ptr [rip + 0x1d782], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000d8b6: b9 80 00 00 c0       	mov	ecx, 0xc0000080
ffffffff8000d8bb: 0f 32                	rdmsr
ffffffff8000d8bd: 89 c6                	mov	esi, eax
ffffffff8000d8bf: 81 e6 01 f5 00 00    	and	esi, 0xf501
ffffffff8000d8c5: 0f 32                	rdmsr
ffffffff8000d8c7: 25 fe 02 ff ff       	and	eax, 0xffff02fe
ffffffff8000d8cc: 01 f0                	add	eax, esi
ffffffff8000d8ce: 05 00 08 00 00       	add	eax, 0x800
ffffffff8000d8d3: 0f 30                	wrmsr
ffffffff8000d8d5: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000d8da: e8 91 b0 ff ff       	call	0xffffffff80008970 <taos::memory::heap::init_heap::hd4797709bd4047f7>
ffffffff8000d8df: 83 7c 24 18 03       	cmp	dword ptr [rsp + 0x18], 0x3
ffffffff8000d8e4: 75 3f                	jne	0xffffffff8000d925 <taos::memory::init::h991c0fb9746e9f2b+0x345>
ffffffff8000d8e6: 48 83 c4 28          	add	rsp, 0x28
ffffffff8000d8ea: 5b                   	pop	rbx
ffffffff8000d8eb: 41 5c                	pop	r12
ffffffff8000d8ed: 41 5d                	pop	r13
ffffffff8000d8ef: 41 5e                	pop	r14
ffffffff8000d8f1: 41 5f                	pop	r15
ffffffff8000d8f3: 5d                   	pop	rbp
ffffffff8000d8f4: c3                   	ret
ffffffff8000d8f5: be 19 00 00 00       	mov	esi, 0x19
ffffffff8000d8fa: 48 c7 c7 c8 7e 02 80 	mov	rdi, -0x7ffd8138
ffffffff8000d901: 48 c7 c2 08 7f 02 80 	mov	rdx, -0x7ffd80f8
ffffffff8000d908: e8 53 3d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000d90d: be 1d 00 00 00       	mov	esi, 0x1d
ffffffff8000d912: 48 c7 c7 20 7f 02 80 	mov	rdi, -0x7ffd80e0
ffffffff8000d919: 48 c7 c2 40 7f 02 80 	mov	rdx, -0x7ffd80c0
ffffffff8000d920: e8 3b 3d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000d925: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8000d92a: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8000d92f: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8000d934: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8000d938: 48 89 e2             	mov	rdx, rsp
ffffffff8000d93b: be 19 00 00 00       	mov	esi, 0x19
ffffffff8000d940: 48 c7 c7 70 3e 02 80 	mov	rdi, -0x7ffdc190
ffffffff8000d947: 48 c7 c1 50 3e 02 80 	mov	rcx, -0x7ffdc1b0
ffffffff8000d94e: 49 c7 c0 a0 3e 02 80 	mov	r8, -0x7ffdc160
ffffffff8000d955: e8 06 32 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000d95a: cc                   	int3
ffffffff8000d95b: cc                   	int3
ffffffff8000d95c: cc                   	int3
ffffffff8000d95d: cc                   	int3
ffffffff8000d95e: cc                   	int3
ffffffff8000d95f: cc                   	int3

ffffffff8000d960 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8>:
ffffffff8000d960: 55                   	push	rbp
ffffffff8000d961: 41 57                	push	r15
ffffffff8000d963: 41 56                	push	r14
ffffffff8000d965: 41 55                	push	r13
ffffffff8000d967: 41 54                	push	r12
ffffffff8000d969: 53                   	push	rbx
ffffffff8000d96a: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff8000d971: 49 89 fe             	mov	r14, rdi
ffffffff8000d974: bd 01 00 00 00       	mov	ebp, 0x1
ffffffff8000d979: f0                   	lock
ffffffff8000d97a: 0f c1 2d af d6 01 00 	xadd	dword ptr [rip + 0x1d6af], ebp # 0xffffffff8002b030 <taos::processes::process::NEXT_PID::h2fc14043a26d336e>
ffffffff8000d981: e8 4a 51 ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8000d986: 0f b6 05 b3 d8 01 00 	movzx	eax, byte ptr [rip + 0x1d8b3] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000d98d: 3c 02                	cmp	al, 0x2
ffffffff8000d98f: 0f 85 c0 04 00 00    	jne	0xffffffff8000de55 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x4f5>
ffffffff8000d995: 48 b9 fc ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffc
ffffffff8000d99f: 48 8b 05 92 d8 01 00 	mov	rax, qword ptr [rip + 0x1d892] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000d9a6: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000d9ab: f0                   	lock
ffffffff8000d9ac: 48 0f c1 70 10       	xadd	qword ptr [rax + 0x10], rsi
ffffffff8000d9b1: 48 39 ce             	cmp	rsi, rcx
ffffffff8000d9b4: 77 28                	ja	0xffffffff8000d9de <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x7e>
ffffffff8000d9b6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000d9c0: 40 f6 c6 03          	test	sil, 0x3
ffffffff8000d9c4: 74 36                	je	0xffffffff8000d9fc <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x9c>
ffffffff8000d9c6: f0                   	lock
ffffffff8000d9c7: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000d9cc: f3 90                	pause
ffffffff8000d9ce: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000d9d3: f0                   	lock
ffffffff8000d9d4: 48 0f c1 70 10       	xadd	qword ptr [rax + 0x10], rsi
ffffffff8000d9d9: 48 39 ce             	cmp	rsi, rcx
ffffffff8000d9dc: 76 e2                	jbe	0xffffffff8000d9c0 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x60>
ffffffff8000d9de: f0                   	lock
ffffffff8000d9df: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000d9e4: be 2c 00 00 00       	mov	esi, 0x2c
ffffffff8000d9e9: 48 c7 c7 b0 7c 02 80 	mov	rdi, -0x7ffd8350
ffffffff8000d9f0: 48 c7 c2 38 7d 02 80 	mov	rdx, -0x7ffd82c8
ffffffff8000d9f7: e8 f4 36 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000d9fc: 48 8b 48 18          	mov	rcx, qword ptr [rax + 0x18]
ffffffff8000da00: 48 85 c9             	test	rcx, rcx
ffffffff8000da03: 0f 84 72 04 00 00    	je	0xffffffff8000de7b <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x51b>
ffffffff8000da09: 48 8b 70 20          	mov	rsi, qword ptr [rax + 0x20]
ffffffff8000da0d: bf ff 00 00 00       	mov	edi, 0xff
ffffffff8000da12: 44 0f b7 89 8e 00 00 00      	movzx	r9d, word ptr [rcx + 0x8e]
ffffffff8000da1a: 45 89 ca             	mov	r10d, r9d
ffffffff8000da1d: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff8000da21: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff8000da28: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000da30: 4d 85 d2             	test	r10, r10
ffffffff8000da33: 74 2b                	je	0xffffffff8000da60 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x100>
ffffffff8000da35: 45 31 db             	xor	r11d, r11d
ffffffff8000da38: 42 39 54 81 64       	cmp	dword ptr [rcx + 4*r8 + 0x64], edx
ffffffff8000da3d: 41 0f 95 c3          	setne	r11b
ffffffff8000da41: 44 0f 47 df          	cmova	r11d, edi
ffffffff8000da45: 49 ff c0             	inc	r8
ffffffff8000da48: 49 83 c2 fc          	add	r10, -0x4
ffffffff8000da4c: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff8000da50: 74 de                	je	0xffffffff8000da30 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0xd0>
ffffffff8000da52: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff8000da56: 45 85 c9             	test	r9d, r9d
ffffffff8000da59: 74 1c                	je	0xffffffff8000da77 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x117>
ffffffff8000da5b: eb 06                	jmp	0xffffffff8000da63 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x103>
ffffffff8000da5d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000da60: 4d 89 c8             	mov	r8, r9
ffffffff8000da63: 48 83 ee 01          	sub	rsi, 0x1
ffffffff8000da67: 0f 82 0e 04 00 00    	jb	0xffffffff8000de7b <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x51b>
ffffffff8000da6d: 4a 8b 8c c1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x90]
ffffffff8000da75: eb 9b                	jmp	0xffffffff8000da12 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0xb2>
ffffffff8000da77: 89 6c 24 0c          	mov	dword ptr [rsp + 0xc], ebp
ffffffff8000da7b: 4a 8b 54 c1 08       	mov	rdx, qword ptr [rcx + 8*r8 + 0x8]
ffffffff8000da80: f0                   	lock
ffffffff8000da81: 48 ff 02             	inc	qword ptr [rdx]
ffffffff8000da84: 0f 8e 09 04 00 00    	jle	0xffffffff8000de93 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x533>
ffffffff8000da8a: 4e 8b 64 c1 08       	mov	r12, qword ptr [rcx + 8*r8 + 0x8]
ffffffff8000da8f: 4c 89 64 24 48       	mov	qword ptr [rsp + 0x48], r12
ffffffff8000da94: f0                   	lock
ffffffff8000da95: 48 83 68 10 04       	sub	qword ptr [rax + 0x10], 0x4
ffffffff8000da9a: 49 8d 74 24 10       	lea	rsi, [r12 + 0x10]
ffffffff8000da9f: 41 8b 84 24 00 01 00 00      	mov	eax, dword ptr [r12 + 0x100]
ffffffff8000daa7: 89 44 24 08          	mov	dword ptr [rsp + 0x8], eax
ffffffff8000daab: 4d 8b 6c 24 28       	mov	r13, qword ptr [r12 + 0x28]
ffffffff8000dab0: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff8000dab5: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff8000dabd: 49 8b 6c 24 38       	mov	rbp, qword ptr [r12 + 0x38]
ffffffff8000dac2: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff8000dac7: 48 c7 c2 20 3f 02 80 	mov	rdx, -0x7ffdc0e0
ffffffff8000dace: e8 ad 6c 00 00       	call	0xffffffff80014780 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff>
ffffffff8000dad3: 49 8b 9c 24 d8 00 00 00      	mov	rbx, qword ptr [r12 + 0xd8]
ffffffff8000dadb: 49 8b 84 24 e0 00 00 00      	mov	rax, qword ptr [r12 + 0xe0]
ffffffff8000dae3: 49 8b 8c 24 f8 00 00 00      	mov	rcx, qword ptr [r12 + 0xf8]
ffffffff8000daeb: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8000daf0: 49 8b 8c 24 f0 00 00 00      	mov	rcx, qword ptr [r12 + 0xf0]
ffffffff8000daf8: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8000dafd: 49 8b 8c 24 e8 00 00 00      	mov	rcx, qword ptr [r12 + 0xe8]
ffffffff8000db05: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8000db0a: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000db0f: 0f b6 05 cb d6 01 00 	movzx	eax, byte ptr [rip + 0x1d6cb] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000db16: b1 01                	mov	cl, 0x1
ffffffff8000db18: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8000db20: 31 c0                	xor	eax, eax
ffffffff8000db22: f0                   	lock
ffffffff8000db23: 0f b0 0d d6 d4 01 00 	cmpxchg	byte ptr [rip + 0x1d4d6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000db2a: 75 06                	jne	0xffffffff8000db32 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x1d2>
ffffffff8000db2c: eb 11                	jmp	0xffffffff8000db3f <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x1df>
ffffffff8000db2e: 66 90                	nop
ffffffff8000db30: f3 90                	pause
ffffffff8000db32: 0f b6 05 c7 d4 01 00 	movzx	eax, byte ptr [rip + 0x1d4c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000db39: 84 c0                	test	al, al
ffffffff8000db3b: 75 f3                	jne	0xffffffff8000db30 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x1d0>
ffffffff8000db3d: eb e1                	jmp	0xffffffff8000db20 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x1c0>
ffffffff8000db3f: be 08 00 00 00       	mov	esi, 0x8
ffffffff8000db44: ba 08 01 00 00       	mov	edx, 0x108
ffffffff8000db49: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000db50: e8 fb ee ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000db55: c6 05 a4 d4 01 00 00 	mov	byte ptr [rip + 0x1d4a4], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000db5c: 48 85 c0             	test	rax, rax
ffffffff8000db5f: 0f 84 30 03 00 00    	je	0xffffffff8000de95 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x535>
ffffffff8000db65: 49 89 c7             	mov	r15, rax
ffffffff8000db68: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000db6f: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff8000db77: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff8000db7c: 48 8b 4c 24 58       	mov	rcx, qword ptr [rsp + 0x58]
ffffffff8000db81: 49 89 47 10          	mov	qword ptr [r15 + 0x10], rax
ffffffff8000db85: 49 89 4f 18          	mov	qword ptr [r15 + 0x18], rcx
ffffffff8000db89: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8000db8e: 49 89 47 20          	mov	qword ptr [r15 + 0x20], rax
ffffffff8000db92: 4d 89 6f 28          	mov	qword ptr [r15 + 0x28], r13
ffffffff8000db96: 48 8b 84 24 80 00 00 00      	mov	rax, qword ptr [rsp + 0x80]
ffffffff8000db9e: 49 89 47 30          	mov	qword ptr [r15 + 0x30], rax
ffffffff8000dba2: 49 89 6f 38          	mov	qword ptr [r15 + 0x38], rbp
ffffffff8000dba6: 49 89 9f d8 00 00 00 	mov	qword ptr [r15 + 0xd8], rbx
ffffffff8000dbad: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8000dbb2: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8000dbb7: 49 89 87 e0 00 00 00 	mov	qword ptr [r15 + 0xe0], rax
ffffffff8000dbbe: 49 89 8f e8 00 00 00 	mov	qword ptr [r15 + 0xe8], rcx
ffffffff8000dbc5: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8000dbca: 49 89 87 f0 00 00 00 	mov	qword ptr [r15 + 0xf0], rax
ffffffff8000dbd1: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff8000dbd6: 49 89 87 f8 00 00 00 	mov	qword ptr [r15 + 0xf8], rax
ffffffff8000dbdd: 8b 44 24 08          	mov	eax, dword ptr [rsp + 0x8]
ffffffff8000dbe1: 41 89 87 00 01 00 00 	mov	dword ptr [r15 + 0x100], eax
ffffffff8000dbe8: 49 c7 47 40 00 00 00 00      	mov	qword ptr [r15 + 0x40], 0x0
ffffffff8000dbf0: 49 8b 46 08          	mov	rax, qword ptr [r14 + 0x8]
ffffffff8000dbf4: 49 89 47 48          	mov	qword ptr [r15 + 0x48], rax
ffffffff8000dbf8: 49 8d 46 10          	lea	rax, [r14 + 0x10]
ffffffff8000dbfc: 49 8b 4e 10          	mov	rcx, qword ptr [r14 + 0x10]
ffffffff8000dc00: 49 89 4f 50          	mov	qword ptr [r15 + 0x50], rcx
ffffffff8000dc04: 49 8b 56 18          	mov	rdx, qword ptr [r14 + 0x18]
ffffffff8000dc08: 49 89 57 58          	mov	qword ptr [r15 + 0x58], rdx
ffffffff8000dc0c: 49 8b 56 20          	mov	rdx, qword ptr [r14 + 0x20]
ffffffff8000dc10: 49 89 57 60          	mov	qword ptr [r15 + 0x60], rdx
ffffffff8000dc14: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff8000dc18: 49 89 57 68          	mov	qword ptr [r15 + 0x68], rdx
ffffffff8000dc1c: 49 8b 56 30          	mov	rdx, qword ptr [r14 + 0x30]
ffffffff8000dc20: 49 89 57 70          	mov	qword ptr [r15 + 0x70], rdx
ffffffff8000dc24: 49 8b 56 38          	mov	rdx, qword ptr [r14 + 0x38]
ffffffff8000dc28: 49 89 57 78          	mov	qword ptr [r15 + 0x78], rdx
ffffffff8000dc2c: 49 8b 56 40          	mov	rdx, qword ptr [r14 + 0x40]
ffffffff8000dc30: 49 89 97 80 00 00 00 	mov	qword ptr [r15 + 0x80], rdx
ffffffff8000dc37: 49 8d 5e 48          	lea	rbx, [r14 + 0x48]
ffffffff8000dc3b: 49 8b 56 48          	mov	rdx, qword ptr [r14 + 0x48]
ffffffff8000dc3f: 49 89 97 88 00 00 00 	mov	qword ptr [r15 + 0x88], rdx
ffffffff8000dc46: 49 8b 76 50          	mov	rsi, qword ptr [r14 + 0x50]
ffffffff8000dc4a: 49 89 b7 90 00 00 00 	mov	qword ptr [r15 + 0x90], rsi
ffffffff8000dc51: 49 8b 76 58          	mov	rsi, qword ptr [r14 + 0x58]
ffffffff8000dc55: 49 89 b7 98 00 00 00 	mov	qword ptr [r15 + 0x98], rsi
ffffffff8000dc5c: 49 8b 76 60          	mov	rsi, qword ptr [r14 + 0x60]
ffffffff8000dc60: 49 89 b7 a0 00 00 00 	mov	qword ptr [r15 + 0xa0], rsi
ffffffff8000dc67: 49 8b 76 68          	mov	rsi, qword ptr [r14 + 0x68]
ffffffff8000dc6b: 49 89 b7 a8 00 00 00 	mov	qword ptr [r15 + 0xa8], rsi
ffffffff8000dc72: 49 8b 76 70          	mov	rsi, qword ptr [r14 + 0x70]
ffffffff8000dc76: 49 89 b7 b0 00 00 00 	mov	qword ptr [r15 + 0xb0], rsi
ffffffff8000dc7d: 49 89 8f c0 00 00 00 	mov	qword ptr [r15 + 0xc0], rcx
ffffffff8000dc84: 49 89 97 c8 00 00 00 	mov	qword ptr [r15 + 0xc8], rdx
ffffffff8000dc8b: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff8000dc8e: 49 89 8f b8 00 00 00 	mov	qword ptr [r15 + 0xb8], rcx
ffffffff8000dc95: 41 c6 87 04 01 00 00 01      	mov	byte ptr [r15 + 0x104], 0x1
ffffffff8000dc9d: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rax
ffffffff8000dca5: 48 c7 84 24 90 00 00 00 70 de 01 80  	mov	qword ptr [rsp + 0x90], -0x7ffe2190
ffffffff8000dcb1: 48 c7 44 24 10 02 00 00 00   	mov	qword ptr [rsp + 0x10], 0x2
ffffffff8000dcba: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8000dcc3: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000dccc: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8000dcd6: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8000dcdb: c6 44 24 40 03       	mov	byte ptr [rsp + 0x40], 0x3
ffffffff8000dce0: 48 c7 44 24 50 48 3f 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffdc0b8
ffffffff8000dce9: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff8000dcf2: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8000dcf7: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8000dcfc: 48 c7 44 24 78 01 00 00 00   	mov	qword ptr [rsp + 0x78], 0x1
ffffffff8000dd05: 48 8d 84 24 88 00 00 00      	lea	rax, [rsp + 0x88]
ffffffff8000dd0d: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8000dd12: 48 c7 44 24 68 01 00 00 00   	mov	qword ptr [rsp + 0x68], 0x1
ffffffff8000dd1b: 4c 8d 74 24 50       	lea	r14, [rsp + 0x50]
ffffffff8000dd20: 4c 89 f7             	mov	rdi, r14
ffffffff8000dd23: e8 e8 a5 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000dd28: 48 89 5c 24 50       	mov	qword ptr [rsp + 0x50], rbx
ffffffff8000dd2d: 48 c7 44 24 58 10 04 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfbf0
ffffffff8000dd36: 48 c7 44 24 10 78 3f 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdc088
ffffffff8000dd3f: 48 c7 44 24 18 02 00 00 00   	mov	qword ptr [rsp + 0x18], 0x2
ffffffff8000dd48: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000dd51: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff8000dd56: 48 c7 44 24 28 01 00 00 00   	mov	qword ptr [rsp + 0x28], 0x1
ffffffff8000dd5f: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000dd64: e8 a7 a5 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000dd69: 49 8b bc 24 d0 00 00 00      	mov	rdi, qword ptr [r12 + 0xd0]
ffffffff8000dd71: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000dd76: e8 35 01 00 00       	call	0xffffffff8000deb0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778>
ffffffff8000dd7b: 49 89 87 d0 00 00 00 	mov	qword ptr [r15 + 0xd0], rax
ffffffff8000dd82: 0f b6 05 b7 d4 01 00 	movzx	eax, byte ptr [rip + 0x1d4b7] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8000dd89: 3c 02                	cmp	al, 0x2
ffffffff8000dd8b: 0f 85 d9 00 00 00    	jne	0xffffffff8000de6a <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x50a>
ffffffff8000dd91: 48 8b 1d a0 d4 01 00 	mov	rbx, qword ptr [rip + 0x1d4a0] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8000dd98: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8000dd9d: 31 c0                	xor	eax, eax
ffffffff8000dd9f: f0                   	lock
ffffffff8000dda0: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000dda5: 8b 6c 24 0c          	mov	ebp, dword ptr [rsp + 0xc]
ffffffff8000dda9: 74 11                	je	0xffffffff8000ddbc <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x45c>
ffffffff8000ddab: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8000ddb0: f3 90                	pause
ffffffff8000ddb2: 31 c0                	xor	eax, eax
ffffffff8000ddb4: f0                   	lock
ffffffff8000ddb5: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8000ddba: 75 f4                	jne	0xffffffff8000ddb0 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x450>
ffffffff8000ddbc: 48 8d 7b 18          	lea	rdi, [rbx + 0x18]
ffffffff8000ddc0: 89 ee                	mov	esi, ebp
ffffffff8000ddc2: 4c 89 fa             	mov	rdx, r15
ffffffff8000ddc5: e8 66 40 00 00       	call	0xffffffff80011e30 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b>
ffffffff8000ddca: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000ddcf: 48 85 c0             	test	rax, rax
ffffffff8000ddd2: 74 10                	je	0xffffffff8000dde4 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x484>
ffffffff8000ddd4: f0                   	lock
ffffffff8000ddd5: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000ddd8: 75 0a                	jne	0xffffffff8000dde4 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x484>
ffffffff8000ddda: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000dddf: e8 7c 4d 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000dde4: f0                   	lock
ffffffff8000dde5: 48 83 63 10 fc       	and	qword ptr [rbx + 0x10], -0x4
ffffffff8000ddea: c7 44 24 50 01 00 00 00      	mov	dword ptr [rsp + 0x50], 0x1
ffffffff8000ddf2: 89 6c 24 10          	mov	dword ptr [rsp + 0x10], ebp
ffffffff8000ddf6: 9c                   	pushfq
ffffffff8000ddf7: 58                   	pop	rax
ffffffff8000ddf8: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000ddfd: 75 1c                	jne	0xffffffff8000de1b <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x4bb>
ffffffff8000ddff: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff8000de04: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff8000de09: e8 12 3c ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000de0e: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8000de13: f0                   	lock
ffffffff8000de14: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000de17: 74 1e                	je	0xffffffff8000de37 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x4d7>
ffffffff8000de19: eb 26                	jmp	0xffffffff8000de41 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x4e1>
ffffffff8000de1b: fa                   	cli
ffffffff8000de1c: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff8000de21: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff8000de26: e8 f5 3b ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000de2b: fb                   	sti
ffffffff8000de2c: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8000de31: f0                   	lock
ffffffff8000de32: 48 ff 08             	dec	qword ptr [rax]
ffffffff8000de35: 75 0a                	jne	0xffffffff8000de41 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x4e1>
ffffffff8000de37: 48 8d 7c 24 48       	lea	rdi, [rsp + 0x48]
ffffffff8000de3c: e8 1f 4d 00 00       	call	0xffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000de41: 89 e8                	mov	eax, ebp
ffffffff8000de43: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8000de4a: 5b                   	pop	rbx
ffffffff8000de4b: 41 5c                	pop	r12
ffffffff8000de4d: 41 5d                	pop	r13
ffffffff8000de4f: 41 5e                	pop	r14
ffffffff8000de51: 41 5f                	pop	r15
ffffffff8000de53: 5d                   	pop	rbp
ffffffff8000de54: c3                   	ret
ffffffff8000de55: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000de5c: 89 d3                	mov	ebx, edx
ffffffff8000de5e: e8 9d 15 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000de63: 89 da                	mov	edx, ebx
ffffffff8000de65: e9 2b fb ff ff       	jmp	0xffffffff8000d995 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x35>
ffffffff8000de6a: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8000de71: e8 8a 15 00 00       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8000de76: e9 16 ff ff ff       	jmp	0xffffffff8000dd91 <taos::syscalls::fork::sys_fork::h49fe886c25a410f8+0x431>
ffffffff8000de7b: be 1f 00 00 00       	mov	esi, 0x1f
ffffffff8000de80: 48 c7 c7 b8 3e 02 80 	mov	rdi, -0x7ffdc148
ffffffff8000de87: 48 c7 c2 f0 3e 02 80 	mov	rdx, -0x7ffdc110
ffffffff8000de8e: e8 cd 37 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000de93: 0f 0b                	ud2
ffffffff8000de95: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000de9a: be 08 01 00 00       	mov	esi, 0x108
ffffffff8000de9f: e8 0e fd 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000dea4: cc                   	int3
ffffffff8000dea5: cc                   	int3
ffffffff8000dea6: cc                   	int3
ffffffff8000dea7: cc                   	int3
ffffffff8000dea8: cc                   	int3
ffffffff8000dea9: cc                   	int3
ffffffff8000deaa: cc                   	int3
ffffffff8000deab: cc                   	int3
ffffffff8000deac: cc                   	int3
ffffffff8000dead: cc                   	int3
ffffffff8000deae: cc                   	int3
ffffffff8000deaf: cc                   	int3

ffffffff8000deb0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778>:
ffffffff8000deb0: 55                   	push	rbp
ffffffff8000deb1: 41 57                	push	r15
ffffffff8000deb3: 41 56                	push	r14
ffffffff8000deb5: 41 55                	push	r13
ffffffff8000deb7: 41 54                	push	r12
ffffffff8000deb9: 53                   	push	rbx
ffffffff8000deba: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8000debe: 41 89 f4             	mov	r12d, esi
ffffffff8000dec1: 48 89 fb             	mov	rbx, rdi
ffffffff8000dec4: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000dec9: e8 72 f4 ff ff       	call	0xffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>
ffffffff8000dece: f6 44 24 10 01       	test	byte ptr [rsp + 0x10], 0x1
ffffffff8000ded3: 0f 84 cf 03 00 00    	je	0xffffffff8000e2a8 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3f8>
ffffffff8000ded9: 4c 8b 74 24 18       	mov	r14, qword ptr [rsp + 0x18]
ffffffff8000dede: 0f b6 05 c3 d3 01 00 	movzx	eax, byte ptr [rip + 0x1d3c3] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000dee5: 3c 02                	cmp	al, 0x2
ffffffff8000dee7: 0f 85 54 03 00 00    	jne	0xffffffff8000e241 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x391>
ffffffff8000deed: 48 8b 3d ac d3 01 00 	mov	rdi, qword ptr [rip + 0x1d3ac] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000def4: 4c 01 f7             	add	rdi, r14
ffffffff8000def7: ba 00 10 00 00       	mov	edx, 0x1000
ffffffff8000defc: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff8000df01: 31 f6                	xor	esi, esi
ffffffff8000df03: ff 15 37 e5 02 00    	call	qword ptr [rip + 0x2e537] # 0xffffffff8003c440
ffffffff8000df09: 0f b6 05 98 d3 01 00 	movzx	eax, byte ptr [rip + 0x1d398] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8000df10: 3c 02                	cmp	al, 0x2
ffffffff8000df12: 0f 85 3a 03 00 00    	jne	0xffffffff8000e252 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3a2>
ffffffff8000df18: 48 03 1d 81 d3 01 00 	add	rbx, qword ptr [rip + 0x1d381] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8000df1f: 41 8d 44 24 fe       	lea	eax, [r12 - 0x2]
ffffffff8000df24: 3c 02                	cmp	al, 0x2
ffffffff8000df26: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff8000df2b: 77 27                	ja	0xffffffff8000df54 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0xa4>
ffffffff8000df2d: 41 8d 44 24 ff       	lea	eax, [r12 - 0x1]
ffffffff8000df32: 41 80 fc 04          	cmp	r12b, 0x4
ffffffff8000df36: 0f 85 63 01 00 00    	jne	0xffffffff8000e09f <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x1ef>
ffffffff8000df3c: 49 bf ff 0f 00 00 00 00 f0 ff	movabs	r15, -0xffffffffff001
ffffffff8000df46: 41 b4 01             	mov	r12b, 0x1
ffffffff8000df49: 0f b6 e8             	movzx	ebp, al
ffffffff8000df4c: 45 31 ed             	xor	r13d, r13d
ffffffff8000df4f: e9 ec 01 00 00       	jmp	0xffffffff8000e140 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x290>
ffffffff8000df54: 41 80 fc 01          	cmp	r12b, 0x1
ffffffff8000df58: 0f 85 05 03 00 00    	jne	0xffffffff8000e263 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3b3>
ffffffff8000df5e: b1 01                	mov	cl, 0x1
ffffffff8000df60: 48 ba ff ff ff ff ff 00 00 00	movabs	rdx, 0xffffffffff
ffffffff8000df6a: 49 b8 00 f0 ff ff ff ff 0f 00	movabs	r8, 0xffffffffff000
ffffffff8000df74: 49 b9 ff 0f 00 00 00 00 f0 ff	movabs	r9, -0xffffffffff001
ffffffff8000df7e: 45 31 d2             	xor	r10d, r10d
ffffffff8000df81: eb 40                	jmp	0xffffffff8000dfc3 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x113>
ffffffff8000df83: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000df90: 48 8b 35 d1 d0 01 00 	mov	rsi, qword ptr [rip + 0x1d0d1] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000df97: 48 39 f7             	cmp	rdi, rsi
ffffffff8000df9a: 0f 83 57 02 00 00    	jae	0xffffffff8000e1f7 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x347>
ffffffff8000dfa0: 48 8b 05 b9 d0 01 00 	mov	rax, qword ptr [rip + 0x1d0b9] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000dfa7: 66 f0 ff 04 b8       	lock		inc	word ptr [rax + 4*rdi]
ffffffff8000dfac: c6 05 85 d0 01 00 00 	mov	byte ptr [rip + 0x1d085], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000dfb3: 49 ff c2             	inc	r10
ffffffff8000dfb6: 49 81 fa 00 02 00 00 	cmp	r10, 0x200
ffffffff8000dfbd: 0f 84 d1 02 00 00    	je	0xffffffff8000e294 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3e4>
ffffffff8000dfc3: 4a 8b 04 d3          	mov	rax, qword ptr [rbx + 8*r10]
ffffffff8000dfc7: 48 85 c0             	test	rax, rax
ffffffff8000dfca: 74 e7                	je	0xffffffff8000dfb3 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x103>
ffffffff8000dfcc: 41 80 fc 04          	cmp	r12b, 0x4
ffffffff8000dfd0: 40 0f 94 c6          	sete	sil
ffffffff8000dfd4: 49 81 fa 00 01 00 00 	cmp	r10, 0x100
ffffffff8000dfdb: 40 0f 93 c7          	setae	dil
ffffffff8000dfdf: 40 84 fe             	test	sil, dil
ffffffff8000dfe2: 74 2c                	je	0xffffffff8000e010 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x160>
ffffffff8000dfe4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8000dff0: 31 c0                	xor	eax, eax
ffffffff8000dff2: f0                   	lock
ffffffff8000dff3: 0f b0 0d 3e d0 01 00 	cmpxchg	byte ptr [rip + 0x1d03e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000dffa: 75 06                	jne	0xffffffff8000e002 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x152>
ffffffff8000dffc: eb 52                	jmp	0xffffffff8000e050 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x1a0>
ffffffff8000dffe: 66 90                	nop
ffffffff8000e000: f3 90                	pause
ffffffff8000e002: 0f b6 05 2f d0 01 00 	movzx	eax, byte ptr [rip + 0x1d02f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e009: 84 c0                	test	al, al
ffffffff8000e00b: 75 f3                	jne	0xffffffff8000e000 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x150>
ffffffff8000e00d: eb e1                	jmp	0xffffffff8000dff0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x140>
ffffffff8000e00f: 90                   	nop
ffffffff8000e010: a8 01                	test	al, 0x1
ffffffff8000e012: 74 9f                	je	0xffffffff8000dfb3 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x103>
ffffffff8000e014: 48 89 c7             	mov	rdi, rax
ffffffff8000e017: 4c 21 cf             	and	rdi, r9
ffffffff8000e01a: 89 c6                	mov	esi, eax
ffffffff8000e01c: 83 e6 02             	and	esi, 0x2
ffffffff8000e01f: c1 e6 08             	shl	esi, 0x8
ffffffff8000e022: 48 09 fe             	or	rsi, rdi
ffffffff8000e025: 4c 21 c0             	and	rax, r8
ffffffff8000e028: 48 09 f0             	or	rax, rsi
ffffffff8000e02b: 4a 89 04 d3          	mov	qword ptr [rbx + 8*r10], rax
ffffffff8000e02f: 90                   	nop
ffffffff8000e030: 31 c0                	xor	eax, eax
ffffffff8000e032: f0                   	lock
ffffffff8000e033: 0f b0 0d fe cf 01 00 	cmpxchg	byte ptr [rip + 0x1cffe], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e03a: 75 06                	jne	0xffffffff8000e042 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x192>
ffffffff8000e03c: eb 38                	jmp	0xffffffff8000e076 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x1c6>
ffffffff8000e03e: 66 90                	nop
ffffffff8000e040: f3 90                	pause
ffffffff8000e042: 0f b6 05 ef cf 01 00 	movzx	eax, byte ptr [rip + 0x1cfef] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e049: 84 c0                	test	al, al
ffffffff8000e04b: 75 f3                	jne	0xffffffff8000e040 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x190>
ffffffff8000e04d: eb e1                	jmp	0xffffffff8000e030 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x180>
ffffffff8000e04f: 90                   	nop
ffffffff8000e050: 83 3d e9 cf 01 00 02 	cmp	dword ptr [rip + 0x1cfe9], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000e057: 0f 85 a6 01 00 00    	jne	0xffffffff8000e203 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x353>
ffffffff8000e05d: 4a 8b 3c d3          	mov	rdi, qword ptr [rbx + 8*r10]
ffffffff8000e061: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000e066: 4a 89 3c d0          	mov	qword ptr [rax + 8*r10], rdi
ffffffff8000e06a: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff8000e06e: 48 21 d7             	and	rdi, rdx
ffffffff8000e071: e9 1a ff ff ff       	jmp	0xffffffff8000df90 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0xe0>
ffffffff8000e076: 83 3d c3 cf 01 00 02 	cmp	dword ptr [rip + 0x1cfc3], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000e07d: 0f 85 80 01 00 00    	jne	0xffffffff8000e203 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x353>
ffffffff8000e083: 4a 8b 3c d3          	mov	rdi, qword ptr [rbx + 8*r10]
ffffffff8000e087: 4c 21 c7             	and	rdi, r8
ffffffff8000e08a: 48 09 fe             	or	rsi, rdi
ffffffff8000e08d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000e092: 4a 89 34 d0          	mov	qword ptr [rax + 8*r10], rsi
ffffffff8000e096: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff8000e09a: e9 f1 fe ff ff       	jmp	0xffffffff8000df90 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0xe0>
ffffffff8000e09f: 49 bc ff 0f 00 00 00 00 f0 ff	movabs	r12, -0xffffffffff001
ffffffff8000e0a9: 49 bd 00 f0 ff ff ff ff 0f 00	movabs	r13, 0xffffffffff000
ffffffff8000e0b3: 45 31 f6             	xor	r14d, r14d
ffffffff8000e0b6: 0f b6 e8             	movzx	ebp, al
ffffffff8000e0b9: eb 24                	jmp	0xffffffff8000e0df <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x22f>
ffffffff8000e0bb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8000e0c0: 4d 21 e7             	and	r15, r12
ffffffff8000e0c3: 4c 09 f8             	or	rax, r15
ffffffff8000e0c6: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8000e0cb: 4a 89 04 f1          	mov	qword ptr [rcx + 8*r14], rax
ffffffff8000e0cf: 49 ff c6             	inc	r14
ffffffff8000e0d2: 49 81 fe 00 02 00 00 	cmp	r14, 0x200
ffffffff8000e0d9: 0f 84 b5 01 00 00    	je	0xffffffff8000e294 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3e4>
ffffffff8000e0df: 4e 8b 3c f3          	mov	r15, qword ptr [rbx + 8*r14]
ffffffff8000e0e3: 4d 85 ff             	test	r15, r15
ffffffff8000e0e6: 74 e7                	je	0xffffffff8000e0cf <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x21f>
ffffffff8000e0e8: 4c 89 ff             	mov	rdi, r15
ffffffff8000e0eb: 4c 21 ef             	and	rdi, r13
ffffffff8000e0ee: 89 ee                	mov	esi, ebp
ffffffff8000e0f0: e8 bb fd ff ff       	call	0xffffffff8000deb0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778>
ffffffff8000e0f5: a9 ff 0f 00 00       	test	eax, 0xfff
ffffffff8000e0fa: 74 c4                	je	0xffffffff8000e0c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x210>
ffffffff8000e0fc: be 31 00 00 00       	mov	esi, 0x31
ffffffff8000e101: 48 c7 c7 38 40 02 80 	mov	rdi, -0x7ffdbfc8
ffffffff8000e108: 48 c7 c2 70 40 02 80 	mov	rdx, -0x7ffdbf90
ffffffff8000e10f: e8 dc 2f 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e114: 48 8b 05 45 cf 01 00 	mov	rax, qword ptr [rip + 0x1cf45] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff8000e11b: 66 f0 ff 04 b8       	lock		inc	word ptr [rax + 4*rdi]
ffffffff8000e120: c6 05 11 cf 01 00 00 	mov	byte ptr [rip + 0x1cf11], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e127: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8000e130: 49 ff c5             	inc	r13
ffffffff8000e133: 49 81 fd 00 02 00 00 	cmp	r13, 0x200
ffffffff8000e13a: 0f 84 54 01 00 00    	je	0xffffffff8000e294 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3e4>
ffffffff8000e140: 4e 8b 34 eb          	mov	r14, qword ptr [rbx + 8*r13]
ffffffff8000e144: 4d 85 f6             	test	r14, r14
ffffffff8000e147: 74 e7                	je	0xffffffff8000e130 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x280>
ffffffff8000e149: 49 81 fd ff 00 00 00 	cmp	r13, 0xff
ffffffff8000e150: 76 2e                	jbe	0xffffffff8000e180 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x2d0>
ffffffff8000e152: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000e160: 31 c0                	xor	eax, eax
ffffffff8000e162: f0                   	lock
ffffffff8000e163: 44 0f b0 25 cd ce 01 00      	cmpxchg	byte ptr [rip + 0x1cecd], r12b # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e16b: 75 05                	jne	0xffffffff8000e172 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x2c2>
ffffffff8000e16d: eb 51                	jmp	0xffffffff8000e1c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x310>
ffffffff8000e16f: 90                   	nop
ffffffff8000e170: f3 90                	pause
ffffffff8000e172: 0f b6 05 bf ce 01 00 	movzx	eax, byte ptr [rip + 0x1cebf] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8000e179: 84 c0                	test	al, al
ffffffff8000e17b: 75 f3                	jne	0xffffffff8000e170 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x2c0>
ffffffff8000e17d: eb e1                	jmp	0xffffffff8000e160 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x2b0>
ffffffff8000e17f: 90                   	nop
ffffffff8000e180: 4c 89 f7             	mov	rdi, r14
ffffffff8000e183: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff8000e18d: 48 21 c7             	and	rdi, rax
ffffffff8000e190: 89 ee                	mov	esi, ebp
ffffffff8000e192: e8 19 fd ff ff       	call	0xffffffff8000deb0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778>
ffffffff8000e197: a9 ff 0f 00 00       	test	eax, 0xfff
ffffffff8000e19c: 0f 85 5a ff ff ff    	jne	0xffffffff8000e0fc <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x24c>
ffffffff8000e1a2: 4d 21 fe             	and	r14, r15
ffffffff8000e1a5: 4c 09 f0             	or	rax, r14
ffffffff8000e1a8: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8000e1ad: 4a 89 04 e9          	mov	qword ptr [rcx + 8*r13], rax
ffffffff8000e1b1: e9 7a ff ff ff       	jmp	0xffffffff8000e130 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x280>
ffffffff8000e1b6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000e1c0: 83 3d 79 ce 01 00 02 	cmp	dword ptr [rip + 0x1ce79], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff8000e1c7: 75 3a                	jne	0xffffffff8000e203 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x353>
ffffffff8000e1c9: 4a 8b 3c eb          	mov	rdi, qword ptr [rbx + 8*r13]
ffffffff8000e1cd: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000e1d2: 4a 89 3c e8          	mov	qword ptr [rax + 8*r13], rdi
ffffffff8000e1d6: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff8000e1da: 48 b8 ff ff ff ff ff 00 00 00	movabs	rax, 0xffffffffff
ffffffff8000e1e4: 48 21 c7             	and	rdi, rax
ffffffff8000e1e7: 48 8b 35 7a ce 01 00 	mov	rsi, qword ptr [rip + 0x1ce7a] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff8000e1ee: 48 39 f7             	cmp	rdi, rsi
ffffffff8000e1f1: 0f 82 1d ff ff ff    	jb	0xffffffff8000e114 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x264>
ffffffff8000e1f7: 48 c7 c2 48 31 02 80 	mov	rdx, -0x7ffdceb8
ffffffff8000e1fe: e8 8e 2f 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000e203: 48 c7 44 24 10 c0 3d 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdc240
ffffffff8000e20c: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff8000e215: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000e21e: 48 c7 44 24 20 08 00 00 00   	mov	qword ptr [rsp + 0x20], 0x8
ffffffff8000e227: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000e230: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000e235: 48 c7 c6 f0 3d 02 80 	mov	rsi, -0x7ffdc210
ffffffff8000e23c: e8 2f 2e 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000e241: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000e248: e8 c3 10 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000e24d: e9 9b fc ff ff       	jmp	0xffffffff8000deed <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3d>
ffffffff8000e252: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff8000e259: e8 b2 10 00 00       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff8000e25e: e9 b5 fc ff ff       	jmp	0xffffffff8000df18 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x68>
ffffffff8000e263: 48 83 c3 18          	add	rbx, 0x18
ffffffff8000e267: 31 c0                	xor	eax, eax
ffffffff8000e269: 48 83 7c c3 e8 00    	cmp	qword ptr [rbx + 8*rax - 0x18], 0x0
ffffffff8000e26f: 75 4f                	jne	0xffffffff8000e2c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x410>
ffffffff8000e271: 48 83 7c c3 f0 00    	cmp	qword ptr [rbx + 8*rax - 0x10], 0x0
ffffffff8000e277: 75 47                	jne	0xffffffff8000e2c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x410>
ffffffff8000e279: 48 83 7c c3 f8 00    	cmp	qword ptr [rbx + 8*rax - 0x8], 0x0
ffffffff8000e27f: 75 3f                	jne	0xffffffff8000e2c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x410>
ffffffff8000e281: 48 83 3c c3 00       	cmp	qword ptr [rbx + 8*rax], 0x0
ffffffff8000e286: 75 38                	jne	0xffffffff8000e2c0 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x410>
ffffffff8000e288: 48 83 c0 04          	add	rax, 0x4
ffffffff8000e28c: 48 3d 00 02 00 00    	cmp	rax, 0x200
ffffffff8000e292: 75 d5                	jne	0xffffffff8000e269 <taos::syscalls::fork::duplicate_page_table::h6b016cc2fa63f778+0x3b9>
ffffffff8000e294: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8000e299: 48 83 c4 48          	add	rsp, 0x48
ffffffff8000e29d: 5b                   	pop	rbx
ffffffff8000e29e: 41 5c                	pop	r12
ffffffff8000e2a0: 41 5d                	pop	r13
ffffffff8000e2a2: 41 5e                	pop	r14
ffffffff8000e2a4: 41 5f                	pop	r15
ffffffff8000e2a6: 5d                   	pop	rbp
ffffffff8000e2a7: c3                   	ret
ffffffff8000e2a8: be 18 00 00 00       	mov	esi, 0x18
ffffffff8000e2ad: 48 c7 c7 98 3f 02 80 	mov	rdi, -0x7ffdc068
ffffffff8000e2b4: 48 c7 c2 b0 3f 02 80 	mov	rdx, -0x7ffdc050
ffffffff8000e2bb: e8 a0 33 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000e2c0: 48 c7 44 24 10 10 40 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdbff0
ffffffff8000e2c9: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff8000e2d2: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000e2db: 48 89 e0             	mov	rax, rsp
ffffffff8000e2de: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8000e2e3: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000e2ec: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8000e2f1: 48 c7 c6 20 40 02 80 	mov	rsi, -0x7ffdbfe0
ffffffff8000e2f8: e8 73 2d 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000e2fd: cc                   	int3
ffffffff8000e2fe: cc                   	int3
ffffffff8000e2ff: cc                   	int3

ffffffff8000e300 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910>:
ffffffff8000e300: 55                   	push	rbp
ffffffff8000e301: 41 57                	push	r15
ffffffff8000e303: 41 56                	push	r14
ffffffff8000e305: 41 55                	push	r13
ffffffff8000e307: 41 54                	push	r12
ffffffff8000e309: 53                   	push	rbx
ffffffff8000e30a: 48 81 ec d8 00 00 00 	sub	rsp, 0xd8
ffffffff8000e311: 48 89 fb             	mov	rbx, rdi
ffffffff8000e314: b1 01                	mov	cl, 0x1
ffffffff8000e316: 31 c0                	xor	eax, eax
ffffffff8000e318: f0                   	lock
ffffffff8000e319: 0f b0 8f d0 00 00 00 	cmpxchg	byte ptr [rdi + 0xd0], cl
ffffffff8000e320: 0f 85 8a 03 00 00    	jne	0xffffffff8000e6b0 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3b0>
ffffffff8000e326: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff8000e32f: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000e339: 48 8d 88 20 c4 02 80 	lea	rcx, [rax - 0x7ffd3be0]
ffffffff8000e340: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff8000e344: 0f 85 b5 03 00 00    	jne	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e34a: 49 be 00 00 00 00 00 00 01 00	movabs	r14, 0x1000000000000
ffffffff8000e354: 48 b9 00 40 00 00 00 80 00 00	movabs	rcx, 0x800000004000
ffffffff8000e35e: 4c 8d a9 20 c4 02 80 	lea	r13, [rcx - 0x7ffd3be0]
ffffffff8000e365: 4d 39 f5             	cmp	r13, r14
ffffffff8000e368: 0f 83 91 03 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e36e: 48 8d 80 20 44 03 80 	lea	rax, [rax - 0x7ffcbbe0]
ffffffff8000e375: 4c 39 f0             	cmp	rax, r14
ffffffff8000e378: 0f 83 81 03 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e37e: 4c 8d b9 20 44 03 80 	lea	r15, [rcx - 0x7ffcbbe0]
ffffffff8000e385: 4d 39 f7             	cmp	r15, r14
ffffffff8000e388: 0f 83 71 03 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e38e: 48 c7 c0 20 84 03 80 	mov	rax, -0x7ffc7be0
ffffffff8000e395: 48 83 e0 f0          	and	rax, -0x10
ffffffff8000e399: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8000e39e: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8000e3a3: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8000e3a8: 48 c7 44 24 50 10 04 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffdfbf0
ffffffff8000e3b1: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000e3b6: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8000e3bb: 48 c7 44 24 60 40 f5 00 80   	mov	qword ptr [rsp + 0x60], -0x7fff0ac0
ffffffff8000e3c4: 48 c7 44 24 68 02 00 00 00   	mov	qword ptr [rsp + 0x68], 0x2
ffffffff8000e3cd: 48 c7 44 24 78 02 00 00 00   	mov	qword ptr [rsp + 0x78], 0x2
ffffffff8000e3d6: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff8000e3e2: 48 c7 84 24 90 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 0x90], 0x20
ffffffff8000e3ee: c6 84 24 98 00 00 00 03      	mov	byte ptr [rsp + 0x98], 0x3
ffffffff8000e3f6: 48 c7 84 24 a0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa0], 0x2
ffffffff8000e402: 48 c7 84 24 b0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x2
ffffffff8000e40e: 48 c7 84 24 c0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xc0], 0x1
ffffffff8000e41a: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8000e424: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rax
ffffffff8000e42c: c6 84 24 d0 00 00 00 03      	mov	byte ptr [rsp + 0xd0], 0x3
ffffffff8000e434: 48 c7 44 24 18 c0 43 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdbc40
ffffffff8000e43d: 48 c7 44 24 20 03 00 00 00   	mov	qword ptr [rsp + 0x20], 0x3
ffffffff8000e446: 48 8d 44 24 68       	lea	rax, [rsp + 0x68]
ffffffff8000e44b: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8000e450: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff8000e459: 4c 8d 64 24 48       	lea	r12, [rsp + 0x48]
ffffffff8000e45e: 4c 89 64 24 28       	mov	qword ptr [rsp + 0x28], r12
ffffffff8000e463: 48 c7 44 24 30 02 00 00 00   	mov	qword ptr [rsp + 0x30], 0x2
ffffffff8000e46c: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000e471: e8 9a 9e ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000e476: 48 8b 6c 24 08       	mov	rbp, qword ptr [rsp + 0x8]
ffffffff8000e47b: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000e484: 4d 39 f5             	cmp	r13, r14
ffffffff8000e487: 0f 83 72 02 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e48d: 48 b8 00 80 00 00 00 80 00 00	movabs	rax, 0x800000008000
ffffffff8000e497: 48 8d 88 20 c4 02 80 	lea	rcx, [rax - 0x7ffd3be0]
ffffffff8000e49e: 4c 39 f1             	cmp	rcx, r14
ffffffff8000e4a1: 0f 83 58 02 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e4a7: 4d 39 f7             	cmp	r15, r14
ffffffff8000e4aa: 0f 83 4f 02 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e4b0: 48 8d 80 20 44 03 80 	lea	rax, [rax - 0x7ffcbbe0]
ffffffff8000e4b7: 4c 39 f0             	cmp	rax, r14
ffffffff8000e4ba: 0f 83 3f 02 00 00    	jae	0xffffffff8000e6ff <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ff>
ffffffff8000e4c0: 49 c7 c6 20 44 03 80 	mov	r14, -0x7ffcbbe0
ffffffff8000e4c7: 49 83 e6 f0          	and	r14, -0x10
ffffffff8000e4cb: 49 c7 c7 20 04 03 80 	mov	r15, -0x7ffcfbe0
ffffffff8000e4d2: 49 83 e7 f0          	and	r15, -0x10
ffffffff8000e4d6: 48 c7 c0 20 c4 03 80 	mov	rax, -0x7ffc3be0
ffffffff8000e4dd: 48 83 e0 f0          	and	rax, -0x10
ffffffff8000e4e1: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8000e4e6: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8000e4eb: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8000e4f0: 48 c7 44 24 50 10 04 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffdfbf0
ffffffff8000e4f9: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000e4fe: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8000e503: 48 c7 44 24 60 40 f5 00 80   	mov	qword ptr [rsp + 0x60], -0x7fff0ac0
ffffffff8000e50c: 48 c7 44 24 68 02 00 00 00   	mov	qword ptr [rsp + 0x68], 0x2
ffffffff8000e515: 48 c7 44 24 78 02 00 00 00   	mov	qword ptr [rsp + 0x78], 0x2
ffffffff8000e51e: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff8000e52a: 48 c7 84 24 90 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 0x90], 0x20
ffffffff8000e536: c6 84 24 98 00 00 00 03      	mov	byte ptr [rsp + 0x98], 0x3
ffffffff8000e53e: 48 c7 84 24 a0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa0], 0x2
ffffffff8000e54a: 48 c7 84 24 b0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x2
ffffffff8000e556: 48 c7 84 24 c0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xc0], 0x1
ffffffff8000e562: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8000e56c: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rax
ffffffff8000e574: c6 84 24 d0 00 00 00 03      	mov	byte ptr [rsp + 0xd0], 0x3
ffffffff8000e57c: 48 c7 44 24 18 c0 43 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdbc40
ffffffff8000e585: 48 c7 44 24 20 03 00 00 00   	mov	qword ptr [rsp + 0x20], 0x3
ffffffff8000e58e: 48 8d 44 24 68       	lea	rax, [rsp + 0x68]
ffffffff8000e593: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8000e598: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff8000e5a1: 4c 89 64 24 28       	mov	qword ptr [rsp + 0x28], r12
ffffffff8000e5a6: 48 c7 44 24 30 02 00 00 00   	mov	qword ptr [rsp + 0x30], 0x2
ffffffff8000e5af: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000e5b4: e8 57 9d ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000e5b9: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8000e5be: c7 03 00 00 00 00    	mov	dword ptr [rbx], 0x0
ffffffff8000e5c4: 48 89 6b 04          	mov	qword ptr [rbx + 0x4], rbp
ffffffff8000e5c8: 48 c7 43 0c 00 00 00 00      	mov	qword ptr [rbx + 0xc], 0x0
ffffffff8000e5d0: 48 c7 43 14 00 00 00 00      	mov	qword ptr [rbx + 0x14], 0x0
ffffffff8000e5d8: 48 c7 43 1c 00 00 00 00      	mov	qword ptr [rbx + 0x1c], 0x0
ffffffff8000e5e0: 4c 89 7b 24          	mov	qword ptr [rbx + 0x24], r15
ffffffff8000e5e4: 48 c7 43 2c 00 00 00 00      	mov	qword ptr [rbx + 0x2c], 0x0
ffffffff8000e5ec: 48 c7 43 34 00 00 00 00      	mov	qword ptr [rbx + 0x34], 0x0
ffffffff8000e5f4: 48 c7 43 3c 00 00 00 00      	mov	qword ptr [rbx + 0x3c], 0x0
ffffffff8000e5fc: 48 c7 43 44 00 00 00 00      	mov	qword ptr [rbx + 0x44], 0x0
ffffffff8000e604: 48 c7 43 4c 00 00 00 00      	mov	qword ptr [rbx + 0x4c], 0x0
ffffffff8000e60c: 48 c7 43 54 00 00 00 00      	mov	qword ptr [rbx + 0x54], 0x0
ffffffff8000e614: 48 c7 43 5c 00 00 00 00      	mov	qword ptr [rbx + 0x5c], 0x0
ffffffff8000e61c: 48 c7 43 64 00 00 68 00      	mov	qword ptr [rbx + 0x64], 0x680000
ffffffff8000e624: 48 89 43 6c          	mov	qword ptr [rbx + 0x6c], rax
ffffffff8000e628: 48 c7 43 74 00 00 00 00      	mov	qword ptr [rbx + 0x74], 0x0
ffffffff8000e630: 48 c7 43 7c 00 00 00 00      	mov	qword ptr [rbx + 0x7c], 0x0
ffffffff8000e638: 48 c7 83 84 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x84], 0x0
ffffffff8000e643: 4c 89 b3 8c 00 00 00 	mov	qword ptr [rbx + 0x8c], r14
ffffffff8000e64a: 48 c7 83 c4 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xc4], 0x0
ffffffff8000e655: 48 c7 83 bc 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xbc], 0x0
ffffffff8000e660: 48 c7 83 b4 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xb4], 0x0
ffffffff8000e66b: 48 c7 83 ac 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xac], 0x0
ffffffff8000e676: 48 c7 83 a4 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xa4], 0x0
ffffffff8000e681: 48 c7 83 9c 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x9c], 0x0
ffffffff8000e68c: 48 c7 83 94 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x94], 0x0
ffffffff8000e697: c7 83 cc 00 00 00 00 00 68 00	mov	dword ptr [rbx + 0xcc], 0x680000
ffffffff8000e6a1: c6 83 d0 00 00 00 02 	mov	byte ptr [rbx + 0xd0], 0x2
ffffffff8000e6a8: eb 40                	jmp	0xffffffff8000e6ea <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3ea>
ffffffff8000e6aa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000e6b0: 0f b6 c0             	movzx	eax, al
ffffffff8000e6b3: ff 24 c5 88 40 02 80 	jmp	qword ptr [8*rax - 0x7ffdbf78]
ffffffff8000e6ba: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000e6c0: f3 90                	pause
ffffffff8000e6c2: 0f b6 83 d0 00 00 00 	movzx	eax, byte ptr [rbx + 0xd0]
ffffffff8000e6c9: 3c 01                	cmp	al, 0x1
ffffffff8000e6cb: 74 f3                	je	0xffffffff8000e6c0 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3c0>
ffffffff8000e6cd: 0f b6 c0             	movzx	eax, al
ffffffff8000e6d0: 85 c0                	test	eax, eax
ffffffff8000e6d2: 75 11                	jne	0xffffffff8000e6e5 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3e5>
ffffffff8000e6d4: 31 c0                	xor	eax, eax
ffffffff8000e6d6: f0                   	lock
ffffffff8000e6d7: 0f b0 8b d0 00 00 00 	cmpxchg	byte ptr [rbx + 0xd0], cl
ffffffff8000e6de: 75 d0                	jne	0xffffffff8000e6b0 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x3b0>
ffffffff8000e6e0: e9 41 fc ff ff       	jmp	0xffffffff8000e326 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x26>
ffffffff8000e6e5: 83 f8 02             	cmp	eax, 0x2
ffffffff8000e6e8: 75 2d                	jne	0xffffffff8000e717 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910+0x417>
ffffffff8000e6ea: 48 89 d8             	mov	rax, rbx
ffffffff8000e6ed: 48 81 c4 d8 00 00 00 	add	rsp, 0xd8
ffffffff8000e6f4: 5b                   	pop	rbx
ffffffff8000e6f5: 41 5c                	pop	r12
ffffffff8000e6f7: 41 5d                	pop	r13
ffffffff8000e6f9: 41 5e                	pop	r14
ffffffff8000e6fb: 41 5f                	pop	r15
ffffffff8000e6fd: 5d                   	pop	rbp
ffffffff8000e6fe: c3                   	ret
ffffffff8000e6ff: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000e704: 48 c7 c7 f8 42 02 80 	mov	rdi, -0x7ffdbd08
ffffffff8000e70b: 48 c7 c2 90 43 02 80 	mov	rdx, -0x7ffdbc70
ffffffff8000e712: e8 d9 29 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e717: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000e71c: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000e723: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000e72a: e8 c1 29 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e72f: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000e734: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000e73b: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000e742: e8 a9 29 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e747: cc                   	int3
ffffffff8000e748: cc                   	int3
ffffffff8000e749: cc                   	int3
ffffffff8000e74a: cc                   	int3
ffffffff8000e74b: cc                   	int3
ffffffff8000e74c: cc                   	int3
ffffffff8000e74d: cc                   	int3
ffffffff8000e74e: cc                   	int3
ffffffff8000e74f: cc                   	int3

ffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>:
ffffffff8000e750: 53                   	push	rbx
ffffffff8000e751: 48 89 fb             	mov	rbx, rdi
ffffffff8000e754: b1 01                	mov	cl, 0x1
ffffffff8000e756: 31 c0                	xor	eax, eax
ffffffff8000e758: f0                   	lock
ffffffff8000e759: 0f b0 4f 18          	cmpxchg	byte ptr [rdi + 0x18], cl
ffffffff8000e75d: 75 21                	jne	0xffffffff8000e780 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0x30>
ffffffff8000e75f: e8 5c 23 00 00       	call	0xffffffff80010ac0 <taos::memory::paging::init::h00a848d77a170e5f>
ffffffff8000e764: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff8000e76b: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8000e76f: 48 89 53 10          	mov	qword ptr [rbx + 0x10], rdx
ffffffff8000e773: c6 43 18 02          	mov	byte ptr [rbx + 0x18], 0x2
ffffffff8000e777: 48 89 d8             	mov	rax, rbx
ffffffff8000e77a: 5b                   	pop	rbx
ffffffff8000e77b: c3                   	ret
ffffffff8000e77c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8000e780: 0f b6 c0             	movzx	eax, al
ffffffff8000e783: ff 24 c5 a8 40 02 80 	jmp	qword ptr [8*rax - 0x7ffdbf58]
ffffffff8000e78a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000e790: f3 90                	pause
ffffffff8000e792: 0f b6 43 18          	movzx	eax, byte ptr [rbx + 0x18]
ffffffff8000e796: 3c 01                	cmp	al, 0x1
ffffffff8000e798: 74 f6                	je	0xffffffff8000e790 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0x40>
ffffffff8000e79a: 0f b6 c0             	movzx	eax, al
ffffffff8000e79d: 85 c0                	test	eax, eax
ffffffff8000e79f: 75 0b                	jne	0xffffffff8000e7ac <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0x5c>
ffffffff8000e7a1: 31 c0                	xor	eax, eax
ffffffff8000e7a3: f0                   	lock
ffffffff8000e7a4: 0f b0 4b 18          	cmpxchg	byte ptr [rbx + 0x18], cl
ffffffff8000e7a8: 75 d6                	jne	0xffffffff8000e780 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0x30>
ffffffff8000e7aa: eb b3                	jmp	0xffffffff8000e75f <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0xf>
ffffffff8000e7ac: 83 f8 02             	cmp	eax, 0x2
ffffffff8000e7af: 75 05                	jne	0xffffffff8000e7b6 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910+0x66>
ffffffff8000e7b1: 48 89 d8             	mov	rax, rbx
ffffffff8000e7b4: 5b                   	pop	rbx
ffffffff8000e7b5: c3                   	ret
ffffffff8000e7b6: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000e7bb: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000e7c2: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000e7c9: e8 22 29 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e7ce: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000e7d3: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000e7da: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000e7e1: e8 0a 29 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e7e6: cc                   	int3
ffffffff8000e7e7: cc                   	int3
ffffffff8000e7e8: cc                   	int3
ffffffff8000e7e9: cc                   	int3
ffffffff8000e7ea: cc                   	int3
ffffffff8000e7eb: cc                   	int3
ffffffff8000e7ec: cc                   	int3
ffffffff8000e7ed: cc                   	int3
ffffffff8000e7ee: cc                   	int3
ffffffff8000e7ef: cc                   	int3

ffffffff8000e7f0 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910>:
ffffffff8000e7f0: 55                   	push	rbp
ffffffff8000e7f1: 41 57                	push	r15
ffffffff8000e7f3: 41 56                	push	r14
ffffffff8000e7f5: 41 55                	push	r13
ffffffff8000e7f7: 41 54                	push	r12
ffffffff8000e7f9: 53                   	push	rbx
ffffffff8000e7fa: 48 81 ec 00 10 00 00 	sub	rsp, 0x1000
ffffffff8000e801: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8000e809: 48 81 ec 00 10 00 00 	sub	rsp, 0x1000
ffffffff8000e810: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8000e818: 48 81 ec 08 0a 00 00 	sub	rsp, 0xa08
ffffffff8000e81f: 48 89 fb             	mov	rbx, rdi
ffffffff8000e822: b1 01                	mov	cl, 0x1
ffffffff8000e824: 31 c0                	xor	eax, eax
ffffffff8000e826: f0                   	lock
ffffffff8000e827: 0f b0 8f 00 10 00 00 	cmpxchg	byte ptr [rdi + 0x1000], cl
ffffffff8000e82e: 0f 85 cc 06 00 00    	jne	0xffffffff8000ef00 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x710>
ffffffff8000e834: b8 1c 00 00 00       	mov	eax, 0x1c
ffffffff8000e839: 48 b9 00 00 00 00 00 0e 00 00	movabs	rcx, 0xe0000000000
ffffffff8000e843: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000e850: 48 89 4c 04 3c       	mov	qword ptr [rsp + rax + 0x3c], rcx
ffffffff8000e855: 48 c7 44 04 44 00 00 00 00   	mov	qword ptr [rsp + rax + 0x44], 0x0
ffffffff8000e85e: 48 89 4c 04 4c       	mov	qword ptr [rsp + rax + 0x4c], rcx
ffffffff8000e863: 48 c7 44 04 54 00 00 00 00   	mov	qword ptr [rsp + rax + 0x54], 0x0
ffffffff8000e86c: 48 83 c0 20          	add	rax, 0x20
ffffffff8000e870: 48 3d 1c 0e 00 00    	cmp	rax, 0xe1c
ffffffff8000e876: 75 d8                	jne	0xffffffff8000e850 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x60>
ffffffff8000e878: 8b 6c 24 64          	mov	ebp, dword ptr [rsp + 0x64]
ffffffff8000e87c: 48 8d 74 24 74       	lea	rsi, [rsp + 0x74]
ffffffff8000e881: 48 8d bc 24 3c 14 00 00      	lea	rdi, [rsp + 0x143c]
ffffffff8000e889: 4c 8b 3d a0 db 02 00 	mov	r15, qword ptr [rip + 0x2dba0] # 0xffffffff8003c430
ffffffff8000e890: ba e4 05 00 00       	mov	edx, 0x5e4
ffffffff8000e895: 41 ff d7             	call	r15
ffffffff8000e898: 48 8d b4 24 64 06 00 00      	lea	rsi, [rsp + 0x664]
ffffffff8000e8a0: 48 8d bc 24 14 22 00 00      	lea	rdi, [rsp + 0x2214]
ffffffff8000e8a8: ba f4 07 00 00       	mov	edx, 0x7f4
ffffffff8000e8ad: 41 ff d7             	call	r15
ffffffff8000e8b0: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8000e8ba: 48 8d 88 d0 ff 00 80 	lea	rcx, [rax - 0x7fff0030]
ffffffff8000e8c1: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff8000e8c5: 0f 85 84 06 00 00    	jne	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e8cb: 48 b9 00 00 00 00 00 00 01 00	movabs	rcx, 0x1000000000000
ffffffff8000e8d5: 41 8c ce             	mov	r14d, cs
ffffffff8000e8d8: 48 8d 90 40 01 01 80 	lea	rdx, [rax - 0x7ffefec0]
ffffffff8000e8df: 48 39 ca             	cmp	rdx, rcx
ffffffff8000e8e2: 0f 83 67 06 00 00    	jae	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e8e8: 41 8c c8             	mov	r8d, cs
ffffffff8000e8eb: 48 8d 90 90 00 01 80 	lea	rdx, [rax - 0x7ffeff70]
ffffffff8000e8f2: 48 39 ca             	cmp	rdx, rcx
ffffffff8000e8f5: 0f 83 54 06 00 00    	jae	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e8fb: 8c cf                	mov	edi, cs
ffffffff8000e8fd: 48 8d 90 6c f5 00 80 	lea	rdx, [rax - 0x7fff0a94]
ffffffff8000e904: 48 39 ca             	cmp	rdx, rcx
ffffffff8000e907: 0f 83 42 06 00 00    	jae	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e90d: 8c ce                	mov	esi, cs
ffffffff8000e90f: 48 8d 90 48 f5 00 80 	lea	rdx, [rax - 0x7fff0ab8]
ffffffff8000e916: 48 39 ca             	cmp	rdx, rcx
ffffffff8000e919: 0f 83 30 06 00 00    	jae	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e91f: 8c ca                	mov	edx, cs
ffffffff8000e921: 48 8d 80 20 0a 01 80 	lea	rax, [rax - 0x7ffef5e0]
ffffffff8000e928: 48 39 c8             	cmp	rax, rcx
ffffffff8000e92b: 0f 83 1e 06 00 00    	jae	0xffffffff8000ef4f <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x75f>
ffffffff8000e931: 48 c7 c0 48 f5 00 80 	mov	rax, -0x7fff0ab8
ffffffff8000e938: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8000e93c: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8000e941: 48 c7 c0 48 f5 00 80 	mov	rax, -0x7fff0ab8
ffffffff8000e948: c1 e8 10             	shr	eax, 0x10
ffffffff8000e94b: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8000e950: 48 c7 c0 6c f5 00 80 	mov	rax, -0x7fff0a94
ffffffff8000e957: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8000e95b: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8000e960: 48 c7 c0 6c f5 00 80 	mov	rax, -0x7fff0a94
ffffffff8000e967: c1 e8 10             	shr	eax, 0x10
ffffffff8000e96a: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8000e96f: 48 c7 c1 90 00 01 80 	mov	rcx, -0x7ffeff70
ffffffff8000e976: 48 c1 e9 20          	shr	rcx, 0x20
ffffffff8000e97a: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8000e97f: 49 c7 c4 90 00 01 80 	mov	r12, -0x7ffeff70
ffffffff8000e986: 41 c1 ec 10          	shr	r12d, 0x10
ffffffff8000e98a: 48 c7 c1 40 01 01 80 	mov	rcx, -0x7ffefec0
ffffffff8000e991: 48 c1 e9 20          	shr	rcx, 0x20
ffffffff8000e995: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8000e99a: 48 c7 c1 40 01 01 80 	mov	rcx, -0x7ffefec0
ffffffff8000e9a1: c1 e9 10             	shr	ecx, 0x10
ffffffff8000e9a4: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8000e9a9: 89 6c 24 0c          	mov	dword ptr [rsp + 0xc], ebp
ffffffff8000e9ad: 48 c7 c5 d0 ff 00 80 	mov	rbp, -0x7fff0030
ffffffff8000e9b4: 48 c1 ed 20          	shr	rbp, 0x20
ffffffff8000e9b8: 49 c7 c5 d0 ff 00 80 	mov	r13, -0x7fff0030
ffffffff8000e9bf: 41 c1 ed 10          	shr	r13d, 0x10
ffffffff8000e9c3: 48 c7 c1 20 0a 01 80 	mov	rcx, -0x7ffef5e0
ffffffff8000e9ca: c1 e9 10             	shr	ecx, 0x10
ffffffff8000e9cd: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff8000e9d2: 48 c7 c1 20 0a 01 80 	mov	rcx, -0x7ffef5e0
ffffffff8000e9d9: 48 c1 e9 20          	shr	rcx, 0x20
ffffffff8000e9dd: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8000e9e2: 8c c9                	mov	ecx, cs
ffffffff8000e9e4: 66 89 4c 24 08       	mov	word ptr [rsp + 0x8], cx
ffffffff8000e9e9: 66 89 7c 24 02       	mov	word ptr [rsp + 0x2], di
ffffffff8000e9ee: 48 8d bc 24 58 0e 00 00      	lea	rdi, [rsp + 0xe58]
ffffffff8000e9f6: 66 89 74 24 06       	mov	word ptr [rsp + 0x6], si
ffffffff8000e9fb: 48 8d b4 24 3c 14 00 00      	lea	rsi, [rsp + 0x143c]
ffffffff8000ea03: 66 89 54 24 0a       	mov	word ptr [rsp + 0xa], dx
ffffffff8000ea08: ba e4 05 00 00       	mov	edx, 0x5e4
ffffffff8000ea0d: 66 44 89 44 24 04    	mov	word ptr [rsp + 0x4], r8w
ffffffff8000ea13: 41 ff d7             	call	r15
ffffffff8000ea16: 48 8d bc 24 20 1a 00 00      	lea	rdi, [rsp + 0x1a20]
ffffffff8000ea1e: 48 8d b4 24 14 22 00 00      	lea	rsi, [rsp + 0x2214]
ffffffff8000ea26: ba f4 07 00 00       	mov	edx, 0x7f4
ffffffff8000ea2b: 41 ff d7             	call	r15
ffffffff8000ea2e: c7 03 00 00 00 00    	mov	dword ptr [rbx], 0x0
ffffffff8000ea34: 66 c7 43 04 00 0e    	mov	word ptr [rbx + 0x4], 0xe00
ffffffff8000ea3a: 48 c7 43 06 00 00 00 00      	mov	qword ptr [rbx + 0x6], 0x0
ffffffff8000ea42: 48 c7 43 0c 00 00 00 00      	mov	qword ptr [rbx + 0xc], 0x0
ffffffff8000ea4a: 66 c7 43 14 00 0e    	mov	word ptr [rbx + 0x14], 0xe00
ffffffff8000ea50: 48 c7 43 16 00 00 00 00      	mov	qword ptr [rbx + 0x16], 0x0
ffffffff8000ea58: 48 c7 43 1c 00 00 00 00      	mov	qword ptr [rbx + 0x1c], 0x0
ffffffff8000ea60: 48 c7 43 24 00 0e 00 00      	mov	qword ptr [rbx + 0x24], 0xe00
ffffffff8000ea68: c7 43 2c 00 00 00 00 	mov	dword ptr [rbx + 0x2c], 0x0
ffffffff8000ea6f: 48 c7 c1 d0 ff 00 80 	mov	rcx, -0x7fff0030
ffffffff8000ea76: 66 89 4b 30          	mov	word ptr [rbx + 0x30], cx
ffffffff8000ea7a: 66 44 89 73 32       	mov	word ptr [rbx + 0x32], r14w
ffffffff8000ea7f: 66 c7 43 34 00 8e    	mov	word ptr [rbx + 0x34], 0x8e00
ffffffff8000ea85: 66 44 89 6b 36       	mov	word ptr [rbx + 0x36], r13w
ffffffff8000ea8a: 89 6b 38             	mov	dword ptr [rbx + 0x38], ebp
ffffffff8000ea8d: 48 c7 43 3c 00 00 00 00      	mov	qword ptr [rbx + 0x3c], 0x0
ffffffff8000ea95: 66 c7 43 44 00 0e    	mov	word ptr [rbx + 0x44], 0xe00
ffffffff8000ea9b: 48 c7 43 46 00 00 00 00      	mov	qword ptr [rbx + 0x46], 0x0
ffffffff8000eaa3: 48 c7 43 4c 00 00 00 00      	mov	qword ptr [rbx + 0x4c], 0x0
ffffffff8000eaab: 66 c7 43 54 00 0e    	mov	word ptr [rbx + 0x54], 0xe00
ffffffff8000eab1: 48 c7 43 5c 00 00 00 00      	mov	qword ptr [rbx + 0x5c], 0x0
ffffffff8000eab9: 48 c7 43 56 00 00 00 00      	mov	qword ptr [rbx + 0x56], 0x0
ffffffff8000eac1: 66 c7 43 64 00 0e    	mov	word ptr [rbx + 0x64], 0xe00
ffffffff8000eac7: 48 c7 43 6c 00 00 00 00      	mov	qword ptr [rbx + 0x6c], 0x0
ffffffff8000eacf: 48 c7 43 66 00 00 00 00      	mov	qword ptr [rbx + 0x66], 0x0
ffffffff8000ead7: 48 c7 43 74 00 0e 00 00      	mov	qword ptr [rbx + 0x74], 0xe00
ffffffff8000eadf: c7 43 7c 00 00 00 00 	mov	dword ptr [rbx + 0x7c], 0x0
ffffffff8000eae6: 48 c7 c1 90 00 01 80 	mov	rcx, -0x7ffeff70
ffffffff8000eaed: 66 89 8b 80 00 00 00 	mov	word ptr [rbx + 0x80], cx
ffffffff8000eaf4: 0f b7 4c 24 02       	movzx	ecx, word ptr [rsp + 0x2]
ffffffff8000eaf9: 66 89 8b 82 00 00 00 	mov	word ptr [rbx + 0x82], cx
ffffffff8000eb00: 66 c7 83 84 00 00 00 01 8e   	mov	word ptr [rbx + 0x84], 0x8e01
ffffffff8000eb09: 66 44 89 a3 86 00 00 00      	mov	word ptr [rbx + 0x86], r12w
ffffffff8000eb11: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff8000eb16: 89 8b 88 00 00 00    	mov	dword ptr [rbx + 0x88], ecx
ffffffff8000eb1c: 48 c7 83 8c 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x8c], 0x0
ffffffff8000eb27: 66 c7 83 94 00 00 00 00 0e   	mov	word ptr [rbx + 0x94], 0xe00
ffffffff8000eb30: 48 c7 83 96 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x96], 0x0
ffffffff8000eb3b: 48 c7 83 9c 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x9c], 0x0
ffffffff8000eb46: 66 c7 83 a4 00 00 00 00 0e   	mov	word ptr [rbx + 0xa4], 0xe00
ffffffff8000eb4f: 48 c7 83 ac 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xac], 0x0
ffffffff8000eb5a: 48 c7 83 a6 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xa6], 0x0
ffffffff8000eb65: 66 c7 83 b4 00 00 00 00 0e   	mov	word ptr [rbx + 0xb4], 0xe00
ffffffff8000eb6e: 48 c7 83 bc 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xbc], 0x0
ffffffff8000eb79: 48 c7 83 b6 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xb6], 0x0
ffffffff8000eb84: 66 c7 83 c4 00 00 00 00 0e   	mov	word ptr [rbx + 0xc4], 0xe00
ffffffff8000eb8d: 48 c7 83 cc 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xcc], 0x0
ffffffff8000eb98: 48 c7 83 c6 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xc6], 0x0
ffffffff8000eba3: 48 c7 83 d4 00 00 00 00 0e 00 00     	mov	qword ptr [rbx + 0xd4], 0xe00
ffffffff8000ebae: c7 83 dc 00 00 00 00 00 00 00	mov	dword ptr [rbx + 0xdc], 0x0
ffffffff8000ebb8: 48 c7 c1 40 01 01 80 	mov	rcx, -0x7ffefec0
ffffffff8000ebbf: 66 89 8b e0 00 00 00 	mov	word ptr [rbx + 0xe0], cx
ffffffff8000ebc6: 0f b7 4c 24 04       	movzx	ecx, word ptr [rsp + 0x4]
ffffffff8000ebcb: 66 89 8b e2 00 00 00 	mov	word ptr [rbx + 0xe2], cx
ffffffff8000ebd2: 66 c7 83 e4 00 00 00 00 8e   	mov	word ptr [rbx + 0xe4], 0x8e00
ffffffff8000ebdb: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8000ebe0: 66 89 8b e6 00 00 00 	mov	word ptr [rbx + 0xe6], cx
ffffffff8000ebe7: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8000ebec: 89 8b e8 00 00 00    	mov	dword ptr [rbx + 0xe8], ecx
ffffffff8000ebf2: 48 c7 83 ec 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xec], 0x0
ffffffff8000ebfd: 66 c7 83 f4 00 00 00 00 0e   	mov	word ptr [rbx + 0xf4], 0xe00
ffffffff8000ec06: 48 c7 83 f6 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xf6], 0x0
ffffffff8000ec11: 48 c7 83 fc 00 00 00 00 00 00 00     	mov	qword ptr [rbx + 0xfc], 0x0
ffffffff8000ec1c: 66 c7 83 04 01 00 00 00 0e   	mov	word ptr [rbx + 0x104], 0xe00
ffffffff8000ec25: 48 c7 83 0c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x10c], 0x0
ffffffff8000ec30: 48 c7 83 06 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x106], 0x0
ffffffff8000ec3b: 66 c7 83 14 01 00 00 00 0e   	mov	word ptr [rbx + 0x114], 0xe00
ffffffff8000ec44: 48 c7 83 1c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x11c], 0x0
ffffffff8000ec4f: 48 c7 83 16 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x116], 0x0
ffffffff8000ec5a: 66 c7 83 24 01 00 00 00 0e   	mov	word ptr [rbx + 0x124], 0xe00
ffffffff8000ec63: 48 c7 83 2c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x12c], 0x0
ffffffff8000ec6e: 48 c7 83 26 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x126], 0x0
ffffffff8000ec79: 66 c7 83 34 01 00 00 00 0e   	mov	word ptr [rbx + 0x134], 0xe00
ffffffff8000ec82: 48 c7 83 3c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x13c], 0x0
ffffffff8000ec8d: 48 c7 83 36 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x136], 0x0
ffffffff8000ec98: 66 c7 83 44 01 00 00 00 0e   	mov	word ptr [rbx + 0x144], 0xe00
ffffffff8000eca1: 48 c7 83 4c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x14c], 0x0
ffffffff8000ecac: 48 c7 83 46 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x146], 0x0
ffffffff8000ecb7: 66 c7 83 54 01 00 00 00 0e   	mov	word ptr [rbx + 0x154], 0xe00
ffffffff8000ecc0: 48 c7 83 5c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x15c], 0x0
ffffffff8000eccb: 48 c7 83 56 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x156], 0x0
ffffffff8000ecd6: 66 c7 83 64 01 00 00 00 0e   	mov	word ptr [rbx + 0x164], 0xe00
ffffffff8000ecdf: 48 c7 83 6c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x16c], 0x0
ffffffff8000ecea: 48 c7 83 66 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x166], 0x0
ffffffff8000ecf5: 66 c7 83 74 01 00 00 00 0e   	mov	word ptr [rbx + 0x174], 0xe00
ffffffff8000ecfe: 48 c7 83 7c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x17c], 0x0
ffffffff8000ed09: 48 c7 83 76 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x176], 0x0
ffffffff8000ed14: 66 c7 83 84 01 00 00 00 0e   	mov	word ptr [rbx + 0x184], 0xe00
ffffffff8000ed1d: 48 c7 83 8c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x18c], 0x0
ffffffff8000ed28: 48 c7 83 86 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x186], 0x0
ffffffff8000ed33: 66 c7 83 94 01 00 00 00 0e   	mov	word ptr [rbx + 0x194], 0xe00
ffffffff8000ed3c: 48 c7 83 9c 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x19c], 0x0
ffffffff8000ed47: 48 c7 83 96 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x196], 0x0
ffffffff8000ed52: 66 c7 83 a4 01 00 00 00 0e   	mov	word ptr [rbx + 0x1a4], 0xe00
ffffffff8000ed5b: 48 c7 83 ac 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1ac], 0x0
ffffffff8000ed66: 48 c7 83 a6 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1a6], 0x0
ffffffff8000ed71: 66 c7 83 b4 01 00 00 00 0e   	mov	word ptr [rbx + 0x1b4], 0xe00
ffffffff8000ed7a: 48 c7 83 bc 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1bc], 0x0
ffffffff8000ed85: 48 c7 83 b6 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1b6], 0x0
ffffffff8000ed90: 66 c7 83 c4 01 00 00 00 0e   	mov	word ptr [rbx + 0x1c4], 0xe00
ffffffff8000ed99: 48 c7 83 cc 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1cc], 0x0
ffffffff8000eda4: 48 c7 83 c6 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1c6], 0x0
ffffffff8000edaf: 66 c7 83 d4 01 00 00 00 0e   	mov	word ptr [rbx + 0x1d4], 0xe00
ffffffff8000edb8: 48 c7 83 dc 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1dc], 0x0
ffffffff8000edc3: 48 c7 83 d6 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1d6], 0x0
ffffffff8000edce: 66 c7 83 e4 01 00 00 00 0e   	mov	word ptr [rbx + 0x1e4], 0xe00
ffffffff8000edd7: 48 c7 83 ec 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1ec], 0x0
ffffffff8000ede2: 48 c7 83 e6 01 00 00 00 00 00 00     	mov	qword ptr [rbx + 0x1e6], 0x0
ffffffff8000eded: 48 c7 83 f4 01 00 00 00 0e 00 00     	mov	qword ptr [rbx + 0x1f4], 0xe00
ffffffff8000edf8: c7 83 fc 01 00 00 00 00 00 00	mov	dword ptr [rbx + 0x1fc], 0x0
ffffffff8000ee02: 48 c7 c1 6c f5 00 80 	mov	rcx, -0x7fff0a94
ffffffff8000ee09: 66 89 8b 00 02 00 00 	mov	word ptr [rbx + 0x200], cx
ffffffff8000ee10: 0f b7 4c 24 06       	movzx	ecx, word ptr [rsp + 0x6]
ffffffff8000ee15: 66 89 8b 02 02 00 00 	mov	word ptr [rbx + 0x202], cx
ffffffff8000ee1c: 66 c7 83 04 02 00 00 00 8e   	mov	word ptr [rbx + 0x204], 0x8e00
ffffffff8000ee25: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff8000ee2a: 66 89 8b 06 02 00 00 	mov	word ptr [rbx + 0x206], cx
ffffffff8000ee31: 48 8b 4c 24 40       	mov	rcx, qword ptr [rsp + 0x40]
ffffffff8000ee36: 89 8b 08 02 00 00    	mov	dword ptr [rbx + 0x208], ecx
ffffffff8000ee3c: 8b 4c 24 0c          	mov	ecx, dword ptr [rsp + 0xc]
ffffffff8000ee40: 89 8b 0c 02 00 00    	mov	dword ptr [rbx + 0x20c], ecx
ffffffff8000ee46: 48 c7 c1 20 0a 01 80 	mov	rcx, -0x7ffef5e0
ffffffff8000ee4d: 66 89 8b 10 02 00 00 	mov	word ptr [rbx + 0x210], cx
ffffffff8000ee54: 0f b7 4c 24 08       	movzx	ecx, word ptr [rsp + 0x8]
ffffffff8000ee59: 66 89 8b 12 02 00 00 	mov	word ptr [rbx + 0x212], cx
ffffffff8000ee60: 66 c7 83 14 02 00 00 00 8e   	mov	word ptr [rbx + 0x214], 0x8e00
ffffffff8000ee69: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff8000ee6e: 66 89 8b 16 02 00 00 	mov	word ptr [rbx + 0x216], cx
ffffffff8000ee75: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff8000ee7a: 89 8b 18 02 00 00    	mov	dword ptr [rbx + 0x218], ecx
ffffffff8000ee80: 48 8d bb 1c 02 00 00 	lea	rdi, [rbx + 0x21c]
ffffffff8000ee87: ba e4 05 00 00       	mov	edx, 0x5e4
ffffffff8000ee8c: 48 8d b4 24 58 0e 00 00      	lea	rsi, [rsp + 0xe58]
ffffffff8000ee94: 41 ff d7             	call	r15
ffffffff8000ee97: 48 c7 c0 48 f5 00 80 	mov	rax, -0x7fff0ab8
ffffffff8000ee9e: 66 89 83 00 08 00 00 	mov	word ptr [rbx + 0x800], ax
ffffffff8000eea5: 0f b7 44 24 0a       	movzx	eax, word ptr [rsp + 0xa]
ffffffff8000eeaa: 66 89 83 02 08 00 00 	mov	word ptr [rbx + 0x802], ax
ffffffff8000eeb1: 66 c7 83 04 08 00 00 00 ee   	mov	word ptr [rbx + 0x804], 0xee00
ffffffff8000eeba: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8000eebf: 66 89 83 06 08 00 00 	mov	word ptr [rbx + 0x806], ax
ffffffff8000eec6: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff8000eecb: 89 83 08 08 00 00    	mov	dword ptr [rbx + 0x808], eax
ffffffff8000eed1: 48 8d bb 0c 08 00 00 	lea	rdi, [rbx + 0x80c]
ffffffff8000eed8: ba f4 07 00 00       	mov	edx, 0x7f4
ffffffff8000eedd: 48 8d b4 24 20 1a 00 00      	lea	rsi, [rsp + 0x1a20]
ffffffff8000eee5: 41 ff d7             	call	r15
ffffffff8000eee8: c6 83 00 10 00 00 02 	mov	byte ptr [rbx + 0x1000], 0x2
ffffffff8000eeef: eb 49                	jmp	0xffffffff8000ef3a <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x74a>
ffffffff8000eef1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8000ef00: 0f b6 c0             	movzx	eax, al
ffffffff8000ef03: ff 24 c5 c8 40 02 80 	jmp	qword ptr [8*rax - 0x7ffdbf38]
ffffffff8000ef0a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000ef10: f3 90                	pause
ffffffff8000ef12: 0f b6 83 00 10 00 00 	movzx	eax, byte ptr [rbx + 0x1000]
ffffffff8000ef19: 3c 01                	cmp	al, 0x1
ffffffff8000ef1b: 74 f3                	je	0xffffffff8000ef10 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x720>
ffffffff8000ef1d: 0f b6 c0             	movzx	eax, al
ffffffff8000ef20: 85 c0                	test	eax, eax
ffffffff8000ef22: 75 11                	jne	0xffffffff8000ef35 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x745>
ffffffff8000ef24: 31 c0                	xor	eax, eax
ffffffff8000ef26: f0                   	lock
ffffffff8000ef27: 0f b0 8b 00 10 00 00 	cmpxchg	byte ptr [rbx + 0x1000], cl
ffffffff8000ef2e: 75 d0                	jne	0xffffffff8000ef00 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x710>
ffffffff8000ef30: e9 ff f8 ff ff       	jmp	0xffffffff8000e834 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x44>
ffffffff8000ef35: 83 f8 02             	cmp	eax, 0x2
ffffffff8000ef38: 75 2d                	jne	0xffffffff8000ef67 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910+0x777>
ffffffff8000ef3a: 48 89 d8             	mov	rax, rbx
ffffffff8000ef3d: 48 81 c4 08 2a 00 00 	add	rsp, 0x2a08
ffffffff8000ef44: 5b                   	pop	rbx
ffffffff8000ef45: 41 5c                	pop	r12
ffffffff8000ef47: 41 5d                	pop	r13
ffffffff8000ef49: 41 5e                	pop	r14
ffffffff8000ef4b: 41 5f                	pop	r15
ffffffff8000ef4d: 5d                   	pop	rbp
ffffffff8000ef4e: c3                   	ret
ffffffff8000ef4f: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000ef54: 48 c7 c7 f8 42 02 80 	mov	rdi, -0x7ffdbd08
ffffffff8000ef5b: 48 c7 c2 90 43 02 80 	mov	rdx, -0x7ffdbc70
ffffffff8000ef62: e8 89 21 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000ef67: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000ef6c: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000ef73: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000ef7a: e8 71 21 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000ef7f: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000ef84: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000ef8b: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000ef92: e8 59 21 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000ef97: cc                   	int3
ffffffff8000ef98: cc                   	int3
ffffffff8000ef99: cc                   	int3
ffffffff8000ef9a: cc                   	int3
ffffffff8000ef9b: cc                   	int3
ffffffff8000ef9c: cc                   	int3
ffffffff8000ef9d: cc                   	int3
ffffffff8000ef9e: cc                   	int3
ffffffff8000ef9f: cc                   	int3

ffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>:
ffffffff8000efa0: 41 57                	push	r15
ffffffff8000efa2: 41 56                	push	r14
ffffffff8000efa4: 41 54                	push	r12
ffffffff8000efa6: 53                   	push	rbx
ffffffff8000efa7: 48 81 ec a8 00 00 00 	sub	rsp, 0xa8
ffffffff8000efae: 48 89 fb             	mov	rbx, rdi
ffffffff8000efb1: b1 01                	mov	cl, 0x1
ffffffff8000efb3: 31 c0                	xor	eax, eax
ffffffff8000efb5: f0                   	lock
ffffffff8000efb6: 0f b0 4f 60          	cmpxchg	byte ptr [rdi + 0x60], cl
ffffffff8000efba: 0f 85 c0 01 00 00    	jne	0xffffffff8000f180 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x1e0>
ffffffff8000efc0: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 0x48], 0x0
ffffffff8000efc9: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff8000efd2: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000efdb: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8000efe4: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8000efed: 48 b8 ff ff 00 00 00 9b af 00	movabs	rax, 0xaf9b000000ffff
ffffffff8000eff7: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8000effc: 48 b8 ff ff 00 00 00 93 cf 00	movabs	rax, 0xcf93000000ffff
ffffffff8000f006: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000f00b: 48 b8 ff ff 00 00 00 fb af 00	movabs	rax, 0xaffb000000ffff
ffffffff8000f015: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8000f01a: 48 b8 ff ff 00 00 00 f3 cf 00	movabs	rax, 0xcff3000000ffff
ffffffff8000f024: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000f029: 48 c7 44 24 50 05 00 00 00   	mov	qword ptr [rsp + 0x50], 0x5
ffffffff8000f032: 0f b6 05 5f c3 01 00 	movzx	eax, byte ptr [rip + 0x1c35f] # 0xffffffff8002b398 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.17000597947953018869+0xd0>
ffffffff8000f039: 3c 02                	cmp	al, 0x2
ffffffff8000f03b: 0f 85 85 01 00 00    	jne	0xffffffff8000f1c6 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x226>
ffffffff8000f041: 49 be 67 00 00 00 00 89 00 00	movabs	r14, 0x890000000067
ffffffff8000f04b: 48 c7 c0 c8 b2 02 80 	mov	rax, -0x7ffd4d38
ffffffff8000f052: 48 c7 c1 c8 b2 02 80 	mov	rcx, -0x7ffd4d38
ffffffff8000f059: 81 e1 fc ff ff 00    	and	ecx, 0xfffffc
ffffffff8000f05f: 48 c1 e1 10          	shl	rcx, 0x10
ffffffff8000f063: 48 c7 c2 c8 b2 02 80 	mov	rdx, -0x7ffd4d38
ffffffff8000f06a: 81 e2 00 00 00 ff    	and	edx, 0xff000000
ffffffff8000f070: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff8000f074: 48 09 ca             	or	rdx, rcx
ffffffff8000f077: 4c 09 f2             	or	rdx, r14
ffffffff8000f07a: 48 89 54 24 30       	mov	qword ptr [rsp + 0x30], rdx
ffffffff8000f07f: 48 8b 4c 24 50       	mov	rcx, qword ptr [rsp + 0x50]
ffffffff8000f084: 48 8d 79 01          	lea	rdi, [rcx + 0x1]
ffffffff8000f088: 48 89 7c 24 50       	mov	qword ptr [rsp + 0x50], rdi
ffffffff8000f08d: 48 83 ff 09          	cmp	rdi, 0x9
ffffffff8000f091: 0f 83 86 01 00 00    	jae	0xffffffff8000f21d <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x27d>
ffffffff8000f097: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8000f09b: 48 89 44 cc 10       	mov	qword ptr [rsp + 8*rcx + 0x10], rax
ffffffff8000f0a0: 4c 8b 64 24 50       	mov	r12, qword ptr [rsp + 0x50]
ffffffff8000f0a5: 4d 8d 7c 24 01       	lea	r15, [r12 + 0x1]
ffffffff8000f0aa: 4c 89 7c 24 50       	mov	qword ptr [rsp + 0x50], r15
ffffffff8000f0af: 0f b6 05 e2 c2 01 00 	movzx	eax, byte ptr [rip + 0x1c2e2] # 0xffffffff8002b398 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.17000597947953018869+0xd0>
ffffffff8000f0b6: 3c 02                	cmp	al, 0x2
ffffffff8000f0b8: 0f 85 19 01 00 00    	jne	0xffffffff8000f1d7 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x237>
ffffffff8000f0be: 49 83 ff 07          	cmp	r15, 0x7
ffffffff8000f0c2: 0f 87 25 01 00 00    	ja	0xffffffff8000f1ed <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x24d>
ffffffff8000f0c8: 48 b9 00 00 00 00 00 00 00 ff	movabs	rcx, -0x100000000000000
ffffffff8000f0d2: 48 ba 00 00 fc ff ff 00 00 00	movabs	rdx, 0xfffffc0000
ffffffff8000f0dc: 48 c7 c0 30 b3 02 80 	mov	rax, -0x7ffd4cd0
ffffffff8000f0e3: 48 c7 c6 30 b3 02 80 	mov	rsi, -0x7ffd4cd0
ffffffff8000f0ea: 48 c1 e6 10          	shl	rsi, 0x10
ffffffff8000f0ee: 48 21 d6             	and	rsi, rdx
ffffffff8000f0f1: 48 c7 c2 30 b3 02 80 	mov	rdx, -0x7ffd4cd0
ffffffff8000f0f8: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff8000f0fc: 48 21 ca             	and	rdx, rcx
ffffffff8000f0ff: 48 09 f2             	or	rdx, rsi
ffffffff8000f102: 4c 09 f2             	or	rdx, r14
ffffffff8000f105: 4a 89 54 e4 10       	mov	qword ptr [rsp + 8*r12 + 0x10], rdx
ffffffff8000f10a: 48 8b 4c 24 50       	mov	rcx, qword ptr [rsp + 0x50]
ffffffff8000f10f: 48 8d 79 01          	lea	rdi, [rcx + 0x1]
ffffffff8000f113: 48 89 7c 24 50       	mov	qword ptr [rsp + 0x50], rdi
ffffffff8000f118: 48 83 ff 08          	cmp	rdi, 0x8
ffffffff8000f11c: 0f 87 fb 00 00 00    	ja	0xffffffff8000f21d <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x27d>
ffffffff8000f122: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8000f126: 48 89 44 cc 10       	mov	qword ptr [rsp + 8*rcx + 0x10], rax
ffffffff8000f12b: 48 ff 44 24 50       	inc	qword ptr [rsp + 0x50]
ffffffff8000f130: 41 c1 e7 13          	shl	r15d, 0x13
ffffffff8000f134: 48 8d 44 24 58       	lea	rax, [rsp + 0x58]
ffffffff8000f139: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8000f13e: b9 0a 00 00 00       	mov	ecx, 0xa
ffffffff8000f143: 48 89 c7             	mov	rdi, rax
ffffffff8000f146: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff8000f149: 41 83 cf 28          	or	r15d, 0x28
ffffffff8000f14d: b9 0a 00 00 00       	mov	ecx, 0xa
ffffffff8000f152: 48 89 df             	mov	rdi, rbx
ffffffff8000f155: 48 89 c6             	mov	rsi, rax
ffffffff8000f158: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff8000f15b: 44 89 7b 50          	mov	dword ptr [rbx + 0x50], r15d
ffffffff8000f15f: 48 b8 08 00 10 00 1b 00 23 00	movabs	rax, 0x23001b00100008
ffffffff8000f169: 48 89 43 54          	mov	qword ptr [rbx + 0x54], rax
ffffffff8000f16d: c6 43 60 02          	mov	byte ptr [rbx + 0x60], 0x2
ffffffff8000f171: eb 41                	jmp	0xffffffff8000f1b4 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x214>
ffffffff8000f173: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000f180: 0f b6 c0             	movzx	eax, al
ffffffff8000f183: ff 24 c5 e8 40 02 80 	jmp	qword ptr [8*rax - 0x7ffdbf18]
ffffffff8000f18a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000f190: f3 90                	pause
ffffffff8000f192: 0f b6 43 60          	movzx	eax, byte ptr [rbx + 0x60]
ffffffff8000f196: 3c 01                	cmp	al, 0x1
ffffffff8000f198: 74 f6                	je	0xffffffff8000f190 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x1f0>
ffffffff8000f19a: 0f b6 c0             	movzx	eax, al
ffffffff8000f19d: 85 c0                	test	eax, eax
ffffffff8000f19f: 75 0e                	jne	0xffffffff8000f1af <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x20f>
ffffffff8000f1a1: 31 c0                	xor	eax, eax
ffffffff8000f1a3: f0                   	lock
ffffffff8000f1a4: 0f b0 4b 60          	cmpxchg	byte ptr [rbx + 0x60], cl
ffffffff8000f1a8: 75 d6                	jne	0xffffffff8000f180 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x1e0>
ffffffff8000f1aa: e9 11 fe ff ff       	jmp	0xffffffff8000efc0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x20>
ffffffff8000f1af: 83 f8 02             	cmp	eax, 0x2
ffffffff8000f1b2: 75 51                	jne	0xffffffff8000f205 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x265>
ffffffff8000f1b4: 48 89 d8             	mov	rax, rbx
ffffffff8000f1b7: 48 81 c4 a8 00 00 00 	add	rsp, 0xa8
ffffffff8000f1be: 5b                   	pop	rbx
ffffffff8000f1bf: 41 5c                	pop	r12
ffffffff8000f1c1: 41 5e                	pop	r14
ffffffff8000f1c3: 41 5f                	pop	r15
ffffffff8000f1c5: c3                   	ret
ffffffff8000f1c6: 48 c7 c7 c8 b2 02 80 	mov	rdi, -0x7ffd4d38
ffffffff8000f1cd: e8 2e f1 ff ff       	call	0xffffffff8000e300 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910>
ffffffff8000f1d2: e9 6a fe ff ff       	jmp	0xffffffff8000f041 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0xa1>
ffffffff8000f1d7: 48 c7 c7 c8 b2 02 80 	mov	rdi, -0x7ffd4d38
ffffffff8000f1de: e8 1d f1 ff ff       	call	0xffffffff8000e300 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910>
ffffffff8000f1e3: 49 83 ff 07          	cmp	r15, 0x7
ffffffff8000f1e7: 0f 86 db fe ff ff    	jbe	0xffffffff8000f0c8 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910+0x128>
ffffffff8000f1ed: be 34 00 00 00       	mov	esi, 0x34
ffffffff8000f1f2: 48 c7 c7 a8 42 02 80 	mov	rdi, -0x7ffdbd58
ffffffff8000f1f9: 48 c7 c2 e0 42 02 80 	mov	rdx, -0x7ffdbd20
ffffffff8000f200: e8 eb 1e 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f205: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000f20a: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000f211: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000f218: e8 d3 1e 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f21d: be 09 00 00 00       	mov	esi, 0x9
ffffffff8000f222: 48 c7 c2 90 42 02 80 	mov	rdx, -0x7ffdbd70
ffffffff8000f229: e8 63 1f 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000f22e: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000f233: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000f23a: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000f241: e8 aa 1e 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f246: cc                   	int3
ffffffff8000f247: cc                   	int3
ffffffff8000f248: cc                   	int3
ffffffff8000f249: cc                   	int3
ffffffff8000f24a: cc                   	int3
ffffffff8000f24b: cc                   	int3
ffffffff8000f24c: cc                   	int3
ffffffff8000f24d: cc                   	int3
ffffffff8000f24e: cc                   	int3
ffffffff8000f24f: cc                   	int3

ffffffff8000f250 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910>:
ffffffff8000f250: 50                   	push	rax
ffffffff8000f251: b1 01                	mov	cl, 0x1
ffffffff8000f253: 31 c0                	xor	eax, eax
ffffffff8000f255: f0                   	lock
ffffffff8000f256: 0f b0 4f 04          	cmpxchg	byte ptr [rdi + 0x4], cl
ffffffff8000f25a: 74 2f                	je	0xffffffff8000f28b <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910+0x3b>
ffffffff8000f25c: 0f b6 c0             	movzx	eax, al
ffffffff8000f25f: ff 24 c5 08 41 02 80 	jmp	qword ptr [8*rax - 0x7ffdbef8]
ffffffff8000f266: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8000f270: f3 90                	pause
ffffffff8000f272: 0f b6 47 04          	movzx	eax, byte ptr [rdi + 0x4]
ffffffff8000f276: 3c 01                	cmp	al, 0x1
ffffffff8000f278: 74 f6                	je	0xffffffff8000f270 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910+0x20>
ffffffff8000f27a: 0f b6 c0             	movzx	eax, al
ffffffff8000f27d: 85 c0                	test	eax, eax
ffffffff8000f27f: 74 d2                	je	0xffffffff8000f253 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910+0x3>
ffffffff8000f281: 83 f8 02             	cmp	eax, 0x2
ffffffff8000f284: 75 4c                	jne	0xffffffff8000f2d2 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.9791016283376756910+0x82>
ffffffff8000f286: 48 89 f8             	mov	rax, rdi
ffffffff8000f289: 59                   	pop	rcx
ffffffff8000f28a: c3                   	ret
ffffffff8000f28b: 31 c0                	xor	eax, eax
ffffffff8000f28d: 66 ba f9 03          	mov	dx, 0x3f9
ffffffff8000f291: ee                   	out	dx, al
ffffffff8000f292: b0 80                	mov	al, -0x80
ffffffff8000f294: 66 ba fb 03          	mov	dx, 0x3fb
ffffffff8000f298: ee                   	out	dx, al
ffffffff8000f299: b0 03                	mov	al, 0x3
ffffffff8000f29b: 66 ba f8 03          	mov	dx, 0x3f8
ffffffff8000f29f: ee                   	out	dx, al
ffffffff8000f2a0: 31 c0                	xor	eax, eax
ffffffff8000f2a2: 66 ba f9 03          	mov	dx, 0x3f9
ffffffff8000f2a6: ee                   	out	dx, al
ffffffff8000f2a7: b0 03                	mov	al, 0x3
ffffffff8000f2a9: 66 ba fb 03          	mov	dx, 0x3fb
ffffffff8000f2ad: ee                   	out	dx, al
ffffffff8000f2ae: b0 c7                	mov	al, -0x39
ffffffff8000f2b0: 66 ba fa 03          	mov	dx, 0x3fa
ffffffff8000f2b4: ee                   	out	dx, al
ffffffff8000f2b5: b0 0b                	mov	al, 0xb
ffffffff8000f2b7: 66 ba fc 03          	mov	dx, 0x3fc
ffffffff8000f2bb: ee                   	out	dx, al
ffffffff8000f2bc: b0 01                	mov	al, 0x1
ffffffff8000f2be: 66 ba f9 03          	mov	dx, 0x3f9
ffffffff8000f2c2: ee                   	out	dx, al
ffffffff8000f2c3: c7 07 00 00 f8 03    	mov	dword ptr [rdi], 0x3f80000
ffffffff8000f2c9: c6 47 04 02          	mov	byte ptr [rdi + 0x4], 0x2
ffffffff8000f2cd: 48 89 f8             	mov	rax, rdi
ffffffff8000f2d0: 59                   	pop	rcx
ffffffff8000f2d1: c3                   	ret
ffffffff8000f2d2: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000f2d7: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000f2de: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000f2e5: e8 06 1e 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f2ea: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000f2ef: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000f2f6: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000f2fd: e8 ee 1d 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f302: cc                   	int3
ffffffff8000f303: cc                   	int3
ffffffff8000f304: cc                   	int3
ffffffff8000f305: cc                   	int3
ffffffff8000f306: cc                   	int3
ffffffff8000f307: cc                   	int3
ffffffff8000f308: cc                   	int3
ffffffff8000f309: cc                   	int3
ffffffff8000f30a: cc                   	int3
ffffffff8000f30b: cc                   	int3
ffffffff8000f30c: cc                   	int3
ffffffff8000f30d: cc                   	int3
ffffffff8000f30e: cc                   	int3
ffffffff8000f30f: cc                   	int3

ffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>:
ffffffff8000f310: 53                   	push	rbx
ffffffff8000f311: 48 89 fb             	mov	rbx, rdi
ffffffff8000f314: b1 01                	mov	cl, 0x1
ffffffff8000f316: 31 c0                	xor	eax, eax
ffffffff8000f318: f0                   	lock
ffffffff8000f319: 0f b0 4f 08          	cmpxchg	byte ptr [rdi + 0x8], cl
ffffffff8000f31d: 75 41                	jne	0xffffffff8000f360 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x50>
ffffffff8000f31f: 48 c7 c7 f0 b0 02 80 	mov	rdi, -0x7ffd4f10
ffffffff8000f326: e8 95 e0 00 00       	call	0xffffffff8001d3c0 <limine::request::EfiSystemTableRequest::get_response::h4a4b8b0bbd703f80>
ffffffff8000f32b: 48 85 c0             	test	rax, rax
ffffffff8000f32e: 0f 84 aa 00 00 00    	je	0xffffffff8000f3de <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0xce>
ffffffff8000f334: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff8000f338: 48 b9 00 00 00 00 00 80 00 00	movabs	rcx, 0x800000000000
ffffffff8000f342: 48 01 c1             	add	rcx, rax
ffffffff8000f345: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff8000f349: 75 4b                	jne	0xffffffff8000f396 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x86>
ffffffff8000f34b: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8000f34e: c6 43 08 02          	mov	byte ptr [rbx + 0x8], 0x2
ffffffff8000f352: 48 89 d8             	mov	rax, rbx
ffffffff8000f355: 5b                   	pop	rbx
ffffffff8000f356: c3                   	ret
ffffffff8000f357: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8000f360: 0f b6 c0             	movzx	eax, al
ffffffff8000f363: ff 24 c5 28 41 02 80 	jmp	qword ptr [8*rax - 0x7ffdbed8]
ffffffff8000f36a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000f370: f3 90                	pause
ffffffff8000f372: 0f b6 43 08          	movzx	eax, byte ptr [rbx + 0x8]
ffffffff8000f376: 3c 01                	cmp	al, 0x1
ffffffff8000f378: 74 f6                	je	0xffffffff8000f370 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x60>
ffffffff8000f37a: 0f b6 c0             	movzx	eax, al
ffffffff8000f37d: 85 c0                	test	eax, eax
ffffffff8000f37f: 75 0b                	jne	0xffffffff8000f38c <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x7c>
ffffffff8000f381: 31 c0                	xor	eax, eax
ffffffff8000f383: f0                   	lock
ffffffff8000f384: 0f b0 4b 08          	cmpxchg	byte ptr [rbx + 0x8], cl
ffffffff8000f388: 75 d6                	jne	0xffffffff8000f360 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x50>
ffffffff8000f38a: eb 93                	jmp	0xffffffff8000f31f <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0xf>
ffffffff8000f38c: 83 f8 02             	cmp	eax, 0x2
ffffffff8000f38f: 75 1d                	jne	0xffffffff8000f3ae <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910+0x9e>
ffffffff8000f391: 48 89 d8             	mov	rax, rbx
ffffffff8000f394: 5b                   	pop	rbx
ffffffff8000f395: c3                   	ret
ffffffff8000f396: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000f39b: 48 c7 c7 f8 42 02 80 	mov	rdi, -0x7ffdbd08
ffffffff8000f3a2: 48 c7 c2 90 43 02 80 	mov	rdx, -0x7ffdbc70
ffffffff8000f3a9: e8 42 1d 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f3ae: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000f3b3: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000f3ba: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000f3c1: e8 2a 1d 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f3c6: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000f3cb: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000f3d2: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000f3d9: e8 12 1d 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f3de: be 13 00 00 00       	mov	esi, 0x13
ffffffff8000f3e3: 48 c7 c7 f0 43 02 80 	mov	rdi, -0x7ffdbc10
ffffffff8000f3ea: 48 c7 c2 18 44 02 80 	mov	rdx, -0x7ffdbbe8
ffffffff8000f3f1: e8 6a 22 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000f3f6: cc                   	int3
ffffffff8000f3f7: cc                   	int3
ffffffff8000f3f8: cc                   	int3
ffffffff8000f3f9: cc                   	int3
ffffffff8000f3fa: cc                   	int3
ffffffff8000f3fb: cc                   	int3
ffffffff8000f3fc: cc                   	int3
ffffffff8000f3fd: cc                   	int3
ffffffff8000f3fe: cc                   	int3
ffffffff8000f3ff: cc                   	int3

ffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>:
ffffffff8000f400: 53                   	push	rbx
ffffffff8000f401: 48 89 fb             	mov	rbx, rdi
ffffffff8000f404: b1 01                	mov	cl, 0x1
ffffffff8000f406: 31 c0                	xor	eax, eax
ffffffff8000f408: f0                   	lock
ffffffff8000f409: 0f b0 4f 08          	cmpxchg	byte ptr [rdi + 0x8], cl
ffffffff8000f40d: 0f 85 aa 00 00 00    	jne	0xffffffff8000f4bd <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0xbd>
ffffffff8000f413: 0f b6 05 c7 bd 01 00 	movzx	eax, byte ptr [rip + 0x1bdc7] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000f41a: 31 c0                	xor	eax, eax
ffffffff8000f41c: f0                   	lock
ffffffff8000f41d: 0f b0 0d dc bb 01 00 	cmpxchg	byte ptr [rip + 0x1bbdc], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000f424: 74 23                	je	0xffffffff8000f449 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x49>
ffffffff8000f426: b1 01                	mov	cl, 0x1
ffffffff8000f428: eb 08                	jmp	0xffffffff8000f432 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x32>
ffffffff8000f42a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8000f430: f3 90                	pause
ffffffff8000f432: 0f b6 05 c7 bb 01 00 	movzx	eax, byte ptr [rip + 0x1bbc7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000f439: 84 c0                	test	al, al
ffffffff8000f43b: 75 f3                	jne	0xffffffff8000f430 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x30>
ffffffff8000f43d: 31 c0                	xor	eax, eax
ffffffff8000f43f: f0                   	lock
ffffffff8000f440: 0f b0 0d b9 bb 01 00 	cmpxchg	byte ptr [rip + 0x1bbb9], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000f447: 75 e9                	jne	0xffffffff8000f432 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x32>
ffffffff8000f449: be 08 00 00 00       	mov	esi, 0x8
ffffffff8000f44e: ba 30 00 00 00       	mov	edx, 0x30
ffffffff8000f453: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8000f45a: e8 f1 d5 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000f45f: c6 05 9a bb 01 00 00 	mov	byte ptr [rip + 0x1bb9a], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8000f466: 48 85 c0             	test	rax, rax
ffffffff8000f469: 0f 84 b4 00 00 00    	je	0xffffffff8000f523 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x123>
ffffffff8000f46f: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff8000f476: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff8000f47e: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 0x28], 0x0
ffffffff8000f486: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 0x10], 0x0
ffffffff8000f48e: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff8000f496: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8000f499: c6 43 08 02          	mov	byte ptr [rbx + 0x8], 0x2
ffffffff8000f49d: 48 89 d8             	mov	rax, rbx
ffffffff8000f4a0: 5b                   	pop	rbx
ffffffff8000f4a1: c3                   	ret
ffffffff8000f4a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8000f4b0: 31 c0                	xor	eax, eax
ffffffff8000f4b2: f0                   	lock
ffffffff8000f4b3: 0f b0 4b 08          	cmpxchg	byte ptr [rbx + 0x8], cl
ffffffff8000f4b7: 0f 84 56 ff ff ff    	je	0xffffffff8000f413 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0x13>
ffffffff8000f4bd: 0f b6 c0             	movzx	eax, al
ffffffff8000f4c0: ff 24 c5 48 41 02 80 	jmp	qword ptr [8*rax - 0x7ffdbeb8]
ffffffff8000f4c7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8000f4d0: 0f b6 43 08          	movzx	eax, byte ptr [rbx + 0x8]
ffffffff8000f4d4: 3c 01                	cmp	al, 0x1
ffffffff8000f4d6: 75 0a                	jne	0xffffffff8000f4e2 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0xe2>
ffffffff8000f4d8: f3 90                	pause
ffffffff8000f4da: 0f b6 43 08          	movzx	eax, byte ptr [rbx + 0x8]
ffffffff8000f4de: 3c 01                	cmp	al, 0x1
ffffffff8000f4e0: 74 f6                	je	0xffffffff8000f4d8 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0xd8>
ffffffff8000f4e2: 0f b6 c0             	movzx	eax, al
ffffffff8000f4e5: 85 c0                	test	eax, eax
ffffffff8000f4e7: 74 c7                	je	0xffffffff8000f4b0 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0xb0>
ffffffff8000f4e9: 83 f8 02             	cmp	eax, 0x2
ffffffff8000f4ec: 75 05                	jne	0xffffffff8000f4f3 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910+0xf3>
ffffffff8000f4ee: 48 89 d8             	mov	rax, rbx
ffffffff8000f4f1: 5b                   	pop	rbx
ffffffff8000f4f2: c3                   	ret
ffffffff8000f4f3: be 26 00 00 00       	mov	esi, 0x26
ffffffff8000f4f8: 48 c7 c7 e8 41 02 80 	mov	rdi, -0x7ffdbe18
ffffffff8000f4ff: 48 c7 c2 10 42 02 80 	mov	rdx, -0x7ffdbdf0
ffffffff8000f506: e8 e5 1b 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f50b: be 0d 00 00 00       	mov	esi, 0xd
ffffffff8000f510: 48 c7 c7 68 41 02 80 	mov	rdi, -0x7ffdbe98
ffffffff8000f517: 48 c7 c2 d0 41 02 80 	mov	rdx, -0x7ffdbe30
ffffffff8000f51e: e8 cd 1b 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f523: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8000f528: be 30 00 00 00       	mov	esi, 0x30
ffffffff8000f52d: e8 80 e6 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000f532: cc                   	int3
ffffffff8000f533: cc                   	int3
ffffffff8000f534: cc                   	int3
ffffffff8000f535: cc                   	int3
ffffffff8000f536: cc                   	int3
ffffffff8000f537: cc                   	int3
ffffffff8000f538: cc                   	int3
ffffffff8000f539: cc                   	int3
ffffffff8000f53a: cc                   	int3
ffffffff8000f53b: cc                   	int3
ffffffff8000f53c: cc                   	int3
ffffffff8000f53d: cc                   	int3
ffffffff8000f53e: cc                   	int3
ffffffff8000f53f: cc                   	int3

ffffffff8000f540 <<x86_64::addr::VirtAddr as core::fmt::LowerHex>::fmt::h7ef78997f3d83a90>:
ffffffff8000f540: e9 2b e9 00 00       	jmp	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000f545: cc                   	int3
ffffffff8000f546: cc                   	int3
ffffffff8000f547: cc                   	int3

ffffffff8000f548 <naked_syscall_handler>:
ffffffff8000f548: 41 53                	push	r11
ffffffff8000f54a: 50                   	push	rax
ffffffff8000f54b: 53                   	push	rbx
ffffffff8000f54c: 51                   	push	rcx
ffffffff8000f54d: 52                   	push	rdx
ffffffff8000f54e: 56                   	push	rsi
ffffffff8000f54f: 57                   	push	rdi
ffffffff8000f550: 55                   	push	rbp
ffffffff8000f551: 48 89 e7             	mov	rdi, rsp
ffffffff8000f554: e8 87 13 00 00       	call	0xffffffff800108e0 <syscall_handler>
ffffffff8000f559: 49 89 c3             	mov	r11, rax
ffffffff8000f55c: 5d                   	pop	rbp
ffffffff8000f55d: 5f                   	pop	rdi
ffffffff8000f55e: 5e                   	pop	rsi
ffffffff8000f55f: 5a                   	pop	rdx
ffffffff8000f560: 59                   	pop	rcx
ffffffff8000f561: 5b                   	pop	rbx
ffffffff8000f562: 58                   	pop	rax
ffffffff8000f563: 4c 89 d8             	mov	rax, r11
ffffffff8000f566: 41 5b                	pop	r11
ffffffff8000f568: 48 cf                	iretq
ffffffff8000f56a: cc                   	int3
ffffffff8000f56b: cc                   	int3

ffffffff8000f56c <taos::interrupts::idt::naked_timer_handler::h612966a4c35a83e8>:
ffffffff8000f56c: 55                   	push	rbp
ffffffff8000f56d: 41 57                	push	r15
ffffffff8000f56f: 41 56                	push	r14
ffffffff8000f571: 41 55                	push	r13
ffffffff8000f573: 41 54                	push	r12
ffffffff8000f575: 41 53                	push	r11
ffffffff8000f577: 41 52                	push	r10
ffffffff8000f579: 41 51                	push	r9
ffffffff8000f57b: 41 50                	push	r8
ffffffff8000f57d: 57                   	push	rdi
ffffffff8000f57e: 56                   	push	rsi
ffffffff8000f57f: 52                   	push	rdx
ffffffff8000f580: 51                   	push	rcx
ffffffff8000f581: 53                   	push	rbx
ffffffff8000f582: 50                   	push	rax
ffffffff8000f583: fc                   	cld
ffffffff8000f584: 48 89 e7             	mov	rdi, rsp
ffffffff8000f587: e8 74 14 00 00       	call	0xffffffff80010a00 <timer_handler>
ffffffff8000f58c: 58                   	pop	rax
ffffffff8000f58d: 5b                   	pop	rbx
ffffffff8000f58e: 59                   	pop	rcx
ffffffff8000f58f: 5a                   	pop	rdx
ffffffff8000f590: 5e                   	pop	rsi
ffffffff8000f591: 5f                   	pop	rdi
ffffffff8000f592: 41 58                	pop	r8
ffffffff8000f594: 41 59                	pop	r9
ffffffff8000f596: 41 5a                	pop	r10
ffffffff8000f598: 41 5b                	pop	r11
ffffffff8000f59a: 41 5c                	pop	r12
ffffffff8000f59c: 41 5d                	pop	r13
ffffffff8000f59e: 41 5e                	pop	r14
ffffffff8000f5a0: 41 5f                	pop	r15
ffffffff8000f5a2: 5d                   	pop	rbp
ffffffff8000f5a3: 48 cf                	iretq
ffffffff8000f5a5: cc                   	int3
ffffffff8000f5a6: cc                   	int3
ffffffff8000f5a7: cc                   	int3
ffffffff8000f5a8: cc                   	int3
ffffffff8000f5a9: cc                   	int3
ffffffff8000f5aa: cc                   	int3
ffffffff8000f5ab: cc                   	int3
ffffffff8000f5ac: cc                   	int3
ffffffff8000f5ad: cc                   	int3
ffffffff8000f5ae: cc                   	int3
ffffffff8000f5af: cc                   	int3

ffffffff8000f5b0 <<core::option::Option<T> as core::fmt::Debug>::fmt::h911913cfa07c39c7>:
ffffffff8000f5b0: f6 07 01             	test	byte ptr [rdi], 0x1
ffffffff8000f5b3: 74 29                	je	0xffffffff8000f5de <<core::option::Option<T> as core::fmt::Debug>::fmt::h911913cfa07c39c7+0x2e>
ffffffff8000f5b5: 50                   	push	rax
ffffffff8000f5b6: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000f5ba: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8000f5be: 48 89 e1             	mov	rcx, rsp
ffffffff8000f5c1: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8000f5c6: 48 89 f7             	mov	rdi, rsi
ffffffff8000f5c9: 48 c7 c6 54 20 02 80 	mov	rsi, -0x7ffddfac
ffffffff8000f5d0: 49 c7 c0 30 44 02 80 	mov	r8, -0x7ffdbbd0
ffffffff8000f5d7: e8 d4 f5 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000f5dc: 59                   	pop	rcx
ffffffff8000f5dd: c3                   	ret
ffffffff8000f5de: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8000f5e3: 48 89 f7             	mov	rdi, rsi
ffffffff8000f5e6: 48 c7 c6 68 20 02 80 	mov	rsi, -0x7ffddf98
ffffffff8000f5ed: e9 3e f4 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f5f2: cc                   	int3
ffffffff8000f5f3: cc                   	int3
ffffffff8000f5f4: cc                   	int3
ffffffff8000f5f5: cc                   	int3
ffffffff8000f5f6: cc                   	int3
ffffffff8000f5f7: cc                   	int3
ffffffff8000f5f8: cc                   	int3
ffffffff8000f5f9: cc                   	int3
ffffffff8000f5fa: cc                   	int3
ffffffff8000f5fb: cc                   	int3
ffffffff8000f5fc: cc                   	int3
ffffffff8000f5fd: cc                   	int3
ffffffff8000f5fe: cc                   	int3
ffffffff8000f5ff: cc                   	int3

ffffffff8000f600 <<x86_64::structures::idt::InterruptStackFrame as core::fmt::Debug>::fmt::h45b6642a28848021>:
ffffffff8000f600: e9 8b dc 00 00       	jmp	0xffffffff8001d290 <<x86_64::structures::idt::InterruptStackFrameValue as core::fmt::Debug>::fmt::h547349f5b4b49a5c>
ffffffff8000f605: cc                   	int3
ffffffff8000f606: cc                   	int3
ffffffff8000f607: cc                   	int3
ffffffff8000f608: cc                   	int3
ffffffff8000f609: cc                   	int3
ffffffff8000f60a: cc                   	int3
ffffffff8000f60b: cc                   	int3
ffffffff8000f60c: cc                   	int3
ffffffff8000f60d: cc                   	int3
ffffffff8000f60e: cc                   	int3
ffffffff8000f60f: cc                   	int3

ffffffff8000f610 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e>:
ffffffff8000f610: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8000f613: 48 85 c0             	test	rax, rax
ffffffff8000f616: 74 19                	je	0xffffffff8000f631 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x21>
ffffffff8000f618: 83 f8 01             	cmp	eax, 0x1
ffffffff8000f61b: 75 28                	jne	0xffffffff8000f645 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x35>
ffffffff8000f61d: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8000f622: 48 89 f7             	mov	rdi, rsi
ffffffff8000f625: 48 c7 c6 1b 45 02 80 	mov	rsi, -0x7ffdbae5
ffffffff8000f62c: e9 ff f3 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f631: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8000f636: 48 89 f7             	mov	rdi, rsi
ffffffff8000f639: 48 c7 c6 08 45 02 80 	mov	rsi, -0x7ffdbaf8
ffffffff8000f640: e9 eb f3 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f645: 50                   	push	rax
ffffffff8000f646: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000f64a: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8000f64e: 48 89 e1             	mov	rcx, rsp
ffffffff8000f651: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8000f656: 48 89 f7             	mov	rdi, rsi
ffffffff8000f659: 48 c7 c6 28 45 02 80 	mov	rsi, -0x7ffdbad8
ffffffff8000f660: 49 c7 c0 30 44 02 80 	mov	r8, -0x7ffdbbd0
ffffffff8000f667: e8 44 f5 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000f66c: 59                   	pop	rcx
ffffffff8000f66d: c3                   	ret
ffffffff8000f66e: cc                   	int3
ffffffff8000f66f: cc                   	int3

ffffffff8000f670 <<x86_64::structures::paging::mapper::FlagUpdateError as core::fmt::Debug>::fmt::h662ebedc53abc7d1.llvm.17000597947953018869>:
ffffffff8000f670: 80 3f 00             	cmp	byte ptr [rdi], 0x0
ffffffff8000f673: b8 13 00 00 00       	mov	eax, 0x13
ffffffff8000f678: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8000f67d: 48 0f 45 d0          	cmovne	rdx, rax
ffffffff8000f681: 48 c7 c1 08 45 02 80 	mov	rcx, -0x7ffdbaf8
ffffffff8000f688: 48 c7 c0 1b 45 02 80 	mov	rax, -0x7ffdbae5
ffffffff8000f68f: 48 0f 45 c1          	cmovne	rax, rcx
ffffffff8000f693: 48 89 f7             	mov	rdi, rsi
ffffffff8000f696: 48 89 c6             	mov	rsi, rax
ffffffff8000f699: e9 92 f3 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f69e: cc                   	int3
ffffffff8000f69f: cc                   	int3

ffffffff8000f6a0 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.17000597947953018869>:
ffffffff8000f6a0: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8000f6a3: 48 85 c0             	test	rax, rax
ffffffff8000f6a6: 74 19                	je	0xffffffff8000f6c1 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.17000597947953018869+0x21>
ffffffff8000f6a8: 83 f8 01             	cmp	eax, 0x1
ffffffff8000f6ab: 75 28                	jne	0xffffffff8000f6d5 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.17000597947953018869+0x35>
ffffffff8000f6ad: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8000f6b2: 48 89 f7             	mov	rdi, rsi
ffffffff8000f6b5: 48 c7 c6 08 45 02 80 	mov	rsi, -0x7ffdbaf8
ffffffff8000f6bc: e9 6f f3 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f6c1: ba 15 00 00 00       	mov	edx, 0x15
ffffffff8000f6c6: 48 89 f7             	mov	rdi, rsi
ffffffff8000f6c9: 48 c7 c6 3b 45 02 80 	mov	rsi, -0x7ffdbac5
ffffffff8000f6d0: e9 5b f3 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f6d5: 50                   	push	rax
ffffffff8000f6d6: 48 83 c7 08          	add	rdi, 0x8
ffffffff8000f6da: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8000f6de: 48 89 e1             	mov	rcx, rsp
ffffffff8000f6e1: ba 11 00 00 00       	mov	edx, 0x11
ffffffff8000f6e6: 48 89 f7             	mov	rdi, rsi
ffffffff8000f6e9: 48 c7 c6 70 45 02 80 	mov	rsi, -0x7ffdba90
ffffffff8000f6f0: 49 c7 c0 50 45 02 80 	mov	r8, -0x7ffdbab0
ffffffff8000f6f7: e8 b4 f4 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000f6fc: 59                   	pop	rcx
ffffffff8000f6fd: c3                   	ret
ffffffff8000f6fe: cc                   	int3
ffffffff8000f6ff: cc                   	int3

ffffffff8000f700 <taos::init::init::h50db611692509fc0>:
ffffffff8000f700: 41 57                	push	r15
ffffffff8000f702: 41 56                	push	r14
ffffffff8000f704: 41 54                	push	r12
ffffffff8000f706: 53                   	push	rbx
ffffffff8000f707: 48 83 ec 78          	sub	rsp, 0x78
ffffffff8000f70b: 48 c7 c7 20 b1 02 80 	mov	rdi, -0x7ffd4ee0
ffffffff8000f712: e8 d9 dc 00 00       	call	0xffffffff8001d3f0 <limine::BaseRevision::is_supported::h4d97ddcac02f0bb0>
ffffffff8000f717: 84 c0                	test	al, al
ffffffff8000f719: 0f 84 48 03 00 00    	je	0xffffffff8000fa67 <taos::init::init::h50db611692509fc0+0x367>
ffffffff8000f71f: 31 ff                	xor	edi, edi
ffffffff8000f721: e8 ca 05 00 00       	call	0xffffffff8000fcf0 <taos::interrupts::gdt::init::hd5e0114d64446afe>
ffffffff8000f726: 0f b6 05 e3 cc 01 00 	movzx	eax, byte ptr [rip + 0x1cce3] # 0xffffffff8002c410 <<taos::interrupts::idt::IDT as core::ops::deref::Deref>::deref::__stability::LAZY::h3c959f46fd8caf0f+0x1000>
ffffffff8000f72d: 3c 02                	cmp	al, 0x2
ffffffff8000f72f: 0f 85 21 03 00 00    	jne	0xffffffff8000fa56 <taos::init::init::h50db611692509fc0+0x356>
ffffffff8000f735: 48 8d 5c 24 08       	lea	rbx, [rsp + 0x8]
ffffffff8000f73a: 48 89 df             	mov	rdi, rbx
ffffffff8000f73d: 48 c7 c6 10 b4 02 80 	mov	rsi, -0x7ffd4bf0
ffffffff8000f744: e8 07 db 00 00       	call	0xffffffff8001d250 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd>
ffffffff8000f749: 0f 01 1b             	lidt	[rbx]
ffffffff8000f74c: bf 64 00 00 00       	mov	edi, 0x64
ffffffff8000f751: e8 5a 8c ff ff       	call	0xffffffff800083b0 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>
ffffffff8000f756: 3c 07                	cmp	al, 0x7
ffffffff8000f758: 0f 85 21 03 00 00    	jne	0xffffffff8000fa7f <taos::init::init::h50db611692509fc0+0x37f>
ffffffff8000f75e: 31 ff                	xor	edi, edi
ffffffff8000f760: e8 7b de ff ff       	call	0xffffffff8000d5e0 <taos::memory::init::h991c0fb9746e9f2b>
ffffffff8000f765: 31 ff                	xor	edi, edi
ffffffff8000f767: e8 e4 a6 ff ff       	call	0xffffffff80009e50 <taos::devices::init::h61c9013a5b982c46>
ffffffff8000f76c: 48 c7 c7 18 b2 02 80 	mov	rdi, -0x7ffd4de8
ffffffff8000f773: 48 c7 c6 40 2d 02 80 	mov	rsi, -0x7ffdd2c0
ffffffff8000f77a: e8 81 ce 00 00       	call	0xffffffff8001c600 <log::set_logger::h21c01bbeecbbb945>
ffffffff8000f77f: 84 c0                	test	al, al
ffffffff8000f781: 0f 85 20 03 00 00    	jne	0xffffffff8000faa7 <taos::init::init::h50db611692509fc0+0x3a7>
ffffffff8000f787: 48 c7 05 96 cc 02 00 03 00 00 00     	mov	qword ptr [rip + 0x2cc96], 0x3 # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000f792: e8 49 aa ff ff       	call	0xffffffff8000a1e0 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837>
ffffffff8000f797: 48 8b 05 8a cc 02 00 	mov	rax, qword ptr [rip + 0x2cc8a] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000f79e: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000f7a2: 72 78                	jb	0xffffffff8000f81c <taos::init::init::h50db611692509fc0+0x11c>
ffffffff8000f7a4: 48 c7 44 24 08 e8 45 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffdba18
ffffffff8000f7ad: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000f7b6: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000f7bf: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000f7c8: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000f7d1: 48 c7 c7 f8 45 02 80 	mov	rdi, -0x7ffdba08
ffffffff8000f7d8: e8 c3 cf 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000f7dd: 48 c7 44 24 38 10 46 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdb9f0
ffffffff8000f7e6: 48 c7 44 24 40 0a 00 00 00   	mov	qword ptr [rsp + 0x40], 0xa
ffffffff8000f7ef: 48 c7 44 24 48 10 46 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdb9f0
ffffffff8000f7f8: 48 c7 44 24 50 0a 00 00 00   	mov	qword ptr [rsp + 0x50], 0xa
ffffffff8000f801: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8000f806: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000f80b: 48 8d 54 24 38       	lea	rdx, [rsp + 0x38]
ffffffff8000f810: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000f815: 31 c9                	xor	ecx, ecx
ffffffff8000f817: e8 44 ce 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000f81c: 48 c7 c7 38 b1 02 80 	mov	rdi, -0x7ffd4ec8
ffffffff8000f823: e8 a8 db 00 00       	call	0xffffffff8001d3d0 <limine::request::SmpRequest::get_response::h21f02c6510d3c825>
ffffffff8000f828: 48 85 c0             	test	rax, rax
ffffffff8000f82b: 0f 84 9a 02 00 00    	je	0xffffffff8000facb <taos::init::init::h50db611692509fc0+0x3cb>
ffffffff8000f831: 49 89 c6             	mov	r14, rax
ffffffff8000f834: 4c 8b 78 10          	mov	r15, qword ptr [rax + 0x10]
ffffffff8000f838: 4c 89 7c 24 60       	mov	qword ptr [rsp + 0x60], r15
ffffffff8000f83d: 8b 58 0c             	mov	ebx, dword ptr [rax + 0xc]
ffffffff8000f840: 48 8b 05 e1 cb 02 00 	mov	rax, qword ptr [rip + 0x2cbe1] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000f847: 48 83 f8 05          	cmp	rax, 0x5
ffffffff8000f84b: 0f 85 90 00 00 00    	jne	0xffffffff8000f8e1 <taos::init::init::h50db611692509fc0+0x1e1>
ffffffff8000f851: 48 8d 44 24 60       	lea	rax, [rsp + 0x60]
ffffffff8000f856: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8000f85b: 48 c7 44 24 70 10 04 02 80   	mov	qword ptr [rsp + 0x70], -0x7ffdfbf0
ffffffff8000f864: 48 c7 44 24 08 c0 69 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd9640
ffffffff8000f86d: 48 c7 44 24 10 02 00 00 00   	mov	qword ptr [rsp + 0x10], 0x2
ffffffff8000f876: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000f87f: 48 8d 44 24 68       	lea	rax, [rsp + 0x68]
ffffffff8000f884: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8000f889: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8000f892: 48 c7 c7 e0 69 02 80 	mov	rdi, -0x7ffd9620
ffffffff8000f899: e8 02 cf 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000f89e: 48 c7 44 24 38 10 46 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdb9f0
ffffffff8000f8a7: 48 c7 44 24 40 0a 00 00 00   	mov	qword ptr [rsp + 0x40], 0xa
ffffffff8000f8b0: 48 c7 44 24 48 10 46 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdb9f0
ffffffff8000f8b9: 48 c7 44 24 50 0a 00 00 00   	mov	qword ptr [rsp + 0x50], 0xa
ffffffff8000f8c2: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8000f8c7: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000f8cc: 48 8d 54 24 38       	lea	rdx, [rsp + 0x38]
ffffffff8000f8d1: be 05 00 00 00       	mov	esi, 0x5
ffffffff8000f8d6: 31 c9                	xor	ecx, ecx
ffffffff8000f8d8: e8 83 cd 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000f8dd: 4d 8b 7e 10          	mov	r15, qword ptr [r14 + 0x10]
ffffffff8000f8e1: 4d 85 ff             	test	r15, r15
ffffffff8000f8e4: 74 4c                	je	0xffffffff8000f932 <taos::init::init::h50db611692509fc0+0x232>
ffffffff8000f8e6: 4d 8b 76 18          	mov	r14, qword ptr [r14 + 0x18]
ffffffff8000f8ea: 49 c1 e7 03          	shl	r15, 0x3
ffffffff8000f8ee: 45 31 e4             	xor	r12d, r12d
ffffffff8000f8f1: eb 16                	jmp	0xffffffff8000f909 <taos::init::init::h50db611692509fc0+0x209>
ffffffff8000f8f3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000f900: 49 83 c4 08          	add	r12, 0x8
ffffffff8000f904: 4d 39 e7             	cmp	r15, r12
ffffffff8000f907: 74 29                	je	0xffffffff8000f932 <taos::init::init::h50db611692509fc0+0x232>
ffffffff8000f909: 4b 8b 3c 26          	mov	rdi, qword ptr [r14 + r12]
ffffffff8000f90d: 39 1f                	cmp	dword ptr [rdi], ebx
ffffffff8000f90f: 74 ef                	je	0xffffffff8000f900 <taos::init::init::h50db611692509fc0+0x200>
ffffffff8000f911: 48 83 c7 10          	add	rdi, 0x10
ffffffff8000f915: 48 c7 c6 f0 fa 00 80 	mov	rsi, -0x7fff0510
ffffffff8000f91c: e8 8f da 00 00       	call	0xffffffff8001d3b0 <limine::smp::GotoAddress::write::h253e0ab8f56c7fe5>
ffffffff8000f921: eb dd                	jmp	0xffffffff8000f900 <taos::init::init::h50db611692509fc0+0x200>
ffffffff8000f923: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8000f930: f3 90                	pause
ffffffff8000f932: 48 8b 05 7f b9 01 00 	mov	rax, qword ptr [rip + 0x1b97f] # 0xffffffff8002b2b8 <taos::init::CPU_COUNT::h9b0ec5070bdfc0ec>
ffffffff8000f939: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff8000f93e: 48 ff c9             	dec	rcx
ffffffff8000f941: 48 39 c8             	cmp	rax, rcx
ffffffff8000f944: 72 ea                	jb	0xffffffff8000f930 <taos::init::init::h50db611692509fc0+0x230>
ffffffff8000f946: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff8000f94b: 0f 32                	rdmsr
ffffffff8000f94d: 89 44 24 08          	mov	dword ptr [rsp + 0x8], eax
ffffffff8000f951: 9c                   	pushfq
ffffffff8000f952: 58                   	pop	rax
ffffffff8000f953: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000f958: 75 0c                	jne	0xffffffff8000f966 <taos::init::init::h50db611692509fc0+0x266>
ffffffff8000f95a: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000f95f: e8 5c 24 ff ff       	call	0xffffffff80001dc0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804>
ffffffff8000f964: eb 0c                	jmp	0xffffffff8000f972 <taos::init::init::h50db611692509fc0+0x272>
ffffffff8000f966: fa                   	cli
ffffffff8000f967: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000f96c: e8 4f 24 ff ff       	call	0xffffffff80001dc0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804>
ffffffff8000f971: fb                   	sti
ffffffff8000f972: b0 01                	mov	al, 0x1
ffffffff8000f974: 86 05 36 b9 01 00    	xchg	byte ptr [rip + 0x1b936], al # 0xffffffff8002b2b0 <taos::init::BOOT_COMPLETE::hab3ebd8b8e240210.0>
ffffffff8000f97a: 48 8b 05 a7 ca 02 00 	mov	rax, qword ptr [rip + 0x2caa7] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000f981: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000f985: 72 78                	jb	0xffffffff8000f9ff <taos::init::init::h50db611692509fc0+0x2ff>
ffffffff8000f987: 48 c7 44 24 08 10 6a 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd95f0
ffffffff8000f990: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8000f999: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8000f9a2: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8000f9ab: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000f9b4: 48 c7 c7 20 6a 02 80 	mov	rdi, -0x7ffd95e0
ffffffff8000f9bb: e8 e0 cd 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000f9c0: 48 c7 44 24 38 10 46 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdb9f0
ffffffff8000f9c9: 48 c7 44 24 40 0a 00 00 00   	mov	qword ptr [rsp + 0x40], 0xa
ffffffff8000f9d2: 48 c7 44 24 48 10 46 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdb9f0
ffffffff8000f9db: 48 c7 44 24 50 0a 00 00 00   	mov	qword ptr [rsp + 0x50], 0xa
ffffffff8000f9e4: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8000f9e9: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8000f9ee: 48 8d 54 24 38       	lea	rdx, [rsp + 0x38]
ffffffff8000f9f3: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000f9f8: 31 c9                	xor	ecx, ecx
ffffffff8000f9fa: e8 61 cc 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000f9ff: fb                   	sti
ffffffff8000fa00: be c0 22 00 00       	mov	esi, 0x22c0
ffffffff8000fa05: 48 c7 c7 1a 46 02 80 	mov	rdi, -0x7ffdb9e6
ffffffff8000fa0c: e8 6f a9 ff ff       	call	0xffffffff8000a380 <taos::processes::process::create_process::ha385fce1049c264a>
ffffffff8000fa11: c7 44 24 38 01 00 00 00      	mov	dword ptr [rsp + 0x38], 0x1
ffffffff8000fa19: 89 44 24 08          	mov	dword ptr [rsp + 0x8], eax
ffffffff8000fa1d: 9c                   	pushfq
ffffffff8000fa1e: 58                   	pop	rax
ffffffff8000fa1f: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000fa24: 75 11                	jne	0xffffffff8000fa37 <taos::init::init::h50db611692509fc0+0x337>
ffffffff8000fa26: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff8000fa2b: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8000fa30: e8 eb 1f ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000fa35: eb 11                	jmp	0xffffffff8000fa48 <taos::init::init::h50db611692509fc0+0x348>
ffffffff8000fa37: fa                   	cli
ffffffff8000fa38: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff8000fa3d: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8000fa42: e8 d9 1f ff ff       	call	0xffffffff80001a20 <taos::events::schedule_process_on::{{closure}}::h8a04aefafa7a6759.llvm.4738937846055189804>
ffffffff8000fa47: fb                   	sti
ffffffff8000fa48: 89 d8                	mov	eax, ebx
ffffffff8000fa4a: 48 83 c4 78          	add	rsp, 0x78
ffffffff8000fa4e: 5b                   	pop	rbx
ffffffff8000fa4f: 41 5c                	pop	r12
ffffffff8000fa51: 41 5e                	pop	r14
ffffffff8000fa53: 41 5f                	pop	r15
ffffffff8000fa55: c3                   	ret
ffffffff8000fa56: 48 c7 c7 10 b4 02 80 	mov	rdi, -0x7ffd4bf0
ffffffff8000fa5d: e8 8e ed ff ff       	call	0xffffffff8000e7f0 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910>
ffffffff8000fa62: e9 ce fc ff ff       	jmp	0xffffffff8000f735 <taos::init::init::h50db611692509fc0+0x35>
ffffffff8000fa67: be 2e 00 00 00       	mov	esi, 0x2e
ffffffff8000fa6c: 48 c7 c7 81 45 02 80 	mov	rdi, -0x7ffdba7f
ffffffff8000fa73: 48 c7 c2 c0 45 02 80 	mov	rdx, -0x7ffdba40
ffffffff8000fa7a: e8 71 16 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000fa7f: 88 44 24 08          	mov	byte ptr [rsp + 0x8], al
ffffffff8000fa83: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff8000fa88: be 1a 00 00 00       	mov	esi, 0x1a
ffffffff8000fa8d: 48 c7 c7 48 71 02 80 	mov	rdi, -0x7ffd8eb8
ffffffff8000fa94: 48 c7 c1 28 71 02 80 	mov	rcx, -0x7ffd8ed8
ffffffff8000fa9b: 49 c7 c0 78 71 02 80 	mov	r8, -0x7ffd8e88
ffffffff8000faa2: e8 b9 10 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000faa7: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff8000faac: be 1c 00 00 00       	mov	esi, 0x1c
ffffffff8000fab1: 48 c7 c7 90 2d 02 80 	mov	rdi, -0x7ffdd270
ffffffff8000fab8: 48 c7 c1 70 2d 02 80 	mov	rcx, -0x7ffdd290
ffffffff8000fabf: 49 c7 c0 c0 2d 02 80 	mov	r8, -0x7ffdd240
ffffffff8000fac6: e8 95 10 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000facb: be 12 00 00 00       	mov	esi, 0x12
ffffffff8000fad0: 48 c7 c7 78 69 02 80 	mov	rdi, -0x7ffd9688
ffffffff8000fad7: 48 c7 c2 90 69 02 80 	mov	rdx, -0x7ffd9670
ffffffff8000fade: e8 7d 1b 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000fae3: cc                   	int3
ffffffff8000fae4: cc                   	int3
ffffffff8000fae5: cc                   	int3
ffffffff8000fae6: cc                   	int3
ffffffff8000fae7: cc                   	int3
ffffffff8000fae8: cc                   	int3
ffffffff8000fae9: cc                   	int3
ffffffff8000faea: cc                   	int3
ffffffff8000faeb: cc                   	int3
ffffffff8000faec: cc                   	int3
ffffffff8000faed: cc                   	int3
ffffffff8000faee: cc                   	int3
ffffffff8000faef: cc                   	int3

ffffffff8000faf0 <secondary_cpu_main>:
ffffffff8000faf0: 53                   	push	rbx
ffffffff8000faf1: 48 83 ec 70          	sub	rsp, 0x70
ffffffff8000faf5: 48 89 fb             	mov	rbx, rdi
ffffffff8000faf8: f0                   	lock
ffffffff8000faf9: 48 ff 05 b8 b7 01 00 	inc	qword ptr [rip + 0x1b7b8] # 0xffffffff8002b2b8 <taos::init::CPU_COUNT::h9b0ec5070bdfc0ec>
ffffffff8000fb00: 8b 3f                	mov	edi, dword ptr [rdi]
ffffffff8000fb02: e8 09 20 00 00       	call	0xffffffff80011b10 <taos::interrupts::init::hac2ac04b3d342161>
ffffffff8000fb07: 8b 3b                	mov	edi, dword ptr [rbx]
ffffffff8000fb09: e8 d2 da ff ff       	call	0xffffffff8000d5e0 <taos::memory::init::h991c0fb9746e9f2b>
ffffffff8000fb0e: 83 3b 00             	cmp	dword ptr [rbx], 0x0
ffffffff8000fb11: 75 50                	jne	0xffffffff8000fb63 <secondary_cpu_main+0x73>
ffffffff8000fb13: 48 c7 c7 18 b2 02 80 	mov	rdi, -0x7ffd4de8
ffffffff8000fb1a: 48 c7 c6 40 2d 02 80 	mov	rsi, -0x7ffdd2c0
ffffffff8000fb21: e8 da ca 00 00       	call	0xffffffff8001c600 <log::set_logger::h21c01bbeecbbb945>
ffffffff8000fb26: 84 c0                	test	al, al
ffffffff8000fb28: 74 24                	je	0xffffffff8000fb4e <secondary_cpu_main+0x5e>
ffffffff8000fb2a: 48 8d 54 24 18       	lea	rdx, [rsp + 0x18]
ffffffff8000fb2f: be 1c 00 00 00       	mov	esi, 0x1c
ffffffff8000fb34: 48 c7 c7 90 2d 02 80 	mov	rdi, -0x7ffdd270
ffffffff8000fb3b: 48 c7 c1 70 2d 02 80 	mov	rcx, -0x7ffdd290
ffffffff8000fb42: 49 c7 c0 c0 2d 02 80 	mov	r8, -0x7ffdd240
ffffffff8000fb49: e8 12 10 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000fb4e: 48 c7 05 cf c8 02 00 03 00 00 00     	mov	qword ptr [rip + 0x2c8cf], 0x3 # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fb59: 83 3b 00             	cmp	dword ptr [rbx], 0x0
ffffffff8000fb5c: 75 05                	jne	0xffffffff8000fb63 <secondary_cpu_main+0x73>
ffffffff8000fb5e: e8 7d a6 ff ff       	call	0xffffffff8000a1e0 <taos::processes::process::create_placeholder_process::h6869b1eb5f733837>
ffffffff8000fb63: 48 8b 05 be c8 02 00 	mov	rax, qword ptr [rip + 0x2c8be] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fb6a: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000fb6e: 0f 82 8e 00 00 00    	jb	0xffffffff8000fc02 <secondary_cpu_main+0x112>
ffffffff8000fb74: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8000fb79: 48 c7 44 24 10 f0 02 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdfd10
ffffffff8000fb82: 48 c7 44 24 18 f0 68 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffd9710
ffffffff8000fb8b: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8000fb94: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000fb9d: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000fba2: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000fba7: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8000fbb0: 48 c7 c7 10 69 02 80 	mov	rdi, -0x7ffd96f0
ffffffff8000fbb7: e8 e4 cb 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000fbbc: 48 c7 44 24 48 10 46 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdb9f0
ffffffff8000fbc5: 48 c7 44 24 50 0a 00 00 00   	mov	qword ptr [rsp + 0x50], 0xa
ffffffff8000fbce: 48 c7 44 24 58 10 46 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdb9f0
ffffffff8000fbd7: 48 c7 44 24 60 0a 00 00 00   	mov	qword ptr [rsp + 0x60], 0xa
ffffffff8000fbe0: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8000fbe5: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000fbea: 48 8d 54 24 48       	lea	rdx, [rsp + 0x48]
ffffffff8000fbef: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000fbf4: 31 c9                	xor	ecx, ecx
ffffffff8000fbf6: e8 65 ca 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000fbfb: eb 05                	jmp	0xffffffff8000fc02 <secondary_cpu_main+0x112>
ffffffff8000fbfd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8000fc00: f3 90                	pause
ffffffff8000fc02: 0f b6 05 a7 b6 01 00 	movzx	eax, byte ptr [rip + 0x1b6a7] # 0xffffffff8002b2b0 <taos::init::BOOT_COMPLETE::hab3ebd8b8e240210.0>
ffffffff8000fc09: 84 c0                	test	al, al
ffffffff8000fc0b: 74 f3                	je	0xffffffff8000fc00 <secondary_cpu_main+0x110>
ffffffff8000fc0d: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff8000fc12: 0f 32                	rdmsr
ffffffff8000fc14: 89 44 24 18          	mov	dword ptr [rsp + 0x18], eax
ffffffff8000fc18: 9c                   	pushfq
ffffffff8000fc19: 58                   	pop	rax
ffffffff8000fc1a: a9 00 02 00 00       	test	eax, 0x200
ffffffff8000fc1f: 75 1d                	jne	0xffffffff8000fc3e <secondary_cpu_main+0x14e>
ffffffff8000fc21: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000fc26: e8 95 21 ff ff       	call	0xffffffff80001dc0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804>
ffffffff8000fc2b: fb                   	sti
ffffffff8000fc2c: 48 8b 05 f5 c7 02 00 	mov	rax, qword ptr [rip + 0x2c7f5] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fc33: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000fc37: 73 23                	jae	0xffffffff8000fc5c <secondary_cpu_main+0x16c>
ffffffff8000fc39: e9 a5 00 00 00       	jmp	0xffffffff8000fce3 <secondary_cpu_main+0x1f3>
ffffffff8000fc3e: fa                   	cli
ffffffff8000fc3f: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000fc44: e8 77 21 ff ff       	call	0xffffffff80001dc0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.4738937846055189804>
ffffffff8000fc49: fb                   	sti
ffffffff8000fc4a: fb                   	sti
ffffffff8000fc4b: 48 8b 05 d6 c7 02 00 	mov	rax, qword ptr [rip + 0x2c7d6] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fc52: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8000fc56: 0f 82 87 00 00 00    	jb	0xffffffff8000fce3 <secondary_cpu_main+0x1f3>
ffffffff8000fc5c: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8000fc61: 48 c7 44 24 10 f0 02 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdfd10
ffffffff8000fc6a: 48 c7 44 24 18 40 69 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffd96c0
ffffffff8000fc73: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8000fc7c: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8000fc85: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8000fc8a: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8000fc8f: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8000fc98: 48 c7 c7 60 69 02 80 	mov	rdi, -0x7ffd96a0
ffffffff8000fc9f: e8 fc ca 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000fca4: 48 c7 44 24 48 10 46 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffdb9f0
ffffffff8000fcad: 48 c7 44 24 50 0a 00 00 00   	mov	qword ptr [rsp + 0x50], 0xa
ffffffff8000fcb6: 48 c7 44 24 58 10 46 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdb9f0
ffffffff8000fcbf: 48 c7 44 24 60 0a 00 00 00   	mov	qword ptr [rsp + 0x60], 0xa
ffffffff8000fcc8: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8000fccd: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8000fcd2: 48 8d 54 24 48       	lea	rdx, [rsp + 0x48]
ffffffff8000fcd7: be 04 00 00 00       	mov	esi, 0x4
ffffffff8000fcdc: 31 c9                	xor	ecx, ecx
ffffffff8000fcde: e8 7d c9 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000fce3: 8b 3b                	mov	edi, dword ptr [rbx]
ffffffff8000fce5: e8 06 1c ff ff       	call	0xffffffff800018f0 <taos::events::run_loop::hb7053eb66eece363>
ffffffff8000fcea: cc                   	int3
ffffffff8000fceb: cc                   	int3
ffffffff8000fcec: cc                   	int3
ffffffff8000fced: cc                   	int3
ffffffff8000fcee: cc                   	int3
ffffffff8000fcef: cc                   	int3

ffffffff8000fcf0 <taos::interrupts::gdt::init::hd5e0114d64446afe>:
ffffffff8000fcf0: 41 57                	push	r15
ffffffff8000fcf2: 41 56                	push	r14
ffffffff8000fcf4: 53                   	push	rbx
ffffffff8000fcf5: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8000fcf9: 83 ff 02             	cmp	edi, 0x2
ffffffff8000fcfc: 0f 83 48 02 00 00    	jae	0xffffffff8000ff4a <taos::interrupts::gdt::init::hd5e0114d64446afe+0x25a>
ffffffff8000fd02: 89 fb                	mov	ebx, edi
ffffffff8000fd04: 0f b6 05 f5 b6 01 00 	movzx	eax, byte ptr [rip + 0x1b6f5] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fd0b: 3c 02                	cmp	al, 0x2
ffffffff8000fd0d: 0f 85 45 01 00 00    	jne	0xffffffff8000fe58 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x168>
ffffffff8000fd13: 49 be 00 00 00 00 00 80 00 00	movabs	r14, 0x800000000000
ffffffff8000fd1d: 49 8d 86 a0 b3 02 80 	lea	rax, [r14 - 0x7ffd4c60]
ffffffff8000fd24: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000fd28: 0f 85 51 01 00 00    	jne	0xffffffff8000fe7f <taos::interrupts::gdt::init::hd5e0114d64446afe+0x18f>
ffffffff8000fd2e: 8b 05 b4 b6 01 00    	mov	eax, dword ptr [rip + 0x1b6b4] # 0xffffffff8002b3e8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x48>
ffffffff8000fd34: 8d 04 c5 ff ff ff ff 	lea	eax, [8*rax - 0x1]
ffffffff8000fd3b: 66 89 04 24          	mov	word ptr [rsp], ax
ffffffff8000fd3f: 48 c7 44 24 02 a0 b3 02 80   	mov	qword ptr [rsp + 0x2], -0x7ffd4c60
ffffffff8000fd48: 48 89 e0             	mov	rax, rsp
ffffffff8000fd4b: 0f 01 10             	lgdt	[rax]
ffffffff8000fd4e: 0f b6 05 ab b6 01 00 	movzx	eax, byte ptr [rip + 0x1b6ab] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fd55: 3c 02                	cmp	al, 0x2
ffffffff8000fd57: 0f 85 3a 01 00 00    	jne	0xffffffff8000fe97 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1a7>
ffffffff8000fd5d: 0f b7 05 90 b6 01 00 	movzx	eax, word ptr [rip + 0x1b690] # 0xffffffff8002b3f4 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x54>
ffffffff8000fd64: 50                   	push	rax
ffffffff8000fd65: 48 8d 05 03 00 00 00 	lea	rax, [rip + 0x3]        # 0xffffffff8000fd6f <taos::interrupts::gdt::init::hd5e0114d64446afe+0x7f>
ffffffff8000fd6c: 50                   	push	rax
ffffffff8000fd6d: 48 cb                	retfq
ffffffff8000fd6f: 0f b6 05 8a b6 01 00 	movzx	eax, byte ptr [rip + 0x1b68a] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fd76: 3c 02                	cmp	al, 0x2
ffffffff8000fd78: 0f 85 2a 01 00 00    	jne	0xffffffff8000fea8 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1b8>
ffffffff8000fd7e: 0f b7 05 71 b6 01 00 	movzx	eax, word ptr [rip + 0x1b671] # 0xffffffff8002b3f6 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x56>
ffffffff8000fd85: 66 8e c0             	mov	es, ax
ffffffff8000fd88: 0f b6 05 71 b6 01 00 	movzx	eax, byte ptr [rip + 0x1b671] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fd8f: 3c 02                	cmp	al, 0x2
ffffffff8000fd91: 0f 85 22 01 00 00    	jne	0xffffffff8000feb9 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1c9>
ffffffff8000fd97: 0f b7 05 58 b6 01 00 	movzx	eax, word ptr [rip + 0x1b658] # 0xffffffff8002b3f6 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x56>
ffffffff8000fd9e: 66 8e d8             	mov	ds, ax
ffffffff8000fda1: 0f b6 05 58 b6 01 00 	movzx	eax, byte ptr [rip + 0x1b658] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fda8: 3c 02                	cmp	al, 0x2
ffffffff8000fdaa: 0f 85 1a 01 00 00    	jne	0xffffffff8000feca <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1da>
ffffffff8000fdb0: 0f b7 05 3f b6 01 00 	movzx	eax, word ptr [rip + 0x1b63f] # 0xffffffff8002b3f6 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x56>
ffffffff8000fdb7: 66 8e d0             	mov	ss, ax
ffffffff8000fdba: 0f b6 05 3f b6 01 00 	movzx	eax, byte ptr [rip + 0x1b63f] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fdc1: 3c 02                	cmp	al, 0x2
ffffffff8000fdc3: 0f 85 12 01 00 00    	jne	0xffffffff8000fedb <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1eb>
ffffffff8000fdc9: 0f b7 05 26 b6 01 00 	movzx	eax, word ptr [rip + 0x1b626] # 0xffffffff8002b3f6 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x56>
ffffffff8000fdd0: 66 8e e0             	mov	fs, ax
ffffffff8000fdd3: 0f b6 05 26 b6 01 00 	movzx	eax, byte ptr [rip + 0x1b626] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fdda: 3c 02                	cmp	al, 0x2
ffffffff8000fddc: 0f 85 0a 01 00 00    	jne	0xffffffff8000feec <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1fc>
ffffffff8000fde2: 0f b7 05 0d b6 01 00 	movzx	eax, word ptr [rip + 0x1b60d] # 0xffffffff8002b3f6 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x56>
ffffffff8000fde9: 66 8e e8             	mov	gs, ax
ffffffff8000fdec: 0f b6 05 0d b6 01 00 	movzx	eax, byte ptr [rip + 0x1b60d] # 0xffffffff8002b400 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.17000597947953018869+0x60>
ffffffff8000fdf3: 3c 02                	cmp	al, 0x2
ffffffff8000fdf5: 0f 85 02 01 00 00    	jne	0xffffffff8000fefd <taos::interrupts::gdt::init::hd5e0114d64446afe+0x20d>
ffffffff8000fdfb: 49 bf 00 00 00 00 00 00 01 00	movabs	r15, 0x1000000000000
ffffffff8000fe05: 89 db                	mov	ebx, ebx
ffffffff8000fe07: 0f b7 84 1b f0 b3 02 80      	movzx	eax, word ptr [rbx + rbx - 0x7ffd4c10]
ffffffff8000fe0f: 0f 00 d8             	ltr	ax
ffffffff8000fe12: 0f b6 05 7f b5 01 00 	movzx	eax, byte ptr [rip + 0x1b57f] # 0xffffffff8002b398 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.17000597947953018869+0xd0>
ffffffff8000fe19: 3c 02                	cmp	al, 0x2
ffffffff8000fe1b: 0f 85 ed 00 00 00    	jne	0xffffffff8000ff0e <taos::interrupts::gdt::init::hd5e0114d64446afe+0x21e>
ffffffff8000fe21: 48 6b c3 68          	imul	rax, rbx, 0x68
ffffffff8000fe25: 4a 8d 0c 30          	lea	rcx, [rax + r14]
ffffffff8000fe29: 48 81 c1 c8 b2 02 80 	add	rcx, -0x7ffd4d38
ffffffff8000fe30: 4c 39 f9             	cmp	rcx, r15
ffffffff8000fe33: 0f 83 f9 00 00 00    	jae	0xffffffff8000ff32 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x242>
ffffffff8000fe39: 48 8d 80 c8 b2 02 80 	lea	rax, [rax - 0x7ffd4d38]
ffffffff8000fe40: 48 89 c2             	mov	rdx, rax
ffffffff8000fe43: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8000fe47: b9 02 01 00 c0       	mov	ecx, 0xc0000102
ffffffff8000fe4c: 0f 30                	wrmsr
ffffffff8000fe4e: 48 83 c4 30          	add	rsp, 0x30
ffffffff8000fe52: 5b                   	pop	rbx
ffffffff8000fe53: 41 5e                	pop	r14
ffffffff8000fe55: 41 5f                	pop	r15
ffffffff8000fe57: c3                   	ret
ffffffff8000fe58: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fe5f: e8 3c f1 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fe64: 49 be 00 00 00 00 00 80 00 00	movabs	r14, 0x800000000000
ffffffff8000fe6e: 49 8d 86 a0 b3 02 80 	lea	rax, [r14 - 0x7ffd4c60]
ffffffff8000fe75: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8000fe79: 0f 84 af fe ff ff    	je	0xffffffff8000fd2e <taos::interrupts::gdt::init::hd5e0114d64446afe+0x3e>
ffffffff8000fe7f: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000fe84: 48 c7 c7 f8 7a 02 80 	mov	rdi, -0x7ffd8508
ffffffff8000fe8b: 48 c7 c2 90 7b 02 80 	mov	rdx, -0x7ffd8470
ffffffff8000fe92: e8 59 12 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000fe97: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fe9e: e8 fd f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fea3: e9 b5 fe ff ff       	jmp	0xffffffff8000fd5d <taos::interrupts::gdt::init::hd5e0114d64446afe+0x6d>
ffffffff8000fea8: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000feaf: e8 ec f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000feb4: e9 c5 fe ff ff       	jmp	0xffffffff8000fd7e <taos::interrupts::gdt::init::hd5e0114d64446afe+0x8e>
ffffffff8000feb9: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fec0: e8 db f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fec5: e9 cd fe ff ff       	jmp	0xffffffff8000fd97 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xa7>
ffffffff8000feca: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fed1: e8 ca f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fed6: e9 d5 fe ff ff       	jmp	0xffffffff8000fdb0 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xc0>
ffffffff8000fedb: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fee2: e8 b9 f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fee7: e9 dd fe ff ff       	jmp	0xffffffff8000fdc9 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xd9>
ffffffff8000feec: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000fef3: e8 a8 f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000fef8: e9 e5 fe ff ff       	jmp	0xffffffff8000fde2 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xf2>
ffffffff8000fefd: 48 c7 c7 a0 b3 02 80 	mov	rdi, -0x7ffd4c60
ffffffff8000ff04: e8 97 f0 ff ff       	call	0xffffffff8000efa0 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.9791016283376756910>
ffffffff8000ff09: e9 ed fe ff ff       	jmp	0xffffffff8000fdfb <taos::interrupts::gdt::init::hd5e0114d64446afe+0x10b>
ffffffff8000ff0e: 48 c7 c7 c8 b2 02 80 	mov	rdi, -0x7ffd4d38
ffffffff8000ff15: e8 e6 e3 ff ff       	call	0xffffffff8000e300 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.9791016283376756910>
ffffffff8000ff1a: 48 6b c3 68          	imul	rax, rbx, 0x68
ffffffff8000ff1e: 4a 8d 0c 30          	lea	rcx, [rax + r14]
ffffffff8000ff22: 48 81 c1 c8 b2 02 80 	add	rcx, -0x7ffd4d38
ffffffff8000ff29: 4c 39 f9             	cmp	rcx, r15
ffffffff8000ff2c: 0f 82 07 ff ff ff    	jb	0xffffffff8000fe39 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x149>
ffffffff8000ff32: be 36 00 00 00       	mov	esi, 0x36
ffffffff8000ff37: 48 c7 c7 90 6a 02 80 	mov	rdi, -0x7ffd9570
ffffffff8000ff3e: 48 c7 c2 c8 6a 02 80 	mov	rdx, -0x7ffd9538
ffffffff8000ff45: e8 a6 11 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000ff4a: 48 c7 04 24 50 6a 02 80      	mov	qword ptr [rsp], -0x7ffd95b0
ffffffff8000ff52: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff8000ff5b: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8000ff64: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff8000ff6d: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8000ff76: 48 89 e7             	mov	rdi, rsp
ffffffff8000ff79: 48 c7 c6 78 6a 02 80 	mov	rsi, -0x7ffd9588
ffffffff8000ff80: e8 eb 10 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000ff85: cc                   	int3
ffffffff8000ff86: cc                   	int3
ffffffff8000ff87: cc                   	int3
ffffffff8000ff88: cc                   	int3
ffffffff8000ff89: cc                   	int3
ffffffff8000ff8a: cc                   	int3
ffffffff8000ff8b: cc                   	int3
ffffffff8000ff8c: cc                   	int3
ffffffff8000ff8d: cc                   	int3
ffffffff8000ff8e: cc                   	int3
ffffffff8000ff8f: cc                   	int3

ffffffff8000ff90 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9>:
ffffffff8000ff90: 53                   	push	rbx
ffffffff8000ff91: 48 83 ec 10          	sub	rsp, 0x10
ffffffff8000ff95: 0f b6 05 74 c4 01 00 	movzx	eax, byte ptr [rip + 0x1c474] # 0xffffffff8002c410 <<taos::interrupts::idt::IDT as core::ops::deref::Deref>::deref::__stability::LAZY::h3c959f46fd8caf0f+0x1000>
ffffffff8000ff9c: 3c 02                	cmp	al, 0x2
ffffffff8000ff9e: 75 1d                	jne	0xffffffff8000ffbd <taos::interrupts::idt::init_idt::hdcaef96650e17ee9+0x2d>
ffffffff8000ffa0: 48 8d 5c 24 06       	lea	rbx, [rsp + 0x6]
ffffffff8000ffa5: 48 89 df             	mov	rdi, rbx
ffffffff8000ffa8: 48 c7 c6 10 b4 02 80 	mov	rsi, -0x7ffd4bf0
ffffffff8000ffaf: e8 9c d2 00 00       	call	0xffffffff8001d250 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd>
ffffffff8000ffb4: 0f 01 1b             	lidt	[rbx]
ffffffff8000ffb7: 48 83 c4 10          	add	rsp, 0x10
ffffffff8000ffbb: 5b                   	pop	rbx
ffffffff8000ffbc: c3                   	ret
ffffffff8000ffbd: 48 c7 c7 10 b4 02 80 	mov	rdi, -0x7ffd4bf0
ffffffff8000ffc4: e8 27 e8 ff ff       	call	0xffffffff8000e7f0 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.9791016283376756910>
ffffffff8000ffc9: eb d5                	jmp	0xffffffff8000ffa0 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9+0x10>
ffffffff8000ffcb: cc                   	int3
ffffffff8000ffcc: cc                   	int3
ffffffff8000ffcd: cc                   	int3
ffffffff8000ffce: cc                   	int3
ffffffff8000ffcf: cc                   	int3

ffffffff8000ffd0 <taos::interrupts::idt::breakpoint_handler::h6e0a8de6c541cbd9>:
ffffffff8000ffd0: 41 53                	push	r11
ffffffff8000ffd2: 41 52                	push	r10
ffffffff8000ffd4: 41 51                	push	r9
ffffffff8000ffd6: 41 50                	push	r8
ffffffff8000ffd8: 57                   	push	rdi
ffffffff8000ffd9: 56                   	push	rsi
ffffffff8000ffda: 52                   	push	rdx
ffffffff8000ffdb: 51                   	push	rcx
ffffffff8000ffdc: 50                   	push	rax
ffffffff8000ffdd: 48 81 ec 80 00 00 00 	sub	rsp, 0x80
ffffffff8000ffe4: fc                   	cld
ffffffff8000ffe5: 48 8d 84 24 c8 00 00 00      	lea	rax, [rsp + 0xc8]
ffffffff8000ffed: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8000fff2: 48 c7 44 24 10 00 f6 00 80   	mov	qword ptr [rsp + 0x10], -0x7fff0a00
ffffffff8000fffb: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff80010004: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff8001000d: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff80010016: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff80010020: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff80010025: c6 44 24 78 03       	mov	byte ptr [rsp + 0x78], 0x3
ffffffff8001002a: 48 c7 44 24 18 f8 6a 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffd9508
ffffffff80010033: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8001003c: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff80010041: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80010046: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff8001004f: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80010054: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80010059: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff80010062: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff80010067: e8 a4 82 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8001006c: 48 81 c4 80 00 00 00 	add	rsp, 0x80
ffffffff80010073: 58                   	pop	rax
ffffffff80010074: 59                   	pop	rcx
ffffffff80010075: 5a                   	pop	rdx
ffffffff80010076: 5e                   	pop	rsi
ffffffff80010077: 5f                   	pop	rdi
ffffffff80010078: 41 58                	pop	r8
ffffffff8001007a: 41 59                	pop	r9
ffffffff8001007c: 41 5a                	pop	r10
ffffffff8001007e: 41 5b                	pop	r11
ffffffff80010080: 48 cf                	iretq
ffffffff80010082: cc                   	int3
ffffffff80010083: cc                   	int3
ffffffff80010084: cc                   	int3
ffffffff80010085: cc                   	int3
ffffffff80010086: cc                   	int3
ffffffff80010087: cc                   	int3
ffffffff80010088: cc                   	int3
ffffffff80010089: cc                   	int3
ffffffff8001008a: cc                   	int3
ffffffff8001008b: cc                   	int3
ffffffff8001008c: cc                   	int3
ffffffff8001008d: cc                   	int3
ffffffff8001008e: cc                   	int3
ffffffff8001008f: cc                   	int3

ffffffff80010090 <taos::interrupts::idt::double_fault_handler::h54b511e9a236be7f>:
ffffffff80010090: 50                   	push	rax
ffffffff80010091: 41 53                	push	r11
ffffffff80010093: 41 52                	push	r10
ffffffff80010095: 41 51                	push	r9
ffffffff80010097: 41 50                	push	r8
ffffffff80010099: 57                   	push	rdi
ffffffff8001009a: 56                   	push	rsi
ffffffff8001009b: 52                   	push	rdx
ffffffff8001009c: 51                   	push	rcx
ffffffff8001009d: 50                   	push	rax
ffffffff8001009e: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff800100a5: fc                   	cld
ffffffff800100a6: 48 8d 84 24 e0 00 00 00      	lea	rax, [rsp + 0xe0]
ffffffff800100ae: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff800100b3: 48 c7 44 24 18 00 f6 00 80   	mov	qword ptr [rsp + 0x18], -0x7fff0a00
ffffffff800100bc: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff800100c5: 48 c7 44 24 60 02 00 00 00   	mov	qword ptr [rsp + 0x60], 0x2
ffffffff800100ce: 48 c7 44 24 70 00 00 00 00   	mov	qword ptr [rsp + 0x70], 0x0
ffffffff800100d7: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff800100e1: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff800100e6: c6 84 24 80 00 00 00 03      	mov	byte ptr [rsp + 0x80], 0x3
ffffffff800100ee: 48 c7 44 24 20 30 6b 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffd94d0
ffffffff800100f7: 48 c7 44 24 28 01 00 00 00   	mov	qword ptr [rsp + 0x28], 0x1
ffffffff80010100: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff80010105: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001010a: 48 c7 44 24 48 01 00 00 00   	mov	qword ptr [rsp + 0x48], 0x1
ffffffff80010113: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80010118: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001011d: 48 c7 44 24 38 01 00 00 00   	mov	qword ptr [rsp + 0x38], 0x1
ffffffff80010126: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff8001012b: 48 c7 c6 58 6b 02 80 	mov	rsi, -0x7ffd94a8
ffffffff80010132: e8 39 0f 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80010137: cc                   	int3
ffffffff80010138: cc                   	int3
ffffffff80010139: cc                   	int3
ffffffff8001013a: cc                   	int3
ffffffff8001013b: cc                   	int3
ffffffff8001013c: cc                   	int3
ffffffff8001013d: cc                   	int3
ffffffff8001013e: cc                   	int3
ffffffff8001013f: cc                   	int3

ffffffff80010140 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca>:
ffffffff80010140: 50                   	push	rax
ffffffff80010141: 55                   	push	rbp
ffffffff80010142: 41 57                	push	r15
ffffffff80010144: 41 56                	push	r14
ffffffff80010146: 41 55                	push	r13
ffffffff80010148: 41 54                	push	r12
ffffffff8001014a: 41 53                	push	r11
ffffffff8001014c: 41 52                	push	r10
ffffffff8001014e: 41 51                	push	r9
ffffffff80010150: 41 50                	push	r8
ffffffff80010152: 57                   	push	rdi
ffffffff80010153: 56                   	push	rsi
ffffffff80010154: 52                   	push	rdx
ffffffff80010155: 51                   	push	rcx
ffffffff80010156: 53                   	push	rbx
ffffffff80010157: 50                   	push	rax
ffffffff80010158: 48 81 ec 00 10 00 00 	sub	rsp, 0x1000
ffffffff8001015f: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff80010167: 48 81 ec a8 00 00 00 	sub	rsp, 0xa8
ffffffff8001016e: fc                   	cld
ffffffff8001016f: 49 bf 00 00 00 00 00 80 00 00	movabs	r15, 0x800000000000
ffffffff80010179: 0f 20 d0             	mov	rax, cr2
ffffffff8001017c: 48 89 c1             	mov	rcx, rax
ffffffff8001017f: 4c 01 f9             	add	rcx, r15
ffffffff80010182: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff80010186: 0f 85 9c 06 00 00    	jne	0xffffffff80010828 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x6e8>
ffffffff8001018c: 48 bd 00 00 00 00 00 00 01 00	movabs	rbp, 0x1000000000000
ffffffff80010196: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001019b: 41 0f 20 de          	mov	r14, cr3
ffffffff8001019f: 0f b6 05 02 b1 01 00 	movzx	eax, byte ptr [rip + 0x1b102] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff800101a6: 3c 02                	cmp	al, 0x2
ffffffff800101a8: 0f 85 ee 03 00 00    	jne	0xffffffff8001059c <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x45c>
ffffffff800101ae: 48 8b 1d eb b0 01 00 	mov	rbx, qword ptr [rip + 0x1b0eb] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800101b5: 4a 8d 04 3b          	lea	rax, [rbx + r15]
ffffffff800101b9: 48 39 e8             	cmp	rax, rbp
ffffffff800101bc: 0f 83 1c 04 00 00    	jae	0xffffffff800105de <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x49e>
ffffffff800101c2: 49 bd 00 f0 ff ff ff ff 0f 00	movabs	r13, 0xffffffffff000
ffffffff800101cc: 4d 21 ee             	and	r14, r13
ffffffff800101cf: 4c 01 f3             	add	rbx, r14
ffffffff800101d2: 4a 8d 04 3b          	lea	rax, [rbx + r15]
ffffffff800101d6: 48 39 e8             	cmp	rax, rbp
ffffffff800101d9: 0f 83 ff 03 00 00    	jae	0xffffffff800105de <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x49e>
ffffffff800101df: 0f b6 05 c2 b0 01 00 	movzx	eax, byte ptr [rip + 0x1b0c2] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff800101e6: 3c 02                	cmp	al, 0x2
ffffffff800101e8: 0f 85 d0 03 00 00    	jne	0xffffffff800105be <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x47e>
ffffffff800101ee: 48 8b 05 ab b0 01 00 	mov	rax, qword ptr [rip + 0x1b0ab] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800101f5: 4a 8d 0c 38          	lea	rcx, [rax + r15]
ffffffff800101f9: 48 39 e9             	cmp	rcx, rbp
ffffffff800101fc: 0f 83 dc 03 00 00    	jae	0xffffffff800105de <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x49e>
ffffffff80010202: 48 8d 8c 24 30 11 00 00      	lea	rcx, [rsp + 0x1130]
ffffffff8001020a: 48 89 5c 24 20       	mov	qword ptr [rsp + 0x20], rbx
ffffffff8001020f: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80010214: 48 8b 41 18          	mov	rax, qword ptr [rcx + 0x18]
ffffffff80010218: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8001021d: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80010222: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80010227: 48 c7 44 24 38 f0 de 01 80   	mov	qword ptr [rsp + 0x38], -0x7ffe2110
ffffffff80010230: 48 8d 84 24 28 11 00 00      	lea	rax, [rsp + 0x1128]
ffffffff80010238: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001023d: 48 c7 44 24 48 90 d3 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe2c70
ffffffff80010246: 48 89 4c 24 50       	mov	qword ptr [rsp + 0x50], rcx
ffffffff8001024b: 48 c7 44 24 58 00 f6 00 80   	mov	qword ptr [rsp + 0x58], -0x7fff0a00
ffffffff80010254: 48 c7 84 24 a8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa8], 0x2
ffffffff80010260: 48 c7 84 24 b8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xb8], 0x2
ffffffff8001026c: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc8], 0x0
ffffffff80010278: 49 bc 20 00 00 00 04 00 00 00	movabs	r12, 0x400000020
ffffffff80010282: 4c 89 a4 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r12
ffffffff8001028a: c6 84 24 d8 00 00 00 03      	mov	byte ptr [rsp + 0xd8], 0x3
ffffffff80010292: 48 c7 84 24 e0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xe0], 0x2
ffffffff8001029e: 48 c7 84 24 f0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xf0], 0x2
ffffffff800102aa: 48 c7 84 24 00 01 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x100], 0x1
ffffffff800102b6: 48 c7 84 24 08 01 00 00 20 00 00 00  	mov	qword ptr [rsp + 0x108], 0x20
ffffffff800102c2: c6 84 24 10 01 00 00 03      	mov	byte ptr [rsp + 0x110], 0x3
ffffffff800102ca: 48 c7 84 24 18 01 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x118], 0x2
ffffffff800102d6: 48 c7 84 24 28 01 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x128], 0x2
ffffffff800102e2: 48 c7 84 24 38 01 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x138], 0x2
ffffffff800102ee: 4c 89 a4 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], r12
ffffffff800102f6: c6 84 24 48 01 00 00 03      	mov	byte ptr [rsp + 0x148], 0x3
ffffffff800102fe: 48 c7 44 24 68 a8 6b 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd9458
ffffffff80010307: 48 c7 44 24 70 04 00 00 00   	mov	qword ptr [rsp + 0x70], 0x4
ffffffff80010310: 48 8d 84 24 a8 00 00 00      	lea	rax, [rsp + 0xa8]
ffffffff80010318: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rax
ffffffff80010320: 48 c7 84 24 90 00 00 00 03 00 00 00  	mov	qword ptr [rsp + 0x90], 0x3
ffffffff8001032c: 48 8d 44 24 30       	lea	rax, [rsp + 0x30]
ffffffff80010331: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff80010336: 48 c7 84 24 80 00 00 00 03 00 00 00  	mov	qword ptr [rsp + 0x80], 0x3
ffffffff80010342: 4c 8d 74 24 68       	lea	r14, [rsp + 0x68]
ffffffff80010347: 4c 89 f7             	mov	rdi, r14
ffffffff8001034a: e8 c1 7f ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8001034f: 48 8b 5c 24 18       	mov	rbx, qword ptr [rsp + 0x18]
ffffffff80010354: 49 01 df             	add	r15, rbx
ffffffff80010357: 49 39 ef             	cmp	r15, rbp
ffffffff8001035a: 0f 83 7e 02 00 00    	jae	0xffffffff800105de <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x49e>
ffffffff80010360: 4c 8d bc 24 a8 00 00 00      	lea	r15, [rsp + 0xa8]
ffffffff80010368: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff8001036d: 4c 89 ff             	mov	rdi, r15
ffffffff80010370: 48 89 da             	mov	rdx, rbx
ffffffff80010373: e8 68 4e 00 00       	call	0xffffffff800151e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>
ffffffff80010378: 83 bc 24 a8 00 00 00 02      	cmp	dword ptr [rsp + 0xa8], 0x2
ffffffff80010380: 77 39                	ja	0xffffffff800103bb <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x27b>
ffffffff80010382: 48 8b 84 24 b8 00 00 00      	mov	rax, qword ptr [rsp + 0xb8]
ffffffff8001038a: 48 03 84 24 b0 00 00 00      	add	rax, qword ptr [rsp + 0xb0]
ffffffff80010392: 49 81 c5 00 10 00 00 	add	r13, 0x1000
ffffffff80010399: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001039e: 4c 39 e8             	cmp	rax, r13
ffffffff800103a1: 72 1a                	jb	0xffffffff800103bd <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x27d>
ffffffff800103a3: be 43 00 00 00       	mov	esi, 0x43
ffffffff800103a8: 48 c7 c7 50 44 02 80 	mov	rdi, -0x7ffdbbb0
ffffffff800103af: 48 c7 c2 f0 44 02 80 	mov	rdx, -0x7ffdbb10
ffffffff800103b6: e8 35 0d 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800103bb: 31 c9                	xor	ecx, ecx
ffffffff800103bd: 48 81 e3 00 f0 ff ff 	and	rbx, -0x1000
ffffffff800103c4: 48 89 8c 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rcx
ffffffff800103cc: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rax
ffffffff800103d4: 48 8d 84 24 98 00 00 00      	lea	rax, [rsp + 0x98]
ffffffff800103dc: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff800103e1: 48 c7 44 24 70 b0 f5 00 80   	mov	qword ptr [rsp + 0x70], -0x7fff0a50
ffffffff800103ea: 48 c7 84 24 a8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xa8], 0x2
ffffffff800103f6: 48 c7 84 24 b8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xb8], 0x2
ffffffff80010402: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc8], 0x0
ffffffff8001040e: 4c 89 a4 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r12
ffffffff80010416: c6 84 24 d8 00 00 00 03      	mov	byte ptr [rsp + 0xd8], 0x3
ffffffff8001041e: 48 c7 44 24 30 08 6c 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffd93f8
ffffffff80010427: 48 c7 44 24 38 02 00 00 00   	mov	qword ptr [rsp + 0x38], 0x2
ffffffff80010430: 4c 89 7c 24 50       	mov	qword ptr [rsp + 0x50], r15
ffffffff80010435: 48 c7 44 24 58 01 00 00 00   	mov	qword ptr [rsp + 0x58], 0x1
ffffffff8001043e: 4c 89 74 24 40       	mov	qword ptr [rsp + 0x40], r14
ffffffff80010443: 48 c7 44 24 48 01 00 00 00   	mov	qword ptr [rsp + 0x48], 0x1
ffffffff8001044c: 4c 8d 74 24 30       	lea	r14, [rsp + 0x30]
ffffffff80010451: 4c 89 f7             	mov	rdi, r14
ffffffff80010454: e8 b7 7e ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80010459: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff80010461: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff80010466: 48 89 da             	mov	rdx, rbx
ffffffff80010469: e8 72 4d 00 00       	call	0xffffffff800151e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>
ffffffff8001046e: 48 83 bc 24 a8 00 00 00 00   	cmp	qword ptr [rsp + 0xa8], 0x0
ffffffff80010477: 0f 85 da 03 00 00    	jne	0xffffffff80010857 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x717>
ffffffff8001047d: 4c 8b bc 24 c0 00 00 00      	mov	r15, qword ptr [rsp + 0xc0]
ffffffff80010485: 44 89 f8             	mov	eax, r15d
ffffffff80010488: 25 03 02 00 00       	and	eax, 0x203
ffffffff8001048d: 3d 01 02 00 00       	cmp	eax, 0x201
ffffffff80010492: 0f 85 c1 00 00 00    	jne	0xffffffff80010559 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x419>
ffffffff80010498: 48 8b 84 24 28 11 00 00      	mov	rax, qword ptr [rsp + 0x1128]
ffffffff800104a0: 83 e0 02             	and	eax, 0x2
ffffffff800104a3: 0f 84 b0 00 00 00    	je	0xffffffff80010559 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x419>
ffffffff800104a9: 48 c7 84 24 a8 00 00 00 48 6c 02 80  	mov	qword ptr [rsp + 0xa8], -0x7ffd93b8
ffffffff800104b5: 48 c7 84 24 b0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x1
ffffffff800104c1: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc8], 0x0
ffffffff800104cd: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff800104d2: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff800104da: 48 c7 84 24 c0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc0], 0x0
ffffffff800104e6: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff800104ee: e8 1d 7e ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800104f3: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff800104fb: ba 00 10 00 00       	mov	edx, 0x1000
ffffffff80010500: 48 89 de             	mov	rsi, rbx
ffffffff80010503: ff 15 27 bf 02 00    	call	qword ptr [rip + 0x2bf27] # 0xffffffff8003c430
ffffffff80010509: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff8001050e: e8 2d ce ff ff       	call	0xffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>
ffffffff80010513: f6 44 24 30 01       	test	byte ptr [rsp + 0x30], 0x1
ffffffff80010518: 0f 84 5d 03 00 00    	je	0xffffffff8001087b <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x73b>
ffffffff8001051e: 49 81 e7 fd fd ff ff 	and	r15, -0x203
ffffffff80010525: 49 83 cf 02          	or	r15, 0x2
ffffffff80010529: 48 8b 54 24 38       	mov	rdx, qword ptr [rsp + 0x38]
ffffffff8001052e: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff80010533: 48 89 df             	mov	rdi, rbx
ffffffff80010536: 4c 89 f9             	mov	rcx, r15
ffffffff80010539: e8 42 07 00 00       	call	0xffffffff80010c80 <taos::memory::paging::update_mapping::he8b16e73817762f8>
ffffffff8001053e: 48 8d b4 24 a8 00 00 00      	lea	rsi, [rsp + 0xa8]
ffffffff80010546: ba 00 10 00 00       	mov	edx, 0x1000
ffffffff8001054b: 48 89 df             	mov	rdi, rbx
ffffffff8001054e: ff 15 dc be 02 00    	call	qword ptr [rip + 0x2bedc] # 0xffffffff8003c430
ffffffff80010554: e9 82 02 00 00       	jmp	0xffffffff800107db <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x69b>
ffffffff80010559: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8001055e: 48 83 c0 c0          	add	rax, -0x40
ffffffff80010562: 4c 8b 7c 24 18       	mov	r15, qword ptr [rsp + 0x18]
ffffffff80010567: 4c 39 f8             	cmp	rax, r15
ffffffff8001056a: 0f 87 9f 00 00 00    	ja	0xffffffff8001060f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x4cf>
ffffffff80010570: 0f b6 05 31 ad 01 00 	movzx	eax, byte ptr [rip + 0x1ad31] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff80010577: 3c 02                	cmp	al, 0x2
ffffffff80010579: 75 7b                	jne	0xffffffff800105f6 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x4b6>
ffffffff8001057b: 4c 3b 3d 1e ad 01 00 	cmp	r15, qword ptr [rip + 0x1ad1e] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80010582: 0f 83 87 00 00 00    	jae	0xffffffff8001060f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x4cf>
ffffffff80010588: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff8001058d: 48 89 df             	mov	rdi, rbx
ffffffff80010590: 31 d2                	xor	edx, edx
ffffffff80010592: e8 c9 05 00 00       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff80010597: e9 3f 02 00 00       	jmp	0xffffffff800107db <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x69b>
ffffffff8001059c: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff800105a3: e8 68 ed ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff800105a8: 48 8b 1d f1 ac 01 00 	mov	rbx, qword ptr [rip + 0x1acf1] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800105af: 4a 8d 04 3b          	lea	rax, [rbx + r15]
ffffffff800105b3: 48 39 e8             	cmp	rax, rbp
ffffffff800105b6: 0f 82 06 fc ff ff    	jb	0xffffffff800101c2 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x82>
ffffffff800105bc: eb 20                	jmp	0xffffffff800105de <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x49e>
ffffffff800105be: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff800105c5: e8 46 ed ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff800105ca: 48 8b 05 cf ac 01 00 	mov	rax, qword ptr [rip + 0x1accf] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800105d1: 4a 8d 0c 38          	lea	rcx, [rax + r15]
ffffffff800105d5: 48 39 e9             	cmp	rcx, rbp
ffffffff800105d8: 0f 82 24 fc ff ff    	jb	0xffffffff80010202 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0xc2>
ffffffff800105de: be 36 00 00 00       	mov	esi, 0x36
ffffffff800105e3: 48 c7 c7 90 6a 02 80 	mov	rdi, -0x7ffd9570
ffffffff800105ea: 48 c7 c2 c8 6a 02 80 	mov	rdx, -0x7ffd9538
ffffffff800105f1: e8 fa 0a 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800105f6: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff800105fd: e8 0e ed ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80010602: 4c 3b 3d 97 ac 01 00 	cmp	r15, qword ptr [rip + 0x1ac97] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80010609: 0f 82 79 ff ff ff    	jb	0xffffffff80010588 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x448>
ffffffff8001060f: e8 ac 9a ff ff       	call	0xffffffff8000a0c0 <taos::processes::process::get_current_pid::h7a1bafd59875523a>
ffffffff80010614: 89 c5                	mov	ebp, eax
ffffffff80010616: 0f b6 05 23 ac 01 00 	movzx	eax, byte ptr [rip + 0x1ac23] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff8001061d: 3c 02                	cmp	al, 0x2
ffffffff8001061f: 0f 85 da 01 00 00    	jne	0xffffffff800107ff <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x6bf>
ffffffff80010625: 4c 8b 3d 0c ac 01 00 	mov	r15, qword ptr [rip + 0x1ac0c] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff8001062c: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80010631: 31 c0                	xor	eax, eax
ffffffff80010633: f0                   	lock
ffffffff80010634: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff80010639: 74 11                	je	0xffffffff8001064c <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x50c>
ffffffff8001063b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80010640: f3 90                	pause
ffffffff80010642: 31 c0                	xor	eax, eax
ffffffff80010644: f0                   	lock
ffffffff80010645: 49 0f b1 4f 10       	cmpxchg	qword ptr [r15 + 0x10], rcx
ffffffff8001064a: 75 f4                	jne	0xffffffff80010640 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x500>
ffffffff8001064c: 49 8b 47 18          	mov	rax, qword ptr [r15 + 0x18]
ffffffff80010650: 48 85 c0             	test	rax, rax
ffffffff80010653: 0f 84 b7 01 00 00    	je	0xffffffff80010810 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x6d0>
ffffffff80010659: 49 8b 4f 20          	mov	rcx, qword ptr [r15 + 0x20]
ffffffff8001065d: ba ff 00 00 00       	mov	edx, 0xff
ffffffff80010662: 0f b7 b8 8e 00 00 00 	movzx	edi, word ptr [rax + 0x8e]
ffffffff80010669: 41 89 f8             	mov	r8d, edi
ffffffff8001066c: 41 c1 e0 02          	shl	r8d, 0x2
ffffffff80010670: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff80010677: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80010680: 4d 85 c0             	test	r8, r8
ffffffff80010683: 74 2b                	je	0xffffffff800106b0 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x570>
ffffffff80010685: 45 31 c9             	xor	r9d, r9d
ffffffff80010688: 39 6c b0 64          	cmp	dword ptr [rax + 4*rsi + 0x64], ebp
ffffffff8001068c: 41 0f 95 c1          	setne	r9b
ffffffff80010690: 44 0f 47 ca          	cmova	r9d, edx
ffffffff80010694: 48 ff c6             	inc	rsi
ffffffff80010697: 49 83 c0 fc          	add	r8, -0x4
ffffffff8001069b: 41 80 f9 01          	cmp	r9b, 0x1
ffffffff8001069f: 74 df                	je	0xffffffff80010680 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x540>
ffffffff800106a1: 41 0f b6 f9          	movzx	edi, r9b
ffffffff800106a5: 85 ff                	test	edi, edi
ffffffff800106a7: 74 1e                	je	0xffffffff800106c7 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x587>
ffffffff800106a9: eb 08                	jmp	0xffffffff800106b3 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x573>
ffffffff800106ab: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800106b0: 48 89 fe             	mov	rsi, rdi
ffffffff800106b3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800106b7: 0f 82 53 01 00 00    	jb	0xffffffff80010810 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x6d0>
ffffffff800106bd: 48 8b 84 f0 90 00 00 00      	mov	rax, qword ptr [rax + 8*rsi + 0x90]
ffffffff800106c5: eb 9b                	jmp	0xffffffff80010662 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x522>
ffffffff800106c7: 48 8b 44 f0 08       	mov	rax, qword ptr [rax + 8*rsi + 0x8]
ffffffff800106cc: 48 83 78 20 00       	cmp	qword ptr [rax + 0x20], 0x0
ffffffff800106d1: 0f 84 fe 00 00 00    	je	0xffffffff800107d5 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x695>
ffffffff800106d7: 4c 8b 60 18          	mov	r12, qword ptr [rax + 0x18]
ffffffff800106db: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff800106e0: 49 3b 44 24 18       	cmp	rax, qword ptr [r12 + 0x18]
ffffffff800106e5: 0f 82 ea 00 00 00    	jb	0xffffffff800107d5 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x695>
ffffffff800106eb: 49 3b 44 24 20       	cmp	rax, qword ptr [r12 + 0x20]
ffffffff800106f0: 0f 83 df 00 00 00    	jae	0xffffffff800107d5 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x695>
ffffffff800106f6: 4d 8d 6c 24 18       	lea	r13, [r12 + 0x18]
ffffffff800106fb: 4c 89 6c 24 30       	mov	qword ptr [rsp + 0x30], r13
ffffffff80010700: 48 c7 44 24 38 10 04 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdfbf0
ffffffff80010709: 48 c7 84 24 a8 00 00 00 d8 6c 02 80  	mov	qword ptr [rsp + 0xa8], -0x7ffd9328
ffffffff80010715: 48 c7 84 24 b0 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x2
ffffffff80010721: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xc8], 0x0
ffffffff8001072d: 4c 89 b4 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], r14
ffffffff80010735: 48 c7 84 24 c0 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xc0], 0x1
ffffffff80010741: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff80010749: e8 c2 7b ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8001074e: 4c 8b 74 24 18       	mov	r14, qword ptr [rsp + 0x18]
ffffffff80010753: 4d 2b 75 00          	sub	r14, qword ptr [r13]
ffffffff80010757: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff8001075f: e8 dc cb ff ff       	call	0xffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>
ffffffff80010764: f6 84 24 a8 00 00 00 01      	test	byte ptr [rsp + 0xa8], 0x1
ffffffff8001076c: 0f 84 21 01 00 00    	je	0xffffffff80010893 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x753>
ffffffff80010772: 49 c1 ee 0c          	shr	r14, 0xc
ffffffff80010776: 49 8b 74 24 10       	mov	rsi, qword ptr [r12 + 0x10]
ffffffff8001077b: 49 39 f6             	cmp	r14, rsi
ffffffff8001077e: 0f 83 27 01 00 00    	jae	0xffffffff800108ab <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x76b>
ffffffff80010784: 48 8b 94 24 b0 00 00 00      	mov	rdx, qword ptr [rsp + 0xb0]
ffffffff8001078c: 49 8b 44 24 08       	mov	rax, qword ptr [r12 + 0x8]
ffffffff80010791: 42 c6 04 30 01       	mov	byte ptr [rax + r14], 0x1
ffffffff80010796: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff8001079b: b9 07 00 00 00       	mov	ecx, 0x7
ffffffff800107a0: 48 89 df             	mov	rdi, rbx
ffffffff800107a3: e8 d8 04 00 00       	call	0xffffffff80010c80 <taos::memory::paging::update_mapping::he8b16e73817762f8>
ffffffff800107a8: 49 8b 74 24 10       	mov	rsi, qword ptr [r12 + 0x10]
ffffffff800107ad: 49 39 f6             	cmp	r14, rsi
ffffffff800107b0: 0f 83 04 01 00 00    	jae	0xffffffff800108ba <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x77a>
ffffffff800107b6: 49 8b 44 24 08       	mov	rax, qword ptr [r12 + 0x8]
ffffffff800107bb: 42 80 3c 30 00       	cmp	byte ptr [rax + r14], 0x0
ffffffff800107c0: 75 13                	jne	0xffffffff800107d5 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x695>
ffffffff800107c2: 49 8b 7c 24 28       	mov	rdi, qword ptr [r12 + 0x28]
ffffffff800107c7: 48 8d 47 01          	lea	rax, [rdi + 0x1]
ffffffff800107cb: 48 83 f8 05          	cmp	rax, 0x5
ffffffff800107cf: 0f 83 f4 00 00 00    	jae	0xffffffff800108c9 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x789>
ffffffff800107d5: f0                   	lock
ffffffff800107d6: 49 83 67 10 fc       	and	qword ptr [r15 + 0x10], -0x4
ffffffff800107db: 48 81 c4 a8 10 00 00 	add	rsp, 0x10a8
ffffffff800107e2: 58                   	pop	rax
ffffffff800107e3: 5b                   	pop	rbx
ffffffff800107e4: 59                   	pop	rcx
ffffffff800107e5: 5a                   	pop	rdx
ffffffff800107e6: 5e                   	pop	rsi
ffffffff800107e7: 5f                   	pop	rdi
ffffffff800107e8: 41 58                	pop	r8
ffffffff800107ea: 41 59                	pop	r9
ffffffff800107ec: 41 5a                	pop	r10
ffffffff800107ee: 41 5b                	pop	r11
ffffffff800107f0: 41 5c                	pop	r12
ffffffff800107f2: 41 5d                	pop	r13
ffffffff800107f4: 41 5e                	pop	r14
ffffffff800107f6: 41 5f                	pop	r15
ffffffff800107f8: 5d                   	pop	rbp
ffffffff800107f9: 48 83 c4 10          	add	rsp, 0x10
ffffffff800107fd: 48 cf                	iretq
ffffffff800107ff: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff80010806: e8 f5 eb ff ff       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff8001080b: e9 15 fe ff ff       	jmp	0xffffffff80010625 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x4e5>
ffffffff80010810: be 24 00 00 00       	mov	esi, 0x24
ffffffff80010815: 48 c7 c7 88 6c 02 80 	mov	rdi, -0x7ffd9378
ffffffff8001081c: 48 c7 c2 b0 6c 02 80 	mov	rdx, -0x7ffd9350
ffffffff80010823: e8 38 0e 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010828: 48 89 84 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rax
ffffffff80010830: 48 8d 94 24 a8 00 00 00      	lea	rdx, [rsp + 0xa8]
ffffffff80010838: be 1c 00 00 00       	mov	esi, 0x1c
ffffffff8001083d: 48 c7 c7 e0 6d 02 80 	mov	rdi, -0x7ffd9220
ffffffff80010844: 48 c7 c1 c0 6d 02 80 	mov	rcx, -0x7ffd9240
ffffffff8001084b: 49 c7 c0 00 6e 02 80 	mov	r8, -0x7ffd9200
ffffffff80010852: e8 09 03 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80010857: 48 8d 54 24 10       	lea	rdx, [rsp + 0x10]
ffffffff8001085c: be 18 00 00 00       	mov	esi, 0x18
ffffffff80010861: 48 c7 c7 90 6d 02 80 	mov	rdi, -0x7ffd9270
ffffffff80010868: 48 c7 c1 70 6d 02 80 	mov	rcx, -0x7ffd9290
ffffffff8001086f: 49 c7 c0 a8 6d 02 80 	mov	r8, -0x7ffd9258
ffffffff80010876: e8 e5 02 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8001087b: be 11 00 00 00       	mov	esi, 0x11
ffffffff80010880: 48 c7 c7 58 6c 02 80 	mov	rdi, -0x7ffd93a8
ffffffff80010887: 48 c7 c2 70 6c 02 80 	mov	rdx, -0x7ffd9390
ffffffff8001088e: e8 cd 0d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010893: be 18 00 00 00       	mov	esi, 0x18
ffffffff80010898: 48 c7 c7 f8 6c 02 80 	mov	rdi, -0x7ffd9308
ffffffff8001089f: 48 c7 c2 10 6d 02 80 	mov	rdx, -0x7ffd92f0
ffffffff800108a6: e8 b5 0d 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800108ab: 4c 89 f7             	mov	rdi, r14
ffffffff800108ae: 48 c7 c2 28 6d 02 80 	mov	rdx, -0x7ffd92d8
ffffffff800108b5: e8 d7 08 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800108ba: 4c 89 f7             	mov	rdi, r14
ffffffff800108bd: 48 c7 c2 40 6d 02 80 	mov	rdx, -0x7ffd92c0
ffffffff800108c4: e8 c8 08 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800108c9: be 04 00 00 00       	mov	esi, 0x4
ffffffff800108ce: 48 c7 c2 58 6d 02 80 	mov	rdx, -0x7ffd92a8
ffffffff800108d5: e8 b7 08 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff800108da: cc                   	int3
ffffffff800108db: cc                   	int3
ffffffff800108dc: cc                   	int3
ffffffff800108dd: cc                   	int3
ffffffff800108de: cc                   	int3
ffffffff800108df: cc                   	int3

ffffffff800108e0 <syscall_handler>:
ffffffff800108e0: 55                   	push	rbp
ffffffff800108e1: 53                   	push	rbx
ffffffff800108e2: 48 83 ec 58          	sub	rsp, 0x58
ffffffff800108e6: 8b 6f 30             	mov	ebp, dword ptr [rdi + 0x30]
ffffffff800108e9: 48 8b 5f 28          	mov	rbx, qword ptr [rdi + 0x28]
ffffffff800108ed: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff800108f1: 4c 8b 5f 18          	mov	r11, qword ptr [rdi + 0x18]
ffffffff800108f5: 4c 8b 57 10          	mov	r10, qword ptr [rdi + 0x10]
ffffffff800108f9: 4c 8b 0f             	mov	r9, qword ptr [rdi]
ffffffff800108fc: 4c 8b 47 08          	mov	r8, qword ptr [rdi + 0x8]
ffffffff80010900: b9 0b 08 00 00       	mov	ecx, 0x80b
ffffffff80010905: 31 c0                	xor	eax, eax
ffffffff80010907: 31 d2                	xor	edx, edx
ffffffff80010909: 0f 30                	wrmsr
ffffffff8001090b: 83 fd 03             	cmp	ebp, 0x3
ffffffff8001090e: 74 2d                	je	0xffffffff8001093d <syscall_handler+0x5d>
ffffffff80010910: 83 fd 04             	cmp	ebp, 0x4
ffffffff80010913: 74 13                	je	0xffffffff80010928 <syscall_handler+0x48>
ffffffff80010915: 83 fd 3c             	cmp	ebp, 0x3c
ffffffff80010918: 75 1c                	jne	0xffffffff80010936 <syscall_handler+0x56>
ffffffff8001091a: 48 89 df             	mov	rdi, rbx
ffffffff8001091d: 48 83 c4 58          	add	rsp, 0x58
ffffffff80010921: 5b                   	pop	rbx
ffffffff80010922: 5d                   	pop	rbp
ffffffff80010923: e9 28 a9 ff ff       	jmp	0xffffffff8000b250 <taos::syscalls::syscall_handlers::sys_exit::h512f33c828c23afb>
ffffffff80010928: 4c 89 da             	mov	rdx, r11
ffffffff8001092b: 4c 89 d1             	mov	rcx, r10
ffffffff8001092e: e8 7d 08 00 00       	call	0xffffffff800111b0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b>
ffffffff80010933: 48 89 d0             	mov	rax, rdx
ffffffff80010936: 48 83 c4 58          	add	rsp, 0x58
ffffffff8001093a: 5b                   	pop	rbx
ffffffff8001093b: 5d                   	pop	rbp
ffffffff8001093c: c3                   	ret
ffffffff8001093d: 48 89 df             	mov	rdi, rbx
ffffffff80010940: e8 fb 0d 01 00       	call	0xffffffff80021740 <strlen>
ffffffff80010945: 48 8d 50 01          	lea	rdx, [rax + 0x1]
ffffffff80010949: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8001094e: 48 89 de             	mov	rsi, rbx
ffffffff80010951: e8 8a 02 01 00       	call	0xffffffff80020be0 <core::ffi::c_str::CStr::to_str::hb93d7efd1cbb2ca0>
ffffffff80010956: 83 7c 24 18 01       	cmp	dword ptr [rsp + 0x18], 0x1
ffffffff8001095b: 74 6b                	je	0xffffffff800109c8 <syscall_handler+0xe8>
ffffffff8001095d: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80010962: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff80010967: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8001096c: 48 89 4c 24 50       	mov	qword ptr [rsp + 0x50], rcx
ffffffff80010971: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff80010976: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8001097b: 48 c7 44 24 10 b0 9d 00 80   	mov	qword ptr [rsp + 0x10], -0x7fff6250
ffffffff80010984: 48 c7 44 24 18 48 39 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc6b8
ffffffff8001098d: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff80010996: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8001099f: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff800109a4: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800109a9: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff800109b2: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff800109b7: e8 54 79 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800109bc: 31 c0                	xor	eax, eax
ffffffff800109be: 48 89 c0             	mov	rax, rax
ffffffff800109c1: 48 83 c4 58          	add	rsp, 0x58
ffffffff800109c5: 5b                   	pop	rbx
ffffffff800109c6: 5d                   	pop	rbp
ffffffff800109c7: c3                   	ret
ffffffff800109c8: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff800109cd: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff800109d2: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff800109d7: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800109dc: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff800109e1: be 14 00 00 00       	mov	esi, 0x14
ffffffff800109e6: 48 c7 c7 88 39 02 80 	mov	rdi, -0x7ffdc678
ffffffff800109ed: 48 c7 c1 68 39 02 80 	mov	rcx, -0x7ffdc698
ffffffff800109f4: 49 c7 c0 a0 39 02 80 	mov	r8, -0x7ffdc660
ffffffff800109fb: e8 60 01 01 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>

ffffffff80010a00 <timer_handler>:
ffffffff80010a00: 53                   	push	rbx
ffffffff80010a01: 48 89 fb             	mov	rbx, rdi
ffffffff80010a04: e8 77 19 ff ff       	call	0xffffffff80002380 <taos::events::inc_runner_clock::h004dbaba4c520971>
ffffffff80010a09: 48 89 df             	mov	rdi, rbx
ffffffff80010a0c: e8 0f a1 ff ff       	call	0xffffffff8000ab20 <taos::processes::process::preempt_process::h6f424ea80533199d>
ffffffff80010a11: b9 0b 08 00 00       	mov	ecx, 0x80b
ffffffff80010a16: 31 c0                	xor	eax, eax
ffffffff80010a18: 31 d2                	xor	edx, edx
ffffffff80010a1a: 0f 30                	wrmsr
ffffffff80010a1c: 5b                   	pop	rbx
ffffffff80010a1d: c3                   	ret
ffffffff80010a1e: cc                   	int3
ffffffff80010a1f: cc                   	int3

ffffffff80010a20 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc>:
ffffffff80010a20: 41 53                	push	r11
ffffffff80010a22: 41 52                	push	r10
ffffffff80010a24: 41 51                	push	r9
ffffffff80010a26: 41 50                	push	r8
ffffffff80010a28: 57                   	push	rdi
ffffffff80010a29: 56                   	push	rsi
ffffffff80010a2a: 52                   	push	rdx
ffffffff80010a2b: 51                   	push	rcx
ffffffff80010a2c: 50                   	push	rax
ffffffff80010a2d: fc                   	cld
ffffffff80010a2e: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80010a33: 0f 32                	rdmsr
ffffffff80010a35: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff80010a39: 89 c7                	mov	edi, eax
ffffffff80010a3b: 48 09 d7             	or	rdi, rdx
ffffffff80010a3e: b1 01                	mov	cl, 0x1
ffffffff80010a40: 31 c0                	xor	eax, eax
ffffffff80010a42: f0                   	lock
ffffffff80010a43: 0f b0 0d d6 a7 01 00 	cmpxchg	byte ptr [rip + 0x1a7d6], cl # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010a4a: 75 06                	jne	0xffffffff80010a52 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x32>
ffffffff80010a4c: eb 11                	jmp	0xffffffff80010a5f <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x3f>
ffffffff80010a4e: 66 90                	nop
ffffffff80010a50: f3 90                	pause
ffffffff80010a52: 0f b6 05 c7 a7 01 00 	movzx	eax, byte ptr [rip + 0x1a7c7] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010a59: 84 c0                	test	al, al
ffffffff80010a5b: 75 f3                	jne	0xffffffff80010a50 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x30>
ffffffff80010a5d: eb e1                	jmp	0xffffffff80010a40 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x20>
ffffffff80010a5f: 48 83 ff 01          	cmp	rdi, 0x1
ffffffff80010a63: 77 3d                	ja	0xffffffff80010aa2 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x82>
ffffffff80010a65: 48 8b 04 fd 28 b2 02 80      	mov	rax, qword ptr [8*rdi - 0x7ffd4dd8]
ffffffff80010a6d: 48 85 c0             	test	rax, rax
ffffffff80010a70: 74 0f                	je	0xffffffff80010a81 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x61>
ffffffff80010a72: 0f 01 38             	invlpg	byte ptr [rax]
ffffffff80010a75: 48 c7 04 fd 28 b2 02 80 00 00 00 00  	mov	qword ptr [8*rdi - 0x7ffd4dd8], 0x0
ffffffff80010a81: c6 05 98 a7 01 00 00 	mov	byte ptr [rip + 0x1a798], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010a88: b9 0b 08 00 00       	mov	ecx, 0x80b
ffffffff80010a8d: 31 c0                	xor	eax, eax
ffffffff80010a8f: 31 d2                	xor	edx, edx
ffffffff80010a91: 0f 30                	wrmsr
ffffffff80010a93: 58                   	pop	rax
ffffffff80010a94: 59                   	pop	rcx
ffffffff80010a95: 5a                   	pop	rdx
ffffffff80010a96: 5e                   	pop	rsi
ffffffff80010a97: 5f                   	pop	rdi
ffffffff80010a98: 41 58                	pop	r8
ffffffff80010a9a: 41 59                	pop	r9
ffffffff80010a9c: 41 5a                	pop	r10
ffffffff80010a9e: 41 5b                	pop	r11
ffffffff80010aa0: 48 cf                	iretq
ffffffff80010aa2: be 02 00 00 00       	mov	esi, 0x2
ffffffff80010aa7: 48 c7 c2 18 6e 02 80 	mov	rdx, -0x7ffd91e8
ffffffff80010aae: e8 de 06 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80010ab3: cc                   	int3
ffffffff80010ab4: cc                   	int3
ffffffff80010ab5: cc                   	int3
ffffffff80010ab6: cc                   	int3
ffffffff80010ab7: cc                   	int3
ffffffff80010ab8: cc                   	int3
ffffffff80010ab9: cc                   	int3
ffffffff80010aba: cc                   	int3
ffffffff80010abb: cc                   	int3
ffffffff80010abc: cc                   	int3
ffffffff80010abd: cc                   	int3
ffffffff80010abe: cc                   	int3
ffffffff80010abf: cc                   	int3

ffffffff80010ac0 <taos::memory::paging::init::h00a848d77a170e5f>:
ffffffff80010ac0: 53                   	push	rbx
ffffffff80010ac1: 0f 20 d9             	mov	rcx, cr3
ffffffff80010ac4: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff80010ace: 48 21 c8             	and	rax, rcx
ffffffff80010ad1: 0f b6 0d d0 a7 01 00 	movzx	ecx, byte ptr [rip + 0x1a7d0] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff80010ad8: 80 f9 02             	cmp	cl, 0x2
ffffffff80010adb: 75 2f                	jne	0xffffffff80010b0c <taos::memory::paging::init::h00a848d77a170e5f+0x4c>
ffffffff80010add: 48 03 05 bc a7 01 00 	add	rax, qword ptr [rip + 0x1a7bc] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80010ae4: 48 b9 00 00 00 00 00 80 00 00	movabs	rcx, 0x800000000000
ffffffff80010aee: 48 01 c1             	add	rcx, rax
ffffffff80010af1: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff80010af5: 75 44                	jne	0xffffffff80010b3b <taos::memory::paging::init::h00a848d77a170e5f+0x7b>
ffffffff80010af7: 0f b6 0d aa a7 01 00 	movzx	ecx, byte ptr [rip + 0x1a7aa] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff80010afe: 80 f9 02             	cmp	cl, 0x2
ffffffff80010b01: 75 1d                	jne	0xffffffff80010b20 <taos::memory::paging::init::h00a848d77a170e5f+0x60>
ffffffff80010b03: 48 8b 15 96 a7 01 00 	mov	rdx, qword ptr [rip + 0x1a796] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80010b0a: 5b                   	pop	rbx
ffffffff80010b0b: c3                   	ret
ffffffff80010b0c: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff80010b13: 48 89 c3             	mov	rbx, rax
ffffffff80010b16: e8 f5 e7 ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80010b1b: 48 89 d8             	mov	rax, rbx
ffffffff80010b1e: eb bd                	jmp	0xffffffff80010add <taos::memory::paging::init::h00a848d77a170e5f+0x1d>
ffffffff80010b20: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff80010b27: 48 89 c3             	mov	rbx, rax
ffffffff80010b2a: e8 e1 e7 ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80010b2f: 48 89 d8             	mov	rax, rbx
ffffffff80010b32: 48 8b 15 67 a7 01 00 	mov	rdx, qword ptr [rip + 0x1a767] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80010b39: 5b                   	pop	rbx
ffffffff80010b3a: c3                   	ret
ffffffff80010b3b: be 36 00 00 00       	mov	esi, 0x36
ffffffff80010b40: 48 c7 c7 90 6a 02 80 	mov	rdi, -0x7ffd9570
ffffffff80010b47: 48 c7 c2 c8 6a 02 80 	mov	rdx, -0x7ffd9538
ffffffff80010b4e: e8 9d 05 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80010b53: cc                   	int3
ffffffff80010b54: cc                   	int3
ffffffff80010b55: cc                   	int3
ffffffff80010b56: cc                   	int3
ffffffff80010b57: cc                   	int3
ffffffff80010b58: cc                   	int3
ffffffff80010b59: cc                   	int3
ffffffff80010b5a: cc                   	int3
ffffffff80010b5b: cc                   	int3
ffffffff80010b5c: cc                   	int3
ffffffff80010b5d: cc                   	int3
ffffffff80010b5e: cc                   	int3
ffffffff80010b5f: cc                   	int3

ffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>:
ffffffff80010b60: 41 57                	push	r15
ffffffff80010b62: 41 56                	push	r14
ffffffff80010b64: 41 55                	push	r13
ffffffff80010b66: 41 54                	push	r12
ffffffff80010b68: 53                   	push	rbx
ffffffff80010b69: 48 83 ec 30          	sub	rsp, 0x30
ffffffff80010b6d: 49 89 cc             	mov	r12, rcx
ffffffff80010b70: 49 89 d5             	mov	r13, rdx
ffffffff80010b73: 49 89 f7             	mov	r15, rsi
ffffffff80010b76: 49 89 fe             	mov	r14, rdi
ffffffff80010b79: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80010b7e: e8 bd c7 ff ff       	call	0xffffffff8000d340 <taos::memory::frame_allocator::alloc_frame::h155abf2c7ee3e9b0>
ffffffff80010b83: f6 44 24 10 01       	test	byte ptr [rsp + 0x10], 0x1
ffffffff80010b88: 74 7f                	je	0xffffffff80010c09 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xa9>
ffffffff80010b8a: 48 8b 5c 24 18       	mov	rbx, qword ptr [rsp + 0x18]
ffffffff80010b8f: 41 f6 c5 01          	test	r13b, 0x1
ffffffff80010b93: 41 b8 07 00 00 00    	mov	r8d, 0x7
ffffffff80010b99: 4d 0f 45 c4          	cmovne	r8, r12
ffffffff80010b9d: b1 01                	mov	cl, 0x1
ffffffff80010b9f: 90                   	nop
ffffffff80010ba0: 31 c0                	xor	eax, eax
ffffffff80010ba2: f0                   	lock
ffffffff80010ba3: 0f b0 0d 8e a4 01 00 	cmpxchg	byte ptr [rip + 0x1a48e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010baa: 75 06                	jne	0xffffffff80010bb2 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x52>
ffffffff80010bac: eb 11                	jmp	0xffffffff80010bbf <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x5f>
ffffffff80010bae: 66 90                	nop
ffffffff80010bb0: f3 90                	pause
ffffffff80010bb2: 0f b6 05 7f a4 01 00 	movzx	eax, byte ptr [rip + 0x1a47f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010bb9: 84 c0                	test	al, al
ffffffff80010bbb: 75 f3                	jne	0xffffffff80010bb0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x50>
ffffffff80010bbd: eb e1                	jmp	0xffffffff80010ba0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x40>
ffffffff80010bbf: 83 3d 7a a4 01 00 03 	cmp	dword ptr [rip + 0x1a47a], 0x3 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80010bc6: 74 59                	je	0xffffffff80010c21 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xc1>
ffffffff80010bc8: 45 89 c1             	mov	r9d, r8d
ffffffff80010bcb: 41 83 e1 07          	and	r9d, 0x7
ffffffff80010bcf: 48 c7 04 24 40 b0 02 80      	mov	qword ptr [rsp], -0x7ffd4fc0
ffffffff80010bd7: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80010bdc: 4c 89 fe             	mov	rsi, r15
ffffffff80010bdf: 4c 89 f2             	mov	rdx, r14
ffffffff80010be2: 48 89 d9             	mov	rcx, rbx
ffffffff80010be5: e8 86 49 00 00       	call	0xffffffff80015570 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab>
ffffffff80010bea: 83 7c 24 20 03       	cmp	dword ptr [rsp + 0x20], 0x3
ffffffff80010bef: 75 48                	jne	0xffffffff80010c39 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xd9>
ffffffff80010bf1: c6 05 40 a4 01 00 00 	mov	byte ptr [rip + 0x1a440], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010bf8: 48 89 d8             	mov	rax, rbx
ffffffff80010bfb: 48 83 c4 30          	add	rsp, 0x30
ffffffff80010bff: 5b                   	pop	rbx
ffffffff80010c00: 41 5c                	pop	r12
ffffffff80010c02: 41 5d                	pop	r13
ffffffff80010c04: 41 5e                	pop	r14
ffffffff80010c06: 41 5f                	pop	r15
ffffffff80010c08: c3                   	ret
ffffffff80010c09: be 0e 00 00 00       	mov	esi, 0xe
ffffffff80010c0e: 48 c7 c7 30 6e 02 80 	mov	rdi, -0x7ffd91d0
ffffffff80010c15: 48 c7 c2 58 6e 02 80 	mov	rdx, -0x7ffd91a8
ffffffff80010c1c: e8 3f 0a 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010c21: be 20 00 00 00       	mov	esi, 0x20
ffffffff80010c26: 48 c7 c7 48 24 02 80 	mov	rdi, -0x7ffddbb8
ffffffff80010c2d: 48 c7 c2 70 6e 02 80 	mov	rdx, -0x7ffd9190
ffffffff80010c34: e8 27 0a 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010c39: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80010c3e: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff80010c43: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80010c48: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80010c4d: 48 8d 54 24 10       	lea	rdx, [rsp + 0x10]
ffffffff80010c52: be 0e 00 00 00       	mov	esi, 0xe
ffffffff80010c57: 48 c7 c7 a8 6e 02 80 	mov	rdi, -0x7ffd9158
ffffffff80010c5e: 48 c7 c1 88 6e 02 80 	mov	rcx, -0x7ffd9178
ffffffff80010c65: 49 c7 c0 b8 6e 02 80 	mov	r8, -0x7ffd9148
ffffffff80010c6c: e8 ef fe 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80010c71: cc                   	int3
ffffffff80010c72: cc                   	int3
ffffffff80010c73: cc                   	int3
ffffffff80010c74: cc                   	int3
ffffffff80010c75: cc                   	int3
ffffffff80010c76: cc                   	int3
ffffffff80010c77: cc                   	int3
ffffffff80010c78: cc                   	int3
ffffffff80010c79: cc                   	int3
ffffffff80010c7a: cc                   	int3
ffffffff80010c7b: cc                   	int3
ffffffff80010c7c: cc                   	int3
ffffffff80010c7d: cc                   	int3
ffffffff80010c7e: cc                   	int3
ffffffff80010c7f: cc                   	int3

ffffffff80010c80 <taos::memory::paging::update_mapping::he8b16e73817762f8>:
ffffffff80010c80: 41 57                	push	r15
ffffffff80010c82: 41 56                	push	r14
ffffffff80010c84: 53                   	push	rbx
ffffffff80010c85: 48 83 ec 60          	sub	rsp, 0x60
ffffffff80010c89: 49 89 ce             	mov	r14, rcx
ffffffff80010c8c: 49 89 f7             	mov	r15, rsi
ffffffff80010c8f: 48 89 fb             	mov	rbx, rdi
ffffffff80010c92: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80010c97: b1 01                	mov	cl, 0x1
ffffffff80010c99: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80010ca0: 31 c0                	xor	eax, eax
ffffffff80010ca2: f0                   	lock
ffffffff80010ca3: 0f b0 0d 8e a3 01 00 	cmpxchg	byte ptr [rip + 0x1a38e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010caa: 75 06                	jne	0xffffffff80010cb2 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x32>
ffffffff80010cac: eb 11                	jmp	0xffffffff80010cbf <taos::memory::paging::update_mapping::he8b16e73817762f8+0x3f>
ffffffff80010cae: 66 90                	nop
ffffffff80010cb0: f3 90                	pause
ffffffff80010cb2: 0f b6 05 7f a3 01 00 	movzx	eax, byte ptr [rip + 0x1a37f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010cb9: 84 c0                	test	al, al
ffffffff80010cbb: 75 f3                	jne	0xffffffff80010cb0 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x30>
ffffffff80010cbd: eb e1                	jmp	0xffffffff80010ca0 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x20>
ffffffff80010cbf: 83 3d 7a a3 01 00 02 	cmp	dword ptr [rip + 0x1a37a], 0x2 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80010cc6: 74 3e                	je	0xffffffff80010d06 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x86>
ffffffff80010cc8: 48 c7 44 24 30 c0 3d 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffdc240
ffffffff80010cd1: 48 c7 44 24 38 01 00 00 00   	mov	qword ptr [rsp + 0x38], 0x1
ffffffff80010cda: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff80010ce3: 48 c7 44 24 40 08 00 00 00   	mov	qword ptr [rsp + 0x40], 0x8
ffffffff80010cec: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 0x48], 0x0
ffffffff80010cf5: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80010cfa: 48 c7 c6 f0 3d 02 80 	mov	rsi, -0x7ffdc210
ffffffff80010d01: e8 6a 03 01 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80010d06: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff80010d0b: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff80010d0f: 48 8b 35 52 a3 01 00 	mov	rsi, qword ptr [rip + 0x1a352] # 0xffffffff8002b068 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x30>
ffffffff80010d16: 48 39 f7             	cmp	rdi, rsi
ffffffff80010d19: 0f 83 07 02 00 00    	jae	0xffffffff80010f26 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x2a6>
ffffffff80010d1f: 49 83 ce 01          	or	r14, 0x1
ffffffff80010d23: 48 8b 05 36 a3 01 00 	mov	rax, qword ptr [rip + 0x1a336] # 0xffffffff8002b060 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x28>
ffffffff80010d2a: 0f b7 04 b8          	movzx	eax, word ptr [rax + 4*rdi]
ffffffff80010d2e: 66 85 c0             	test	ax, ax
ffffffff80010d31: c6 05 00 a3 01 00 00 	mov	byte ptr [rip + 0x1a300], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010d38: 0f 95 44 24 17       	setne	byte ptr [rsp + 0x17]
ffffffff80010d3d: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80010d42: 4c 89 fe             	mov	rsi, r15
ffffffff80010d45: 48 89 da             	mov	rdx, rbx
ffffffff80010d48: 4c 89 f1             	mov	rcx, r14
ffffffff80010d4b: e8 00 46 00 00       	call	0xffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff80010d50: 80 7c 24 30 01       	cmp	byte ptr [rsp + 0x30], 0x1
ffffffff80010d55: 0f 84 d7 01 00 00    	je	0xffffffff80010f32 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x2b2>
ffffffff80010d5b: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80010d60: 0f 32                	rdmsr
ffffffff80010d62: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff80010d66: 89 c6                	mov	esi, eax
ffffffff80010d68: 48 09 d6             	or	rsi, rdx
ffffffff80010d6b: b1 01                	mov	cl, 0x1
ffffffff80010d6d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80010d70: 31 c0                	xor	eax, eax
ffffffff80010d72: f0                   	lock
ffffffff80010d73: 0f b0 0d a6 a4 01 00 	cmpxchg	byte ptr [rip + 0x1a4a6], cl # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010d7a: 75 06                	jne	0xffffffff80010d82 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x102>
ffffffff80010d7c: eb 11                	jmp	0xffffffff80010d8f <taos::memory::paging::update_mapping::he8b16e73817762f8+0x10f>
ffffffff80010d7e: 66 90                	nop
ffffffff80010d80: f3 90                	pause
ffffffff80010d82: 0f b6 05 97 a4 01 00 	movzx	eax, byte ptr [rip + 0x1a497] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010d89: 84 c0                	test	al, al
ffffffff80010d8b: 75 f3                	jne	0xffffffff80010d80 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x100>
ffffffff80010d8d: eb e1                	jmp	0xffffffff80010d70 <taos::memory::paging::update_mapping::he8b16e73817762f8+0xf0>
ffffffff80010d8f: 48 85 f6             	test	rsi, rsi
ffffffff80010d92: 74 1b                	je	0xffffffff80010daf <taos::memory::paging::update_mapping::he8b16e73817762f8+0x12f>
ffffffff80010d94: 48 89 1d 8d a4 01 00 	mov	qword ptr [rip + 0x1a48d], rbx # 0xffffffff8002b228 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff80010d9b: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80010da0: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80010da5: 31 d2                	xor	edx, edx
ffffffff80010da7: 0f 30                	wrmsr
ffffffff80010da9: 48 83 fe 01          	cmp	rsi, 0x1
ffffffff80010dad: 74 18                	je	0xffffffff80010dc7 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x147>
ffffffff80010daf: 48 89 1d 7a a4 01 00 	mov	qword ptr [rip + 0x1a47a], rbx # 0xffffffff8002b230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff80010db6: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80010dbb: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80010dc0: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80010dc5: 0f 30                	wrmsr
ffffffff80010dc7: c6 05 52 a4 01 00 00 	mov	byte ptr [rip + 0x1a452], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010dce: 0f 01 3b             	invlpg	byte ptr [rbx]
ffffffff80010dd1: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80010dd6: 4c 89 fe             	mov	rsi, r15
ffffffff80010dd9: 48 89 da             	mov	rdx, rbx
ffffffff80010ddc: e8 7f 46 00 00       	call	0xffffffff80015460 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1>
ffffffff80010de1: f6 44 24 30 01       	test	byte ptr [rsp + 0x30], 0x1
ffffffff80010de6: 0f 85 73 01 00 00    	jne	0xffffffff80010f5f <taos::memory::paging::update_mapping::he8b16e73817762f8+0x2df>
ffffffff80010dec: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff80010df1: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80010df6: 48 3b 44 24 18       	cmp	rax, qword ptr [rsp + 0x18]
ffffffff80010dfb: 0f 84 1b 01 00 00    	je	0xffffffff80010f1c <taos::memory::paging::update_mapping::he8b16e73817762f8+0x29c>
ffffffff80010e01: b1 01                	mov	cl, 0x1
ffffffff80010e03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80010e10: 31 c0                	xor	eax, eax
ffffffff80010e12: f0                   	lock
ffffffff80010e13: 0f b0 0d 1e a2 01 00 	cmpxchg	byte ptr [rip + 0x1a21e], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010e1a: 74 1e                	je	0xffffffff80010e3a <taos::memory::paging::update_mapping::he8b16e73817762f8+0x1ba>
ffffffff80010e1c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80010e20: 0f b6 05 11 a2 01 00 	movzx	eax, byte ptr [rip + 0x1a211] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010e27: 84 c0                	test	al, al
ffffffff80010e29: 74 e5                	je	0xffffffff80010e10 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x190>
ffffffff80010e2b: f3 90                	pause
ffffffff80010e2d: 0f b6 05 04 a2 01 00 	movzx	eax, byte ptr [rip + 0x1a204] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010e34: 84 c0                	test	al, al
ffffffff80010e36: 75 f3                	jne	0xffffffff80010e2b <taos::memory::paging::update_mapping::he8b16e73817762f8+0x1ab>
ffffffff80010e38: eb d6                	jmp	0xffffffff80010e10 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x190>
ffffffff80010e3a: 83 3d ff a1 01 00 03 	cmp	dword ptr [rip + 0x1a1ff], 0x3 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80010e41: 0f 84 50 01 00 00    	je	0xffffffff80010f97 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x317>
ffffffff80010e47: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff80010e4c: 45 89 f1             	mov	r9d, r14d
ffffffff80010e4f: 41 83 e1 07          	and	r9d, 0x7
ffffffff80010e53: 48 c7 04 24 40 b0 02 80      	mov	qword ptr [rsp], -0x7ffd4fc0
ffffffff80010e5b: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80010e60: 4c 89 fe             	mov	rsi, r15
ffffffff80010e63: 48 89 da             	mov	rdx, rbx
ffffffff80010e66: 4d 89 f0             	mov	r8, r14
ffffffff80010e69: e8 02 47 00 00       	call	0xffffffff80015570 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab>
ffffffff80010e6e: c6 05 c3 a1 01 00 00 	mov	byte ptr [rip + 0x1a1c3], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010e75: 48 8d 44 24 20       	lea	rax, [rsp + 0x20]
ffffffff80010e7a: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80010e7f: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80010e84: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80010e89: 48 8d 44 24 17       	lea	rax, [rsp + 0x17]
ffffffff80010e8e: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff80010e93: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80010e98: e8 23 c6 ff ff       	call	0xffffffff8000d4c0 <taos::memory::frame_allocator::with_buddy_frame_allocator::h3ed6ae8406575518>
ffffffff80010e9d: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff80010ea2: 0f 32                	rdmsr
ffffffff80010ea4: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff80010ea8: 89 c6                	mov	esi, eax
ffffffff80010eaa: 48 09 d6             	or	rsi, rdx
ffffffff80010ead: b1 01                	mov	cl, 0x1
ffffffff80010eaf: 90                   	nop
ffffffff80010eb0: 31 c0                	xor	eax, eax
ffffffff80010eb2: f0                   	lock
ffffffff80010eb3: 0f b0 0d 66 a3 01 00 	cmpxchg	byte ptr [rip + 0x1a366], cl # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010eba: 74 1e                	je	0xffffffff80010eda <taos::memory::paging::update_mapping::he8b16e73817762f8+0x25a>
ffffffff80010ebc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80010ec0: 0f b6 05 59 a3 01 00 	movzx	eax, byte ptr [rip + 0x1a359] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010ec7: 84 c0                	test	al, al
ffffffff80010ec9: 74 e5                	je	0xffffffff80010eb0 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x230>
ffffffff80010ecb: f3 90                	pause
ffffffff80010ecd: 0f b6 05 4c a3 01 00 	movzx	eax, byte ptr [rip + 0x1a34c] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010ed4: 84 c0                	test	al, al
ffffffff80010ed6: 75 f3                	jne	0xffffffff80010ecb <taos::memory::paging::update_mapping::he8b16e73817762f8+0x24b>
ffffffff80010ed8: eb d6                	jmp	0xffffffff80010eb0 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x230>
ffffffff80010eda: 48 85 f6             	test	rsi, rsi
ffffffff80010edd: 74 1b                	je	0xffffffff80010efa <taos::memory::paging::update_mapping::he8b16e73817762f8+0x27a>
ffffffff80010edf: 48 89 1d 42 a3 01 00 	mov	qword ptr [rip + 0x1a342], rbx # 0xffffffff8002b228 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff80010ee6: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80010eeb: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80010ef0: 31 d2                	xor	edx, edx
ffffffff80010ef2: 0f 30                	wrmsr
ffffffff80010ef4: 48 83 fe 01          	cmp	rsi, 0x1
ffffffff80010ef8: 74 18                	je	0xffffffff80010f12 <taos::memory::paging::update_mapping::he8b16e73817762f8+0x292>
ffffffff80010efa: 48 89 1d 2f a3 01 00 	mov	qword ptr [rip + 0x1a32f], rbx # 0xffffffff8002b230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff80010f01: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80010f06: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80010f0b: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80010f10: 0f 30                	wrmsr
ffffffff80010f12: c6 05 07 a3 01 00 00 	mov	byte ptr [rip + 0x1a307], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80010f19: 0f 01 3b             	invlpg	byte ptr [rbx]
ffffffff80010f1c: 48 83 c4 60          	add	rsp, 0x60
ffffffff80010f20: 5b                   	pop	rbx
ffffffff80010f21: 41 5e                	pop	r14
ffffffff80010f23: 41 5f                	pop	r15
ffffffff80010f25: c3                   	ret
ffffffff80010f26: 48 c7 c2 78 31 02 80 	mov	rdx, -0x7ffdce88
ffffffff80010f2d: e8 5f 02 01 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80010f32: 0f b6 44 24 31       	movzx	eax, byte ptr [rsp + 0x31]
ffffffff80010f37: 88 44 24 20          	mov	byte ptr [rsp + 0x20], al
ffffffff80010f3b: 48 8d 54 24 20       	lea	rdx, [rsp + 0x20]
ffffffff80010f40: be 15 00 00 00       	mov	esi, 0x15
ffffffff80010f45: 48 c7 c7 b8 6f 02 80 	mov	rdi, -0x7ffd9048
ffffffff80010f4c: 48 c7 c1 98 6f 02 80 	mov	rcx, -0x7ffd9068
ffffffff80010f53: 49 c7 c0 d0 6f 02 80 	mov	r8, -0x7ffd9030
ffffffff80010f5a: e8 01 fc 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80010f5f: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff80010f64: 48 8b 4c 24 40       	mov	rcx, qword ptr [rsp + 0x40]
ffffffff80010f69: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80010f6e: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80010f73: 48 8d 54 24 20       	lea	rdx, [rsp + 0x20]
ffffffff80010f78: be 31 00 00 00       	mov	esi, 0x31
ffffffff80010f7d: 48 c7 c7 08 6f 02 80 	mov	rdi, -0x7ffd90f8
ffffffff80010f84: 48 c7 c1 e8 6e 02 80 	mov	rcx, -0x7ffd9118
ffffffff80010f8b: 49 c7 c0 40 6f 02 80 	mov	r8, -0x7ffd90c0
ffffffff80010f92: e8 c9 fb 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80010f97: be 20 00 00 00       	mov	esi, 0x20
ffffffff80010f9c: 48 c7 c7 48 24 02 80 	mov	rdi, -0x7ffddbb8
ffffffff80010fa3: 48 c7 c2 d0 6e 02 80 	mov	rdx, -0x7ffd9130
ffffffff80010faa: e8 b1 06 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010faf: cc                   	int3

ffffffff80010fb0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>:
ffffffff80010fb0: 53                   	push	rbx
ffffffff80010fb1: 48 83 ec 30          	sub	rsp, 0x30
ffffffff80010fb5: 48 8b 1d 04 a3 01 00 	mov	rbx, qword ptr [rip + 0x1a304] # 0xffffffff8002b2c0 <taos::memory::paging::NEXT_EPH_OFFSET::h63fa29dc81a38579>
ffffffff80010fbc: 48 8d 83 00 10 00 00 	lea	rax, [rbx + 0x1000]
ffffffff80010fc3: 48 89 05 f6 a2 01 00 	mov	qword ptr [rip + 0x1a2f6], rax # 0xffffffff8002b2c0 <taos::memory::paging::NEXT_EPH_OFFSET::h63fa29dc81a38579>
ffffffff80010fca: 48 b8 00 00 00 00 80 7f 00 00	movabs	rax, 0x7f8000000000
ffffffff80010fd4: 48 01 d8             	add	rax, rbx
ffffffff80010fd7: 48 c1 e8 30          	shr	rax, 0x30
ffffffff80010fdb: 0f 85 86 00 00 00    	jne	0xffffffff80011067 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xb7>
ffffffff80010fe1: 49 89 d0             	mov	r8, rdx
ffffffff80010fe4: 48 89 f1             	mov	rcx, rsi
ffffffff80010fe7: 48 89 fe             	mov	rsi, rdi
ffffffff80010fea: b2 01                	mov	dl, 0x1
ffffffff80010fec: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80010ff0: 31 c0                	xor	eax, eax
ffffffff80010ff2: f0                   	lock
ffffffff80010ff3: 0f b0 15 3e a0 01 00 	cmpxchg	byte ptr [rip + 0x1a03e], dl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80010ffa: 75 06                	jne	0xffffffff80011002 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x52>
ffffffff80010ffc: eb 11                	jmp	0xffffffff8001100f <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x5f>
ffffffff80010ffe: 66 90                	nop
ffffffff80011000: f3 90                	pause
ffffffff80011002: 0f b6 05 2f a0 01 00 	movzx	eax, byte ptr [rip + 0x1a02f] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80011009: 84 c0                	test	al, al
ffffffff8001100b: 75 f3                	jne	0xffffffff80011000 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x50>
ffffffff8001100d: eb e1                	jmp	0xffffffff80010ff0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x40>
ffffffff8001100f: 83 3d 2a a0 01 00 03 	cmp	dword ptr [rip + 0x1a02a], 0x3 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80011016: 74 67                	je	0xffffffff8001107f <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xcf>
ffffffff80011018: 48 b8 00 00 00 00 80 ff ff ff	movabs	rax, -0x8000000000
ffffffff80011022: 48 01 c3             	add	rbx, rax
ffffffff80011025: 48 89 da             	mov	rdx, rbx
ffffffff80011028: 48 81 e2 00 f0 ff ff 	and	rdx, -0x1000
ffffffff8001102f: 45 89 c1             	mov	r9d, r8d
ffffffff80011032: 41 83 e1 07          	and	r9d, 0x7
ffffffff80011036: 48 c7 04 24 40 b0 02 80      	mov	qword ptr [rsp], -0x7ffd4fc0
ffffffff8001103e: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80011043: e8 28 45 00 00       	call	0xffffffff80015570 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab>
ffffffff80011048: c6 05 e9 9f 01 00 00 	mov	byte ptr [rip + 0x19fe9], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff8001104f: 83 7c 24 10 03       	cmp	dword ptr [rsp + 0x10], 0x3
ffffffff80011054: 75 41                	jne	0xffffffff80011097 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xe7>
ffffffff80011056: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001105b: 0f 01 38             	invlpg	byte ptr [rax]
ffffffff8001105e: 48 89 d8             	mov	rax, rbx
ffffffff80011061: 48 83 c4 30          	add	rsp, 0x30
ffffffff80011065: 5b                   	pop	rbx
ffffffff80011066: c3                   	ret
ffffffff80011067: be 36 00 00 00       	mov	esi, 0x36
ffffffff8001106c: 48 c7 c7 90 6a 02 80 	mov	rdi, -0x7ffd9570
ffffffff80011073: 48 c7 c2 c8 6a 02 80 	mov	rdx, -0x7ffd9538
ffffffff8001107a: e8 71 00 01 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001107f: be 20 00 00 00       	mov	esi, 0x20
ffffffff80011084: 48 c7 c7 48 24 02 80 	mov	rdi, -0x7ffddbb8
ffffffff8001108b: 48 c7 c2 58 6f 02 80 	mov	rdx, -0x7ffd90a8
ffffffff80011092: e8 c9 05 01 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80011097: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001109c: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff800110a1: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff800110a6: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800110ab: 48 8d 54 24 20       	lea	rdx, [rsp + 0x20]
ffffffff800110b0: be 0d 00 00 00       	mov	esi, 0xd
ffffffff800110b5: 48 c7 c7 70 6f 02 80 	mov	rdi, -0x7ffd9090
ffffffff800110bc: 48 c7 c1 88 6e 02 80 	mov	rcx, -0x7ffd9178
ffffffff800110c3: 49 c7 c0 80 6f 02 80 	mov	r8, -0x7ffd9080
ffffffff800110ca: e8 91 fa 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff800110cf: cc                   	int3

ffffffff800110d0 <taos::memory::paging::update_permissions::h1d23bff2c05baedb>:
ffffffff800110d0: 53                   	push	rbx
ffffffff800110d1: 48 83 ec 20          	sub	rsp, 0x20
ffffffff800110d5: 48 89 d1             	mov	rcx, rdx
ffffffff800110d8: 48 89 fb             	mov	rbx, rdi
ffffffff800110db: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff800110e0: 48 89 da             	mov	rdx, rbx
ffffffff800110e3: e8 68 42 00 00       	call	0xffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff800110e8: 80 7c 24 10 00       	cmp	byte ptr [rsp + 0x10], 0x0
ffffffff800110ed: 0f 85 84 00 00 00    	jne	0xffffffff80011177 <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0xa7>
ffffffff800110f3: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff800110f8: 0f 32                	rdmsr
ffffffff800110fa: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff800110fe: 89 c6                	mov	esi, eax
ffffffff80011100: 48 09 d6             	or	rsi, rdx
ffffffff80011103: b1 01                	mov	cl, 0x1
ffffffff80011105: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80011110: 31 c0                	xor	eax, eax
ffffffff80011112: f0                   	lock
ffffffff80011113: 0f b0 0d 06 a1 01 00 	cmpxchg	byte ptr [rip + 0x1a106], cl # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff8001111a: 75 06                	jne	0xffffffff80011122 <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x52>
ffffffff8001111c: eb 11                	jmp	0xffffffff8001112f <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x5f>
ffffffff8001111e: 66 90                	nop
ffffffff80011120: f3 90                	pause
ffffffff80011122: 0f b6 05 f7 a0 01 00 	movzx	eax, byte ptr [rip + 0x1a0f7] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80011129: 84 c0                	test	al, al
ffffffff8001112b: 75 f3                	jne	0xffffffff80011120 <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x50>
ffffffff8001112d: eb e1                	jmp	0xffffffff80011110 <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x40>
ffffffff8001112f: 48 85 f6             	test	rsi, rsi
ffffffff80011132: 74 1b                	je	0xffffffff8001114f <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x7f>
ffffffff80011134: 48 89 1d ed a0 01 00 	mov	qword ptr [rip + 0x1a0ed], rbx # 0xffffffff8002b228 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff8001113b: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80011140: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80011145: 31 d2                	xor	edx, edx
ffffffff80011147: 0f 30                	wrmsr
ffffffff80011149: 48 83 fe 01          	cmp	rsi, 0x1
ffffffff8001114d: 74 18                	je	0xffffffff80011167 <taos::memory::paging::update_permissions::h1d23bff2c05baedb+0x97>
ffffffff8001114f: 48 89 1d da a0 01 00 	mov	qword ptr [rip + 0x1a0da], rbx # 0xffffffff8002b230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff80011156: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff8001115b: b8 21 00 00 00       	mov	eax, 0x21
ffffffff80011160: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80011165: 0f 30                	wrmsr
ffffffff80011167: c6 05 b2 a0 01 00 00 	mov	byte ptr [rip + 0x1a0b2], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff8001116e: 0f 01 3b             	invlpg	byte ptr [rbx]
ffffffff80011171: 48 83 c4 20          	add	rsp, 0x20
ffffffff80011175: 5b                   	pop	rbx
ffffffff80011176: c3                   	ret
ffffffff80011177: 0f b6 44 24 11       	movzx	eax, byte ptr [rsp + 0x11]
ffffffff8001117c: 88 44 24 0f          	mov	byte ptr [rsp + 0xf], al
ffffffff80011180: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff80011185: be 15 00 00 00       	mov	esi, 0x15
ffffffff8001118a: 48 c7 c7 b8 6f 02 80 	mov	rdi, -0x7ffd9048
ffffffff80011191: 48 c7 c1 98 6f 02 80 	mov	rcx, -0x7ffd9068
ffffffff80011198: 49 c7 c0 d0 6f 02 80 	mov	r8, -0x7ffd9030
ffffffff8001119f: e8 bc f9 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff800111a4: cc                   	int3
ffffffff800111a5: cc                   	int3
ffffffff800111a6: cc                   	int3
ffffffff800111a7: cc                   	int3
ffffffff800111a8: cc                   	int3
ffffffff800111a9: cc                   	int3
ffffffff800111aa: cc                   	int3
ffffffff800111ab: cc                   	int3
ffffffff800111ac: cc                   	int3
ffffffff800111ad: cc                   	int3
ffffffff800111ae: cc                   	int3
ffffffff800111af: cc                   	int3

ffffffff800111b0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b>:
ffffffff800111b0: 55                   	push	rbp
ffffffff800111b1: 41 57                	push	r15
ffffffff800111b3: 41 56                	push	r14
ffffffff800111b5: 41 55                	push	r13
ffffffff800111b7: 41 54                	push	r12
ffffffff800111b9: 53                   	push	rbx
ffffffff800111ba: 48 81 ec 08 01 00 00 	sub	rsp, 0x108
ffffffff800111c1: 4c 89 44 24 60       	mov	qword ptr [rsp + 0x60], r8
ffffffff800111c6: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff800111cb: 48 85 f6             	test	rsi, rsi
ffffffff800111ce: 0f 84 85 08 00 00    	je	0xffffffff80011a59 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x8a9>
ffffffff800111d4: 4d 89 cc             	mov	r12, r9
ffffffff800111d7: 49 89 cd             	mov	r13, rcx
ffffffff800111da: 49 89 d6             	mov	r14, rdx
ffffffff800111dd: 48 8d 44 24 60       	lea	rax, [rsp + 0x60]
ffffffff800111e2: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff800111e7: 48 c7 44 24 70 30 05 02 80   	mov	qword ptr [rsp + 0x70], -0x7ffdfad0
ffffffff800111f0: 48 c7 44 24 10 48 70 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffd8fb8
ffffffff800111f9: 48 c7 44 24 18 02 00 00 00   	mov	qword ptr [rsp + 0x18], 0x2
ffffffff80011202: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8001120b: 48 8d 44 24 68       	lea	rax, [rsp + 0x68]
ffffffff80011210: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80011215: 48 c7 44 24 28 01 00 00 00   	mov	qword ptr [rsp + 0x28], 0x1
ffffffff8001121e: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80011223: e8 e8 70 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80011228: e8 a3 18 ff ff       	call	0xffffffff80002ad0 <taos::events::current_running_event_info::h6dd32981b7125358>
ffffffff8001122d: 0f b6 05 0c a0 01 00 	movzx	eax, byte ptr [rip + 0x1a00c] # 0xffffffff8002b240 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305+0x8>
ffffffff80011234: 3c 02                	cmp	al, 0x2
ffffffff80011236: 0f 85 cb 01 00 00    	jne	0xffffffff80011407 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x257>
ffffffff8001123c: 48 8b 1d f5 9f 01 00 	mov	rbx, qword ptr [rip + 0x19ff5] # 0xffffffff8002b238 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h94be314948176604E.llvm.16827703523949014305>
ffffffff80011243: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80011248: 31 c0                	xor	eax, eax
ffffffff8001124a: f0                   	lock
ffffffff8001124b: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff80011250: 74 1a                	je	0xffffffff8001126c <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0xbc>
ffffffff80011252: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80011260: f3 90                	pause
ffffffff80011262: 31 c0                	xor	eax, eax
ffffffff80011264: f0                   	lock
ffffffff80011265: 48 0f b1 4b 10       	cmpxchg	qword ptr [rbx + 0x10], rcx
ffffffff8001126a: 75 f4                	jne	0xffffffff80011260 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0xb0>
ffffffff8001126c: 48 8b 43 18          	mov	rax, qword ptr [rbx + 0x18]
ffffffff80011270: 48 85 c0             	test	rax, rax
ffffffff80011273: 0f 84 4e 08 00 00    	je	0xffffffff80011ac7 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x917>
ffffffff80011279: 48 8b 4b 20          	mov	rcx, qword ptr [rbx + 0x20]
ffffffff8001127d: be ff 00 00 00       	mov	esi, 0xff
ffffffff80011282: 44 0f b7 80 8e 00 00 00      	movzx	r8d, word ptr [rax + 0x8e]
ffffffff8001128a: 45 89 c1             	mov	r9d, r8d
ffffffff8001128d: 41 c1 e1 02          	shl	r9d, 0x2
ffffffff80011291: 48 c7 c7 ff ff ff ff 	mov	rdi, -0x1
ffffffff80011298: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800112a0: 4d 85 c9             	test	r9, r9
ffffffff800112a3: 74 2b                	je	0xffffffff800112d0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x120>
ffffffff800112a5: 45 31 d2             	xor	r10d, r10d
ffffffff800112a8: 39 54 b8 64          	cmp	dword ptr [rax + 4*rdi + 0x64], edx
ffffffff800112ac: 41 0f 95 c2          	setne	r10b
ffffffff800112b0: 44 0f 47 d6          	cmova	r10d, esi
ffffffff800112b4: 48 ff c7             	inc	rdi
ffffffff800112b7: 49 83 c1 fc          	add	r9, -0x4
ffffffff800112bb: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff800112bf: 74 df                	je	0xffffffff800112a0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0xf0>
ffffffff800112c1: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff800112c5: 45 85 c0             	test	r8d, r8d
ffffffff800112c8: 74 1d                	je	0xffffffff800112e7 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x137>
ffffffff800112ca: eb 07                	jmp	0xffffffff800112d3 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x123>
ffffffff800112cc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800112d0: 4c 89 c7             	mov	rdi, r8
ffffffff800112d3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800112d7: 0f 82 ea 07 00 00    	jb	0xffffffff80011ac7 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x917>
ffffffff800112dd: 48 8b 84 f8 90 00 00 00      	mov	rax, qword ptr [rax + 8*rdi + 0x90]
ffffffff800112e5: eb 9b                	jmp	0xffffffff80011282 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0xd2>
ffffffff800112e7: 48 8b 44 f8 08       	mov	rax, qword ptr [rax + 8*rdi + 0x8]
ffffffff800112ec: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rax
ffffffff800112f4: 48 8b a8 d8 00 00 00 	mov	rbp, qword ptr [rax + 0xd8]
ffffffff800112fb: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80011300: 48 01 e8             	add	rax, rbp
ffffffff80011303: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff80011308: 48 89 6c 24 28       	mov	qword ptr [rsp + 0x28], rbp
ffffffff8001130d: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80011312: 48 89 4c 24 38       	mov	qword ptr [rsp + 0x38], rcx
ffffffff80011317: 4c 89 64 24 40       	mov	qword ptr [rsp + 0x40], r12
ffffffff8001131c: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff80011325: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff8001132e: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80011337: 4d 8d 3c 2c          	lea	r15, [r12 + rbp]
ffffffff8001133b: 0f b6 05 66 9f 01 00 	movzx	eax, byte ptr [rip + 0x19f66] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff80011342: 3c 02                	cmp	al, 0x2
ffffffff80011344: 0f 85 d2 00 00 00    	jne	0xffffffff8001141c <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x26c>
ffffffff8001134a: 4c 3b 3d 4f 9f 01 00 	cmp	r15, qword ptr [rip + 0x19f4f] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80011351: 0f 86 de 00 00 00    	jbe	0xffffffff80011435 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x285>
ffffffff80011357: 48 c7 44 24 68 c8 70 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd8f38
ffffffff80011360: 48 c7 44 24 70 01 00 00 00   	mov	qword ptr [rsp + 0x70], 0x1
ffffffff80011369: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80011375: 48 89 e0             	mov	rax, rsp
ffffffff80011378: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8001137d: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x80], 0x0
ffffffff80011389: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff8001138e: e8 7d 6f ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80011393: 0f b6 05 0e 9f 01 00 	movzx	eax, byte ptr [rip + 0x19f0e] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8001139a: 3c 02                	cmp	al, 0x2
ffffffff8001139c: 0f 85 4d 06 00 00    	jne	0xffffffff800119ef <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x83f>
ffffffff800113a2: 4c 8b 3d f7 9e 01 00 	mov	r15, qword ptr [rip + 0x19ef7] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800113a9: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff800113ae: 48 85 c9             	test	rcx, rcx
ffffffff800113b1: 0f 84 76 02 00 00    	je	0xffffffff8001162d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x47d>
ffffffff800113b7: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff800113bc: b2 01                	mov	dl, 0x1
ffffffff800113be: 66 90                	nop
ffffffff800113c0: 31 c0                	xor	eax, eax
ffffffff800113c2: f0                   	lock
ffffffff800113c3: 0f b0 15 36 9c 01 00 	cmpxchg	byte ptr [rip + 0x19c36], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800113ca: 74 1e                	je	0xffffffff800113ea <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x23a>
ffffffff800113cc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800113d0: 0f b6 05 29 9c 01 00 	movzx	eax, byte ptr [rip + 0x19c29] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800113d7: 84 c0                	test	al, al
ffffffff800113d9: 74 e5                	je	0xffffffff800113c0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x210>
ffffffff800113db: f3 90                	pause
ffffffff800113dd: 0f b6 05 1c 9c 01 00 	movzx	eax, byte ptr [rip + 0x19c1c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800113e4: 84 c0                	test	al, al
ffffffff800113e6: 75 f3                	jne	0xffffffff800113db <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x22b>
ffffffff800113e8: eb d6                	jmp	0xffffffff800113c0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x210>
ffffffff800113ea: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800113ef: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800113f6: e8 f5 b3 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800113fb: c6 05 fe 9b 01 00 00 	mov	byte ptr [rip + 0x19bfe], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80011402: e9 26 02 00 00       	jmp	0xffffffff8001162d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x47d>
ffffffff80011407: 48 c7 c7 38 b2 02 80 	mov	rdi, -0x7ffd4dc8
ffffffff8001140e: 89 d3                	mov	ebx, edx
ffffffff80011410: e8 eb df ff ff       	call	0xffffffff8000f400 <spin::once::Once<T,R>::try_call_once_slow::hdee75aeac5b75324.llvm.9791016283376756910>
ffffffff80011415: 89 da                	mov	edx, ebx
ffffffff80011417: e9 20 fe ff ff       	jmp	0xffffffff8001123c <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x8c>
ffffffff8001141c: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff80011423: e8 e8 de ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80011428: 4c 3b 3d 71 9e 01 00 	cmp	r15, qword ptr [rip + 0x19e71] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff8001142f: 0f 87 22 ff ff ff    	ja	0xffffffff80011357 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x1a7>
ffffffff80011435: 49 83 fd 10          	cmp	r13, 0x10
ffffffff80011439: 48 89 6c 24 48       	mov	qword ptr [rsp + 0x48], rbp
ffffffff8001143e: 0f 85 bc 00 00 00    	jne	0xffffffff80011500 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x350>
ffffffff80011444: 41 0f 20 dc          	mov	r12, cr3
ffffffff80011448: 0f b6 05 59 9e 01 00 	movzx	eax, byte ptr [rip + 0x19e59] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff8001144f: 3c 02                	cmp	al, 0x2
ffffffff80011451: 0f 85 be 05 00 00    	jne	0xffffffff80011a15 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x865>
ffffffff80011457: 48 ba 00 00 00 00 00 80 00 00	movabs	rdx, 0x800000000000
ffffffff80011461: 4c 8b 3d 38 9e 01 00 	mov	r15, qword ptr [rip + 0x19e38] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80011468: 49 8d 04 17          	lea	rax, [r15 + rdx]
ffffffff8001146c: 48 c1 e8 30          	shr	rax, 0x30
ffffffff80011470: 0f 85 cb 05 00 00    	jne	0xffffffff80011a41 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x891>
ffffffff80011476: 48 b9 00 00 00 00 00 00 01 00	movabs	rcx, 0x1000000000000
ffffffff80011480: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff8001148a: 49 21 c4             	and	r12, rax
ffffffff8001148d: 4d 01 e7             	add	r15, r12
ffffffff80011490: 49 8d 04 17          	lea	rax, [r15 + rdx]
ffffffff80011494: 48 39 c8             	cmp	rax, rcx
ffffffff80011497: 0f 83 a4 05 00 00    	jae	0xffffffff80011a41 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x891>
ffffffff8001149d: 0f b6 05 04 9e 01 00 	movzx	eax, byte ptr [rip + 0x19e04] # 0xffffffff8002b2a8 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459+0x8>
ffffffff800114a4: 3c 02                	cmp	al, 0x2
ffffffff800114a6: 0f 85 7a 05 00 00    	jne	0xffffffff80011a26 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x876>
ffffffff800114ac: 48 8b 05 ed 9d 01 00 	mov	rax, qword ptr [rip + 0x19ded] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff800114b3: 48 8d 0c 10          	lea	rcx, [rax + rdx]
ffffffff800114b7: 48 be 00 00 00 00 00 00 01 00	movabs	rsi, 0x1000000000000
ffffffff800114c1: 48 39 f1             	cmp	rcx, rsi
ffffffff800114c4: 0f 83 77 05 00 00    	jae	0xffffffff80011a41 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x891>
ffffffff800114ca: 4c 89 bc 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], r15
ffffffff800114d2: 48 89 84 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rax
ffffffff800114da: 49 89 ec             	mov	r12, rbp
ffffffff800114dd: 48 81 7c 24 08 00 10 00 00   	cmp	qword ptr [rsp + 0x8], 0x1000
ffffffff800114e6: 0f 83 0a 03 00 00    	jae	0xffffffff800117f6 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x646>
ffffffff800114ec: 48 c7 44 24 38 ff ff ff ff   	mov	qword ptr [rsp + 0x38], -0x1
ffffffff800114f5: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff800114fe: eb 3b                	jmp	0xffffffff8001153b <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x38b>
ffffffff80011500: 4c 89 64 24 50       	mov	qword ptr [rsp + 0x50], r12
ffffffff80011505: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8001150a: 48 89 84 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rax
ffffffff80011512: 49 89 ec             	mov	r12, rbp
ffffffff80011515: 48 81 7c 24 08 00 10 00 00   	cmp	qword ptr [rsp + 0x8], 0x1000
ffffffff8001151e: 0f 83 29 01 00 00    	jae	0xffffffff8001164d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x49d>
ffffffff80011524: 48 8b 84 24 a8 00 00 00      	mov	rax, qword ptr [rsp + 0xa8]
ffffffff8001152c: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80011531: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff80011536: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001153b: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff80011540: 48 89 84 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rax
ffffffff80011548: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff8001154d: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rax
ffffffff80011555: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001155a: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rax
ffffffff80011562: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff80011567: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], rax
ffffffff8001156f: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80011574: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rax
ffffffff8001157c: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80011581: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff80011586: 48 89 8c 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rcx
ffffffff8001158e: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff80011596: 4c 8b ac 24 b0 00 00 00      	mov	r13, qword ptr [rsp + 0xb0]
ffffffff8001159e: 4d 8b 75 20          	mov	r14, qword ptr [r13 + 0x20]
ffffffff800115a2: 4d 3b 75 10          	cmp	r14, qword ptr [r13 + 0x10]
ffffffff800115a6: 4c 8b 7c 24 48       	mov	r15, qword ptr [rsp + 0x48]
ffffffff800115ab: 75 10                	jne	0xffffffff800115bd <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x40d>
ffffffff800115ad: 49 8d 7d 10          	lea	rdi, [r13 + 0x10]
ffffffff800115b1: 48 c7 c6 80 70 02 80 	mov	rsi, -0x7ffd8f80
ffffffff800115b8: e8 f3 1b 00 00       	call	0xffffffff800131b0 <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87>
ffffffff800115bd: 49 8b 45 18          	mov	rax, qword ptr [r13 + 0x18]
ffffffff800115c1: 49 6b ce 38          	imul	rcx, r14, 0x38
ffffffff800115c5: 48 8b 94 24 e8 00 00 00      	mov	rdx, qword ptr [rsp + 0xe8]
ffffffff800115cd: 48 89 54 08 30       	mov	qword ptr [rax + rcx + 0x30], rdx
ffffffff800115d2: 48 8b 94 24 e0 00 00 00      	mov	rdx, qword ptr [rsp + 0xe0]
ffffffff800115da: 48 89 54 08 28       	mov	qword ptr [rax + rcx + 0x28], rdx
ffffffff800115df: 48 8b 94 24 d8 00 00 00      	mov	rdx, qword ptr [rsp + 0xd8]
ffffffff800115e7: 48 89 54 08 20       	mov	qword ptr [rax + rcx + 0x20], rdx
ffffffff800115ec: 48 8b 94 24 d0 00 00 00      	mov	rdx, qword ptr [rsp + 0xd0]
ffffffff800115f4: 48 89 54 08 18       	mov	qword ptr [rax + rcx + 0x18], rdx
ffffffff800115f9: 48 8b 94 24 c8 00 00 00      	mov	rdx, qword ptr [rsp + 0xc8]
ffffffff80011601: 48 89 54 08 10       	mov	qword ptr [rax + rcx + 0x10], rdx
ffffffff80011606: 48 8b 94 24 b8 00 00 00      	mov	rdx, qword ptr [rsp + 0xb8]
ffffffff8001160e: 48 8b b4 24 c0 00 00 00      	mov	rsi, qword ptr [rsp + 0xc0]
ffffffff80011616: 48 89 74 08 08       	mov	qword ptr [rax + rcx + 0x8], rsi
ffffffff8001161b: 48 89 14 08          	mov	qword ptr [rax + rcx], rdx
ffffffff8001161f: 49 ff c6             	inc	r14
ffffffff80011622: 4d 89 75 20          	mov	qword ptr [r13 + 0x20], r14
ffffffff80011626: 4d 89 a5 d8 00 00 00 	mov	qword ptr [r13 + 0xd8], r12
ffffffff8001162d: f0                   	lock
ffffffff8001162e: 48 83 63 10 fc       	and	qword ptr [rbx + 0x10], -0x4
ffffffff80011633: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80011638: 4c 89 fa             	mov	rdx, r15
ffffffff8001163b: 48 81 c4 08 01 00 00 	add	rsp, 0x108
ffffffff80011642: 5b                   	pop	rbx
ffffffff80011643: 41 5c                	pop	r12
ffffffff80011645: 41 5d                	pop	r13
ffffffff80011647: 41 5e                	pop	r14
ffffffff80011649: 41 5f                	pop	r15
ffffffff8001164b: 5d                   	pop	rbp
ffffffff8001164c: c3                   	ret
ffffffff8001164d: 48 c1 6c 24 08 0c    	shr	qword ptr [rsp + 0x8], 0xc
ffffffff80011653: 44 89 f0             	mov	eax, r14d
ffffffff80011656: d1 e8                	shr	eax
ffffffff80011658: 83 e0 01             	and	eax, 0x1
ffffffff8001165b: 41 f6 c6 04          	test	r14b, 0x4
ffffffff8001165f: b9 03 00 00 00       	mov	ecx, 0x3
ffffffff80011664: 48 0f 44 c8          	cmove	rcx, rax
ffffffff80011668: 48 b8 01 00 00 00 00 00 00 80	movabs	rax, -0x7fffffffffffffff
ffffffff80011672: 48 89 cd             	mov	rbp, rcx
ffffffff80011675: 48 09 c5             	or	rbp, rax
ffffffff80011678: 41 f6 c6 01          	test	r14b, 0x1
ffffffff8001167c: 48 0f 45 e9          	cmovne	rbp, rcx
ffffffff80011680: 48 ff c0             	inc	rax
ffffffff80011683: 48 21 e8             	and	rax, rbp
ffffffff80011686: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8001168b: 41 b6 01             	mov	r14b, 0x1
ffffffff8001168e: 4c 8b 64 24 48       	mov	r12, qword ptr [rsp + 0x48]
ffffffff80011693: 45 31 ed             	xor	r13d, r13d
ffffffff80011696: eb 47                	jmp	0xffffffff800116df <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x52f>
ffffffff80011698: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800116a0: 4c 89 3d 89 9b 01 00 	mov	qword ptr [rip + 0x19b89], r15 # 0xffffffff8002b230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff800116a7: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff800116ac: b8 21 00 00 00       	mov	eax, 0x21
ffffffff800116b1: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800116b6: 0f 30                	wrmsr
ffffffff800116b8: 49 ff c5             	inc	r13
ffffffff800116bb: c6 05 5e 9b 01 00 00 	mov	byte ptr [rip + 0x19b5e], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff800116c2: 41 0f 01 3f          	invlpg	byte ptr [r15]
ffffffff800116c6: 49 81 c4 00 10 00 00 	add	r12, 0x1000
ffffffff800116cd: c6 05 ac 9b 01 00 00 	mov	byte ptr [rip + 0x19bac], 0x0 # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff800116d4: 4c 3b 6c 24 08       	cmp	r13, qword ptr [rsp + 0x8]
ffffffff800116d9: 0f 84 45 fe ff ff    	je	0xffffffff80011524 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x374>
ffffffff800116df: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff800116e9: 4c 01 e0             	add	rax, r12
ffffffff800116ec: 48 b9 00 00 00 00 00 00 01 00	movabs	rcx, 0x1000000000000
ffffffff800116f6: 48 39 c8             	cmp	rax, rcx
ffffffff800116f9: 0f 83 42 03 00 00    	jae	0xffffffff80011a41 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x891>
ffffffff800116ff: 0f b6 05 92 9b 01 00 	movzx	eax, byte ptr [rip + 0x19b92] # 0xffffffff8002b298 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459+0x18>
ffffffff80011706: 3c 02                	cmp	al, 0x2
ffffffff80011708: 74 23                	je	0xffffffff8001172d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x57d>
ffffffff8001170a: 48 c7 c7 80 b2 02 80 	mov	rdi, -0x7ffd4d80
ffffffff80011711: e8 3a d0 ff ff       	call	0xffffffff8000e750 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.9791016283376756910>
ffffffff80011716: eb 15                	jmp	0xffffffff8001172d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x57d>
ffffffff80011718: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80011720: f3 90                	pause
ffffffff80011722: 0f b6 05 57 9b 01 00 	movzx	eax, byte ptr [rip + 0x19b57] # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80011729: 84 c0                	test	al, al
ffffffff8001172b: 75 f3                	jne	0xffffffff80011720 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x570>
ffffffff8001172d: 31 c0                	xor	eax, eax
ffffffff8001172f: f0                   	lock
ffffffff80011730: 44 0f b0 35 48 9b 01 00      	cmpxchg	byte ptr [rip + 0x19b48], r14b # 0xffffffff8002b280 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.2547803308408773459>
ffffffff80011738: 75 e8                	jne	0xffffffff80011722 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x572>
ffffffff8001173a: 4d 89 e7             	mov	r15, r12
ffffffff8001173d: 49 81 e7 00 f0 ff ff 	and	r15, -0x1000
ffffffff80011744: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80011749: 4c 89 ff             	mov	rdi, r15
ffffffff8001174c: 48 c7 c6 88 b2 02 80 	mov	rsi, -0x7ffd4d78
ffffffff80011753: 48 89 e9             	mov	rcx, rbp
ffffffff80011756: e8 05 f4 ff ff       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff8001175b: 48 89 c7             	mov	rdi, rax
ffffffff8001175e: e8 9d bc ff ff       	call	0xffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>
ffffffff80011763: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff80011768: 48 c7 c6 88 b2 02 80 	mov	rsi, -0x7ffd4d78
ffffffff8001176f: 4c 89 fa             	mov	rdx, r15
ffffffff80011772: 48 8b 4c 24 58       	mov	rcx, qword ptr [rsp + 0x58]
ffffffff80011777: e8 d4 3b 00 00       	call	0xffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff8001177c: 80 7c 24 68 01       	cmp	byte ptr [rsp + 0x68], 0x1
ffffffff80011781: 0f 84 0d 03 00 00    	je	0xffffffff80011a94 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x8e4>
ffffffff80011787: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff8001178c: 0f 32                	rdmsr
ffffffff8001178e: 89 c1                	mov	ecx, eax
ffffffff80011790: 31 c0                	xor	eax, eax
ffffffff80011792: f0                   	lock
ffffffff80011793: 44 0f b0 35 85 9a 01 00      	cmpxchg	byte ptr [rip + 0x19a85], r14b # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff8001179b: 74 23                	je	0xffffffff800117c0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x610>
ffffffff8001179d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff800117a0: 0f b6 05 79 9a 01 00 	movzx	eax, byte ptr [rip + 0x19a79] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff800117a7: 84 c0                	test	al, al
ffffffff800117a9: 74 e5                	je	0xffffffff80011790 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x5e0>
ffffffff800117ab: f3 90                	pause
ffffffff800117ad: 0f b6 05 6c 9a 01 00 	movzx	eax, byte ptr [rip + 0x19a6c] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff800117b4: 84 c0                	test	al, al
ffffffff800117b6: 75 f3                	jne	0xffffffff800117ab <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x5fb>
ffffffff800117b8: eb d6                	jmp	0xffffffff80011790 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x5e0>
ffffffff800117ba: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800117c0: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff800117c4: 89 ce                	mov	esi, ecx
ffffffff800117c6: 48 09 d6             	or	rsi, rdx
ffffffff800117c9: 48 85 f6             	test	rsi, rsi
ffffffff800117cc: 0f 84 ce fe ff ff    	je	0xffffffff800116a0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x4f0>
ffffffff800117d2: 4c 89 3d 4f 9a 01 00 	mov	qword ptr [rip + 0x19a4f], r15 # 0xffffffff8002b228 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff800117d9: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff800117de: b8 21 00 00 00       	mov	eax, 0x21
ffffffff800117e3: 31 d2                	xor	edx, edx
ffffffff800117e5: 0f 30                	wrmsr
ffffffff800117e7: 48 83 fe 01          	cmp	rsi, 0x1
ffffffff800117eb: 0f 85 af fe ff ff    	jne	0xffffffff800116a0 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x4f0>
ffffffff800117f1: e9 c2 fe ff ff       	jmp	0xffffffff800116b8 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x508>
ffffffff800117f6: 48 c1 6c 24 08 0c    	shr	qword ptr [rsp + 0x8], 0xc
ffffffff800117fc: 44 89 f0             	mov	eax, r14d
ffffffff800117ff: d1 e8                	shr	eax
ffffffff80011801: 83 e0 01             	and	eax, 0x1
ffffffff80011804: 41 f6 c6 04          	test	r14b, 0x4
ffffffff80011808: b9 03 00 00 00       	mov	ecx, 0x3
ffffffff8001180d: 48 0f 44 c8          	cmove	rcx, rax
ffffffff80011811: 48 b8 01 00 00 00 00 00 00 80	movabs	rax, -0x7fffffffffffffff
ffffffff8001181b: 48 89 ce             	mov	rsi, rcx
ffffffff8001181e: 48 09 c6             	or	rsi, rax
ffffffff80011821: 41 f6 c6 01          	test	r14b, 0x1
ffffffff80011825: 48 0f 45 f1          	cmovne	rsi, rcx
ffffffff80011829: 48 ff c0             	inc	rax
ffffffff8001182c: 48 89 74 24 50       	mov	qword ptr [rsp + 0x50], rsi
ffffffff80011831: 48 21 f0             	and	rax, rsi
ffffffff80011834: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff80011839: 40 b5 01             	mov	bpl, 0x1
ffffffff8001183c: 45 31 ff             	xor	r15d, r15d
ffffffff8001183f: 4c 8b 64 24 48       	mov	r12, qword ptr [rsp + 0x48]
ffffffff80011844: eb 3b                	jmp	0xffffffff80011881 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x6d1>
ffffffff80011846: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80011850: 49 ff c7             	inc	r15
ffffffff80011853: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80011858: 42 c6 04 30 00       	mov	byte ptr [rax + r14], 0x0
ffffffff8001185d: 49 ff c6             	inc	r14
ffffffff80011860: 4c 89 74 24 20       	mov	qword ptr [rsp + 0x20], r14
ffffffff80011865: 49 81 c4 00 10 00 00 	add	r12, 0x1000
ffffffff8001186c: 4c 3b 7c 24 08       	cmp	r15, qword ptr [rsp + 0x8]
ffffffff80011871: 48 ba 00 00 00 00 00 80 00 00	movabs	rdx, 0x800000000000
ffffffff8001187b: 0f 84 6b fc ff ff    	je	0xffffffff800114ec <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x33c>
ffffffff80011881: 49 8d 04 14          	lea	rax, [r12 + rdx]
ffffffff80011885: 48 b9 00 00 00 00 00 00 01 00	movabs	rcx, 0x1000000000000
ffffffff8001188f: 48 39 c8             	cmp	rax, rcx
ffffffff80011892: 0f 83 a9 01 00 00    	jae	0xffffffff80011a41 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x891>
ffffffff80011898: 4d 89 e6             	mov	r14, r12
ffffffff8001189b: 49 81 e6 00 f0 ff ff 	and	r14, -0x1000
ffffffff800118a2: 4c 89 b4 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], r14
ffffffff800118aa: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800118af: 4c 89 f7             	mov	rdi, r14
ffffffff800118b2: 4c 8d ac 24 f8 00 00 00      	lea	r13, [rsp + 0xf8]
ffffffff800118ba: 4c 89 ee             	mov	rsi, r13
ffffffff800118bd: 48 8b 4c 24 50       	mov	rcx, qword ptr [rsp + 0x50]
ffffffff800118c2: e8 99 f2 ff ff       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff800118c7: 48 89 c7             	mov	rdi, rax
ffffffff800118ca: e8 31 bb ff ff       	call	0xffffffff8000d400 <taos::memory::frame_allocator::dealloc_frame::he7b4021f4124078d>
ffffffff800118cf: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff800118d4: 4c 89 ee             	mov	rsi, r13
ffffffff800118d7: 4c 89 f2             	mov	rdx, r14
ffffffff800118da: 48 8b 4c 24 58       	mov	rcx, qword ptr [rsp + 0x58]
ffffffff800118df: e8 6c 3a 00 00       	call	0xffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff800118e4: 80 7c 24 68 01       	cmp	byte ptr [rsp + 0x68], 0x1
ffffffff800118e9: 0f 84 a5 01 00 00    	je	0xffffffff80011a94 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x8e4>
ffffffff800118ef: b9 02 08 00 00       	mov	ecx, 0x802
ffffffff800118f4: 0f 32                	rdmsr
ffffffff800118f6: 89 c1                	mov	ecx, eax
ffffffff800118f8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80011900: 31 c0                	xor	eax, eax
ffffffff80011902: f0                   	lock
ffffffff80011903: 40 0f b0 2d 15 99 01 00      	cmpxchg	byte ptr [rip + 0x19915], bpl # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff8001190b: 75 05                	jne	0xffffffff80011912 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x762>
ffffffff8001190d: eb 11                	jmp	0xffffffff80011920 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x770>
ffffffff8001190f: 90                   	nop
ffffffff80011910: f3 90                	pause
ffffffff80011912: 0f b6 05 07 99 01 00 	movzx	eax, byte ptr [rip + 0x19907] # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80011919: 84 c0                	test	al, al
ffffffff8001191b: 75 f3                	jne	0xffffffff80011910 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x760>
ffffffff8001191d: eb e1                	jmp	0xffffffff80011900 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x750>
ffffffff8001191f: 90                   	nop
ffffffff80011920: 48 c1 e2 20          	shl	rdx, 0x20
ffffffff80011924: 89 ce                	mov	esi, ecx
ffffffff80011926: 48 09 d6             	or	rsi, rdx
ffffffff80011929: 48 85 f6             	test	rsi, rsi
ffffffff8001192c: 74 1b                	je	0xffffffff80011949 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x799>
ffffffff8001192e: 4c 89 35 f3 98 01 00 	mov	qword ptr [rip + 0x198f3], r14 # 0xffffffff8002b228 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff80011935: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff8001193a: b8 21 00 00 00       	mov	eax, 0x21
ffffffff8001193f: 31 d2                	xor	edx, edx
ffffffff80011941: 0f 30                	wrmsr
ffffffff80011943: 48 83 fe 01          	cmp	rsi, 0x1
ffffffff80011947: 74 18                	je	0xffffffff80011961 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x7b1>
ffffffff80011949: 4c 89 35 e0 98 01 00 	mov	qword ptr [rip + 0x198e0], r14 # 0xffffffff8002b230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff80011950: b9 30 08 00 00       	mov	ecx, 0x830
ffffffff80011955: b8 21 00 00 00       	mov	eax, 0x21
ffffffff8001195a: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001195f: 0f 30                	wrmsr
ffffffff80011961: c6 05 b8 98 01 00 00 	mov	byte ptr [rip + 0x198b8], 0x0 # 0xffffffff8002b220 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80011968: 41 0f 01 3e          	invlpg	byte ptr [r14]
ffffffff8001196c: 48 8d 84 24 f0 00 00 00      	lea	rax, [rsp + 0xf0]
ffffffff80011974: 48 89 84 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rax
ffffffff8001197c: 48 c7 84 24 a0 00 00 00 30 7f 00 80  	mov	qword ptr [rsp + 0xa0], -0x7fff80d0
ffffffff80011988: 48 c7 44 24 68 f0 70 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd8f10
ffffffff80011991: 48 c7 44 24 70 02 00 00 00   	mov	qword ptr [rsp + 0x70], 0x2
ffffffff8001199a: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff800119a6: 48 8d 84 24 98 00 00 00      	lea	rax, [rsp + 0x98]
ffffffff800119ae: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff800119b3: 48 c7 84 24 80 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x80], 0x1
ffffffff800119bf: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff800119c4: e8 47 69 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800119c9: 4c 8b 74 24 20       	mov	r14, qword ptr [rsp + 0x20]
ffffffff800119ce: 4c 3b 74 24 10       	cmp	r14, qword ptr [rsp + 0x10]
ffffffff800119d3: 0f 85 77 fe ff ff    	jne	0xffffffff80011850 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x6a0>
ffffffff800119d9: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff800119de: 48 c7 c6 10 71 02 80 	mov	rsi, -0x7ffd8ef0
ffffffff800119e5: e8 16 17 00 00       	call	0xffffffff80013100 <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865>
ffffffff800119ea: e9 61 fe ff ff       	jmp	0xffffffff80011850 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x6a0>
ffffffff800119ef: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff800119f6: e8 15 d9 ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff800119fb: 4c 8b 3d 9e 98 01 00 	mov	r15, qword ptr [rip + 0x1989e] # 0xffffffff8002b2a0 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.2547803308408773459>
ffffffff80011a02: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80011a07: 48 85 c9             	test	rcx, rcx
ffffffff80011a0a: 0f 85 a7 f9 ff ff    	jne	0xffffffff800113b7 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x207>
ffffffff80011a10: e9 18 fc ff ff       	jmp	0xffffffff8001162d <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x47d>
ffffffff80011a15: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff80011a1c: e8 ef d8 ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80011a21: e9 31 fa ff ff       	jmp	0xffffffff80011457 <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x2a7>
ffffffff80011a26: 48 c7 c7 a0 b2 02 80 	mov	rdi, -0x7ffd4d60
ffffffff80011a2d: e8 de d8 ff ff       	call	0xffffffff8000f310 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.9791016283376756910>
ffffffff80011a32: 48 ba 00 00 00 00 00 80 00 00	movabs	rdx, 0x800000000000
ffffffff80011a3c: e9 6b fa ff ff       	jmp	0xffffffff800114ac <taos::syscalls::mmap::sys_mmap::h2e610ebf58120a4b+0x2fc>
ffffffff80011a41: be 36 00 00 00       	mov	esi, 0x36
ffffffff80011a46: 48 c7 c7 90 6a 02 80 	mov	rdi, -0x7ffd9570
ffffffff80011a4d: 48 c7 c2 c8 6a 02 80 	mov	rdx, -0x7ffd9538
ffffffff80011a54: e8 97 f6 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80011a59: 48 c7 44 24 10 00 70 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffd9000
ffffffff80011a62: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff80011a6b: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff80011a74: 48 89 e0             	mov	rax, rsp
ffffffff80011a77: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80011a7c: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80011a85: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff80011a8a: e8 81 68 ff ff       	call	0xffffffff80008310 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80011a8f: e8 6c 00 00 00       	call	0xffffffff80011b00 <taos::syscalls::mmap::sys_mmap::panic_cold_explicit::h936b7b58d5092601>
ffffffff80011a94: 0f b6 44 24 69       	movzx	eax, byte ptr [rsp + 0x69]
ffffffff80011a99: 88 84 24 98 00 00 00 	mov	byte ptr [rsp + 0x98], al
ffffffff80011aa0: 48 8d 94 24 98 00 00 00      	lea	rdx, [rsp + 0x98]
ffffffff80011aa8: be 15 00 00 00       	mov	esi, 0x15
ffffffff80011aad: 48 c7 c7 b8 6f 02 80 	mov	rdi, -0x7ffd9048
ffffffff80011ab4: 48 c7 c1 98 6f 02 80 	mov	rcx, -0x7ffd9068
ffffffff80011abb: 49 c7 c0 d0 6f 02 80 	mov	r8, -0x7ffd9030
ffffffff80011ac2: e8 99 f0 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80011ac7: be 24 00 00 00       	mov	esi, 0x24
ffffffff80011acc: 48 c7 c7 88 6c 02 80 	mov	rdi, -0x7ffd9378
ffffffff80011ad3: 48 c7 c2 68 70 02 80 	mov	rdx, -0x7ffd8f98
ffffffff80011ada: e8 81 fb 00 00       	call	0xffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80011adf: cc                   	int3

ffffffff80011ae0 <<taos::memory::paging::PagingError as core::fmt::Debug>::fmt::hd07edb4474ce1643>:
ffffffff80011ae0: 48 89 f7             	mov	rdi, rsi
ffffffff80011ae3: ba 10 00 00 00       	mov	edx, 0x10
ffffffff80011ae8: 48 c7 c6 10 37 02 80 	mov	rsi, -0x7ffdc8f0
ffffffff80011aef: e9 3c cf 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80011af4: cc                   	int3
ffffffff80011af5: cc                   	int3
ffffffff80011af6: cc                   	int3
ffffffff80011af7: cc                   	int3
ffffffff80011af8: cc                   	int3
ffffffff80011af9: cc                   	int3
ffffffff80011afa: cc                   	int3
ffffffff80011afb: cc                   	int3
ffffffff80011afc: cc                   	int3
ffffffff80011afd: cc                   	int3
ffffffff80011afe: cc                   	int3
ffffffff80011aff: cc                   	int3

ffffffff80011b00 <taos::syscalls::mmap::sys_mmap::panic_cold_explicit::h936b7b58d5092601>:
ffffffff80011b00: 50                   	push	rax
ffffffff80011b01: 48 c7 c7 28 70 02 80 	mov	rdi, -0x7ffd8fd8
ffffffff80011b08: e8 33 f6 00 00       	call	0xffffffff80021140 <core::panicking::panic_explicit::h5f61e47075b4a264>
ffffffff80011b0d: cc                   	int3
ffffffff80011b0e: cc                   	int3
ffffffff80011b0f: cc                   	int3

ffffffff80011b10 <taos::interrupts::init::hac2ac04b3d342161>:
ffffffff80011b10: 53                   	push	rbx
ffffffff80011b11: 48 83 ec 10          	sub	rsp, 0x10
ffffffff80011b15: 89 fb                	mov	ebx, edi
ffffffff80011b17: e8 d4 e1 ff ff       	call	0xffffffff8000fcf0 <taos::interrupts::gdt::init::hd5e0114d64446afe>
ffffffff80011b1c: 89 df                	mov	edi, ebx
ffffffff80011b1e: e8 6d e4 ff ff       	call	0xffffffff8000ff90 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9>
ffffffff80011b23: 85 db                	test	ebx, ebx
ffffffff80011b25: 74 31                	je	0xffffffff80011b58 <taos::interrupts::init::hac2ac04b3d342161+0x48>
ffffffff80011b27: e8 04 6b ff ff       	call	0xffffffff80008630 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9>
ffffffff80011b2c: 3c 07                	cmp	al, 0x7
ffffffff80011b2e: 74 36                	je	0xffffffff80011b66 <taos::interrupts::init::hac2ac04b3d342161+0x56>
ffffffff80011b30: 88 44 24 0f          	mov	byte ptr [rsp + 0xf], al
ffffffff80011b34: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff80011b39: be 1e 00 00 00       	mov	esi, 0x1e
ffffffff80011b3e: 48 c7 c7 90 71 02 80 	mov	rdi, -0x7ffd8e70
ffffffff80011b45: 48 c7 c1 28 71 02 80 	mov	rcx, -0x7ffd8ed8
ffffffff80011b4c: 49 c7 c0 b0 71 02 80 	mov	r8, -0x7ffd8e50
ffffffff80011b53: e8 08 f0 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80011b58: bf 64 00 00 00       	mov	edi, 0x64
ffffffff80011b5d: e8 4e 68 ff ff       	call	0xffffffff800083b0 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>
ffffffff80011b62: 3c 07                	cmp	al, 0x7
ffffffff80011b64: 75 06                	jne	0xffffffff80011b6c <taos::interrupts::init::hac2ac04b3d342161+0x5c>
ffffffff80011b66: 48 83 c4 10          	add	rsp, 0x10
ffffffff80011b6a: 5b                   	pop	rbx
ffffffff80011b6b: c3                   	ret
ffffffff80011b6c: 88 44 24 0e          	mov	byte ptr [rsp + 0xe], al
ffffffff80011b70: 48 8d 54 24 0e       	lea	rdx, [rsp + 0xe]
ffffffff80011b75: be 1a 00 00 00       	mov	esi, 0x1a
ffffffff80011b7a: 48 c7 c7 48 71 02 80 	mov	rdi, -0x7ffd8eb8
ffffffff80011b81: 48 c7 c1 28 71 02 80 	mov	rcx, -0x7ffd8ed8
ffffffff80011b88: 49 c7 c0 78 71 02 80 	mov	r8, -0x7ffd8e88
ffffffff80011b8f: e8 cc ef 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80011b94: cc                   	int3
ffffffff80011b95: cc                   	int3
ffffffff80011b96: cc                   	int3
ffffffff80011b97: cc                   	int3
ffffffff80011b98: cc                   	int3
ffffffff80011b99: cc                   	int3
ffffffff80011b9a: cc                   	int3
ffffffff80011b9b: cc                   	int3
ffffffff80011b9c: cc                   	int3
ffffffff80011b9d: cc                   	int3
ffffffff80011b9e: cc                   	int3
ffffffff80011b9f: cc                   	int3

ffffffff80011ba0 <<taos::interrupts::x2apic::X2ApicError as core::fmt::Debug>::fmt::haccd0b18e586519b.llvm.285610413036581497>:
ffffffff80011ba0: 48 89 f0             	mov	rax, rsi
ffffffff80011ba3: 0f b6 0f             	movzx	ecx, byte ptr [rdi]
ffffffff80011ba6: c1 e1 03             	shl	ecx, 0x3
ffffffff80011ba9: 48 8b 91 28 72 02 80 	mov	rdx, qword ptr [rcx - 0x7ffd8dd8]
ffffffff80011bb0: 48 8b b1 60 72 02 80 	mov	rsi, qword ptr [rcx - 0x7ffd8da0]
ffffffff80011bb7: 48 89 c7             	mov	rdi, rax
ffffffff80011bba: e9 71 ce 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80011bbf: cc                   	int3

ffffffff80011bc0 <<&T as core::fmt::Debug>::fmt::hd721d9d55d7f219c>:
ffffffff80011bc0: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80011bc3: 80 38 00             	cmp	byte ptr [rax], 0x0
ffffffff80011bc6: 74 28                	je	0xffffffff80011bf0 <<&T as core::fmt::Debug>::fmt::hd721d9d55d7f219c+0x30>
ffffffff80011bc8: 50                   	push	rax
ffffffff80011bc9: 48 ff c0             	inc	rax
ffffffff80011bcc: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80011bd0: 48 89 e1             	mov	rcx, rsp
ffffffff80011bd3: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80011bd8: 48 89 f7             	mov	rdi, rsi
ffffffff80011bdb: 48 c7 c6 54 20 02 80 	mov	rsi, -0x7ffddfac
ffffffff80011be2: 49 c7 c0 78 74 02 80 	mov	r8, -0x7ffd8b88
ffffffff80011be9: e8 c2 cf 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80011bee: 59                   	pop	rcx
ffffffff80011bef: c3                   	ret
ffffffff80011bf0: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80011bf5: 48 89 f7             	mov	rdi, rsi
ffffffff80011bf8: 48 c7 c6 68 20 02 80 	mov	rsi, -0x7ffddf98
ffffffff80011bff: e9 2c ce 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80011c04: cc                   	int3
ffffffff80011c05: cc                   	int3
ffffffff80011c06: cc                   	int3
ffffffff80011c07: cc                   	int3
ffffffff80011c08: cc                   	int3
ffffffff80011c09: cc                   	int3
ffffffff80011c0a: cc                   	int3
ffffffff80011c0b: cc                   	int3
ffffffff80011c0c: cc                   	int3
ffffffff80011c0d: cc                   	int3
ffffffff80011c0e: cc                   	int3
ffffffff80011c0f: cc                   	int3

ffffffff80011c10 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901>:
ffffffff80011c10: 4c 8b 4f 10          	mov	r9, qword ptr [rdi + 0x10]
ffffffff80011c14: 4d 85 c9             	test	r9, r9
ffffffff80011c17: 0f 84 89 00 00 00    	je	0xffffffff80011ca6 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x96>
ffffffff80011c1d: 4d 8d 51 ff          	lea	r10, [r9 - 0x1]
ffffffff80011c21: 4c 89 57 10          	mov	qword ptr [rdi + 0x10], r10
ffffffff80011c25: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80011c29: 4c 89 d0             	mov	rax, r10
ffffffff80011c2c: 48 c1 e0 04          	shl	rax, 0x4
ffffffff80011c30: 48 8b 34 01          	mov	rsi, qword ptr [rcx + rax]
ffffffff80011c34: 48 8b 7c 01 08       	mov	rdi, qword ptr [rcx + rax + 0x8]
ffffffff80011c39: 4d 85 d2             	test	r10, r10
ffffffff80011c3c: 74 6b                	je	0xffffffff80011ca9 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x99>
ffffffff80011c3e: 55                   	push	rbp
ffffffff80011c3f: 41 57                	push	r15
ffffffff80011c41: 41 56                	push	r14
ffffffff80011c43: 41 54                	push	r12
ffffffff80011c45: 53                   	push	rbx
ffffffff80011c46: 48 8b 01             	mov	rax, qword ptr [rcx]
ffffffff80011c49: 48 8b 51 08          	mov	rdx, qword ptr [rcx + 0x8]
ffffffff80011c4d: 48 89 31             	mov	qword ptr [rcx], rsi
ffffffff80011c50: 48 89 79 08          	mov	qword ptr [rcx + 0x8], rdi
ffffffff80011c54: 45 31 c0             	xor	r8d, r8d
ffffffff80011c57: 49 83 ea 02          	sub	r10, 0x2
ffffffff80011c5b: 4d 0f 42 d0          	cmovb	r10, r8
ffffffff80011c5f: 41 bb 01 00 00 00    	mov	r11d, 0x1
ffffffff80011c65: 49 83 f9 04          	cmp	r9, 0x4
ffffffff80011c69: 73 45                	jae	0xffffffff80011cb0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xa0>
ffffffff80011c6b: 49 83 c1 fe          	add	r9, -0x2
ffffffff80011c6f: 4d 39 cb             	cmp	r11, r9
ffffffff80011c72: 0f 85 05 01 00 00    	jne	0xffffffff80011d7d <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x16d>
ffffffff80011c78: 4d 89 d9             	mov	r9, r11
ffffffff80011c7b: 49 c1 e1 04          	shl	r9, 0x4
ffffffff80011c7f: 49 c1 e0 04          	shl	r8, 0x4
ffffffff80011c83: 4e 8b 14 09          	mov	r10, qword ptr [rcx + r9]
ffffffff80011c87: 4a 8b 5c 09 08       	mov	rbx, qword ptr [rcx + r9 + 0x8]
ffffffff80011c8c: 4a 89 5c 01 08       	mov	qword ptr [rcx + r8 + 0x8], rbx
ffffffff80011c91: 4e 89 14 01          	mov	qword ptr [rcx + r8], r10
ffffffff80011c95: 4a 89 34 09          	mov	qword ptr [rcx + r9], rsi
ffffffff80011c99: 4a 89 7c 09 08       	mov	qword ptr [rcx + r9 + 0x8], rdi
ffffffff80011c9e: 4d 89 d8             	mov	r8, r11
ffffffff80011ca1: e9 ec 00 00 00       	jmp	0xffffffff80011d92 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x182>
ffffffff80011ca6: 31 c0                	xor	eax, eax
ffffffff80011ca8: c3                   	ret
ffffffff80011ca9: 48 89 fa             	mov	rdx, rdi
ffffffff80011cac: 48 89 f0             	mov	rax, rsi
ffffffff80011caf: c3                   	ret
ffffffff80011cb0: 45 31 f6             	xor	r14d, r14d
ffffffff80011cb3: bb ff 00 00 00       	mov	ebx, 0xff
ffffffff80011cb8: eb 4a                	jmp	0xffffffff80011d04 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xf4>
ffffffff80011cba: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80011cc0: 41 80 c0 fd          	add	r8b, -0x3
ffffffff80011cc4: 41 80 f8 fe          	cmp	r8b, -0x2
ffffffff80011cc8: 4d 89 d8             	mov	r8, r11
ffffffff80011ccb: 49 83 d0 00          	adc	r8, 0x0
ffffffff80011ccf: 4d 89 c3             	mov	r11, r8
ffffffff80011cd2: 49 c1 e3 04          	shl	r11, 0x4
ffffffff80011cd6: 49 c1 e6 04          	shl	r14, 0x4
ffffffff80011cda: 4e 8b 3c 19          	mov	r15, qword ptr [rcx + r11]
ffffffff80011cde: 4e 8b 5c 19 08       	mov	r11, qword ptr [rcx + r11 + 0x8]
ffffffff80011ce3: 4e 89 5c 31 08       	mov	qword ptr [rcx + r14 + 0x8], r11
ffffffff80011ce8: 4e 89 3c 31          	mov	qword ptr [rcx + r14], r15
ffffffff80011cec: 4f 8d 3c 00          	lea	r15, [r8 + r8]
ffffffff80011cf0: 4e 8d 1c 45 01 00 00 00      	lea	r11, [2*r8 + 0x1]
ffffffff80011cf8: 4d 89 c6             	mov	r14, r8
ffffffff80011cfb: 4d 39 d7             	cmp	r15, r10
ffffffff80011cfe: 0f 83 67 ff ff ff    	jae	0xffffffff80011c6b <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x5b>
ffffffff80011d04: 4d 89 d8             	mov	r8, r11
ffffffff80011d07: 49 c1 e0 04          	shl	r8, 0x4
ffffffff80011d0b: 4e 8b 7c 01 08       	mov	r15, qword ptr [rcx + r8 + 0x8]
ffffffff80011d10: 31 ed                	xor	ebp, ebp
ffffffff80011d12: 4e 3b 7c 01 18       	cmp	r15, qword ptr [rcx + r8 + 0x18]
ffffffff80011d17: 40 0f 95 c5          	setne	bpl
ffffffff80011d1b: 0f 42 eb             	cmovb	ebp, ebx
ffffffff80011d1e: 40 84 ed             	test	bpl, bpl
ffffffff80011d21: 74 1d                	je	0xffffffff80011d40 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x130>
ffffffff80011d23: 40 0f b6 ed          	movzx	ebp, bpl
ffffffff80011d27: 41 b0 01             	mov	r8b, 0x1
ffffffff80011d2a: 83 fd 01             	cmp	ebp, 0x1
ffffffff80011d2d: 75 91                	jne	0xffffffff80011cc0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xb0>
ffffffff80011d2f: 41 b0 ff             	mov	r8b, -0x1
ffffffff80011d32: eb 8c                	jmp	0xffffffff80011cc0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xb0>
ffffffff80011d34: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80011d40: 4e 8b 24 01          	mov	r12, qword ptr [rcx + r8]
ffffffff80011d44: 4e 8b 7c 01 10       	mov	r15, qword ptr [rcx + r8 + 0x10]
ffffffff80011d49: 41 8b 6f 50          	mov	ebp, dword ptr [r15 + 0x50]
ffffffff80011d4d: 41 b0 ff             	mov	r8b, -0x1
ffffffff80011d50: 41 39 6c 24 50       	cmp	dword ptr [r12 + 0x50], ebp
ffffffff80011d55: 0f 82 65 ff ff ff    	jb	0xffffffff80011cc0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xb0>
ffffffff80011d5b: 41 b0 01             	mov	r8b, 0x1
ffffffff80011d5e: 0f 85 5c ff ff ff    	jne	0xffffffff80011cc0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xb0>
ffffffff80011d64: 4d 8b 64 24 20       	mov	r12, qword ptr [r12 + 0x20]
ffffffff80011d69: 45 31 c0             	xor	r8d, r8d
ffffffff80011d6c: 4d 3b 67 20          	cmp	r12, qword ptr [r15 + 0x20]
ffffffff80011d70: 41 0f 95 c0          	setne	r8b
ffffffff80011d74: 44 0f 42 c3          	cmovb	r8d, ebx
ffffffff80011d78: e9 43 ff ff ff       	jmp	0xffffffff80011cc0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0xb0>
ffffffff80011d7d: 4d 89 c1             	mov	r9, r8
ffffffff80011d80: 49 c1 e1 04          	shl	r9, 0x4
ffffffff80011d84: 4a 89 34 09          	mov	qword ptr [rcx + r9], rsi
ffffffff80011d88: 4a 89 7c 09 08       	mov	qword ptr [rcx + r9 + 0x8], rdi
ffffffff80011d8d: 4d 85 c0             	test	r8, r8
ffffffff80011d90: 74 7d                	je	0xffffffff80011e0f <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x1ff>
ffffffff80011d92: 41 b9 ff 00 00 00    	mov	r9d, 0xff
ffffffff80011d98: eb 2f                	jmp	0xffffffff80011dc9 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x1b9>
ffffffff80011d9a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80011da0: 40 0f b6 ed          	movzx	ebp, bpl
ffffffff80011da4: 81 fd ff 00 00 00    	cmp	ebp, 0xff
ffffffff80011daa: 75 5e                	jne	0xffffffff80011e0a <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x1fa>
ffffffff80011dac: 48 01 cb             	add	rbx, rcx
ffffffff80011daf: 49 c1 e2 04          	shl	r10, 0x4
ffffffff80011db3: 4c 8b 33             	mov	r14, qword ptr [rbx]
ffffffff80011db6: 48 8b 5b 08          	mov	rbx, qword ptr [rbx + 0x8]
ffffffff80011dba: 4a 89 5c 11 08       	mov	qword ptr [rcx + r10 + 0x8], rbx
ffffffff80011dbf: 4e 89 34 11          	mov	qword ptr [rcx + r10], r14
ffffffff80011dc3: 49 83 fb 01          	cmp	r11, 0x1
ffffffff80011dc7: 76 49                	jbe	0xffffffff80011e12 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x202>
ffffffff80011dc9: 4d 89 c2             	mov	r10, r8
ffffffff80011dcc: 4d 8d 58 ff          	lea	r11, [r8 - 0x1]
ffffffff80011dd0: 4d 89 d8             	mov	r8, r11
ffffffff80011dd3: 49 d1 e8             	shr	r8
ffffffff80011dd6: 4c 89 c3             	mov	rbx, r8
ffffffff80011dd9: 48 c1 e3 04          	shl	rbx, 0x4
ffffffff80011ddd: 31 ed                	xor	ebp, ebp
ffffffff80011ddf: 48 3b 7c 19 08       	cmp	rdi, qword ptr [rcx + rbx + 0x8]
ffffffff80011de4: 40 0f 95 c5          	setne	bpl
ffffffff80011de8: 41 0f 42 e9          	cmovb	ebp, r9d
ffffffff80011dec: 40 84 ed             	test	bpl, bpl
ffffffff80011def: 75 af                	jne	0xffffffff80011da0 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x190>
ffffffff80011df1: 4c 8b 34 19          	mov	r14, qword ptr [rcx + rbx]
ffffffff80011df5: 41 8b 6e 50          	mov	ebp, dword ptr [r14 + 0x50]
ffffffff80011df9: 39 6e 50             	cmp	dword ptr [rsi + 0x50], ebp
ffffffff80011dfc: 72 0c                	jb	0xffffffff80011e0a <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x1fa>
ffffffff80011dfe: 75 ac                	jne	0xffffffff80011dac <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x19c>
ffffffff80011e00: 4c 8b 7e 20          	mov	r15, qword ptr [rsi + 0x20]
ffffffff80011e04: 4d 3b 7e 20          	cmp	r15, qword ptr [r14 + 0x20]
ffffffff80011e08: 77 a2                	ja	0xffffffff80011dac <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x19c>
ffffffff80011e0a: 4d 89 d0             	mov	r8, r10
ffffffff80011e0d: eb 03                	jmp	0xffffffff80011e12 <alloc::collections::binary_heap::BinaryHeap<T,A>::pop::h87afe25d3a731901+0x202>
ffffffff80011e0f: 45 31 c0             	xor	r8d, r8d
ffffffff80011e12: 49 c1 e0 04          	shl	r8, 0x4
ffffffff80011e16: 4a 89 34 01          	mov	qword ptr [rcx + r8], rsi
ffffffff80011e1a: 4a 89 7c 01 08       	mov	qword ptr [rcx + r8 + 0x8], rdi
ffffffff80011e1f: 5b                   	pop	rbx
ffffffff80011e20: 41 5c                	pop	r12
ffffffff80011e22: 41 5e                	pop	r14
ffffffff80011e24: 41 5f                	pop	r15
ffffffff80011e26: 5d                   	pop	rbp
ffffffff80011e27: c3                   	ret
ffffffff80011e28: cc                   	int3
ffffffff80011e29: cc                   	int3
ffffffff80011e2a: cc                   	int3
ffffffff80011e2b: cc                   	int3
ffffffff80011e2c: cc                   	int3
ffffffff80011e2d: cc                   	int3
ffffffff80011e2e: cc                   	int3
ffffffff80011e2f: cc                   	int3

ffffffff80011e30 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b>:
ffffffff80011e30: 55                   	push	rbp
ffffffff80011e31: 41 56                	push	r14
ffffffff80011e33: 53                   	push	rbx
ffffffff80011e34: 48 83 ec 60          	sub	rsp, 0x60
ffffffff80011e38: 48 89 d3             	mov	rbx, rdx
ffffffff80011e3b: 89 f5                	mov	ebp, esi
ffffffff80011e3d: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff80011e40: 48 85 c9             	test	rcx, rcx
ffffffff80011e43: 0f 84 7d 00 00 00    	je	0xffffffff80011ec6 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x96>
ffffffff80011e49: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff80011e4d: ba ff 00 00 00       	mov	edx, 0xff
ffffffff80011e52: 44 0f b7 81 8e 00 00 00      	movzx	r8d, word ptr [rcx + 0x8e]
ffffffff80011e5a: 45 89 c1             	mov	r9d, r8d
ffffffff80011e5d: 41 c1 e1 02          	shl	r9d, 0x2
ffffffff80011e61: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff80011e68: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80011e70: 4d 85 c9             	test	r9, r9
ffffffff80011e73: 74 2b                	je	0xffffffff80011ea0 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x70>
ffffffff80011e75: 45 31 d2             	xor	r10d, r10d
ffffffff80011e78: 39 6c b1 64          	cmp	dword ptr [rcx + 4*rsi + 0x64], ebp
ffffffff80011e7c: 41 0f 95 c2          	setne	r10b
ffffffff80011e80: 44 0f 47 d2          	cmova	r10d, edx
ffffffff80011e84: 48 ff c6             	inc	rsi
ffffffff80011e87: 49 83 c1 fc          	add	r9, -0x4
ffffffff80011e8b: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff80011e8f: 74 df                	je	0xffffffff80011e70 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x40>
ffffffff80011e91: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff80011e95: 45 85 c0             	test	r8d, r8d
ffffffff80011e98: 74 1d                	je	0xffffffff80011eb7 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x87>
ffffffff80011e9a: eb 07                	jmp	0xffffffff80011ea3 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x73>
ffffffff80011e9c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80011ea0: 4c 89 c6             	mov	rsi, r8
ffffffff80011ea3: 48 83 e8 01          	sub	rax, 0x1
ffffffff80011ea7: 0f 82 d8 00 00 00    	jb	0xffffffff80011f85 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x155>
ffffffff80011ead: 48 8b 8c f1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*rsi + 0x90]
ffffffff80011eb5: eb 9b                	jmp	0xffffffff80011e52 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x22>
ffffffff80011eb7: 48 8b 44 f1 08       	mov	rax, qword ptr [rcx + 8*rsi + 0x8]
ffffffff80011ebc: 48 89 5c f1 08       	mov	qword ptr [rcx + 8*rsi + 0x8], rbx
ffffffff80011ec1: e9 b6 00 00 00       	jmp	0xffffffff80011f7c <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x14c>
ffffffff80011ec6: 89 e8                	mov	eax, ebp
ffffffff80011ec8: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80011ecd: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff80011ed6: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80011edb: 0f b6 05 ff 92 01 00 	movzx	eax, byte ptr [rip + 0x192ff] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80011ee2: b1 01                	mov	cl, 0x1
ffffffff80011ee4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80011ef0: 31 c0                	xor	eax, eax
ffffffff80011ef2: f0                   	lock
ffffffff80011ef3: 0f b0 0d 06 91 01 00 	cmpxchg	byte ptr [rip + 0x19106], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80011efa: 75 06                	jne	0xffffffff80011f02 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0xd2>
ffffffff80011efc: eb 11                	jmp	0xffffffff80011f0f <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0xdf>
ffffffff80011efe: 66 90                	nop
ffffffff80011f00: f3 90                	pause
ffffffff80011f02: 0f b6 05 f7 90 01 00 	movzx	eax, byte ptr [rip + 0x190f7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80011f09: 84 c0                	test	al, al
ffffffff80011f0b: 75 f3                	jne	0xffffffff80011f00 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0xd0>
ffffffff80011f0d: eb e1                	jmp	0xffffffff80011ef0 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0xc0>
ffffffff80011f0f: 49 89 fe             	mov	r14, rdi
ffffffff80011f12: be 08 00 00 00       	mov	esi, 0x8
ffffffff80011f17: ba 90 00 00 00       	mov	edx, 0x90
ffffffff80011f1c: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80011f23: e8 28 ab ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80011f28: c6 05 d1 90 01 00 00 	mov	byte ptr [rip + 0x190d1], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80011f2f: 48 85 c0             	test	rax, rax
ffffffff80011f32: 0f 84 bc 00 00 00    	je	0xffffffff80011ff4 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x1c4>
ffffffff80011f38: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff80011f3f: 66 c7 80 8e 00 00 00 00 00   	mov	word ptr [rax + 0x8e], 0x0
ffffffff80011f48: 49 89 06             	mov	qword ptr [r14], rax
ffffffff80011f4b: 49 c7 46 08 00 00 00 00      	mov	qword ptr [r14 + 0x8], 0x0
ffffffff80011f53: 0f b7 90 8e 00 00 00 	movzx	edx, word ptr [rax + 0x8e]
ffffffff80011f5a: 48 83 fa 0b          	cmp	rdx, 0xb
ffffffff80011f5e: 73 7c                	jae	0xffffffff80011fdc <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x1ac>
ffffffff80011f60: 4c 89 f1             	mov	rcx, r14
ffffffff80011f63: 8d 72 01             	lea	esi, [rdx + 0x1]
ffffffff80011f66: 66 89 b0 8e 00 00 00 	mov	word ptr [rax + 0x8e], si
ffffffff80011f6d: 89 6c 90 60          	mov	dword ptr [rax + 4*rdx + 0x60], ebp
ffffffff80011f71: 48 89 5c d0 08       	mov	qword ptr [rax + 8*rdx + 0x8], rbx
ffffffff80011f76: 48 ff 41 10          	inc	qword ptr [rcx + 0x10]
ffffffff80011f7a: 31 c0                	xor	eax, eax
ffffffff80011f7c: 48 83 c4 60          	add	rsp, 0x60
ffffffff80011f80: 5b                   	pop	rbx
ffffffff80011f81: 41 5e                	pop	r14
ffffffff80011f83: 5d                   	pop	rbp
ffffffff80011f84: c3                   	ret
ffffffff80011f85: 89 e8                	mov	eax, ebp
ffffffff80011f87: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80011f8c: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80011f91: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff80011f9a: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff80011f9f: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80011fa4: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff80011fa9: 48 89 74 24 40       	mov	qword ptr [rsp + 0x40], rsi
ffffffff80011fae: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff80011fb7: 4c 8d 4c 24 2c       	lea	r9, [rsp + 0x2c]
ffffffff80011fbc: 48 8d 7c 24 48       	lea	rdi, [rsp + 0x48]
ffffffff80011fc1: 48 8d 74 24 30       	lea	rsi, [rsp + 0x30]
ffffffff80011fc6: 4c 8d 44 24 08       	lea	r8, [rsp + 0x8]
ffffffff80011fcb: 89 ea                	mov	edx, ebp
ffffffff80011fcd: 48 89 d9             	mov	rcx, rbx
ffffffff80011fd0: e8 ab 17 ff ff       	call	0xffffffff80003780 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392>
ffffffff80011fd5: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80011fda: eb 9a                	jmp	0xffffffff80011f76 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h49c7afd9c8b6bc4b+0x146>
ffffffff80011fdc: be 20 00 00 00       	mov	esi, 0x20
ffffffff80011fe1: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff80011fe8: 48 c7 c2 70 25 02 80 	mov	rdx, -0x7ffdda90
ffffffff80011fef: e8 fc f0 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80011ff4: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80011ff9: be 90 00 00 00       	mov	esi, 0x90
ffffffff80011ffe: e8 af bb 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80012003: cc                   	int3
ffffffff80012004: cc                   	int3
ffffffff80012005: cc                   	int3
ffffffff80012006: cc                   	int3
ffffffff80012007: cc                   	int3
ffffffff80012008: cc                   	int3
ffffffff80012009: cc                   	int3
ffffffff8001200a: cc                   	int3
ffffffff8001200b: cc                   	int3
ffffffff8001200c: cc                   	int3
ffffffff8001200d: cc                   	int3
ffffffff8001200e: cc                   	int3
ffffffff8001200f: cc                   	int3

ffffffff80012010 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26>:
ffffffff80012010: 55                   	push	rbp
ffffffff80012011: 41 57                	push	r15
ffffffff80012013: 41 56                	push	r14
ffffffff80012015: 53                   	push	rbx
ffffffff80012016: 48 83 ec 58          	sub	rsp, 0x58
ffffffff8001201a: 49 89 ce             	mov	r14, rcx
ffffffff8001201d: 49 89 f7             	mov	r15, rsi
ffffffff80012020: 48 89 fb             	mov	rbx, rdi
ffffffff80012023: 48 8b 06             	mov	rax, qword ptr [rsi]
ffffffff80012026: 48 85 c0             	test	rax, rax
ffffffff80012029: 0f 84 a6 00 00 00    	je	0xffffffff800120d5 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0xc5>
ffffffff8001202f: 49 8b 4f 08          	mov	rcx, qword ptr [r15 + 0x8]
ffffffff80012033: be ff 00 00 00       	mov	esi, 0xff
ffffffff80012038: 44 0f b7 80 b6 05 00 00      	movzx	r8d, word ptr [rax + 0x5b6]
ffffffff80012040: 45 89 c2             	mov	r10d, r8d
ffffffff80012043: 41 c1 e2 07          	shl	r10d, 0x7
ffffffff80012047: 48 c7 c7 ff ff ff ff 	mov	rdi, -0x1
ffffffff8001204e: 45 31 c9             	xor	r9d, r9d
ffffffff80012051: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80012060: 4d 39 ca             	cmp	r10, r9
ffffffff80012063: 74 2b                	je	0xffffffff80012090 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x80>
ffffffff80012065: 45 31 db             	xor	r11d, r11d
ffffffff80012068: 39 94 b8 8c 05 00 00 	cmp	dword ptr [rax + 4*rdi + 0x58c], edx
ffffffff8001206f: 41 0f 95 c3          	setne	r11b
ffffffff80012073: 44 0f 47 de          	cmova	r11d, esi
ffffffff80012077: 49 83 e9 80          	sub	r9, -0x80
ffffffff8001207b: 48 ff c7             	inc	rdi
ffffffff8001207e: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80012082: 74 dc                	je	0xffffffff80012060 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x50>
ffffffff80012084: 45 0f b6 c3          	movzx	r8d, r11b
ffffffff80012088: 45 85 c0             	test	r8d, r8d
ffffffff8001208b: 74 1a                	je	0xffffffff800120a7 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x97>
ffffffff8001208d: eb 04                	jmp	0xffffffff80012093 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x83>
ffffffff8001208f: 90                   	nop
ffffffff80012090: 4c 89 c7             	mov	rdi, r8
ffffffff80012093: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80012097: 0f 82 16 01 00 00    	jb	0xffffffff800121b3 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x1a3>
ffffffff8001209d: 48 8b 84 f8 b8 05 00 00      	mov	rax, qword ptr [rax + 8*rdi + 0x5b8]
ffffffff800120a5: eb 91                	jmp	0xffffffff80012038 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x28>
ffffffff800120a7: 4c 01 c8             	add	rax, r9
ffffffff800120aa: 48 83 c0 80          	add	rax, -0x80
ffffffff800120ae: 48 8d 7b 08          	lea	rdi, [rbx + 0x8]
ffffffff800120b2: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800120b7: 48 89 c6             	mov	rsi, rax
ffffffff800120ba: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800120bd: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff800120c2: 48 89 c7             	mov	rdi, rax
ffffffff800120c5: 4c 89 f6             	mov	rsi, r14
ffffffff800120c8: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800120cb: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800120d0: e9 cd 00 00 00       	jmp	0xffffffff800121a2 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x192>
ffffffff800120d5: 89 d0                	mov	eax, edx
ffffffff800120d7: 4c 89 3c 24          	mov	qword ptr [rsp], r15
ffffffff800120db: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff800120e4: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800120e9: 0f b6 05 f1 90 01 00 	movzx	eax, byte ptr [rip + 0x190f1] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800120f0: b1 01                	mov	cl, 0x1
ffffffff800120f2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80012100: 31 c0                	xor	eax, eax
ffffffff80012102: f0                   	lock
ffffffff80012103: 0f b0 0d f6 8e 01 00 	cmpxchg	byte ptr [rip + 0x18ef6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001210a: 75 06                	jne	0xffffffff80012112 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x102>
ffffffff8001210c: eb 11                	jmp	0xffffffff8001211f <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x10f>
ffffffff8001210e: 66 90                	nop
ffffffff80012110: f3 90                	pause
ffffffff80012112: 0f b6 05 e7 8e 01 00 	movzx	eax, byte ptr [rip + 0x18ee7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012119: 84 c0                	test	al, al
ffffffff8001211b: 75 f3                	jne	0xffffffff80012110 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x100>
ffffffff8001211d: eb e1                	jmp	0xffffffff80012100 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0xf0>
ffffffff8001211f: 89 d5                	mov	ebp, edx
ffffffff80012121: be 08 00 00 00       	mov	esi, 0x8
ffffffff80012126: ba b8 05 00 00       	mov	edx, 0x5b8
ffffffff8001212b: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012132: e8 19 a9 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80012137: c6 05 c2 8e 01 00 00 	mov	byte ptr [rip + 0x18ec2], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001213e: 48 85 c0             	test	rax, rax
ffffffff80012141: 0f 84 d5 00 00 00    	je	0xffffffff8001221c <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x20c>
ffffffff80012147: 48 c7 80 80 05 00 00 00 00 00 00     	mov	qword ptr [rax + 0x580], 0x0
ffffffff80012152: 66 c7 80 b6 05 00 00 00 00   	mov	word ptr [rax + 0x5b6], 0x0
ffffffff8001215b: 49 89 07             	mov	qword ptr [r15], rax
ffffffff8001215e: 49 c7 47 08 00 00 00 00      	mov	qword ptr [r15 + 0x8], 0x0
ffffffff80012166: 0f b7 88 b6 05 00 00 	movzx	ecx, word ptr [rax + 0x5b6]
ffffffff8001216d: 48 83 f9 0b          	cmp	rcx, 0xb
ffffffff80012171: 0f 83 8d 00 00 00    	jae	0xffffffff80012204 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x1f4>
ffffffff80012177: 8d 51 01             	lea	edx, [rcx + 0x1]
ffffffff8001217a: 66 89 90 b6 05 00 00 	mov	word ptr [rax + 0x5b6], dx
ffffffff80012181: 89 ac 88 88 05 00 00 	mov	dword ptr [rax + 4*rcx + 0x588], ebp
ffffffff80012188: c1 e1 07             	shl	ecx, 0x7
ffffffff8001218b: 48 01 c8             	add	rax, rcx
ffffffff8001218e: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff80012193: 48 89 c7             	mov	rdi, rax
ffffffff80012196: 4c 89 f6             	mov	rsi, r14
ffffffff80012199: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff8001219c: 49 ff 47 10          	inc	qword ptr [r15 + 0x10]
ffffffff800121a0: 31 c0                	xor	eax, eax
ffffffff800121a2: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff800121a5: 48 89 d8             	mov	rax, rbx
ffffffff800121a8: 48 83 c4 58          	add	rsp, 0x58
ffffffff800121ac: 5b                   	pop	rbx
ffffffff800121ad: 41 5e                	pop	r14
ffffffff800121af: 41 5f                	pop	r15
ffffffff800121b1: 5d                   	pop	rbp
ffffffff800121b2: c3                   	ret
ffffffff800121b3: 89 d1                	mov	ecx, edx
ffffffff800121b5: 4c 89 3c 24          	mov	qword ptr [rsp], r15
ffffffff800121b9: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff800121be: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff800121c7: 48 89 7c 24 18       	mov	qword ptr [rsp + 0x18], rdi
ffffffff800121cc: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff800121d1: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800121d6: 48 89 7c 24 38       	mov	qword ptr [rsp + 0x38], rdi
ffffffff800121db: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff800121e4: 4c 8d 4c 24 24       	lea	r9, [rsp + 0x24]
ffffffff800121e9: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff800121ee: 48 8d 74 24 28       	lea	rsi, [rsp + 0x28]
ffffffff800121f3: 49 89 e0             	mov	r8, rsp
ffffffff800121f6: 4c 89 f1             	mov	rcx, r14
ffffffff800121f9: e8 02 21 ff ff       	call	0xffffffff80004300 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hc6aa7a79ecd258af>
ffffffff800121fe: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff80012202: eb 98                	jmp	0xffffffff8001219c <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::h77d951ec623cef26+0x18c>
ffffffff80012204: be 20 00 00 00       	mov	esi, 0x20
ffffffff80012209: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff80012210: 48 c7 c2 70 25 02 80 	mov	rdx, -0x7ffdda90
ffffffff80012217: e8 d4 ee 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001221c: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80012221: be b8 05 00 00       	mov	esi, 0x5b8
ffffffff80012226: e8 87 b9 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8001222b: cc                   	int3
ffffffff8001222c: cc                   	int3
ffffffff8001222d: cc                   	int3
ffffffff8001222e: cc                   	int3
ffffffff8001222f: cc                   	int3

ffffffff80012230 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4>:
ffffffff80012230: 41 56                	push	r14
ffffffff80012232: 53                   	push	rbx
ffffffff80012233: 48 83 ec 58          	sub	rsp, 0x58
ffffffff80012237: 48 89 f3             	mov	rbx, rsi
ffffffff8001223a: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001223d: 48 85 c0             	test	rax, rax
ffffffff80012240: 74 6c                	je	0xffffffff800122ae <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x7e>
ffffffff80012242: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80012246: ba ff 00 00 00       	mov	edx, 0xff
ffffffff8001224b: 44 0f b7 40 62       	movzx	r8d, word ptr [rax + 0x62]
ffffffff80012250: 45 89 c1             	mov	r9d, r8d
ffffffff80012253: 41 c1 e1 03          	shl	r9d, 0x3
ffffffff80012257: 48 c7 c6 ff ff ff ff 	mov	rsi, -0x1
ffffffff8001225e: 66 90                	nop
ffffffff80012260: 4d 85 c9             	test	r9, r9
ffffffff80012263: 74 2b                	je	0xffffffff80012290 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x60>
ffffffff80012265: 45 31 d2             	xor	r10d, r10d
ffffffff80012268: 48 39 5c f0 10       	cmp	qword ptr [rax + 8*rsi + 0x10], rbx
ffffffff8001226d: 41 0f 95 c2          	setne	r10b
ffffffff80012271: 44 0f 47 d2          	cmova	r10d, edx
ffffffff80012275: 48 ff c6             	inc	rsi
ffffffff80012278: 49 83 c1 f8          	add	r9, -0x8
ffffffff8001227c: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff80012280: 74 de                	je	0xffffffff80012260 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x30>
ffffffff80012282: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff80012286: 45 85 c0             	test	r8d, r8d
ffffffff80012289: 75 08                	jne	0xffffffff80012293 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x63>
ffffffff8001228b: eb 17                	jmp	0xffffffff800122a4 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x74>
ffffffff8001228d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80012290: 4c 89 c6             	mov	rsi, r8
ffffffff80012293: 48 83 e9 01          	sub	rcx, 0x1
ffffffff80012297: 0f 82 ba 00 00 00    	jb	0xffffffff80012357 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x127>
ffffffff8001229d: 48 8b 44 f0 68       	mov	rax, qword ptr [rax + 8*rsi + 0x68]
ffffffff800122a2: eb a7                	jmp	0xffffffff8001224b <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x1b>
ffffffff800122a4: b0 01                	mov	al, 0x1
ffffffff800122a6: 48 83 c4 58          	add	rsp, 0x58
ffffffff800122aa: 5b                   	pop	rbx
ffffffff800122ab: 41 5e                	pop	r14
ffffffff800122ad: c3                   	ret
ffffffff800122ae: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff800122b2: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff800122b7: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff800122c0: 0f b6 05 1a 8f 01 00 	movzx	eax, byte ptr [rip + 0x18f1a] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800122c7: b1 01                	mov	cl, 0x1
ffffffff800122c9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff800122d0: 31 c0                	xor	eax, eax
ffffffff800122d2: f0                   	lock
ffffffff800122d3: 0f b0 0d 26 8d 01 00 	cmpxchg	byte ptr [rip + 0x18d26], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800122da: 75 06                	jne	0xffffffff800122e2 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0xb2>
ffffffff800122dc: eb 11                	jmp	0xffffffff800122ef <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0xbf>
ffffffff800122de: 66 90                	nop
ffffffff800122e0: f3 90                	pause
ffffffff800122e2: 0f b6 05 17 8d 01 00 	movzx	eax, byte ptr [rip + 0x18d17] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800122e9: 84 c0                	test	al, al
ffffffff800122eb: 75 f3                	jne	0xffffffff800122e0 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0xb0>
ffffffff800122ed: eb e1                	jmp	0xffffffff800122d0 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0xa0>
ffffffff800122ef: 49 89 fe             	mov	r14, rdi
ffffffff800122f2: be 08 00 00 00       	mov	esi, 0x8
ffffffff800122f7: ba 68 00 00 00       	mov	edx, 0x68
ffffffff800122fc: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012303: e8 48 a7 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80012308: c6 05 f1 8c 01 00 00 	mov	byte ptr [rip + 0x18cf1], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001230f: 48 85 c0             	test	rax, rax
ffffffff80012312: 0f 84 a6 00 00 00    	je	0xffffffff800123be <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x18e>
ffffffff80012318: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff8001231f: 66 c7 40 62 00 00    	mov	word ptr [rax + 0x62], 0x0
ffffffff80012325: 49 89 06             	mov	qword ptr [r14], rax
ffffffff80012328: 49 c7 46 08 00 00 00 00      	mov	qword ptr [r14 + 0x8], 0x0
ffffffff80012330: 0f b7 50 62          	movzx	edx, word ptr [rax + 0x62]
ffffffff80012334: 48 83 fa 0b          	cmp	rdx, 0xb
ffffffff80012338: 73 6c                	jae	0xffffffff800123a6 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x176>
ffffffff8001233a: 4c 89 f1             	mov	rcx, r14
ffffffff8001233d: 8d 72 01             	lea	esi, [rdx + 0x1]
ffffffff80012340: 66 89 70 62          	mov	word ptr [rax + 0x62], si
ffffffff80012344: 48 89 5c d0 08       	mov	qword ptr [rax + 8*rdx + 0x8], rbx
ffffffff80012349: 48 ff 41 10          	inc	qword ptr [rcx + 0x10]
ffffffff8001234d: 31 c0                	xor	eax, eax
ffffffff8001234f: 48 83 c4 58          	add	rsp, 0x58
ffffffff80012353: 5b                   	pop	rbx
ffffffff80012354: 41 5e                	pop	r14
ffffffff80012356: c3                   	ret
ffffffff80012357: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8001235b: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff80012360: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80012365: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8001236e: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff80012373: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80012378: 48 89 74 24 38       	mov	qword ptr [rsp + 0x38], rsi
ffffffff8001237d: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff80012386: 4c 8d 44 24 28       	lea	r8, [rsp + 0x28]
ffffffff8001238b: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80012390: 48 8d 74 24 28       	lea	rsi, [rsp + 0x28]
ffffffff80012395: 48 89 e1             	mov	rcx, rsp
ffffffff80012398: 48 89 da             	mov	rdx, rbx
ffffffff8001239b: e8 30 0b ff ff       	call	0xffffffff80002ed0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053>
ffffffff800123a0: 48 8b 0c 24          	mov	rcx, qword ptr [rsp]
ffffffff800123a4: eb a3                	jmp	0xffffffff80012349 <alloc::collections::btree::map::BTreeMap<K,V,A>::insert::hf87c657fe38e0fc4+0x119>
ffffffff800123a6: be 20 00 00 00       	mov	esi, 0x20
ffffffff800123ab: 48 c7 c7 a8 24 02 80 	mov	rdi, -0x7ffddb58
ffffffff800123b2: 48 c7 c2 70 25 02 80 	mov	rdx, -0x7ffdda90
ffffffff800123b9: e8 32 ed 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800123be: bf 08 00 00 00       	mov	edi, 0x8
ffffffff800123c3: be 68 00 00 00       	mov	esi, 0x68
ffffffff800123c8: e8 e5 b7 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800123cd: cc                   	int3
ffffffff800123ce: cc                   	int3
ffffffff800123cf: cc                   	int3

ffffffff800123d0 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1>:
ffffffff800123d0: 41 56                	push	r14
ffffffff800123d2: 53                   	push	rbx
ffffffff800123d3: 48 83 ec 58          	sub	rsp, 0x58
ffffffff800123d7: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff800123da: 48 85 c9             	test	rcx, rcx
ffffffff800123dd: 0f 84 0c 01 00 00    	je	0xffffffff800124ef <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x11f>
ffffffff800123e3: 48 89 fb             	mov	rbx, rdi
ffffffff800123e6: 48 8b 57 08          	mov	rdx, qword ptr [rdi + 0x8]
ffffffff800123ea: 8b 36                	mov	esi, dword ptr [rsi]
ffffffff800123ec: 31 c0                	xor	eax, eax
ffffffff800123ee: bf ff 00 00 00       	mov	edi, 0xff
ffffffff800123f3: 44 0f b7 89 8e 00 00 00      	movzx	r9d, word ptr [rcx + 0x8e]
ffffffff800123fb: 45 89 ca             	mov	r10d, r9d
ffffffff800123fe: 41 c1 e2 02          	shl	r10d, 0x2
ffffffff80012402: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff80012409: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80012410: 4d 85 d2             	test	r10, r10
ffffffff80012413: 74 2b                	je	0xffffffff80012440 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x70>
ffffffff80012415: 45 31 db             	xor	r11d, r11d
ffffffff80012418: 42 39 74 81 64       	cmp	dword ptr [rcx + 4*r8 + 0x64], esi
ffffffff8001241d: 41 0f 95 c3          	setne	r11b
ffffffff80012421: 44 0f 47 df          	cmova	r11d, edi
ffffffff80012425: 49 ff c0             	inc	r8
ffffffff80012428: 49 83 c2 fc          	add	r10, -0x4
ffffffff8001242c: 41 80 fb 01          	cmp	r11b, 0x1
ffffffff80012430: 74 de                	je	0xffffffff80012410 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x40>
ffffffff80012432: 45 0f b6 cb          	movzx	r9d, r11b
ffffffff80012436: 45 85 c9             	test	r9d, r9d
ffffffff80012439: 74 1c                	je	0xffffffff80012457 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x87>
ffffffff8001243b: eb 06                	jmp	0xffffffff80012443 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x73>
ffffffff8001243d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80012440: 4d 89 c8             	mov	r8, r9
ffffffff80012443: 48 83 ea 01          	sub	rdx, 0x1
ffffffff80012447: 0f 82 a4 00 00 00    	jb	0xffffffff800124f1 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x121>
ffffffff8001244d: 4a 8b 8c c1 90 00 00 00      	mov	rcx, qword ptr [rcx + 8*r8 + 0x90]
ffffffff80012455: eb 9c                	jmp	0xffffffff800123f3 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x23>
ffffffff80012457: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8001245c: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80012461: 4c 89 44 24 20       	mov	qword ptr [rsp + 0x20], r8
ffffffff80012466: 48 89 5c 24 28       	mov	qword ptr [rsp + 0x28], rbx
ffffffff8001246b: c6 44 24 0f 00       	mov	byte ptr [rsp + 0xf], 0x0
ffffffff80012470: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff80012475: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff8001247a: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff8001247f: e8 8c 53 ff ff       	call	0xffffffff80007810 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7>
ffffffff80012484: 48 ff 4b 10          	dec	qword ptr [rbx + 0x10]
ffffffff80012488: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff8001248d: 80 7c 24 0f 00       	cmp	byte ptr [rsp + 0xf], 0x0
ffffffff80012492: 74 5d                	je	0xffffffff800124f1 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x121>
ffffffff80012494: 48 8b 33             	mov	rsi, qword ptr [rbx]
ffffffff80012497: 48 85 f6             	test	rsi, rsi
ffffffff8001249a: 0f 84 99 00 00 00    	je	0xffffffff80012539 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x169>
ffffffff800124a0: 48 8b 4b 08          	mov	rcx, qword ptr [rbx + 0x8]
ffffffff800124a4: 48 85 c9             	test	rcx, rcx
ffffffff800124a7: 74 78                	je	0xffffffff80012521 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x151>
ffffffff800124a9: 49 89 c6             	mov	r14, rax
ffffffff800124ac: 48 8b 86 90 00 00 00 	mov	rax, qword ptr [rsi + 0x90]
ffffffff800124b3: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff800124b6: 48 ff c9             	dec	rcx
ffffffff800124b9: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff800124bd: 48 c7 00 00 00 00 00 	mov	qword ptr [rax], 0x0
ffffffff800124c4: b1 01                	mov	cl, 0x1
ffffffff800124c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800124d0: 31 c0                	xor	eax, eax
ffffffff800124d2: f0                   	lock
ffffffff800124d3: 0f b0 0d 26 8b 01 00 	cmpxchg	byte ptr [rip + 0x18b26], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800124da: 75 06                	jne	0xffffffff800124e2 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x112>
ffffffff800124dc: eb 1b                	jmp	0xffffffff800124f9 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x129>
ffffffff800124de: 66 90                	nop
ffffffff800124e0: f3 90                	pause
ffffffff800124e2: 0f b6 05 17 8b 01 00 	movzx	eax, byte ptr [rip + 0x18b17] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800124e9: 84 c0                	test	al, al
ffffffff800124eb: 75 f3                	jne	0xffffffff800124e0 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x110>
ffffffff800124ed: eb e1                	jmp	0xffffffff800124d0 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h7c63091fd1b2dda1+0x100>
ffffffff800124ef: 31 c0                	xor	eax, eax
ffffffff800124f1: 48 83 c4 58          	add	rsp, 0x58
ffffffff800124f5: 5b                   	pop	rbx
ffffffff800124f6: 41 5e                	pop	r14
ffffffff800124f8: c3                   	ret
ffffffff800124f9: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800124fe: b9 f0 00 00 00       	mov	ecx, 0xf0
ffffffff80012503: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8001250a: e8 e1 a2 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8001250f: c6 05 ea 8a 01 00 00 	mov	byte ptr [rip + 0x18aea], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012516: 4c 89 f0             	mov	rax, r14
ffffffff80012519: 48 83 c4 58          	add	rsp, 0x58
ffffffff8001251d: 5b                   	pop	rbx
ffffffff8001251e: 41 5e                	pop	r14
ffffffff80012520: c3                   	ret
ffffffff80012521: be 21 00 00 00       	mov	esi, 0x21
ffffffff80012526: 48 c7 c7 50 26 02 80 	mov	rdi, -0x7ffdd9b0
ffffffff8001252d: 48 c7 c2 78 26 02 80 	mov	rdx, -0x7ffdd988
ffffffff80012534: e8 b7 eb 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80012539: 48 c7 c7 60 74 02 80 	mov	rdi, -0x7ffd8ba0
ffffffff80012540: e8 fb f0 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80012545: cc                   	int3
ffffffff80012546: cc                   	int3
ffffffff80012547: cc                   	int3
ffffffff80012548: cc                   	int3
ffffffff80012549: cc                   	int3
ffffffff8001254a: cc                   	int3
ffffffff8001254b: cc                   	int3
ffffffff8001254c: cc                   	int3
ffffffff8001254d: cc                   	int3
ffffffff8001254e: cc                   	int3
ffffffff8001254f: cc                   	int3

ffffffff80012550 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c>:
ffffffff80012550: 53                   	push	rbx
ffffffff80012551: 48 83 ec 50          	sub	rsp, 0x50
ffffffff80012555: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80012558: 48 85 c0             	test	rax, rax
ffffffff8001255b: 0f 84 fe 00 00 00    	je	0xffffffff8001265f <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x10f>
ffffffff80012561: 48 89 fb             	mov	rbx, rdi
ffffffff80012564: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80012568: 48 8b 16             	mov	rdx, qword ptr [rsi]
ffffffff8001256b: be ff 00 00 00       	mov	esi, 0xff
ffffffff80012570: 44 0f b7 40 62       	movzx	r8d, word ptr [rax + 0x62]
ffffffff80012575: 45 89 c1             	mov	r9d, r8d
ffffffff80012578: 41 c1 e1 03          	shl	r9d, 0x3
ffffffff8001257c: 48 c7 c7 ff ff ff ff 	mov	rdi, -0x1
ffffffff80012583: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80012590: 4d 85 c9             	test	r9, r9
ffffffff80012593: 74 2b                	je	0xffffffff800125c0 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x70>
ffffffff80012595: 45 31 d2             	xor	r10d, r10d
ffffffff80012598: 48 39 54 f8 10       	cmp	qword ptr [rax + 8*rdi + 0x10], rdx
ffffffff8001259d: 41 0f 95 c2          	setne	r10b
ffffffff800125a1: 44 0f 47 d6          	cmova	r10d, esi
ffffffff800125a5: 48 ff c7             	inc	rdi
ffffffff800125a8: 49 83 c1 f8          	add	r9, -0x8
ffffffff800125ac: 41 80 fa 01          	cmp	r10b, 0x1
ffffffff800125b0: 74 de                	je	0xffffffff80012590 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x40>
ffffffff800125b2: 45 0f b6 c2          	movzx	r8d, r10b
ffffffff800125b6: 45 85 c0             	test	r8d, r8d
ffffffff800125b9: 75 08                	jne	0xffffffff800125c3 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x73>
ffffffff800125bb: eb 17                	jmp	0xffffffff800125d4 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x84>
ffffffff800125bd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff800125c0: 4c 89 c7             	mov	rdi, r8
ffffffff800125c3: 48 83 e9 01          	sub	rcx, 0x1
ffffffff800125c7: 0f 82 92 00 00 00    	jb	0xffffffff8001265f <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x10f>
ffffffff800125cd: 48 8b 44 f8 68       	mov	rax, qword ptr [rax + 8*rdi + 0x68]
ffffffff800125d2: eb 9c                	jmp	0xffffffff80012570 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x20>
ffffffff800125d4: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff800125d9: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff800125de: 48 89 7c 24 20       	mov	qword ptr [rsp + 0x20], rdi
ffffffff800125e3: 48 89 5c 24 28       	mov	qword ptr [rsp + 0x28], rbx
ffffffff800125e8: c6 44 24 0f 00       	mov	byte ptr [rsp + 0xf], 0x0
ffffffff800125ed: 48 8d 7c 24 30       	lea	rdi, [rsp + 0x30]
ffffffff800125f2: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff800125f7: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff800125fc: e8 5f 54 ff ff       	call	0xffffffff80007a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff80012601: 48 ff 4b 10          	dec	qword ptr [rbx + 0x10]
ffffffff80012605: 80 7c 24 0f 00       	cmp	byte ptr [rsp + 0xf], 0x0
ffffffff8001260a: 74 78                	je	0xffffffff80012684 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x134>
ffffffff8001260c: 48 8b 33             	mov	rsi, qword ptr [rbx]
ffffffff8001260f: 48 85 f6             	test	rsi, rsi
ffffffff80012612: 0f 84 8c 00 00 00    	je	0xffffffff800126a4 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x154>
ffffffff80012618: 48 8b 43 08          	mov	rax, qword ptr [rbx + 0x8]
ffffffff8001261c: 48 85 c0             	test	rax, rax
ffffffff8001261f: 74 6b                	je	0xffffffff8001268c <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x13c>
ffffffff80012621: 48 8b 4e 68          	mov	rcx, qword ptr [rsi + 0x68]
ffffffff80012625: 48 89 0b             	mov	qword ptr [rbx], rcx
ffffffff80012628: 48 ff c8             	dec	rax
ffffffff8001262b: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001262f: 48 c7 01 00 00 00 00 	mov	qword ptr [rcx], 0x0
ffffffff80012636: b1 01                	mov	cl, 0x1
ffffffff80012638: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80012640: 31 c0                	xor	eax, eax
ffffffff80012642: f0                   	lock
ffffffff80012643: 0f b0 0d b6 89 01 00 	cmpxchg	byte ptr [rip + 0x189b6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001264a: 75 06                	jne	0xffffffff80012652 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x102>
ffffffff8001264c: eb 19                	jmp	0xffffffff80012667 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x117>
ffffffff8001264e: 66 90                	nop
ffffffff80012650: f3 90                	pause
ffffffff80012652: 0f b6 05 a7 89 01 00 	movzx	eax, byte ptr [rip + 0x189a7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012659: 84 c0                	test	al, al
ffffffff8001265b: 75 f3                	jne	0xffffffff80012650 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0x100>
ffffffff8001265d: eb e1                	jmp	0xffffffff80012640 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c+0xf0>
ffffffff8001265f: 31 c0                	xor	eax, eax
ffffffff80012661: 48 83 c4 50          	add	rsp, 0x50
ffffffff80012665: 5b                   	pop	rbx
ffffffff80012666: c3                   	ret
ffffffff80012667: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001266c: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff80012671: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012678: e8 73 a1 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8001267d: c6 05 7c 89 01 00 00 	mov	byte ptr [rip + 0x1897c], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012684: b0 01                	mov	al, 0x1
ffffffff80012686: 48 83 c4 50          	add	rsp, 0x50
ffffffff8001268a: 5b                   	pop	rbx
ffffffff8001268b: c3                   	ret
ffffffff8001268c: be 21 00 00 00       	mov	esi, 0x21
ffffffff80012691: 48 c7 c7 50 26 02 80 	mov	rdi, -0x7ffdd9b0
ffffffff80012698: 48 c7 c2 78 26 02 80 	mov	rdx, -0x7ffdd988
ffffffff8001269f: e8 4c ea 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800126a4: 48 c7 c7 60 74 02 80 	mov	rdi, -0x7ffd8ba0
ffffffff800126ab: e8 90 ef 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>

ffffffff800126b0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754>:
ffffffff800126b0: 55                   	push	rbp
ffffffff800126b1: 41 57                	push	r15
ffffffff800126b3: 41 56                	push	r14
ffffffff800126b5: 53                   	push	rbx
ffffffff800126b6: 48 83 ec 68          	sub	rsp, 0x68
ffffffff800126ba: 48 8b 37             	mov	rsi, qword ptr [rdi]
ffffffff800126bd: 48 85 f6             	test	rsi, rsi
ffffffff800126c0: 0f 84 d5 02 00 00    	je	0xffffffff8001299b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff800126c6: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff800126ca: 48 8b 4f 10          	mov	rcx, qword ptr [rdi + 0x10]
ffffffff800126ce: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff800126d7: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff800126dc: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800126e1: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff800126ea: 48 89 74 24 38       	mov	qword ptr [rsp + 0x38], rsi
ffffffff800126ef: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff800126f4: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff800126fd: 48 c7 44 24 28 01 00 00 00   	mov	qword ptr [rsp + 0x28], 0x1
ffffffff80012706: 48 89 4c 24 48       	mov	qword ptr [rsp + 0x48], rcx
ffffffff8001270b: 48 85 c9             	test	rcx, rcx
ffffffff8001270e: 0f 84 0b 01 00 00    	je	0xffffffff8001281f <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x16f>
ffffffff80012714: 48 8d 5c 24 10       	lea	rbx, [rsp + 0x10]
ffffffff80012719: 4c 8d 74 24 50       	lea	r14, [rsp + 0x50]
ffffffff8001271e: 66 90                	nop
ffffffff80012720: 48 ff c9             	dec	rcx
ffffffff80012723: 48 89 4c 24 48       	mov	qword ptr [rsp + 0x48], rcx
ffffffff80012728: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001272d: 48 83 f8 01          	cmp	rax, 0x1
ffffffff80012731: 0f 85 a9 00 00 00    	jne	0xffffffff800127e0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x130>
ffffffff80012737: 48 83 7c 24 10 00    	cmp	qword ptr [rsp + 0x10], 0x0
ffffffff8001273d: 0f 85 9d 00 00 00    	jne	0xffffffff800127e0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x130>
ffffffff80012743: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80012748: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8001274d: 48 85 c9             	test	rcx, rcx
ffffffff80012750: 74 64                	je	0xffffffff800127b6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff80012752: 48 89 ca             	mov	rdx, rcx
ffffffff80012755: 48 83 e2 07          	and	rdx, 0x7
ffffffff80012759: 0f 84 b1 00 00 00    	je	0xffffffff80012810 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x160>
ffffffff8001275f: 31 f6                	xor	esi, esi
ffffffff80012761: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80012770: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80012774: 48 ff c6             	inc	rsi
ffffffff80012777: 48 39 f2             	cmp	rdx, rsi
ffffffff8001277a: 75 f4                	jne	0xffffffff80012770 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xc0>
ffffffff8001277c: 48 89 ca             	mov	rdx, rcx
ffffffff8001277f: 48 29 f2             	sub	rdx, rsi
ffffffff80012782: 48 83 f9 08          	cmp	rcx, 0x8
ffffffff80012786: 72 2e                	jb	0xffffffff800127b6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff80012788: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80012790: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80012794: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff80012798: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff8001279c: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800127a0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800127a4: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800127a8: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800127ac: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800127b0: 48 83 c2 f8          	add	rdx, -0x8
ffffffff800127b4: 75 da                	jne	0xffffffff80012790 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xe0>
ffffffff800127b6: 48 c7 44 24 08 01 00 00 00   	mov	qword ptr [rsp + 0x8], 0x1
ffffffff800127bf: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff800127c4: 48 c7 43 10 00 00 00 00      	mov	qword ptr [rbx + 0x10], 0x0
ffffffff800127cc: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff800127d4: eb 13                	jmp	0xffffffff800127e9 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x139>
ffffffff800127d6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800127e0: 48 85 c0             	test	rax, rax
ffffffff800127e3: 0f 84 bd 01 00 00    	je	0xffffffff800129a6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2f6>
ffffffff800127e9: 4c 89 f7             	mov	rdi, r14
ffffffff800127ec: 48 89 de             	mov	rsi, rbx
ffffffff800127ef: e8 5c 54 ff ff       	call	0xffffffff80007c50 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb>
ffffffff800127f4: 48 83 7c 24 50 00    	cmp	qword ptr [rsp + 0x50], 0x0
ffffffff800127fa: 0f 84 9b 01 00 00    	je	0xffffffff8001299b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff80012800: 48 8b 4c 24 48       	mov	rcx, qword ptr [rsp + 0x48]
ffffffff80012805: 48 85 c9             	test	rcx, rcx
ffffffff80012808: 0f 85 12 ff ff ff    	jne	0xffffffff80012720 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x70>
ffffffff8001280e: eb 4d                	jmp	0xffffffff8001285d <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1ad>
ffffffff80012810: 48 89 ca             	mov	rdx, rcx
ffffffff80012813: 48 83 f9 08          	cmp	rcx, 0x8
ffffffff80012817: 0f 83 73 ff ff ff    	jae	0xffffffff80012790 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xe0>
ffffffff8001281d: eb 97                	jmp	0xffffffff800127b6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff8001281f: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff80012828: 48 85 c0             	test	rax, rax
ffffffff8001282b: 74 61                	je	0xffffffff8001288e <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1de>
ffffffff8001282d: 48 89 c1             	mov	rcx, rax
ffffffff80012830: 48 83 e1 07          	and	rcx, 0x7
ffffffff80012834: 74 5d                	je	0xffffffff80012893 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1e3>
ffffffff80012836: 31 d2                	xor	edx, edx
ffffffff80012838: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80012840: 48 8b 76 68          	mov	rsi, qword ptr [rsi + 0x68]
ffffffff80012844: 48 ff c2             	inc	rdx
ffffffff80012847: 48 39 d1             	cmp	rcx, rdx
ffffffff8001284a: 75 f4                	jne	0xffffffff80012840 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x190>
ffffffff8001284c: 48 89 c1             	mov	rcx, rax
ffffffff8001284f: 48 29 d1             	sub	rcx, rdx
ffffffff80012852: 45 31 f6             	xor	r14d, r14d
ffffffff80012855: 48 83 f8 08          	cmp	rax, 0x8
ffffffff80012859: 73 45                	jae	0xffffffff800128a0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1f0>
ffffffff8001285b: eb 69                	jmp	0xffffffff800128c6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8001285d: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff80012862: 4c 8b 74 24 18       	mov	r14, qword ptr [rsp + 0x18]
ffffffff80012867: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001286c: 48 83 7c 24 08 00    	cmp	qword ptr [rsp + 0x8], 0x0
ffffffff80012872: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001287b: 0f 84 1a 01 00 00    	je	0xffffffff8001299b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff80012881: 48 85 f6             	test	rsi, rsi
ffffffff80012884: 75 40                	jne	0xffffffff800128c6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff80012886: 4c 89 f6             	mov	rsi, r14
ffffffff80012889: 48 85 c0             	test	rax, rax
ffffffff8001288c: 75 9f                	jne	0xffffffff8001282d <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x17d>
ffffffff8001288e: 45 31 f6             	xor	r14d, r14d
ffffffff80012891: eb 33                	jmp	0xffffffff800128c6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff80012893: 48 89 c1             	mov	rcx, rax
ffffffff80012896: 45 31 f6             	xor	r14d, r14d
ffffffff80012899: 48 83 f8 08          	cmp	rax, 0x8
ffffffff8001289d: 72 27                	jb	0xffffffff800128c6 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8001289f: 90                   	nop
ffffffff800128a0: 48 8b 46 68          	mov	rax, qword ptr [rsi + 0x68]
ffffffff800128a4: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128a8: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128ac: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128b0: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128b4: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128b8: 48 8b 40 68          	mov	rax, qword ptr [rax + 0x68]
ffffffff800128bc: 48 8b 70 68          	mov	rsi, qword ptr [rax + 0x68]
ffffffff800128c0: 48 83 c1 f8          	add	rcx, -0x8
ffffffff800128c4: 75 da                	jne	0xffffffff800128a0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1f0>
ffffffff800128c6: 48 8b 06             	mov	rax, qword ptr [rsi]
ffffffff800128c9: 48 85 c0             	test	rax, rax
ffffffff800128cc: 74 71                	je	0xffffffff8001293f <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x28f>
ffffffff800128ce: 41 bf 68 00 00 00    	mov	r15d, 0x68
ffffffff800128d4: 40 b5 01             	mov	bpl, 0x1
ffffffff800128d7: eb 2d                	jmp	0xffffffff80012906 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x256>
ffffffff800128d9: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff800128e0: 49 ff c6             	inc	r14
ffffffff800128e3: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800128e8: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800128ef: e8 fc 9e ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800128f4: c6 05 05 87 01 00 00 	mov	byte ptr [rip + 0x18705], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800128fb: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff800128fe: 48 89 de             	mov	rsi, rbx
ffffffff80012901: 48 85 c0             	test	rax, rax
ffffffff80012904: 74 3c                	je	0xffffffff80012942 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x292>
ffffffff80012906: 4d 85 f6             	test	r14, r14
ffffffff80012909: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff8001290e: 49 0f 44 cf          	cmove	rcx, r15
ffffffff80012912: 48 89 c3             	mov	rbx, rax
ffffffff80012915: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80012920: 31 c0                	xor	eax, eax
ffffffff80012922: f0                   	lock
ffffffff80012923: 40 0f b0 2d d5 86 01 00      	cmpxchg	byte ptr [rip + 0x186d5], bpl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001292b: 75 05                	jne	0xffffffff80012932 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x282>
ffffffff8001292d: eb b1                	jmp	0xffffffff800128e0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x230>
ffffffff8001292f: 90                   	nop
ffffffff80012930: f3 90                	pause
ffffffff80012932: 0f b6 05 c7 86 01 00 	movzx	eax, byte ptr [rip + 0x186c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012939: 84 c0                	test	al, al
ffffffff8001293b: 75 f3                	jne	0xffffffff80012930 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x280>
ffffffff8001293d: eb e1                	jmp	0xffffffff80012920 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x270>
ffffffff8001293f: 48 89 f3             	mov	rbx, rsi
ffffffff80012942: b1 01                	mov	cl, 0x1
ffffffff80012944: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80012950: 31 c0                	xor	eax, eax
ffffffff80012952: f0                   	lock
ffffffff80012953: 0f b0 0d a6 86 01 00 	cmpxchg	byte ptr [rip + 0x186a6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001295a: 75 06                	jne	0xffffffff80012962 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2b2>
ffffffff8001295c: eb 11                	jmp	0xffffffff8001296f <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2bf>
ffffffff8001295e: 66 90                	nop
ffffffff80012960: f3 90                	pause
ffffffff80012962: 0f b6 05 97 86 01 00 	movzx	eax, byte ptr [rip + 0x18697] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012969: 84 c0                	test	al, al
ffffffff8001296b: 75 f3                	jne	0xffffffff80012960 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2b0>
ffffffff8001296d: eb e1                	jmp	0xffffffff80012950 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2a0>
ffffffff8001296f: 4d 85 f6             	test	r14, r14
ffffffff80012972: b8 68 00 00 00       	mov	eax, 0x68
ffffffff80012977: b9 c8 00 00 00       	mov	ecx, 0xc8
ffffffff8001297c: 48 0f 44 c8          	cmove	rcx, rax
ffffffff80012980: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012985: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8001298c: 48 89 de             	mov	rsi, rbx
ffffffff8001298f: e8 5c 9e ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012994: c6 05 65 86 01 00 00 	mov	byte ptr [rip + 0x18665], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001299b: 48 83 c4 68          	add	rsp, 0x68
ffffffff8001299f: 5b                   	pop	rbx
ffffffff800129a0: 41 5e                	pop	r14
ffffffff800129a2: 41 5f                	pop	r15
ffffffff800129a4: 5d                   	pop	rbp
ffffffff800129a5: c3                   	ret
ffffffff800129a6: 48 c7 c7 c0 73 02 80 	mov	rdi, -0x7ffd8c40
ffffffff800129ad: e8 8e ec 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800129b2: cc                   	int3
ffffffff800129b3: cc                   	int3
ffffffff800129b4: cc                   	int3
ffffffff800129b5: cc                   	int3
ffffffff800129b6: cc                   	int3
ffffffff800129b7: cc                   	int3
ffffffff800129b8: cc                   	int3
ffffffff800129b9: cc                   	int3
ffffffff800129ba: cc                   	int3
ffffffff800129bb: cc                   	int3
ffffffff800129bc: cc                   	int3
ffffffff800129bd: cc                   	int3
ffffffff800129be: cc                   	int3
ffffffff800129bf: cc                   	int3

ffffffff800129c0 <futures_task::waker::drop_arc_raw::h20a348becbbea6bf>:
ffffffff800129c0: 50                   	push	rax
ffffffff800129c1: 48 8d 47 f0          	lea	rax, [rdi - 0x10]
ffffffff800129c5: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff800129c9: f0                   	lock
ffffffff800129ca: 48 ff 4f f0          	dec	qword ptr [rdi - 0x10]
ffffffff800129ce: 75 08                	jne	0xffffffff800129d8 <futures_task::waker::drop_arc_raw::h20a348becbbea6bf+0x18>
ffffffff800129d0: 48 89 e7             	mov	rdi, rsp
ffffffff800129d3: e8 c8 04 00 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff800129d8: 58                   	pop	rax
ffffffff800129d9: c3                   	ret
ffffffff800129da: cc                   	int3
ffffffff800129db: cc                   	int3
ffffffff800129dc: cc                   	int3
ffffffff800129dd: cc                   	int3
ffffffff800129de: cc                   	int3
ffffffff800129df: cc                   	int3

ffffffff800129e0 <futures_task::waker::wake_arc_raw::h0bebdc3f85e209a3>:
ffffffff800129e0: 48 83 c7 f0          	add	rdi, -0x10
ffffffff800129e4: e9 67 d7 fe ff       	jmp	0xffffffff80000150 <futures_task::arc_wake::ArcWake::wake::hb19dc026887eed03>
ffffffff800129e9: cc                   	int3
ffffffff800129ea: cc                   	int3
ffffffff800129eb: cc                   	int3
ffffffff800129ec: cc                   	int3
ffffffff800129ed: cc                   	int3
ffffffff800129ee: cc                   	int3
ffffffff800129ef: cc                   	int3

ffffffff800129f0 <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f>:
ffffffff800129f0: 41 57                	push	r15
ffffffff800129f2: 41 56                	push	r14
ffffffff800129f4: 53                   	push	rbx
ffffffff800129f5: 48 89 fb             	mov	rbx, rdi
ffffffff800129f8: 4c 8d 7f f0          	lea	r15, [rdi - 0x10]
ffffffff800129fc: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff800129ff: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80012a04: 31 c0                	xor	eax, eax
ffffffff80012a06: f0                   	lock
ffffffff80012a07: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff80012a0c: 74 0e                	je	0xffffffff80012a1c <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0x2c>
ffffffff80012a0e: 66 90                	nop
ffffffff80012a10: f3 90                	pause
ffffffff80012a12: 31 c0                	xor	eax, eax
ffffffff80012a14: f0                   	lock
ffffffff80012a15: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff80012a1a: 75 f4                	jne	0xffffffff80012a10 <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0x20>
ffffffff80012a1c: f0                   	lock
ffffffff80012a1d: 49 ff 07             	inc	qword ptr [r15]
ffffffff80012a20: 0f 8e 92 00 00 00    	jle	0xffffffff80012ab8 <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0xc8>
ffffffff80012a26: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff80012a2a: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff80012a2e: 48 39 c8             	cmp	rax, rcx
ffffffff80012a31: 75 18                	jne	0xffffffff80012a4b <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0x5b>
ffffffff80012a33: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80012a37: 48 c7 c6 08 21 02 80 	mov	rsi, -0x7ffddef8
ffffffff80012a3e: e8 8d 00 00 00       	call	0xffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>
ffffffff80012a43: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff80012a47: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff80012a4b: 49 8b 56 28          	mov	rdx, qword ptr [r14 + 0x28]
ffffffff80012a4f: 48 01 c2             	add	rdx, rax
ffffffff80012a52: 31 f6                	xor	esi, esi
ffffffff80012a54: 48 39 ca             	cmp	rdx, rcx
ffffffff80012a57: 48 0f 42 ce          	cmovb	rcx, rsi
ffffffff80012a5b: 48 29 ca             	sub	rdx, rcx
ffffffff80012a5e: 49 8b 4e 20          	mov	rcx, qword ptr [r14 + 0x20]
ffffffff80012a62: 4c 89 3c d1          	mov	qword ptr [rcx + 8*rdx], r15
ffffffff80012a66: 48 ff c0             	inc	rax
ffffffff80012a69: 49 89 46 30          	mov	qword ptr [r14 + 0x30], rax
ffffffff80012a6d: f0                   	lock
ffffffff80012a6e: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff80012a73: 4c 8b 73 08          	mov	r14, qword ptr [rbx + 0x8]
ffffffff80012a77: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80012a7c: 31 c0                	xor	eax, eax
ffffffff80012a7e: f0                   	lock
ffffffff80012a7f: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff80012a84: 74 16                	je	0xffffffff80012a9c <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0xac>
ffffffff80012a86: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80012a90: f3 90                	pause
ffffffff80012a92: 31 c0                	xor	eax, eax
ffffffff80012a94: f0                   	lock
ffffffff80012a95: 49 0f b1 4e 10       	cmpxchg	qword ptr [r14 + 0x10], rcx
ffffffff80012a9a: 75 f4                	jne	0xffffffff80012a90 <futures_task::waker::wake_by_ref_arc_raw::h87122533f0d4482f+0xa0>
ffffffff80012a9c: 49 8d 7e 18          	lea	rdi, [r14 + 0x18]
ffffffff80012aa0: 48 83 c3 10          	add	rbx, 0x10
ffffffff80012aa4: 48 89 de             	mov	rsi, rbx
ffffffff80012aa7: e8 a4 fa ff ff       	call	0xffffffff80012550 <alloc::collections::btree::map::BTreeMap<K,V,A>::remove::h86e6a306b498dd4c>
ffffffff80012aac: f0                   	lock
ffffffff80012aad: 49 83 66 10 fc       	and	qword ptr [r14 + 0x10], -0x4
ffffffff80012ab2: 5b                   	pop	rbx
ffffffff80012ab3: 41 5e                	pop	r14
ffffffff80012ab5: 41 5f                	pop	r15
ffffffff80012ab7: c3                   	ret
ffffffff80012ab8: 0f 0b                	ud2
ffffffff80012aba: cc                   	int3
ffffffff80012abb: cc                   	int3
ffffffff80012abc: cc                   	int3
ffffffff80012abd: cc                   	int3
ffffffff80012abe: cc                   	int3
ffffffff80012abf: cc                   	int3

ffffffff80012ac0 <<&T as core::fmt::Debug>::fmt::h7bd5ca59bc6980eb>:
ffffffff80012ac0: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff80012ac3: e9 78 a0 00 00       	jmp	0xffffffff8001cb40 <<x86_64::addr::PhysAddr as core::fmt::Debug>::fmt::h1d2b386870f81baa>
ffffffff80012ac8: cc                   	int3
ffffffff80012ac9: cc                   	int3
ffffffff80012aca: cc                   	int3
ffffffff80012acb: cc                   	int3
ffffffff80012acc: cc                   	int3
ffffffff80012acd: cc                   	int3
ffffffff80012ace: cc                   	int3
ffffffff80012acf: cc                   	int3

ffffffff80012ad0 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965>:
ffffffff80012ad0: 41 57                	push	r15
ffffffff80012ad2: 41 56                	push	r14
ffffffff80012ad4: 53                   	push	rbx
ffffffff80012ad5: 48 89 fb             	mov	rbx, rdi
ffffffff80012ad8: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff80012adb: e8 90 07 00 00       	call	0xffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>
ffffffff80012ae0: 48 8b 4b 10          	mov	rcx, qword ptr [rbx + 0x10]
ffffffff80012ae4: 48 8b 53 18          	mov	rdx, qword ptr [rbx + 0x18]
ffffffff80012ae8: 4c 89 f0             	mov	rax, r14
ffffffff80012aeb: 48 29 d0             	sub	rax, rdx
ffffffff80012aee: 48 39 c1             	cmp	rcx, rax
ffffffff80012af1: 76 49                	jbe	0xffffffff80012b3c <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965+0x6c>
ffffffff80012af3: 4c 8b 3b             	mov	r15, qword ptr [rbx]
ffffffff80012af6: 4c 89 f0             	mov	rax, r14
ffffffff80012af9: 48 29 c8             	sub	rax, rcx
ffffffff80012afc: 48 29 c2             	sub	rdx, rax
ffffffff80012aff: 48 39 d0             	cmp	rax, rdx
ffffffff80012b02: 40 0f 96 c6          	setbe	sil
ffffffff80012b06: 4c 89 ff             	mov	rdi, r15
ffffffff80012b09: 4c 29 f7             	sub	rdi, r14
ffffffff80012b0c: 48 39 d7             	cmp	rdi, rdx
ffffffff80012b0f: 40 0f 92 c7          	setb	dil
ffffffff80012b13: 40 08 f7             	or	dil, sil
ffffffff80012b16: 40 80 ff 01          	cmp	dil, 0x1
ffffffff80012b1a: 75 26                	jne	0xffffffff80012b42 <alloc::collections::vec_deque::VecDeque<T,A>::grow::he1b8958562d78965+0x72>
ffffffff80012b1c: 49 29 c7             	sub	r15, rax
ffffffff80012b1f: 48 8b 53 08          	mov	rdx, qword ptr [rbx + 0x8]
ffffffff80012b23: 48 8d 34 ca          	lea	rsi, [rdx + 8*rcx]
ffffffff80012b27: 4a 8d 3c fa          	lea	rdi, [rdx + 8*r15]
ffffffff80012b2b: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80012b2f: 48 89 c2             	mov	rdx, rax
ffffffff80012b32: ff 15 00 99 02 00    	call	qword ptr [rip + 0x29900] # 0xffffffff8003c438
ffffffff80012b38: 4c 89 7b 10          	mov	qword ptr [rbx + 0x10], r15
ffffffff80012b3c: 5b                   	pop	rbx
ffffffff80012b3d: 41 5e                	pop	r14
ffffffff80012b3f: 41 5f                	pop	r15
ffffffff80012b41: c3                   	ret
ffffffff80012b42: 48 8b 73 08          	mov	rsi, qword ptr [rbx + 0x8]
ffffffff80012b46: 4a 8d 3c f6          	lea	rdi, [rsi + 8*r14]
ffffffff80012b4a: 48 c1 e2 03          	shl	rdx, 0x3
ffffffff80012b4e: 5b                   	pop	rbx
ffffffff80012b4f: 41 5e                	pop	r14
ffffffff80012b51: 41 5f                	pop	r15
ffffffff80012b53: ff 25 d7 98 02 00    	jmp	qword ptr [rip + 0x298d7] # 0xffffffff8003c430
ffffffff80012b59: cc                   	int3
ffffffff80012b5a: cc                   	int3
ffffffff80012b5b: cc                   	int3
ffffffff80012b5c: cc                   	int3
ffffffff80012b5d: cc                   	int3
ffffffff80012b5e: cc                   	int3
ffffffff80012b5f: cc                   	int3

ffffffff80012b60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>:
ffffffff80012b60: 55                   	push	rbp
ffffffff80012b61: 41 57                	push	r15
ffffffff80012b63: 41 56                	push	r14
ffffffff80012b65: 41 54                	push	r12
ffffffff80012b67: 53                   	push	rbx
ffffffff80012b68: 48 8b 1f             	mov	rbx, qword ptr [rdi]
ffffffff80012b6b: 4c 8b 73 20          	mov	r14, qword ptr [rbx + 0x20]
ffffffff80012b6f: 4d 85 f6             	test	r14, r14
ffffffff80012b72: 74 6b                	je	0xffffffff80012bdf <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x7f>
ffffffff80012b74: 4c 8b 7b 18          	mov	r15, qword ptr [rbx + 0x18]
ffffffff80012b78: 40 b5 01             	mov	bpl, 0x1
ffffffff80012b7b: 45 31 e4             	xor	r12d, r12d
ffffffff80012b7e: eb 20                	jmp	0xffffffff80012ba0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x40>
ffffffff80012b80: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80012b85: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012b8c: e8 5f 9c ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012b91: c6 05 68 84 01 00 00 	mov	byte ptr [rip + 0x18468], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012b98: 49 ff c4             	inc	r12
ffffffff80012b9b: 4d 39 f4             	cmp	r12, r14
ffffffff80012b9e: 74 3f                	je	0xffffffff80012bdf <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x7f>
ffffffff80012ba0: 49 6b c4 38          	imul	rax, r12, 0x38
ffffffff80012ba4: 49 8b 0c 07          	mov	rcx, qword ptr [r15 + rax]
ffffffff80012ba8: 48 85 c9             	test	rcx, rcx
ffffffff80012bab: 74 eb                	je	0xffffffff80012b98 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x38>
ffffffff80012bad: 4c 01 f8             	add	rax, r15
ffffffff80012bb0: 48 8b 70 08          	mov	rsi, qword ptr [rax + 0x8]
ffffffff80012bb4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80012bc0: 31 c0                	xor	eax, eax
ffffffff80012bc2: f0                   	lock
ffffffff80012bc3: 40 0f b0 2d 35 84 01 00      	cmpxchg	byte ptr [rip + 0x18435], bpl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012bcb: 75 05                	jne	0xffffffff80012bd2 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x72>
ffffffff80012bcd: eb b1                	jmp	0xffffffff80012b80 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x20>
ffffffff80012bcf: 90                   	nop
ffffffff80012bd0: f3 90                	pause
ffffffff80012bd2: 0f b6 05 27 84 01 00 	movzx	eax, byte ptr [rip + 0x18427] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012bd9: 84 c0                	test	al, al
ffffffff80012bdb: 75 f3                	jne	0xffffffff80012bd0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x70>
ffffffff80012bdd: eb e1                	jmp	0xffffffff80012bc0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x60>
ffffffff80012bdf: 48 8b 43 10          	mov	rax, qword ptr [rbx + 0x10]
ffffffff80012be3: 48 85 c0             	test	rax, rax
ffffffff80012be6: 74 4f                	je	0xffffffff80012c37 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xd7>
ffffffff80012be8: 48 8b 73 18          	mov	rsi, qword ptr [rbx + 0x18]
ffffffff80012bec: 48 6b c8 38          	imul	rcx, rax, 0x38
ffffffff80012bf0: b2 01                	mov	dl, 0x1
ffffffff80012bf2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80012c00: 31 c0                	xor	eax, eax
ffffffff80012c02: f0                   	lock
ffffffff80012c03: 0f b0 15 f6 83 01 00 	cmpxchg	byte ptr [rip + 0x183f6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c0a: 75 06                	jne	0xffffffff80012c12 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xb2>
ffffffff80012c0c: eb 11                	jmp	0xffffffff80012c1f <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xbf>
ffffffff80012c0e: 66 90                	nop
ffffffff80012c10: f3 90                	pause
ffffffff80012c12: 0f b6 05 e7 83 01 00 	movzx	eax, byte ptr [rip + 0x183e7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c19: 84 c0                	test	al, al
ffffffff80012c1b: 75 f3                	jne	0xffffffff80012c10 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xb0>
ffffffff80012c1d: eb e1                	jmp	0xffffffff80012c00 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xa0>
ffffffff80012c1f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012c24: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012c2b: e8 c0 9b ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012c30: c6 05 c9 83 01 00 00 	mov	byte ptr [rip + 0x183c9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c37: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012c3b: 74 52                	je	0xffffffff80012c8f <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x12f>
ffffffff80012c3d: f0                   	lock
ffffffff80012c3e: 48 ff 4b 08          	dec	qword ptr [rbx + 0x8]
ffffffff80012c42: 75 4b                	jne	0xffffffff80012c8f <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x12f>
ffffffff80012c44: b1 01                	mov	cl, 0x1
ffffffff80012c46: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80012c50: 31 c0                	xor	eax, eax
ffffffff80012c52: f0                   	lock
ffffffff80012c53: 0f b0 0d a6 83 01 00 	cmpxchg	byte ptr [rip + 0x183a6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c5a: 75 06                	jne	0xffffffff80012c62 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x102>
ffffffff80012c5c: eb 11                	jmp	0xffffffff80012c6f <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x10f>
ffffffff80012c5e: 66 90                	nop
ffffffff80012c60: f3 90                	pause
ffffffff80012c62: 0f b6 05 97 83 01 00 	movzx	eax, byte ptr [rip + 0x18397] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c69: 84 c0                	test	al, al
ffffffff80012c6b: 75 f3                	jne	0xffffffff80012c60 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x100>
ffffffff80012c6d: eb e1                	jmp	0xffffffff80012c50 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0xf0>
ffffffff80012c6f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012c74: b9 08 01 00 00       	mov	ecx, 0x108
ffffffff80012c79: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012c80: 48 89 de             	mov	rsi, rbx
ffffffff80012c83: e8 68 9b ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012c88: c6 05 71 83 01 00 00 	mov	byte ptr [rip + 0x18371], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012c8f: 5b                   	pop	rbx
ffffffff80012c90: 41 5c                	pop	r12
ffffffff80012c92: 41 5e                	pop	r14
ffffffff80012c94: 41 5f                	pop	r15
ffffffff80012c96: 5d                   	pop	rbp
ffffffff80012c97: c3                   	ret
ffffffff80012c98: cc                   	int3
ffffffff80012c99: cc                   	int3
ffffffff80012c9a: cc                   	int3
ffffffff80012c9b: cc                   	int3
ffffffff80012c9c: cc                   	int3
ffffffff80012c9d: cc                   	int3
ffffffff80012c9e: cc                   	int3
ffffffff80012c9f: cc                   	int3

ffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>:
ffffffff80012ca0: 55                   	push	rbp
ffffffff80012ca1: 41 57                	push	r15
ffffffff80012ca3: 41 56                	push	r14
ffffffff80012ca5: 41 55                	push	r13
ffffffff80012ca7: 41 54                	push	r12
ffffffff80012ca9: 53                   	push	rbx
ffffffff80012caa: 50                   	push	rax
ffffffff80012cab: 48 8b 1f             	mov	rbx, qword ptr [rdi]
ffffffff80012cae: 4c 8b 6b 30          	mov	r13, qword ptr [rbx + 0x30]
ffffffff80012cb2: 4d 85 ed             	test	r13, r13
ffffffff80012cb5: 0f 84 81 00 00 00    	je	0xffffffff80012d3c <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x9c>
ffffffff80012cbb: 48 8b 43 28          	mov	rax, qword ptr [rbx + 0x28]
ffffffff80012cbf: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80012cc3: 48 89 1c 24          	mov	qword ptr [rsp], rbx
ffffffff80012cc7: 4c 8b 73 20          	mov	r14, qword ptr [rbx + 0x20]
ffffffff80012ccb: 31 d2                	xor	edx, edx
ffffffff80012ccd: 48 39 c8             	cmp	rax, rcx
ffffffff80012cd0: 48 89 ce             	mov	rsi, rcx
ffffffff80012cd3: 48 0f 42 f2          	cmovb	rsi, rdx
ffffffff80012cd7: 48 29 f0             	sub	rax, rsi
ffffffff80012cda: 48 89 cd             	mov	rbp, rcx
ffffffff80012cdd: 48 29 c5             	sub	rbp, rax
ffffffff80012ce0: 4a 8d 1c 28          	lea	rbx, [rax + r13]
ffffffff80012ce4: 4d 89 ec             	mov	r12, r13
ffffffff80012ce7: 49 29 ec             	sub	r12, rbp
ffffffff80012cea: 4c 0f 42 e2          	cmovb	r12, rdx
ffffffff80012cee: 48 0f 47 d9          	cmova	rbx, rcx
ffffffff80012cf2: 48 29 c3             	sub	rbx, rax
ffffffff80012cf5: 0f 85 d4 00 00 00    	jne	0xffffffff80012dcf <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x12f>
ffffffff80012cfb: 48 8b 1c 24          	mov	rbx, qword ptr [rsp]
ffffffff80012cff: 4c 8d 7b 20          	lea	r15, [rbx + 0x20]
ffffffff80012d03: 4c 39 ed             	cmp	rbp, r13
ffffffff80012d06: 72 21                	jb	0xffffffff80012d29 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x89>
ffffffff80012d08: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80012d0c: 48 85 c9             	test	rcx, rcx
ffffffff80012d0f: 75 38                	jne	0xffffffff80012d49 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0xa9>
ffffffff80012d11: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012d15: 0f 85 86 00 00 00    	jne	0xffffffff80012da1 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x101>
ffffffff80012d1b: e9 00 01 00 00       	jmp	0xffffffff80012e20 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x180>
ffffffff80012d20: 49 83 c6 08          	add	r14, 0x8
ffffffff80012d24: 49 ff cc             	dec	r12
ffffffff80012d27: 74 df                	je	0xffffffff80012d08 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x68>
ffffffff80012d29: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff80012d2c: f0                   	lock
ffffffff80012d2d: 48 ff 08             	dec	qword ptr [rax]
ffffffff80012d30: 75 ee                	jne	0xffffffff80012d20 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x80>
ffffffff80012d32: 4c 89 f7             	mov	rdi, r14
ffffffff80012d35: e8 66 01 00 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80012d3a: eb e4                	jmp	0xffffffff80012d20 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x80>
ffffffff80012d3c: 4c 8d 7b 20          	lea	r15, [rbx + 0x20]
ffffffff80012d40: 48 8b 4b 18          	mov	rcx, qword ptr [rbx + 0x18]
ffffffff80012d44: 48 85 c9             	test	rcx, rcx
ffffffff80012d47: 74 c8                	je	0xffffffff80012d11 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x71>
ffffffff80012d49: 49 8b 37             	mov	rsi, qword ptr [r15]
ffffffff80012d4c: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff80012d50: b2 01                	mov	dl, 0x1
ffffffff80012d52: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80012d60: 31 c0                	xor	eax, eax
ffffffff80012d62: f0                   	lock
ffffffff80012d63: 0f b0 15 96 82 01 00 	cmpxchg	byte ptr [rip + 0x18296], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012d6a: 75 06                	jne	0xffffffff80012d72 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0xd2>
ffffffff80012d6c: eb 11                	jmp	0xffffffff80012d7f <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0xdf>
ffffffff80012d6e: 66 90                	nop
ffffffff80012d70: f3 90                	pause
ffffffff80012d72: 0f b6 05 87 82 01 00 	movzx	eax, byte ptr [rip + 0x18287] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012d79: 84 c0                	test	al, al
ffffffff80012d7b: 75 f3                	jne	0xffffffff80012d70 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0xd0>
ffffffff80012d7d: eb e1                	jmp	0xffffffff80012d60 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0xc0>
ffffffff80012d7f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012d84: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012d8b: e8 60 9a ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012d90: c6 05 69 82 01 00 00 	mov	byte ptr [rip + 0x18269], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012d97: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012d9b: 0f 84 7f 00 00 00    	je	0xffffffff80012e20 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x180>
ffffffff80012da1: f0                   	lock
ffffffff80012da2: 48 ff 4b 08          	dec	qword ptr [rbx + 0x8]
ffffffff80012da6: 75 78                	jne	0xffffffff80012e20 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x180>
ffffffff80012da8: b1 01                	mov	cl, 0x1
ffffffff80012daa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80012db0: 31 c0                	xor	eax, eax
ffffffff80012db2: f0                   	lock
ffffffff80012db3: 0f b0 0d 46 82 01 00 	cmpxchg	byte ptr [rip + 0x18246], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012dba: 75 06                	jne	0xffffffff80012dc2 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x122>
ffffffff80012dbc: eb 42                	jmp	0xffffffff80012e00 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x160>
ffffffff80012dbe: 66 90                	nop
ffffffff80012dc0: f3 90                	pause
ffffffff80012dc2: 0f b6 05 37 82 01 00 	movzx	eax, byte ptr [rip + 0x18237] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012dc9: 84 c0                	test	al, al
ffffffff80012dcb: 75 f3                	jne	0xffffffff80012dc0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x120>
ffffffff80012dcd: eb e1                	jmp	0xffffffff80012db0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x110>
ffffffff80012dcf: 4d 8d 3c c6          	lea	r15, [r14 + 8*rax]
ffffffff80012dd3: eb 18                	jmp	0xffffffff80012ded <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x14d>
ffffffff80012dd5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80012de0: 49 83 c7 08          	add	r15, 0x8
ffffffff80012de4: 48 ff cb             	dec	rbx
ffffffff80012de7: 0f 84 0e ff ff ff    	je	0xffffffff80012cfb <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x5b>
ffffffff80012ded: 49 8b 07             	mov	rax, qword ptr [r15]
ffffffff80012df0: f0                   	lock
ffffffff80012df1: 48 ff 08             	dec	qword ptr [rax]
ffffffff80012df4: 75 ea                	jne	0xffffffff80012de0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x140>
ffffffff80012df6: 4c 89 ff             	mov	rdi, r15
ffffffff80012df9: e8 a2 00 00 00       	call	0xffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>
ffffffff80012dfe: eb e0                	jmp	0xffffffff80012de0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572+0x140>
ffffffff80012e00: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012e05: b9 38 00 00 00       	mov	ecx, 0x38
ffffffff80012e0a: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012e11: 48 89 de             	mov	rsi, rbx
ffffffff80012e14: e8 d7 99 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012e19: c6 05 e0 81 01 00 00 	mov	byte ptr [rip + 0x181e0], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012e20: 48 83 c4 08          	add	rsp, 0x8
ffffffff80012e24: 5b                   	pop	rbx
ffffffff80012e25: 41 5c                	pop	r12
ffffffff80012e27: 41 5d                	pop	r13
ffffffff80012e29: 41 5e                	pop	r14
ffffffff80012e2b: 41 5f                	pop	r15
ffffffff80012e2d: 5d                   	pop	rbp
ffffffff80012e2e: c3                   	ret
ffffffff80012e2f: cc                   	int3

ffffffff80012e30 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>:
ffffffff80012e30: 48 8b 37             	mov	rsi, qword ptr [rdi]
ffffffff80012e33: 48 83 fe ff          	cmp	rsi, -0x1
ffffffff80012e37: 74 57                	je	0xffffffff80012e90 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x60>
ffffffff80012e39: f0                   	lock
ffffffff80012e3a: 48 ff 4e 08          	dec	qword ptr [rsi + 0x8]
ffffffff80012e3e: 75 50                	jne	0xffffffff80012e90 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x60>
ffffffff80012e40: 50                   	push	rax
ffffffff80012e41: b1 01                	mov	cl, 0x1
ffffffff80012e43: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80012e50: 31 c0                	xor	eax, eax
ffffffff80012e52: f0                   	lock
ffffffff80012e53: 0f b0 0d a6 81 01 00 	cmpxchg	byte ptr [rip + 0x181a6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012e5a: 75 06                	jne	0xffffffff80012e62 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x32>
ffffffff80012e5c: eb 11                	jmp	0xffffffff80012e6f <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x3f>
ffffffff80012e5e: 66 90                	nop
ffffffff80012e60: f3 90                	pause
ffffffff80012e62: 0f b6 05 97 81 01 00 	movzx	eax, byte ptr [rip + 0x18197] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012e69: 84 c0                	test	al, al
ffffffff80012e6b: 75 f3                	jne	0xffffffff80012e60 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x30>
ffffffff80012e6d: eb e1                	jmp	0xffffffff80012e50 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x20>
ffffffff80012e6f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012e74: b9 28 00 00 00       	mov	ecx, 0x28
ffffffff80012e79: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012e80: e8 6b 99 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012e85: c6 05 74 81 01 00 00 	mov	byte ptr [rip + 0x18174], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012e8c: 48 83 c4 08          	add	rsp, 0x8
ffffffff80012e90: c3                   	ret
ffffffff80012e91: cc                   	int3
ffffffff80012e92: cc                   	int3
ffffffff80012e93: cc                   	int3
ffffffff80012e94: cc                   	int3
ffffffff80012e95: cc                   	int3
ffffffff80012e96: cc                   	int3
ffffffff80012e97: cc                   	int3
ffffffff80012e98: cc                   	int3
ffffffff80012e99: cc                   	int3
ffffffff80012e9a: cc                   	int3
ffffffff80012e9b: cc                   	int3
ffffffff80012e9c: cc                   	int3
ffffffff80012e9d: cc                   	int3
ffffffff80012e9e: cc                   	int3
ffffffff80012e9f: cc                   	int3

ffffffff80012ea0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65>:
ffffffff80012ea0: 41 57                	push	r15
ffffffff80012ea2: 41 56                	push	r14
ffffffff80012ea4: 41 54                	push	r12
ffffffff80012ea6: 53                   	push	rbx
ffffffff80012ea7: 50                   	push	rax
ffffffff80012ea8: 48 8b 1f             	mov	rbx, qword ptr [rdi]
ffffffff80012eab: 4c 8b 7b 30          	mov	r15, qword ptr [rbx + 0x30]
ffffffff80012eaf: 4c 8b 63 38          	mov	r12, qword ptr [rbx + 0x38]
ffffffff80012eb3: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff80012eb7: 48 85 c0             	test	rax, rax
ffffffff80012eba: 74 05                	je	0xffffffff80012ec1 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x21>
ffffffff80012ebc: 4c 89 ff             	mov	rdi, r15
ffffffff80012ebf: ff d0                	call	rax
ffffffff80012ec1: 4c 8d 73 10          	lea	r14, [rbx + 0x10]
ffffffff80012ec5: 49 8b 4c 24 08       	mov	rcx, qword ptr [r12 + 0x8]
ffffffff80012eca: 48 85 c9             	test	rcx, rcx
ffffffff80012ecd: 74 46                	je	0xffffffff80012f15 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x75>
ffffffff80012ecf: 49 8b 54 24 10       	mov	rdx, qword ptr [r12 + 0x10]
ffffffff80012ed4: 40 b6 01             	mov	sil, 0x1
ffffffff80012ed7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80012ee0: 31 c0                	xor	eax, eax
ffffffff80012ee2: f0                   	lock
ffffffff80012ee3: 40 0f b0 35 15 81 01 00      	cmpxchg	byte ptr [rip + 0x18115], sil # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012eeb: 75 05                	jne	0xffffffff80012ef2 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x52>
ffffffff80012eed: eb 10                	jmp	0xffffffff80012eff <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x5f>
ffffffff80012eef: 90                   	nop
ffffffff80012ef0: f3 90                	pause
ffffffff80012ef2: 0f b6 05 07 81 01 00 	movzx	eax, byte ptr [rip + 0x18107] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012ef9: 84 c0                	test	al, al
ffffffff80012efb: 75 f3                	jne	0xffffffff80012ef0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x50>
ffffffff80012efd: eb e1                	jmp	0xffffffff80012ee0 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x40>
ffffffff80012eff: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012f06: 4c 89 fe             	mov	rsi, r15
ffffffff80012f09: e8 e2 98 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012f0e: c6 05 eb 80 01 00 00 	mov	byte ptr [rip + 0x180eb], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012f15: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff80012f18: f0                   	lock
ffffffff80012f19: 48 ff 08             	dec	qword ptr [rax]
ffffffff80012f1c: 74 12                	je	0xffffffff80012f30 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x90>
ffffffff80012f1e: 48 8b 43 18          	mov	rax, qword ptr [rbx + 0x18]
ffffffff80012f22: f0                   	lock
ffffffff80012f23: 48 ff 08             	dec	qword ptr [rax]
ffffffff80012f26: 74 1a                	je	0xffffffff80012f42 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xa2>
ffffffff80012f28: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012f2c: 75 23                	jne	0xffffffff80012f51 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xb1>
ffffffff80012f2e: eb 6f                	jmp	0xffffffff80012f9f <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xff>
ffffffff80012f30: 4c 89 f7             	mov	rdi, r14
ffffffff80012f33: e8 68 fd ff ff       	call	0xffffffff80012ca0 <alloc::sync::Arc<T,A>::drop_slow::h157238fb9ca24572>
ffffffff80012f38: 48 8b 43 18          	mov	rax, qword ptr [rbx + 0x18]
ffffffff80012f3c: f0                   	lock
ffffffff80012f3d: 48 ff 08             	dec	qword ptr [rax]
ffffffff80012f40: 75 e6                	jne	0xffffffff80012f28 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0x88>
ffffffff80012f42: 48 8d 7b 18          	lea	rdi, [rbx + 0x18]
ffffffff80012f46: e8 65 00 00 00       	call	0xffffffff80012fb0 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc>
ffffffff80012f4b: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012f4f: 74 4e                	je	0xffffffff80012f9f <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xff>
ffffffff80012f51: f0                   	lock
ffffffff80012f52: 48 ff 4b 08          	dec	qword ptr [rbx + 0x8]
ffffffff80012f56: 75 47                	jne	0xffffffff80012f9f <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xff>
ffffffff80012f58: b1 01                	mov	cl, 0x1
ffffffff80012f5a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80012f60: 31 c0                	xor	eax, eax
ffffffff80012f62: f0                   	lock
ffffffff80012f63: 0f b0 0d 96 80 01 00 	cmpxchg	byte ptr [rip + 0x18096], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012f6a: 75 06                	jne	0xffffffff80012f72 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xd2>
ffffffff80012f6c: eb 11                	jmp	0xffffffff80012f7f <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xdf>
ffffffff80012f6e: 66 90                	nop
ffffffff80012f70: f3 90                	pause
ffffffff80012f72: 0f b6 05 87 80 01 00 	movzx	eax, byte ptr [rip + 0x18087] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012f79: 84 c0                	test	al, al
ffffffff80012f7b: 75 f3                	jne	0xffffffff80012f70 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xd0>
ffffffff80012f7d: eb e1                	jmp	0xffffffff80012f60 <alloc::sync::Arc<T,A>::drop_slow::had4e192e96269a65+0xc0>
ffffffff80012f7f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012f84: b9 58 00 00 00       	mov	ecx, 0x58
ffffffff80012f89: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80012f90: 48 89 de             	mov	rsi, rbx
ffffffff80012f93: e8 58 98 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80012f98: c6 05 61 80 01 00 00 	mov	byte ptr [rip + 0x18061], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012f9f: 48 83 c4 08          	add	rsp, 0x8
ffffffff80012fa3: 5b                   	pop	rbx
ffffffff80012fa4: 41 5c                	pop	r12
ffffffff80012fa6: 41 5e                	pop	r14
ffffffff80012fa8: 41 5f                	pop	r15
ffffffff80012faa: c3                   	ret
ffffffff80012fab: cc                   	int3
ffffffff80012fac: cc                   	int3
ffffffff80012fad: cc                   	int3
ffffffff80012fae: cc                   	int3
ffffffff80012faf: cc                   	int3

ffffffff80012fb0 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc>:
ffffffff80012fb0: 53                   	push	rbx
ffffffff80012fb1: 48 8b 1f             	mov	rbx, qword ptr [rdi]
ffffffff80012fb4: 48 8d 7b 18          	lea	rdi, [rbx + 0x18]
ffffffff80012fb8: e8 f3 f6 ff ff       	call	0xffffffff800126b0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754>
ffffffff80012fbd: 48 83 fb ff          	cmp	rbx, -0x1
ffffffff80012fc1: 74 4c                	je	0xffffffff8001300f <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x5f>
ffffffff80012fc3: f0                   	lock
ffffffff80012fc4: 48 ff 4b 08          	dec	qword ptr [rbx + 0x8]
ffffffff80012fc8: 75 45                	jne	0xffffffff8001300f <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x5f>
ffffffff80012fca: b1 01                	mov	cl, 0x1
ffffffff80012fcc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80012fd0: 31 c0                	xor	eax, eax
ffffffff80012fd2: f0                   	lock
ffffffff80012fd3: 0f b0 0d 26 80 01 00 	cmpxchg	byte ptr [rip + 0x18026], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012fda: 75 06                	jne	0xffffffff80012fe2 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x32>
ffffffff80012fdc: eb 11                	jmp	0xffffffff80012fef <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x3f>
ffffffff80012fde: 66 90                	nop
ffffffff80012fe0: f3 90                	pause
ffffffff80012fe2: 0f b6 05 17 80 01 00 	movzx	eax, byte ptr [rip + 0x18017] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80012fe9: 84 c0                	test	al, al
ffffffff80012feb: 75 f3                	jne	0xffffffff80012fe0 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x30>
ffffffff80012fed: eb e1                	jmp	0xffffffff80012fd0 <alloc::sync::Arc<T,A>::drop_slow::hdf0c26c8654bbbdc+0x20>
ffffffff80012fef: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80012ff4: b9 30 00 00 00       	mov	ecx, 0x30
ffffffff80012ff9: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80013000: 48 89 de             	mov	rsi, rbx
ffffffff80013003: e8 e8 97 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80013008: c6 05 f1 7f 01 00 00 	mov	byte ptr [rip + 0x17ff1], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001300f: 5b                   	pop	rbx
ffffffff80013010: c3                   	ret
ffffffff80013011: cc                   	int3
ffffffff80013012: cc                   	int3
ffffffff80013013: cc                   	int3
ffffffff80013014: cc                   	int3
ffffffff80013015: cc                   	int3
ffffffff80013016: cc                   	int3
ffffffff80013017: cc                   	int3
ffffffff80013018: cc                   	int3
ffffffff80013019: cc                   	int3
ffffffff8001301a: cc                   	int3
ffffffff8001301b: cc                   	int3
ffffffff8001301c: cc                   	int3
ffffffff8001301d: cc                   	int3
ffffffff8001301e: cc                   	int3
ffffffff8001301f: cc                   	int3

ffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>:
ffffffff80013020: 41 57                	push	r15
ffffffff80013022: 41 56                	push	r14
ffffffff80013024: 53                   	push	rbx
ffffffff80013025: 48 89 d3             	mov	rbx, rdx
ffffffff80013028: 49 89 f7             	mov	r15, rsi
ffffffff8001302b: 49 89 fe             	mov	r14, rdi
ffffffff8001302e: 48 83 79 08 00       	cmp	qword ptr [rcx + 0x8], 0x0
ffffffff80013033: 74 26                	je	0xffffffff8001305b <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x3b>
ffffffff80013035: 48 8b 41 10          	mov	rax, qword ptr [rcx + 0x10]
ffffffff80013039: 48 85 c0             	test	rax, rax
ffffffff8001303c: 74 51                	je	0xffffffff8001308f <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x6f>
ffffffff8001303e: 48 8b 31             	mov	rsi, qword ptr [rcx]
ffffffff80013041: 48 c7 c7 00 b0 02 80 	mov	rdi, -0x7ffd5000
ffffffff80013048: 4c 89 fa             	mov	rdx, r15
ffffffff8001304b: 48 89 c1             	mov	rcx, rax
ffffffff8001304e: 49 89 d8             	mov	r8, rbx
ffffffff80013051: e8 5a 04 00 00       	call	0xffffffff800134b0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>
ffffffff80013056: e9 82 00 00 00       	jmp	0xffffffff800130dd <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0xbd>
ffffffff8001305b: 48 85 db             	test	rbx, rbx
ffffffff8001305e: 74 7a                	je	0xffffffff800130da <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0xba>
ffffffff80013060: 0f b6 05 7a 81 01 00 	movzx	eax, byte ptr [rip + 0x1817a] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80013067: b1 01                	mov	cl, 0x1
ffffffff80013069: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80013070: 31 c0                	xor	eax, eax
ffffffff80013072: f0                   	lock
ffffffff80013073: 0f b0 0d 86 7f 01 00 	cmpxchg	byte ptr [rip + 0x17f86], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001307a: 75 06                	jne	0xffffffff80013082 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x62>
ffffffff8001307c: eb 41                	jmp	0xffffffff800130bf <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x9f>
ffffffff8001307e: 66 90                	nop
ffffffff80013080: f3 90                	pause
ffffffff80013082: 0f b6 05 77 7f 01 00 	movzx	eax, byte ptr [rip + 0x17f77] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013089: 84 c0                	test	al, al
ffffffff8001308b: 75 f3                	jne	0xffffffff80013080 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x60>
ffffffff8001308d: eb e1                	jmp	0xffffffff80013070 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x50>
ffffffff8001308f: 48 85 db             	test	rbx, rbx
ffffffff80013092: 74 46                	je	0xffffffff800130da <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0xba>
ffffffff80013094: 0f b6 05 46 81 01 00 	movzx	eax, byte ptr [rip + 0x18146] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001309b: b1 01                	mov	cl, 0x1
ffffffff8001309d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff800130a0: 31 c0                	xor	eax, eax
ffffffff800130a2: f0                   	lock
ffffffff800130a3: 0f b0 0d 56 7f 01 00 	cmpxchg	byte ptr [rip + 0x17f56], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800130aa: 75 06                	jne	0xffffffff800130b2 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x92>
ffffffff800130ac: eb 11                	jmp	0xffffffff800130bf <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x9f>
ffffffff800130ae: 66 90                	nop
ffffffff800130b0: f3 90                	pause
ffffffff800130b2: 0f b6 05 47 7f 01 00 	movzx	eax, byte ptr [rip + 0x17f47] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800130b9: 84 c0                	test	al, al
ffffffff800130bb: 75 f3                	jne	0xffffffff800130b0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x90>
ffffffff800130bd: eb e1                	jmp	0xffffffff800130a0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0x80>
ffffffff800130bf: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800130c6: 4c 89 fe             	mov	rsi, r15
ffffffff800130c9: 48 89 da             	mov	rdx, rbx
ffffffff800130cc: e8 7f 99 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800130d1: c6 05 28 7f 01 00 00 	mov	byte ptr [rip + 0x17f28], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800130d8: eb 03                	jmp	0xffffffff800130dd <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739+0xbd>
ffffffff800130da: 4c 89 f8             	mov	rax, r15
ffffffff800130dd: 31 c9                	xor	ecx, ecx
ffffffff800130df: 48 85 c0             	test	rax, rax
ffffffff800130e2: 4c 0f 45 f8          	cmovne	r15, rax
ffffffff800130e6: 0f 94 c1             	sete	cl
ffffffff800130e9: 4d 89 7e 08          	mov	qword ptr [r14 + 0x8], r15
ffffffff800130ed: 49 89 5e 10          	mov	qword ptr [r14 + 0x10], rbx
ffffffff800130f1: 49 89 0e             	mov	qword ptr [r14], rcx
ffffffff800130f4: 5b                   	pop	rbx
ffffffff800130f5: 41 5e                	pop	r14
ffffffff800130f7: 41 5f                	pop	r15
ffffffff800130f9: c3                   	ret
ffffffff800130fa: cc                   	int3
ffffffff800130fb: cc                   	int3
ffffffff800130fc: cc                   	int3
ffffffff800130fd: cc                   	int3
ffffffff800130fe: cc                   	int3
ffffffff800130ff: cc                   	int3

ffffffff80013100 <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865>:
ffffffff80013100: 41 57                	push	r15
ffffffff80013102: 41 56                	push	r14
ffffffff80013104: 53                   	push	rbx
ffffffff80013105: 48 83 ec 30          	sub	rsp, 0x30
ffffffff80013109: 48 89 f3             	mov	rbx, rsi
ffffffff8001310c: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001310f: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff80013113: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff80013117: 48 39 d1             	cmp	rcx, rdx
ffffffff8001311a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001311e: 48 83 fa 09          	cmp	rdx, 0x9
ffffffff80013122: 41 bf 08 00 00 00    	mov	r15d, 0x8
ffffffff80013128: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001312c: 4d 85 ff             	test	r15, r15
ffffffff8001312f: 78 55                	js	0xffffffff80013186 <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865+0x86>
ffffffff80013131: 49 89 fe             	mov	r14, rdi
ffffffff80013134: 48 85 c0             	test	rax, rax
ffffffff80013137: 75 04                	jne	0xffffffff8001313d <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865+0x3d>
ffffffff80013139: 31 c0                	xor	eax, eax
ffffffff8001313b: eb 13                	jmp	0xffffffff80013150 <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865+0x50>
ffffffff8001313d: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff80013141: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80013146: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001314b: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80013150: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80013155: 48 89 e7             	mov	rdi, rsp
ffffffff80013158: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001315d: be 01 00 00 00       	mov	esi, 0x1
ffffffff80013162: 4c 89 fa             	mov	rdx, r15
ffffffff80013165: e8 b6 fe ff ff       	call	0xffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>
ffffffff8001316a: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001316e: 74 20                	je	0xffffffff80013190 <alloc::raw_vec::RawVec<T,A>::grow_one::h379991cb78316865+0x90>
ffffffff80013170: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80013175: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff80013179: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001317c: 48 83 c4 30          	add	rsp, 0x30
ffffffff80013180: 5b                   	pop	rbx
ffffffff80013181: 41 5e                	pop	r14
ffffffff80013183: 41 5f                	pop	r15
ffffffff80013185: c3                   	ret
ffffffff80013186: 31 ff                	xor	edi, edi
ffffffff80013188: 48 89 da             	mov	rdx, rbx
ffffffff8001318b: e8 07 a5 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80013190: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff80013195: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001319a: 48 89 da             	mov	rdx, rbx
ffffffff8001319d: e8 f5 a4 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800131a2: cc                   	int3
ffffffff800131a3: cc                   	int3
ffffffff800131a4: cc                   	int3
ffffffff800131a5: cc                   	int3
ffffffff800131a6: cc                   	int3
ffffffff800131a7: cc                   	int3
ffffffff800131a8: cc                   	int3
ffffffff800131a9: cc                   	int3
ffffffff800131aa: cc                   	int3
ffffffff800131ab: cc                   	int3
ffffffff800131ac: cc                   	int3
ffffffff800131ad: cc                   	int3
ffffffff800131ae: cc                   	int3
ffffffff800131af: cc                   	int3

ffffffff800131b0 <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87>:
ffffffff800131b0: 41 57                	push	r15
ffffffff800131b2: 41 56                	push	r14
ffffffff800131b4: 53                   	push	rbx
ffffffff800131b5: 48 83 ec 30          	sub	rsp, 0x30
ffffffff800131b9: 49 89 fe             	mov	r14, rdi
ffffffff800131bc: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff800131bf: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff800131c3: 48 8d 14 09          	lea	rdx, [rcx + rcx]
ffffffff800131c7: 48 39 d0             	cmp	rax, rdx
ffffffff800131ca: 48 0f 47 d0          	cmova	rdx, rax
ffffffff800131ce: 48 89 f3             	mov	rbx, rsi
ffffffff800131d1: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff800131d5: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff800131db: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff800131df: 31 ff                	xor	edi, edi
ffffffff800131e1: ba 38 00 00 00       	mov	edx, 0x38
ffffffff800131e6: 4c 89 f8             	mov	rax, r15
ffffffff800131e9: 48 f7 e2             	mul	rdx
ffffffff800131ec: 70 65                	jo	0xffffffff80013253 <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87+0xa3>
ffffffff800131ee: 48 ba f8 ff ff ff ff ff ff 7f	movabs	rdx, 0x7ffffffffffffff8
ffffffff800131f8: 48 39 d0             	cmp	rax, rdx
ffffffff800131fb: 77 68                	ja	0xffffffff80013265 <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87+0xb5>
ffffffff800131fd: 48 85 c9             	test	rcx, rcx
ffffffff80013200: 75 04                	jne	0xffffffff80013206 <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87+0x56>
ffffffff80013202: 31 c9                	xor	ecx, ecx
ffffffff80013204: eb 17                	jmp	0xffffffff8001321d <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87+0x6d>
ffffffff80013206: 49 8b 56 08          	mov	rdx, qword ptr [r14 + 0x8]
ffffffff8001320a: 48 6b c9 38          	imul	rcx, rcx, 0x38
ffffffff8001320e: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80013213: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80013218: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001321d: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff80013222: 48 89 e7             	mov	rdi, rsp
ffffffff80013225: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001322a: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001322f: 48 89 c2             	mov	rdx, rax
ffffffff80013232: e8 e9 fd ff ff       	call	0xffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>
ffffffff80013237: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001323b: 74 1e                	je	0xffffffff8001325b <alloc::raw_vec::RawVec<T,A>::grow_one::hb6354654bea0cf87+0xab>
ffffffff8001323d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80013242: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff80013246: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff80013249: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001324d: 5b                   	pop	rbx
ffffffff8001324e: 41 5e                	pop	r14
ffffffff80013250: 41 5f                	pop	r15
ffffffff80013252: c3                   	ret
ffffffff80013253: 48 89 da             	mov	rdx, rbx
ffffffff80013256: e8 3c a4 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001325b: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff80013260: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff80013265: 48 89 da             	mov	rdx, rbx
ffffffff80013268: e8 2a a4 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001326d: cc                   	int3
ffffffff8001326e: cc                   	int3
ffffffff8001326f: cc                   	int3

ffffffff80013270 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13>:
ffffffff80013270: 41 57                	push	r15
ffffffff80013272: 41 56                	push	r14
ffffffff80013274: 53                   	push	rbx
ffffffff80013275: 48 83 ec 30          	sub	rsp, 0x30
ffffffff80013279: 49 89 fe             	mov	r14, rdi
ffffffff8001327c: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001327f: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff80013283: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff80013287: 48 39 d1             	cmp	rcx, rdx
ffffffff8001328a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001328e: 48 89 f3             	mov	rbx, rsi
ffffffff80013291: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff80013295: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001329b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001329f: 31 ff                	xor	edi, edi
ffffffff800132a1: 48 c1 ea 3d          	shr	rdx, 0x3d
ffffffff800132a5: 75 6a                	jne	0xffffffff80013311 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13+0xa1>
ffffffff800132a7: 4a 8d 14 fd 00 00 00 00      	lea	rdx, [8*r15]
ffffffff800132af: 48 b9 f8 ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffff8
ffffffff800132b9: 48 39 ca             	cmp	rdx, rcx
ffffffff800132bc: 77 65                	ja	0xffffffff80013323 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13+0xb3>
ffffffff800132be: 48 85 c0             	test	rax, rax
ffffffff800132c1: 75 04                	jne	0xffffffff800132c7 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13+0x57>
ffffffff800132c3: 31 c0                	xor	eax, eax
ffffffff800132c5: eb 17                	jmp	0xffffffff800132de <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13+0x6e>
ffffffff800132c7: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff800132cb: 48 c1 e0 03          	shl	rax, 0x3
ffffffff800132cf: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff800132d4: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800132d9: b8 08 00 00 00       	mov	eax, 0x8
ffffffff800132de: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800132e3: 48 89 e7             	mov	rdi, rsp
ffffffff800132e6: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff800132eb: be 08 00 00 00       	mov	esi, 0x8
ffffffff800132f0: e8 2b fd ff ff       	call	0xffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>
ffffffff800132f5: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff800132f9: 74 1e                	je	0xffffffff80013319 <alloc::raw_vec::RawVec<T,A>::grow_one::hfbf2415e243c2e13+0xa9>
ffffffff800132fb: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80013300: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff80013304: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff80013307: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001330b: 5b                   	pop	rbx
ffffffff8001330c: 41 5e                	pop	r14
ffffffff8001330e: 41 5f                	pop	r15
ffffffff80013310: c3                   	ret
ffffffff80013311: 48 89 da             	mov	rdx, rbx
ffffffff80013314: e8 7e a3 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80013319: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001331e: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff80013323: 48 89 da             	mov	rdx, rbx
ffffffff80013326: e8 6c a3 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001332b: cc                   	int3
ffffffff8001332c: cc                   	int3
ffffffff8001332d: cc                   	int3
ffffffff8001332e: cc                   	int3
ffffffff8001332f: cc                   	int3

ffffffff80013330 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d>:
ffffffff80013330: 41 57                	push	r15
ffffffff80013332: 41 56                	push	r14
ffffffff80013334: 53                   	push	rbx
ffffffff80013335: 48 83 ec 30          	sub	rsp, 0x30
ffffffff80013339: 49 89 fe             	mov	r14, rdi
ffffffff8001333c: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001333f: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff80013343: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff80013347: 48 39 d1             	cmp	rcx, rdx
ffffffff8001334a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001334e: 48 89 f3             	mov	rbx, rsi
ffffffff80013351: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff80013355: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001335b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001335f: 31 ff                	xor	edi, edi
ffffffff80013361: 48 c1 ea 3c          	shr	rdx, 0x3c
ffffffff80013365: 75 69                	jne	0xffffffff800133d0 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d+0xa0>
ffffffff80013367: 4c 89 fa             	mov	rdx, r15
ffffffff8001336a: 48 c1 e2 04          	shl	rdx, 0x4
ffffffff8001336e: 48 b9 f8 ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffff8
ffffffff80013378: 48 39 ca             	cmp	rdx, rcx
ffffffff8001337b: 77 65                	ja	0xffffffff800133e2 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d+0xb2>
ffffffff8001337d: 48 85 c0             	test	rax, rax
ffffffff80013380: 75 04                	jne	0xffffffff80013386 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d+0x56>
ffffffff80013382: 31 c0                	xor	eax, eax
ffffffff80013384: eb 17                	jmp	0xffffffff8001339d <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d+0x6d>
ffffffff80013386: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001338a: 48 c1 e0 04          	shl	rax, 0x4
ffffffff8001338e: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80013393: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80013398: b8 08 00 00 00       	mov	eax, 0x8
ffffffff8001339d: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff800133a2: 48 89 e7             	mov	rdi, rsp
ffffffff800133a5: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff800133aa: be 08 00 00 00       	mov	esi, 0x8
ffffffff800133af: e8 6c fc ff ff       	call	0xffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>
ffffffff800133b4: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff800133b8: 74 1e                	je	0xffffffff800133d8 <alloc::raw_vec::RawVec<T,A>::grow_one::hae02d1e52d279f6d+0xa8>
ffffffff800133ba: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800133bf: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff800133c3: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff800133c6: 48 83 c4 30          	add	rsp, 0x30
ffffffff800133ca: 5b                   	pop	rbx
ffffffff800133cb: 41 5e                	pop	r14
ffffffff800133cd: 41 5f                	pop	r15
ffffffff800133cf: c3                   	ret
ffffffff800133d0: 48 89 da             	mov	rdx, rbx
ffffffff800133d3: e8 bf a2 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800133d8: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff800133dd: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff800133e2: 48 89 da             	mov	rdx, rbx
ffffffff800133e5: e8 ad a2 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800133ea: cc                   	int3
ffffffff800133eb: cc                   	int3
ffffffff800133ec: cc                   	int3
ffffffff800133ed: cc                   	int3
ffffffff800133ee: cc                   	int3
ffffffff800133ef: cc                   	int3

ffffffff800133f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece>:
ffffffff800133f0: 41 57                	push	r15
ffffffff800133f2: 41 56                	push	r14
ffffffff800133f4: 53                   	push	rbx
ffffffff800133f5: 48 83 ec 30          	sub	rsp, 0x30
ffffffff800133f9: 49 89 fe             	mov	r14, rdi
ffffffff800133fc: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff800133ff: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff80013403: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff80013407: 48 39 d1             	cmp	rcx, rdx
ffffffff8001340a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001340e: 48 89 f3             	mov	rbx, rsi
ffffffff80013411: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff80013415: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001341b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001341f: 31 ff                	xor	edi, edi
ffffffff80013421: 48 c1 ea 3e          	shr	rdx, 0x3e
ffffffff80013425: 75 6a                	jne	0xffffffff80013491 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece+0xa1>
ffffffff80013427: 4a 8d 14 bd 00 00 00 00      	lea	rdx, [4*r15]
ffffffff8001342f: 48 b9 fe ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffffe
ffffffff80013439: 48 39 ca             	cmp	rdx, rcx
ffffffff8001343c: 77 65                	ja	0xffffffff800134a3 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece+0xb3>
ffffffff8001343e: 48 85 c0             	test	rax, rax
ffffffff80013441: 75 04                	jne	0xffffffff80013447 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece+0x57>
ffffffff80013443: 31 c0                	xor	eax, eax
ffffffff80013445: eb 17                	jmp	0xffffffff8001345e <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece+0x6e>
ffffffff80013447: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001344b: 48 c1 e0 02          	shl	rax, 0x2
ffffffff8001344f: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80013454: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80013459: b8 02 00 00 00       	mov	eax, 0x2
ffffffff8001345e: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80013463: 48 89 e7             	mov	rdi, rsp
ffffffff80013466: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001346b: be 02 00 00 00       	mov	esi, 0x2
ffffffff80013470: e8 ab fb ff ff       	call	0xffffffff80013020 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.565414557396898739>
ffffffff80013475: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff80013479: 74 1e                	je	0xffffffff80013499 <alloc::raw_vec::RawVec<T,A>::grow_one::hb16f4064faa5fece+0xa9>
ffffffff8001347b: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80013480: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff80013484: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff80013487: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001348b: 5b                   	pop	rbx
ffffffff8001348c: 41 5e                	pop	r14
ffffffff8001348e: 41 5f                	pop	r15
ffffffff80013490: c3                   	ret
ffffffff80013491: 48 89 da             	mov	rdx, rbx
ffffffff80013494: e8 fe a1 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80013499: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001349e: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff800134a3: 48 89 da             	mov	rdx, rbx
ffffffff800134a6: e8 ec a1 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800134ab: cc                   	int3
ffffffff800134ac: cc                   	int3
ffffffff800134ad: cc                   	int3
ffffffff800134ae: cc                   	int3
ffffffff800134af: cc                   	int3

ffffffff800134b0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>:
ffffffff800134b0: 55                   	push	rbp
ffffffff800134b1: 41 57                	push	r15
ffffffff800134b3: 41 56                	push	r14
ffffffff800134b5: 41 55                	push	r13
ffffffff800134b7: 41 54                	push	r12
ffffffff800134b9: 53                   	push	rbx
ffffffff800134ba: 50                   	push	rax
ffffffff800134bb: 49 89 f6             	mov	r14, rsi
ffffffff800134be: 31 f6                	xor	esi, esi
ffffffff800134c0: 49 39 c8             	cmp	r8, rcx
ffffffff800134c3: 40 0f 95 c6          	setne	sil
ffffffff800134c7: b8 ff 00 00 00       	mov	eax, 0xff
ffffffff800134cc: 0f 43 c6             	cmovae	eax, esi
ffffffff800134cf: 84 c0                	test	al, al
ffffffff800134d1: 0f 84 0c 01 00 00    	je	0xffffffff800135e3 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x133>
ffffffff800134d7: 48 89 fb             	mov	rbx, rdi
ffffffff800134da: 0f b6 c0             	movzx	eax, al
ffffffff800134dd: 40 b6 01             	mov	sil, 0x1
ffffffff800134e0: 83 f8 01             	cmp	eax, 0x1
ffffffff800134e3: 75 3b                	jne	0xffffffff80013520 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x70>
ffffffff800134e5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800134f0: 31 c0                	xor	eax, eax
ffffffff800134f2: f0                   	lock
ffffffff800134f3: 40 0f b0 33          	cmpxchg	byte ptr [rbx], sil
ffffffff800134f7: 75 09                	jne	0xffffffff80013502 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x52>
ffffffff800134f9: eb 45                	jmp	0xffffffff80013540 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x90>
ffffffff800134fb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80013500: f3 90                	pause
ffffffff80013502: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff80013505: 84 c0                	test	al, al
ffffffff80013507: 75 f7                	jne	0xffffffff80013500 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x50>
ffffffff80013509: eb e5                	jmp	0xffffffff800134f0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x40>
ffffffff8001350b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80013510: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff80013513: 84 c0                	test	al, al
ffffffff80013515: 74 09                	je	0xffffffff80013520 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x70>
ffffffff80013517: f3 90                	pause
ffffffff80013519: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff8001351c: 84 c0                	test	al, al
ffffffff8001351e: 75 f7                	jne	0xffffffff80013517 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x67>
ffffffff80013520: 31 c0                	xor	eax, eax
ffffffff80013522: f0                   	lock
ffffffff80013523: 40 0f b0 33          	cmpxchg	byte ptr [rbx], sil
ffffffff80013527: 75 e7                	jne	0xffffffff80013510 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x60>
ffffffff80013529: 48 8d 7b 08          	lea	rdi, [rbx + 0x8]
ffffffff8001352d: 4c 89 f6             	mov	rsi, r14
ffffffff80013530: e8 ab 9b ff ff       	call	0xffffffff8000d0e0 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4>
ffffffff80013535: 4c 89 f0             	mov	rax, r14
ffffffff80013538: c6 03 00             	mov	byte ptr [rbx], 0x0
ffffffff8001353b: e9 a6 00 00 00       	jmp	0xffffffff800135e6 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x136>
ffffffff80013540: 4c 8d 7b 08          	lea	r15, [rbx + 0x8]
ffffffff80013544: 4c 89 ff             	mov	rdi, r15
ffffffff80013547: 4c 89 f6             	mov	rsi, r14
ffffffff8001354a: 49 89 d5             	mov	r13, rdx
ffffffff8001354d: 49 89 cc             	mov	r12, rcx
ffffffff80013550: 4c 89 c5             	mov	rbp, r8
ffffffff80013553: e8 88 90 ff ff       	call	0xffffffff8000c5e0 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858>
ffffffff80013558: c6 03 00             	mov	byte ptr [rbx], 0x0
ffffffff8001355b: 48 85 c0             	test	rax, rax
ffffffff8001355e: 0f 85 82 00 00 00    	jne	0xffffffff800135e6 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x136>
ffffffff80013564: b1 01                	mov	cl, 0x1
ffffffff80013566: 31 c0                	xor	eax, eax
ffffffff80013568: f0                   	lock
ffffffff80013569: 0f b0 0b             	cmpxchg	byte ptr [rbx], cl
ffffffff8001356c: 4c 89 ee             	mov	rsi, r13
ffffffff8001356f: 48 89 ea             	mov	rdx, rbp
ffffffff80013572: 75 0e                	jne	0xffffffff80013582 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd2>
ffffffff80013574: eb 1b                	jmp	0xffffffff80013591 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xe1>
ffffffff80013576: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80013580: f3 90                	pause
ffffffff80013582: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff80013585: 84 c0                	test	al, al
ffffffff80013587: 75 f7                	jne	0xffffffff80013580 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd0>
ffffffff80013589: 31 c0                	xor	eax, eax
ffffffff8001358b: f0                   	lock
ffffffff8001358c: 0f b0 0b             	cmpxchg	byte ptr [rbx], cl
ffffffff8001358f: 75 f1                	jne	0xffffffff80013582 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd2>
ffffffff80013591: 4c 89 ff             	mov	rdi, r15
ffffffff80013594: e8 b7 94 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80013599: 48 85 c0             	test	rax, rax
ffffffff8001359c: 74 57                	je	0xffffffff800135f5 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x145>
ffffffff8001359e: 4c 89 e2             	mov	rdx, r12
ffffffff800135a1: 49 81 fc 00 00 01 00 	cmp	r12, 0x10000
ffffffff800135a8: 76 52                	jbe	0xffffffff800135fc <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x14c>
ffffffff800135aa: c6 03 00             	mov	byte ptr [rbx], 0x0
ffffffff800135ad: 48 89 c5             	mov	rbp, rax
ffffffff800135b0: 48 89 c7             	mov	rdi, rax
ffffffff800135b3: 4c 89 f6             	mov	rsi, r14
ffffffff800135b6: ff 15 74 8e 02 00    	call	qword ptr [rip + 0x28e74] # 0xffffffff8003c430
ffffffff800135bc: b1 01                	mov	cl, 0x1
ffffffff800135be: 31 c0                	xor	eax, eax
ffffffff800135c0: f0                   	lock
ffffffff800135c1: 0f b0 0b             	cmpxchg	byte ptr [rbx], cl
ffffffff800135c4: 4c 89 ea             	mov	rdx, r13
ffffffff800135c7: 75 09                	jne	0xffffffff800135d2 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x122>
ffffffff800135c9: eb 43                	jmp	0xffffffff8001360e <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x15e>
ffffffff800135cb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff800135d0: f3 90                	pause
ffffffff800135d2: 0f b6 03             	movzx	eax, byte ptr [rbx]
ffffffff800135d5: 84 c0                	test	al, al
ffffffff800135d7: 75 f7                	jne	0xffffffff800135d0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x120>
ffffffff800135d9: 31 c0                	xor	eax, eax
ffffffff800135db: f0                   	lock
ffffffff800135dc: 0f b0 0b             	cmpxchg	byte ptr [rbx], cl
ffffffff800135df: 75 f1                	jne	0xffffffff800135d2 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x122>
ffffffff800135e1: eb 2b                	jmp	0xffffffff8001360e <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x15e>
ffffffff800135e3: 4c 89 f0             	mov	rax, r14
ffffffff800135e6: 48 83 c4 08          	add	rsp, 0x8
ffffffff800135ea: 5b                   	pop	rbx
ffffffff800135eb: 41 5c                	pop	r12
ffffffff800135ed: 41 5d                	pop	r13
ffffffff800135ef: 41 5e                	pop	r14
ffffffff800135f1: 41 5f                	pop	r15
ffffffff800135f3: 5d                   	pop	rbp
ffffffff800135f4: c3                   	ret
ffffffff800135f5: 31 c0                	xor	eax, eax
ffffffff800135f7: e9 3c ff ff ff       	jmp	0xffffffff80013538 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x88>
ffffffff800135fc: 48 89 c5             	mov	rbp, rax
ffffffff800135ff: 48 89 c7             	mov	rdi, rax
ffffffff80013602: 4c 89 f6             	mov	rsi, r14
ffffffff80013605: ff 15 25 8e 02 00    	call	qword ptr [rip + 0x28e25] # 0xffffffff8003c430
ffffffff8001360b: 4c 89 ea             	mov	rdx, r13
ffffffff8001360e: 4c 89 ff             	mov	rdi, r15
ffffffff80013611: 4c 89 f6             	mov	rsi, r14
ffffffff80013614: 4c 89 e1             	mov	rcx, r12
ffffffff80013617: e8 d4 91 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8001361c: 48 89 e8             	mov	rax, rbp
ffffffff8001361f: e9 14 ff ff ff       	jmp	0xffffffff80013538 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x88>
ffffffff80013624: cc                   	int3
ffffffff80013625: cc                   	int3
ffffffff80013626: cc                   	int3
ffffffff80013627: cc                   	int3
ffffffff80013628: cc                   	int3
ffffffff80013629: cc                   	int3
ffffffff8001362a: cc                   	int3
ffffffff8001362b: cc                   	int3
ffffffff8001362c: cc                   	int3
ffffffff8001362d: cc                   	int3
ffffffff8001362e: cc                   	int3
ffffffff8001362f: cc                   	int3

ffffffff80013630 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff80013630: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80013633: a8 10                	test	al, 0x10
ffffffff80013635: 0f 85 35 a8 00 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001363b: a8 20                	test	al, 0x20
ffffffff8001363d: 0f 85 ad a8 00 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80013643: e9 c8 cd 00 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80013648: cc                   	int3
ffffffff80013649: cc                   	int3
ffffffff8001364a: cc                   	int3
ffffffff8001364b: cc                   	int3
ffffffff8001364c: cc                   	int3
ffffffff8001364d: cc                   	int3
ffffffff8001364e: cc                   	int3
ffffffff8001364f: cc                   	int3

ffffffff80013650 <core::fmt::Write::write_char::h35915b7c56796241>:
ffffffff80013650: 50                   	push	rax
ffffffff80013651: c7 44 24 04 00 00 00 00      	mov	dword ptr [rsp + 0x4], 0x0
ffffffff80013659: 81 fe 80 00 00 00    	cmp	esi, 0x80
ffffffff8001365f: 73 16                	jae	0xffffffff80013677 <core::fmt::Write::write_char::h35915b7c56796241+0x27>
ffffffff80013661: 40 88 74 24 04       	mov	byte ptr [rsp + 0x4], sil
ffffffff80013666: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001366b: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff80013670: e8 db 92 00 00       	call	0xffffffff8001c950 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff80013675: 59                   	pop	rcx
ffffffff80013676: c3                   	ret
ffffffff80013677: 89 f0                	mov	eax, esi
ffffffff80013679: 81 fe 00 08 00 00    	cmp	esi, 0x800
ffffffff8001367f: 73 27                	jae	0xffffffff800136a8 <core::fmt::Write::write_char::h35915b7c56796241+0x58>
ffffffff80013681: c1 e8 06             	shr	eax, 0x6
ffffffff80013684: 0c c0                	or	al, -0x40
ffffffff80013686: 88 44 24 04          	mov	byte ptr [rsp + 0x4], al
ffffffff8001368a: 40 80 e6 3f          	and	sil, 0x3f
ffffffff8001368e: 40 80 ce 80          	or	sil, -0x80
ffffffff80013692: 40 88 74 24 05       	mov	byte ptr [rsp + 0x5], sil
ffffffff80013697: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001369c: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff800136a1: e8 aa 92 00 00       	call	0xffffffff8001c950 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff800136a6: 59                   	pop	rcx
ffffffff800136a7: c3                   	ret
ffffffff800136a8: 81 fe 00 00 01 00    	cmp	esi, 0x10000
ffffffff800136ae: 73 34                	jae	0xffffffff800136e4 <core::fmt::Write::write_char::h35915b7c56796241+0x94>
ffffffff800136b0: c1 e8 0c             	shr	eax, 0xc
ffffffff800136b3: 0c e0                	or	al, -0x20
ffffffff800136b5: 88 44 24 04          	mov	byte ptr [rsp + 0x4], al
ffffffff800136b9: 89 f0                	mov	eax, esi
ffffffff800136bb: c1 e8 06             	shr	eax, 0x6
ffffffff800136be: 24 3f                	and	al, 0x3f
ffffffff800136c0: 0c 80                	or	al, -0x80
ffffffff800136c2: 88 44 24 05          	mov	byte ptr [rsp + 0x5], al
ffffffff800136c6: 40 80 e6 3f          	and	sil, 0x3f
ffffffff800136ca: 40 80 ce 80          	or	sil, -0x80
ffffffff800136ce: 40 88 74 24 06       	mov	byte ptr [rsp + 0x6], sil
ffffffff800136d3: ba 03 00 00 00       	mov	edx, 0x3
ffffffff800136d8: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff800136dd: e8 6e 92 00 00       	call	0xffffffff8001c950 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff800136e2: 59                   	pop	rcx
ffffffff800136e3: c3                   	ret
ffffffff800136e4: c1 e8 12             	shr	eax, 0x12
ffffffff800136e7: 0c f0                	or	al, -0x10
ffffffff800136e9: 88 44 24 04          	mov	byte ptr [rsp + 0x4], al
ffffffff800136ed: 89 f0                	mov	eax, esi
ffffffff800136ef: c1 e8 0c             	shr	eax, 0xc
ffffffff800136f2: 24 3f                	and	al, 0x3f
ffffffff800136f4: 0c 80                	or	al, -0x80
ffffffff800136f6: 88 44 24 05          	mov	byte ptr [rsp + 0x5], al
ffffffff800136fa: 89 f0                	mov	eax, esi
ffffffff800136fc: c1 e8 06             	shr	eax, 0x6
ffffffff800136ff: 24 3f                	and	al, 0x3f
ffffffff80013701: 0c 80                	or	al, -0x80
ffffffff80013703: 88 44 24 06          	mov	byte ptr [rsp + 0x6], al
ffffffff80013707: 40 80 e6 3f          	and	sil, 0x3f
ffffffff8001370b: 40 80 ce 80          	or	sil, -0x80
ffffffff8001370f: 40 88 74 24 07       	mov	byte ptr [rsp + 0x7], sil
ffffffff80013714: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80013719: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff8001371e: e8 2d 92 00 00       	call	0xffffffff8001c950 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff80013723: 59                   	pop	rcx
ffffffff80013724: c3                   	ret
ffffffff80013725: cc                   	int3
ffffffff80013726: cc                   	int3
ffffffff80013727: cc                   	int3
ffffffff80013728: cc                   	int3
ffffffff80013729: cc                   	int3
ffffffff8001372a: cc                   	int3
ffffffff8001372b: cc                   	int3
ffffffff8001372c: cc                   	int3
ffffffff8001372d: cc                   	int3
ffffffff8001372e: cc                   	int3
ffffffff8001372f: cc                   	int3

ffffffff80013730 <core::fmt::Write::write_fmt::h074698a8db4b4be5>:
ffffffff80013730: 48 89 f2             	mov	rdx, rsi
ffffffff80013733: 48 c7 c6 30 76 02 80 	mov	rsi, -0x7ffd89d0
ffffffff8001373a: e9 91 aa 00 00       	jmp	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001373f: cc                   	int3

ffffffff80013740 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80>:
ffffffff80013740: 83 3f 03             	cmp	dword ptr [rdi], 0x3
ffffffff80013743: 75 56                	jne	0xffffffff8001379b <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x5b>
ffffffff80013745: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80013749: 48 85 c9             	test	rcx, rcx
ffffffff8001374c: 74 4d                	je	0xffffffff8001379b <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x5b>
ffffffff8001374e: 50                   	push	rax
ffffffff8001374f: 48 8b 77 10          	mov	rsi, qword ptr [rdi + 0x10]
ffffffff80013753: b2 01                	mov	dl, 0x1
ffffffff80013755: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80013760: 31 c0                	xor	eax, eax
ffffffff80013762: f0                   	lock
ffffffff80013763: 0f b0 15 96 78 01 00 	cmpxchg	byte ptr [rip + 0x17896], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001376a: 75 06                	jne	0xffffffff80013772 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x32>
ffffffff8001376c: eb 11                	jmp	0xffffffff8001377f <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x3f>
ffffffff8001376e: 66 90                	nop
ffffffff80013770: f3 90                	pause
ffffffff80013772: 0f b6 05 87 78 01 00 	movzx	eax, byte ptr [rip + 0x17887] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013779: 84 c0                	test	al, al
ffffffff8001377b: 75 f3                	jne	0xffffffff80013770 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x30>
ffffffff8001377d: eb e1                	jmp	0xffffffff80013760 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x20>
ffffffff8001377f: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80013784: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8001378b: e8 60 90 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80013790: c6 05 69 78 01 00 00 	mov	byte ptr [rip + 0x17869], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013797: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001379b: c3                   	ret
ffffffff8001379c: cc                   	int3
ffffffff8001379d: cc                   	int3
ffffffff8001379e: cc                   	int3
ffffffff8001379f: cc                   	int3

ffffffff800137a0 <<goblin::error::Error as core::fmt::Debug>::fmt::ha73702cbb56a1a4b>:
ffffffff800137a0: 48 83 ec 18          	sub	rsp, 0x18
ffffffff800137a4: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff800137a7: 48 83 c0 fd          	add	rax, -0x3
ffffffff800137ab: 48 83 f8 04          	cmp	rax, 0x4
ffffffff800137af: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff800137b4: 48 0f 42 c8          	cmovb	rcx, rax
ffffffff800137b8: ff 24 cd 98 74 02 80 	jmp	qword ptr [8*rcx - 0x7ffd8b68]
ffffffff800137bf: 48 83 c7 08          	add	rdi, 0x8
ffffffff800137c3: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff800137c8: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff800137cd: ba 09 00 00 00       	mov	edx, 0x9
ffffffff800137d2: 48 89 f7             	mov	rdi, rsi
ffffffff800137d5: 48 c7 c6 88 75 02 80 	mov	rsi, -0x7ffd8a78
ffffffff800137dc: 49 c7 c0 68 75 02 80 	mov	r8, -0x7ffd8a98
ffffffff800137e3: e8 c8 b3 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff800137e8: 48 83 c4 18          	add	rsp, 0x18
ffffffff800137ec: c3                   	ret
ffffffff800137ed: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff800137f2: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff800137f7: ba 06 00 00 00       	mov	edx, 0x6
ffffffff800137fc: 48 89 f7             	mov	rdi, rsi
ffffffff800137ff: 48 c7 c6 d8 75 02 80 	mov	rsi, -0x7ffd8a28
ffffffff80013806: 49 c7 c0 b8 75 02 80 	mov	r8, -0x7ffd8a48
ffffffff8001380d: e8 9e b3 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80013812: 48 83 c4 18          	add	rsp, 0x18
ffffffff80013816: c3                   	ret
ffffffff80013817: 48 8d 4f 18          	lea	rcx, [rdi + 0x18]
ffffffff8001381b: 48 83 c7 08          	add	rdi, 0x8
ffffffff8001381f: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff80013824: 48 c7 04 24 00 76 02 80      	mov	qword ptr [rsp], -0x7ffd8a00
ffffffff8001382c: 4c 8d 4c 24 10       	lea	r9, [rsp + 0x10]
ffffffff80013831: ba 0e 00 00 00       	mov	edx, 0xe
ffffffff80013836: 48 89 f7             	mov	rdi, rsi
ffffffff80013839: 48 c7 c6 20 76 02 80 	mov	rsi, -0x7ffd89e0
ffffffff80013840: 49 c7 c0 e0 75 02 80 	mov	r8, -0x7ffd8a20
ffffffff80013847: e8 e4 b4 00 00       	call	0xffffffff8001ed30 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>
ffffffff8001384c: 48 83 c4 18          	add	rsp, 0x18
ffffffff80013850: c3                   	ret
ffffffff80013851: 48 83 c7 08          	add	rdi, 0x8
ffffffff80013855: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001385a: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff8001385f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80013864: 48 89 f7             	mov	rdi, rsi
ffffffff80013867: 48 c7 c6 88 22 02 80 	mov	rsi, -0x7ffddd78
ffffffff8001386e: 49 c7 c0 98 75 02 80 	mov	r8, -0x7ffd8a68
ffffffff80013875: e8 36 b3 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001387a: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001387e: c3                   	ret
ffffffff8001387f: cc                   	int3

ffffffff80013880 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e>:
ffffffff80013880: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80013883: 48 85 c0             	test	rax, rax
ffffffff80013886: 74 19                	je	0xffffffff800138a1 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x21>
ffffffff80013888: 83 f8 01             	cmp	eax, 0x1
ffffffff8001388b: 75 28                	jne	0xffffffff800138b5 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x35>
ffffffff8001388d: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff80013892: 48 89 f7             	mov	rdi, rsi
ffffffff80013895: 48 c7 c6 8b 76 02 80 	mov	rsi, -0x7ffd8975
ffffffff8001389c: e9 8f b1 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800138a1: ba 13 00 00 00       	mov	edx, 0x13
ffffffff800138a6: 48 89 f7             	mov	rdi, rsi
ffffffff800138a9: 48 c7 c6 78 76 02 80 	mov	rsi, -0x7ffd8988
ffffffff800138b0: e9 7b b1 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800138b5: 50                   	push	rax
ffffffff800138b6: 48 83 c7 08          	add	rdi, 0x8
ffffffff800138ba: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff800138be: 48 89 e1             	mov	rcx, rsp
ffffffff800138c1: ba 13 00 00 00       	mov	edx, 0x13
ffffffff800138c6: 48 89 f7             	mov	rdi, rsi
ffffffff800138c9: 48 c7 c6 b8 76 02 80 	mov	rsi, -0x7ffd8948
ffffffff800138d0: 49 c7 c0 98 76 02 80 	mov	r8, -0x7ffd8968
ffffffff800138d7: e8 d4 b2 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff800138dc: 59                   	pop	rcx
ffffffff800138dd: c3                   	ret
ffffffff800138de: cc                   	int3
ffffffff800138df: cc                   	int3

ffffffff800138e0 <taos::processes::loader::load_elf::ha68086dbc075a067>:
ffffffff800138e0: 55                   	push	rbp
ffffffff800138e1: 41 57                	push	r15
ffffffff800138e3: 41 56                	push	r14
ffffffff800138e5: 41 55                	push	r13
ffffffff800138e7: 41 54                	push	r12
ffffffff800138e9: 53                   	push	rbx
ffffffff800138ea: 48 81 ec 68 05 00 00 	sub	rsp, 0x568
ffffffff800138f1: 48 89 cb             	mov	rbx, rcx
ffffffff800138f4: 49 89 d5             	mov	r13, rdx
ffffffff800138f7: 48 89 f2             	mov	rdx, rsi
ffffffff800138fa: 48 89 fe             	mov	rsi, rdi
ffffffff800138fd: 48 8d bc 24 38 01 00 00      	lea	rdi, [rsp + 0x138]
ffffffff80013905: 48 89 b4 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rsi
ffffffff8001390d: 48 89 14 24          	mov	qword ptr [rsp], rdx
ffffffff80013911: e8 6a 22 00 00       	call	0xffffffff80015b80 <goblin::elf::Elf::parse::hfb1810c3f1f87358>
ffffffff80013916: 48 8b 8c 24 38 01 00 00      	mov	rcx, qword ptr [rsp + 0x138]
ffffffff8001391e: 48 89 8c 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rcx
ffffffff80013926: 48 83 f9 03          	cmp	rcx, 0x3
ffffffff8001392a: 0f 84 4b 0a 00 00    	je	0xffffffff8001437b <taos::processes::loader::load_elf::ha68086dbc075a067+0xa9b>
ffffffff80013930: 48 bd 00 00 00 00 00 00 01 00	movabs	rbp, 0x1000000000000
ffffffff8001393a: 49 bc 00 f0 ff ff ff 7f 00 00	movabs	r12, 0x7ffffffff000
ffffffff80013944: 4c 8b bc 24 60 02 00 00      	mov	r15, qword ptr [rsp + 0x260]
ffffffff8001394c: 48 8b 84 24 68 02 00 00      	mov	rax, qword ptr [rsp + 0x268]
ffffffff80013954: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80013959: 48 8b 84 24 78 02 00 00      	mov	rax, qword ptr [rsp + 0x278]
ffffffff80013961: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff80013966: 48 8b 8c 24 80 02 00 00      	mov	rcx, qword ptr [rsp + 0x280]
ffffffff8001396e: 48 8b 84 24 90 02 00 00      	mov	rax, qword ptr [rsp + 0x290]
ffffffff80013976: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8001397b: 48 8b 84 24 98 02 00 00      	mov	rax, qword ptr [rsp + 0x298]
ffffffff80013983: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80013988: 48 8b 84 24 a8 02 00 00      	mov	rax, qword ptr [rsp + 0x2a8]
ffffffff80013990: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff80013998: 48 8b 84 24 b0 02 00 00      	mov	rax, qword ptr [rsp + 0x2b0]
ffffffff800139a0: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800139a5: 48 8b 84 24 e0 02 00 00      	mov	rax, qword ptr [rsp + 0x2e0]
ffffffff800139ad: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rax
ffffffff800139b5: 48 8b 84 24 e8 02 00 00      	mov	rax, qword ptr [rsp + 0x2e8]
ffffffff800139bd: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff800139c2: 48 8b 84 24 18 03 00 00      	mov	rax, qword ptr [rsp + 0x318]
ffffffff800139ca: 48 89 84 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rax
ffffffff800139d2: 48 8b 84 24 20 03 00 00      	mov	rax, qword ptr [rsp + 0x320]
ffffffff800139da: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff800139df: 48 6b 94 24 88 02 00 00 38   	imul	rdx, qword ptr [rsp + 0x288], 0x38
ffffffff800139e8: 48 01 ca             	add	rdx, rcx
ffffffff800139eb: 48 8b 84 24 50 03 00 00      	mov	rax, qword ptr [rsp + 0x350]
ffffffff800139f3: 48 89 84 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rax
ffffffff800139fb: 48 8b 84 24 58 03 00 00      	mov	rax, qword ptr [rsp + 0x358]
ffffffff80013a03: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff80013a08: 48 8b 84 24 68 03 00 00      	mov	rax, qword ptr [rsp + 0x368]
ffffffff80013a10: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rax
ffffffff80013a18: 48 8b 84 24 70 03 00 00      	mov	rax, qword ptr [rsp + 0x370]
ffffffff80013a20: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff80013a25: 48 8b 84 24 80 03 00 00      	mov	rax, qword ptr [rsp + 0x380]
ffffffff80013a2d: 48 89 84 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rax
ffffffff80013a35: 48 8b 84 24 88 03 00 00      	mov	rax, qword ptr [rsp + 0x388]
ffffffff80013a3d: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff80013a42: 48 8b 84 24 98 03 00 00      	mov	rax, qword ptr [rsp + 0x398]
ffffffff80013a4a: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rax
ffffffff80013a52: 48 8b 84 24 a0 03 00 00      	mov	rax, qword ptr [rsp + 0x3a0]
ffffffff80013a5a: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff80013a5f: 48 8b 84 24 08 05 00 00      	mov	rax, qword ptr [rsp + 0x508]
ffffffff80013a67: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff80013a6f: 48 8d 43 08          	lea	rax, [rbx + 0x8]
ffffffff80013a73: 48 89 84 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rax
ffffffff80013a7b: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80013a80: 48 89 ce             	mov	rsi, rcx
ffffffff80013a83: 4c 89 bc 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r15
ffffffff80013a8b: 4c 89 ac 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], r13
ffffffff80013a93: 48 89 9c 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rbx
ffffffff80013a9b: 48 89 94 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rdx
ffffffff80013aa3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80013ab0: 48 39 d6             	cmp	rsi, rdx
ffffffff80013ab3: 0f 84 4b 03 00 00    	je	0xffffffff80013e04 <taos::processes::loader::load_elf::ha68086dbc075a067+0x524>
ffffffff80013ab9: 48 89 f7             	mov	rdi, rsi
ffffffff80013abc: 48 83 c6 38          	add	rsi, 0x38
ffffffff80013ac0: 83 7f 30 01          	cmp	dword ptr [rdi + 0x30], 0x1
ffffffff80013ac4: 75 ea                	jne	0xffffffff80013ab0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff80013ac6: 4c 8b 47 08          	mov	r8, qword ptr [rdi + 0x8]
ffffffff80013aca: 4b 8d 04 04          	lea	rax, [r12 + r8]
ffffffff80013ace: 48 05 00 10 00 00    	add	rax, 0x1000
ffffffff80013ad4: 48 39 e8             	cmp	rax, rbp
ffffffff80013ad7: 0f 83 be 07 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013add: 48 8b 47 20          	mov	rax, qword ptr [rdi + 0x20]
ffffffff80013ae1: 49 8d 0c 00          	lea	rcx, [r8 + rax]
ffffffff80013ae5: 4c 01 e1             	add	rcx, r12
ffffffff80013ae8: 48 81 c1 ff 0f 00 00 	add	rcx, 0xfff
ffffffff80013aef: 48 39 e9             	cmp	rcx, rbp
ffffffff80013af2: 0f 83 a3 07 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013af8: 49 8d 0c 00          	lea	rcx, [r8 + rax]
ffffffff80013afc: 48 ff c9             	dec	rcx
ffffffff80013aff: 49 81 e0 00 f0 ff ff 	and	r8, -0x1000
ffffffff80013b06: 48 81 e1 00 f0 ff ff 	and	rcx, -0x1000
ffffffff80013b0d: 49 39 c8             	cmp	r8, rcx
ffffffff80013b10: 77 9e                	ja	0xffffffff80013ab0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff80013b12: 48 89 b4 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rsi
ffffffff80013b1a: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80013b1d: 48 89 84 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rax
ffffffff80013b25: 48 89 bc 24 08 01 00 00      	mov	qword ptr [rsp + 0x108], rdi
ffffffff80013b2d: 48 8b 47 18          	mov	rax, qword ptr [rdi + 0x18]
ffffffff80013b31: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80013b36: 4d 89 c4             	mov	r12, r8
ffffffff80013b39: 41 be 05 00 00 00    	mov	r14d, 0x5
ffffffff80013b3f: 4c 89 84 24 10 01 00 00      	mov	qword ptr [rsp + 0x110], r8
ffffffff80013b47: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80013b50: 49 81 fc 00 f0 ff ff 	cmp	r12, -0x1000
ffffffff80013b57: 73 47                	jae	0xffffffff80013ba0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x2c0>
ffffffff80013b59: 48 b8 00 f0 ff ff ff 7f 00 00	movabs	rax, 0x7ffffffff000
ffffffff80013b63: 4c 01 e0             	add	rax, r12
ffffffff80013b66: 48 05 00 20 00 00    	add	rax, 0x2000
ffffffff80013b6c: 48 39 e8             	cmp	rax, rbp
ffffffff80013b6f: 0f 83 26 07 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013b75: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80013b7a: 4c 89 e0             	mov	rax, r12
ffffffff80013b7d: 48 c1 e0 10          	shl	rax, 0x10
ffffffff80013b81: 48 25 00 00 00 f0    	and	rax, -0x10000000
ffffffff80013b87: 48 05 00 00 00 10    	add	rax, 0x10000000
ffffffff80013b8d: 48 c1 f8 10          	sar	rax, 0x10
ffffffff80013b91: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80013b96: eb 4b                	jmp	0xffffffff80013be3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x303>
ffffffff80013b98: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80013ba0: 48 81 f9 00 10 00 00 	cmp	rcx, 0x1000
ffffffff80013ba7: 0f 82 06 07 00 00    	jb	0xffffffff800142b3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9d3>
ffffffff80013bad: 48 b8 00 f0 ff ff ff 7f 00 00	movabs	rax, 0x7ffffffff000
ffffffff80013bb7: 48 01 c8             	add	rax, rcx
ffffffff80013bba: 48 39 e8             	cmp	rax, rbp
ffffffff80013bbd: 0f 83 d8 06 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013bc3: 48 c1 e1 10          	shl	rcx, 0x10
ffffffff80013bc7: 48 81 c1 00 00 00 f0 	add	rcx, -0x10000000
ffffffff80013bce: 48 c1 f9 10          	sar	rcx, 0x10
ffffffff80013bd2: 48 81 e1 00 f0 ff ff 	and	rcx, -0x1000
ffffffff80013bd9: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80013bde: 4c 89 64 24 10       	mov	qword ptr [rsp + 0x10], r12
ffffffff80013be3: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80013be8: b9 07 00 00 00       	mov	ecx, 0x7
ffffffff80013bed: 4c 89 e7             	mov	rdi, r12
ffffffff80013bf0: 4c 89 ee             	mov	rsi, r13
ffffffff80013bf3: e8 68 cf ff ff       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff80013bf8: ba 07 00 00 00       	mov	edx, 0x7
ffffffff80013bfd: 48 89 df             	mov	rdi, rbx
ffffffff80013c00: 48 89 c6             	mov	rsi, rax
ffffffff80013c03: e8 a8 d3 ff ff       	call	0xffffffff80010fb0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>
ffffffff80013c08: 48 89 c5             	mov	rbp, rax
ffffffff80013c0b: 4d 89 e7             	mov	r15, r12
ffffffff80013c0e: 4c 2b bc 24 10 01 00 00      	sub	r15, qword ptr [rsp + 0x110]
ffffffff80013c16: b9 00 00 00 00       	mov	ecx, 0x0
ffffffff80013c1b: 4c 0f 42 f9          	cmovb	r15, rcx
ffffffff80013c1f: 44 89 f8             	mov	eax, r15d
ffffffff80013c22: 25 ff 0f 00 00       	and	eax, 0xfff
ffffffff80013c27: bb 00 10 00 00       	mov	ebx, 0x1000
ffffffff80013c2c: 48 29 c3             	sub	rbx, rax
ffffffff80013c2f: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80013c34: 49 89 c5             	mov	r13, rax
ffffffff80013c37: 4d 29 fd             	sub	r13, r15
ffffffff80013c3a: 4c 0f 42 e9          	cmovb	r13, rcx
ffffffff80013c3e: 4c 39 eb             	cmp	rbx, r13
ffffffff80013c41: 4c 89 ea             	mov	rdx, r13
ffffffff80013c44: 48 0f 42 d3          	cmovb	rdx, rbx
ffffffff80013c48: 4c 39 f8             	cmp	rax, r15
ffffffff80013c4b: 76 33                	jbe	0xffffffff80013c80 <taos::processes::loader::load_elf::ha68086dbc075a067+0x3a0>
ffffffff80013c4d: 48 8b 84 24 e8 00 00 00      	mov	rax, qword ptr [rsp + 0xe8]
ffffffff80013c55: 49 8d 34 07          	lea	rsi, [r15 + rax]
ffffffff80013c59: 48 89 d0             	mov	rax, rdx
ffffffff80013c5c: 48 01 f0             	add	rax, rsi
ffffffff80013c5f: 0f 82 5a 06 00 00    	jb	0xffffffff800142bf <taos::processes::loader::load_elf::ha68086dbc075a067+0x9df>
ffffffff80013c65: 48 3b 04 24          	cmp	rax, qword ptr [rsp]
ffffffff80013c69: 0f 87 62 06 00 00    	ja	0xffffffff800142d1 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9f1>
ffffffff80013c6f: 48 03 b4 24 e0 00 00 00      	add	rsi, qword ptr [rsp + 0xe0]
ffffffff80013c77: 48 89 ef             	mov	rdi, rbp
ffffffff80013c7a: ff 15 b0 87 02 00    	call	qword ptr [rip + 0x287b0] # 0xffffffff8003c430
ffffffff80013c80: 49 39 dd             	cmp	r13, rbx
ffffffff80013c83: 73 26                	jae	0xffffffff80013cab <taos::processes::loader::load_elf::ha68086dbc075a067+0x3cb>
ffffffff80013c85: 4c 39 7c 24 08       	cmp	qword ptr [rsp + 0x8], r15
ffffffff80013c8a: b8 00 00 00 00       	mov	eax, 0x0
ffffffff80013c8f: 4c 0f 46 e8          	cmovbe	r13, rax
ffffffff80013c93: 4c 29 eb             	sub	rbx, r13
ffffffff80013c96: 48 0f 42 d8          	cmovb	rbx, rax
ffffffff80013c9a: 49 01 ed             	add	r13, rbp
ffffffff80013c9d: 4c 89 ef             	mov	rdi, r13
ffffffff80013ca0: 31 f6                	xor	esi, esi
ffffffff80013ca2: 48 89 da             	mov	rdx, rbx
ffffffff80013ca5: ff 15 95 87 02 00    	call	qword ptr [rip + 0x28795] # 0xffffffff8003c440
ffffffff80013cab: 48 8b 84 24 08 01 00 00      	mov	rax, qword ptr [rsp + 0x108]
ffffffff80013cb3: 8b 40 34             	mov	eax, dword ptr [rax + 0x34]
ffffffff80013cb6: 89 c1                	mov	ecx, eax
ffffffff80013cb8: 83 e1 02             	and	ecx, 0x2
ffffffff80013cbb: 4c 89 f2             	mov	rdx, r14
ffffffff80013cbe: 48 09 ca             	or	rdx, rcx
ffffffff80013cc1: 49 89 d6             	mov	r14, rdx
ffffffff80013cc4: 48 b9 00 00 00 00 00 00 00 80	movabs	rcx, -0x8000000000000000
ffffffff80013cce: 49 09 ce             	or	r14, rcx
ffffffff80013cd1: a8 01                	test	al, 0x1
ffffffff80013cd3: 4c 0f 45 f2          	cmovne	r14, rdx
ffffffff80013cd7: 4c 89 e7             	mov	rdi, r12
ffffffff80013cda: 4c 8b ac 24 00 01 00 00      	mov	r13, qword ptr [rsp + 0x100]
ffffffff80013ce2: 4c 89 ee             	mov	rsi, r13
ffffffff80013ce5: 4c 89 f2             	mov	rdx, r14
ffffffff80013ce8: e8 e3 d3 ff ff       	call	0xffffffff800110d0 <taos::memory::paging::update_permissions::h1d23bff2c05baedb>
ffffffff80013ced: 48 c1 e5 10          	shl	rbp, 0x10
ffffffff80013cf1: 48 c1 fd 10          	sar	rbp, 0x10
ffffffff80013cf5: 48 81 e5 00 f0 ff ff 	and	rbp, -0x1000
ffffffff80013cfc: 48 8d bc 24 38 01 00 00      	lea	rdi, [rsp + 0x138]
ffffffff80013d04: 48 8b 9c 24 f8 00 00 00      	mov	rbx, qword ptr [rsp + 0xf8]
ffffffff80013d0c: 48 89 de             	mov	rsi, rbx
ffffffff80013d0f: 48 89 ea             	mov	rdx, rbp
ffffffff80013d12: e8 49 17 00 00       	call	0xffffffff80015460 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1>
ffffffff80013d17: f6 84 24 38 01 00 00 01      	test	byte ptr [rsp + 0x138], 0x1
ffffffff80013d1f: 0f 85 0f 06 00 00    	jne	0xffffffff80014334 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa54>
ffffffff80013d25: 48 8b 84 24 48 01 00 00      	mov	rax, qword ptr [rsp + 0x148]
ffffffff80013d2d: 0f 01 38             	invlpg	byte ptr [rax]
ffffffff80013d30: 31 c0                	xor	eax, eax
ffffffff80013d32: b1 01                	mov	cl, 0x1
ffffffff80013d34: f0                   	lock
ffffffff80013d35: 0f b0 0d fc 72 01 00 	cmpxchg	byte ptr [rip + 0x172fc], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80013d3c: 48 bd 00 00 00 00 00 00 01 00	movabs	rbp, 0x1000000000000
ffffffff80013d46: 75 0a                	jne	0xffffffff80013d52 <taos::processes::loader::load_elf::ha68086dbc075a067+0x472>
ffffffff80013d48: eb 1f                	jmp	0xffffffff80013d69 <taos::processes::loader::load_elf::ha68086dbc075a067+0x489>
ffffffff80013d4a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80013d50: f3 90                	pause
ffffffff80013d52: 0f b6 05 df 72 01 00 	movzx	eax, byte ptr [rip + 0x172df] # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80013d59: 84 c0                	test	al, al
ffffffff80013d5b: 75 f3                	jne	0xffffffff80013d50 <taos::processes::loader::load_elf::ha68086dbc075a067+0x470>
ffffffff80013d5d: 31 c0                	xor	eax, eax
ffffffff80013d5f: f0                   	lock
ffffffff80013d60: 0f b0 0d d1 72 01 00 	cmpxchg	byte ptr [rip + 0x172d1], cl # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80013d67: 75 e9                	jne	0xffffffff80013d52 <taos::processes::loader::load_elf::ha68086dbc075a067+0x472>
ffffffff80013d69: 83 3d d0 72 01 00 03 	cmp	dword ptr [rip + 0x172d0], 0x3 # 0xffffffff8002b040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2+0x8>
ffffffff80013d70: 0f 84 6e 05 00 00    	je	0xffffffff800142e4 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa04>
ffffffff80013d76: 48 c7 84 24 38 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x138], 0x0
ffffffff80013d82: 48 c7 84 24 40 01 00 00 00 f0 ff ff  	mov	qword ptr [rsp + 0x140], -0x1000
ffffffff80013d8e: 48 8b 3b             	mov	rdi, qword ptr [rbx]
ffffffff80013d91: 48 8b b4 24 f0 00 00 00      	mov	rsi, qword ptr [rsp + 0xf0]
ffffffff80013d99: ba 04 00 00 00       	mov	edx, 0x4
ffffffff80013d9e: 48 8d 8c 24 38 01 00 00      	lea	rcx, [rsp + 0x138]
ffffffff80013da6: 49 c7 c0 40 b0 02 80 	mov	r8, -0x7ffd4fc0
ffffffff80013dad: e8 ae 10 00 00       	call	0xffffffff80014e60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5>
ffffffff80013db2: c6 05 7f 72 01 00 00 	mov	byte ptr [rip + 0x1727f], 0x0 # 0xffffffff8002b038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::hc5a26b04c6ac4ad2>
ffffffff80013db9: 4c 89 e7             	mov	rdi, r12
ffffffff80013dbc: 4c 89 ee             	mov	rsi, r13
ffffffff80013dbf: 4c 89 f2             	mov	rdx, r14
ffffffff80013dc2: e8 09 d3 ff ff       	call	0xffffffff800110d0 <taos::memory::paging::update_permissions::h1d23bff2c05baedb>
ffffffff80013dc7: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80013dcc: 49 89 c4             	mov	r12, rax
ffffffff80013dcf: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff80013dd4: 48 39 c8             	cmp	rax, rcx
ffffffff80013dd7: 0f 86 73 fd ff ff    	jbe	0xffffffff80013b50 <taos::processes::loader::load_elf::ha68086dbc075a067+0x270>
ffffffff80013ddd: 4c 8b bc 24 d0 00 00 00      	mov	r15, qword ptr [rsp + 0xd0]
ffffffff80013de5: 49 bc 00 f0 ff ff ff 7f 00 00	movabs	r12, 0x7ffffffff000
ffffffff80013def: 48 8b 94 24 c8 00 00 00      	mov	rdx, qword ptr [rsp + 0xc8]
ffffffff80013df7: 48 8b b4 24 d8 00 00 00      	mov	rsi, qword ptr [rsp + 0xd8]
ffffffff80013dff: e9 ac fc ff ff       	jmp	0xffffffff80013ab0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff80013e04: 48 bf 00 00 00 00 00 70 00 00	movabs	rdi, 0x700000000000
ffffffff80013e0e: 48 8d 9f 00 20 00 00 	lea	rbx, [rdi + 0x2000]
ffffffff80013e15: eb 4f                	jmp	0xffffffff80013e66 <taos::processes::loader::load_elf::ha68086dbc075a067+0x586>
ffffffff80013e17: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80013e20: 49 8d 04 3c          	lea	rax, [r12 + rdi]
ffffffff80013e24: 48 05 00 20 00 00    	add	rax, 0x2000
ffffffff80013e2a: 48 39 e8             	cmp	rax, rbp
ffffffff80013e2d: 0f 83 68 04 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013e33: 49 89 fe             	mov	r14, rdi
ffffffff80013e36: 49 c1 e6 10          	shl	r14, 0x10
ffffffff80013e3a: 49 81 e6 00 00 00 f0 	and	r14, -0x10000000
ffffffff80013e41: 49 81 c6 00 00 00 10 	add	r14, 0x10000000
ffffffff80013e48: 49 c1 fe 10          	sar	r14, 0x10
ffffffff80013e4c: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80013e51: b9 07 00 00 00       	mov	ecx, 0x7
ffffffff80013e56: 4c 89 ee             	mov	rsi, r13
ffffffff80013e59: e8 02 cd ff ff       	call	0xffffffff80010b60 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff80013e5e: 4c 89 f7             	mov	rdi, r14
ffffffff80013e61: 49 39 de             	cmp	r14, rbx
ffffffff80013e64: 77 3e                	ja	0xffffffff80013ea4 <taos::processes::loader::load_elf::ha68086dbc075a067+0x5c4>
ffffffff80013e66: 48 81 ff 00 f0 ff ff 	cmp	rdi, -0x1000
ffffffff80013e6d: 72 b1                	jb	0xffffffff80013e20 <taos::processes::loader::load_elf::ha68086dbc075a067+0x540>
ffffffff80013e6f: 48 81 fb 00 10 00 00 	cmp	rbx, 0x1000
ffffffff80013e76: 0f 82 37 04 00 00    	jb	0xffffffff800142b3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9d3>
ffffffff80013e7c: 4a 8d 04 23          	lea	rax, [rbx + r12]
ffffffff80013e80: 48 39 e8             	cmp	rax, rbp
ffffffff80013e83: 0f 83 12 04 00 00    	jae	0xffffffff8001429b <taos::processes::loader::load_elf::ha68086dbc075a067+0x9bb>
ffffffff80013e89: 48 c1 e3 10          	shl	rbx, 0x10
ffffffff80013e8d: 48 81 c3 00 00 00 f0 	add	rbx, -0x10000000
ffffffff80013e94: 48 c1 fb 10          	sar	rbx, 0x10
ffffffff80013e98: 48 81 e3 00 f0 ff ff 	and	rbx, -0x1000
ffffffff80013e9f: 49 89 fe             	mov	r14, rdi
ffffffff80013ea2: eb a8                	jmp	0xffffffff80013e4c <taos::processes::loader::load_elf::ha68086dbc075a067+0x56c>
ffffffff80013ea4: 48 8b 44 24 70       	mov	rax, qword ptr [rsp + 0x70]
ffffffff80013ea9: 48 85 c0             	test	rax, rax
ffffffff80013eac: 74 59                	je	0xffffffff80013f07 <taos::processes::loader::load_elf::ha68086dbc075a067+0x627>
ffffffff80013eae: 48 6b c8 38          	imul	rcx, rax, 0x38
ffffffff80013eb2: b2 01                	mov	dl, 0x1
ffffffff80013eb4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80013ec0: 31 c0                	xor	eax, eax
ffffffff80013ec2: f0                   	lock
ffffffff80013ec3: 0f b0 15 36 71 01 00 	cmpxchg	byte ptr [rip + 0x17136], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013eca: 74 1e                	je	0xffffffff80013eea <taos::processes::loader::load_elf::ha68086dbc075a067+0x60a>
ffffffff80013ecc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80013ed0: 0f b6 05 29 71 01 00 	movzx	eax, byte ptr [rip + 0x17129] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013ed7: 84 c0                	test	al, al
ffffffff80013ed9: 74 e5                	je	0xffffffff80013ec0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x5e0>
ffffffff80013edb: f3 90                	pause
ffffffff80013edd: 0f b6 05 1c 71 01 00 	movzx	eax, byte ptr [rip + 0x1711c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013ee4: 84 c0                	test	al, al
ffffffff80013ee6: 75 f3                	jne	0xffffffff80013edb <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fb>
ffffffff80013ee8: eb d6                	jmp	0xffffffff80013ec0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x5e0>
ffffffff80013eea: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80013eef: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80013ef6: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff80013efb: e8 f0 88 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80013f00: c6 05 f9 70 01 00 00 	mov	byte ptr [rip + 0x170f9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f07: 48 8b 44 24 78       	mov	rax, qword ptr [rsp + 0x78]
ffffffff80013f0c: 48 85 c0             	test	rax, rax
ffffffff80013f0f: 74 56                	je	0xffffffff80013f67 <taos::processes::loader::load_elf::ha68086dbc075a067+0x687>
ffffffff80013f11: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80013f15: 48 8d 0c c0          	lea	rcx, [rax + 8*rax]
ffffffff80013f19: b2 01                	mov	dl, 0x1
ffffffff80013f1b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80013f20: 31 c0                	xor	eax, eax
ffffffff80013f22: f0                   	lock
ffffffff80013f23: 0f b0 15 d6 70 01 00 	cmpxchg	byte ptr [rip + 0x170d6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f2a: 74 1e                	je	0xffffffff80013f4a <taos::processes::loader::load_elf::ha68086dbc075a067+0x66a>
ffffffff80013f2c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80013f30: 0f b6 05 c9 70 01 00 	movzx	eax, byte ptr [rip + 0x170c9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f37: 84 c0                	test	al, al
ffffffff80013f39: 74 e5                	je	0xffffffff80013f20 <taos::processes::loader::load_elf::ha68086dbc075a067+0x640>
ffffffff80013f3b: f3 90                	pause
ffffffff80013f3d: 0f b6 05 bc 70 01 00 	movzx	eax, byte ptr [rip + 0x170bc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f44: 84 c0                	test	al, al
ffffffff80013f46: 75 f3                	jne	0xffffffff80013f3b <taos::processes::loader::load_elf::ha68086dbc075a067+0x65b>
ffffffff80013f48: eb d6                	jmp	0xffffffff80013f20 <taos::processes::loader::load_elf::ha68086dbc075a067+0x640>
ffffffff80013f4a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80013f4f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80013f56: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80013f5b: e8 90 88 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80013f60: c6 05 99 70 01 00 00 	mov	byte ptr [rip + 0x17099], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f67: 48 8b 84 24 80 00 00 00      	mov	rax, qword ptr [rsp + 0x80]
ffffffff80013f6f: 48 85 c0             	test	rax, rax
ffffffff80013f72: 74 53                	je	0xffffffff80013fc7 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6e7>
ffffffff80013f74: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80013f78: 48 8d 0c 40          	lea	rcx, [rax + 2*rax]
ffffffff80013f7c: b2 01                	mov	dl, 0x1
ffffffff80013f7e: 66 90                	nop
ffffffff80013f80: 31 c0                	xor	eax, eax
ffffffff80013f82: f0                   	lock
ffffffff80013f83: 0f b0 15 76 70 01 00 	cmpxchg	byte ptr [rip + 0x17076], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f8a: 74 1e                	je	0xffffffff80013faa <taos::processes::loader::load_elf::ha68086dbc075a067+0x6ca>
ffffffff80013f8c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80013f90: 0f b6 05 69 70 01 00 	movzx	eax, byte ptr [rip + 0x17069] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013f97: 84 c0                	test	al, al
ffffffff80013f99: 74 e5                	je	0xffffffff80013f80 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6a0>
ffffffff80013f9b: f3 90                	pause
ffffffff80013f9d: 0f b6 05 5c 70 01 00 	movzx	eax, byte ptr [rip + 0x1705c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013fa4: 84 c0                	test	al, al
ffffffff80013fa6: 75 f3                	jne	0xffffffff80013f9b <taos::processes::loader::load_elf::ha68086dbc075a067+0x6bb>
ffffffff80013fa8: eb d6                	jmp	0xffffffff80013f80 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6a0>
ffffffff80013faa: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80013faf: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80013fb6: 48 8b 74 24 38       	mov	rsi, qword ptr [rsp + 0x38]
ffffffff80013fbb: e8 30 88 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80013fc0: c6 05 39 70 01 00 00 	mov	byte ptr [rip + 0x17039], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013fc7: 48 8b 84 24 88 00 00 00      	mov	rax, qword ptr [rsp + 0x88]
ffffffff80013fcf: 48 85 c0             	test	rax, rax
ffffffff80013fd2: 74 53                	je	0xffffffff80014027 <taos::processes::loader::load_elf::ha68086dbc075a067+0x747>
ffffffff80013fd4: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80013fd8: 48 8d 0c 40          	lea	rcx, [rax + 2*rax]
ffffffff80013fdc: b2 01                	mov	dl, 0x1
ffffffff80013fde: 66 90                	nop
ffffffff80013fe0: 31 c0                	xor	eax, eax
ffffffff80013fe2: f0                   	lock
ffffffff80013fe3: 0f b0 15 16 70 01 00 	cmpxchg	byte ptr [rip + 0x17016], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013fea: 74 1e                	je	0xffffffff8001400a <taos::processes::loader::load_elf::ha68086dbc075a067+0x72a>
ffffffff80013fec: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80013ff0: 0f b6 05 09 70 01 00 	movzx	eax, byte ptr [rip + 0x17009] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80013ff7: 84 c0                	test	al, al
ffffffff80013ff9: 74 e5                	je	0xffffffff80013fe0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x700>
ffffffff80013ffb: f3 90                	pause
ffffffff80013ffd: 0f b6 05 fc 6f 01 00 	movzx	eax, byte ptr [rip + 0x16ffc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014004: 84 c0                	test	al, al
ffffffff80014006: 75 f3                	jne	0xffffffff80013ffb <taos::processes::loader::load_elf::ha68086dbc075a067+0x71b>
ffffffff80014008: eb d6                	jmp	0xffffffff80013fe0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x700>
ffffffff8001400a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001400f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014016: 48 8b 74 24 40       	mov	rsi, qword ptr [rsp + 0x40]
ffffffff8001401b: e8 d0 87 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014020: c6 05 d9 6f 01 00 00 	mov	byte ptr [rip + 0x16fd9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014027: 48 8b 84 24 90 00 00 00      	mov	rax, qword ptr [rsp + 0x90]
ffffffff8001402f: 48 85 c0             	test	rax, rax
ffffffff80014032: 74 53                	je	0xffffffff80014087 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7a7>
ffffffff80014034: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80014038: 48 8d 0c 40          	lea	rcx, [rax + 2*rax]
ffffffff8001403c: b2 01                	mov	dl, 0x1
ffffffff8001403e: 66 90                	nop
ffffffff80014040: 31 c0                	xor	eax, eax
ffffffff80014042: f0                   	lock
ffffffff80014043: 0f b0 15 b6 6f 01 00 	cmpxchg	byte ptr [rip + 0x16fb6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001404a: 74 1e                	je	0xffffffff8001406a <taos::processes::loader::load_elf::ha68086dbc075a067+0x78a>
ffffffff8001404c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80014050: 0f b6 05 a9 6f 01 00 	movzx	eax, byte ptr [rip + 0x16fa9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014057: 84 c0                	test	al, al
ffffffff80014059: 74 e5                	je	0xffffffff80014040 <taos::processes::loader::load_elf::ha68086dbc075a067+0x760>
ffffffff8001405b: f3 90                	pause
ffffffff8001405d: 0f b6 05 9c 6f 01 00 	movzx	eax, byte ptr [rip + 0x16f9c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014064: 84 c0                	test	al, al
ffffffff80014066: 75 f3                	jne	0xffffffff8001405b <taos::processes::loader::load_elf::ha68086dbc075a067+0x77b>
ffffffff80014068: eb d6                	jmp	0xffffffff80014040 <taos::processes::loader::load_elf::ha68086dbc075a067+0x760>
ffffffff8001406a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001406f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014076: 48 8b 74 24 48       	mov	rsi, qword ptr [rsp + 0x48]
ffffffff8001407b: e8 70 87 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014080: c6 05 79 6f 01 00 00 	mov	byte ptr [rip + 0x16f79], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014087: 83 bc 24 c0 00 00 00 02      	cmp	dword ptr [rsp + 0xc0], 0x2
ffffffff8001408f: 0f 94 c0             	sete	al
ffffffff80014092: 4d 85 ff             	test	r15, r15
ffffffff80014095: 0f 94 c1             	sete	cl
ffffffff80014098: 08 c1                	or	cl, al
ffffffff8001409a: 75 53                	jne	0xffffffff800140ef <taos::processes::loader::load_elf::ha68086dbc075a067+0x80f>
ffffffff8001409c: 49 c1 e7 04          	shl	r15, 0x4
ffffffff800140a0: b1 01                	mov	cl, 0x1
ffffffff800140a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff800140b0: 31 c0                	xor	eax, eax
ffffffff800140b2: f0                   	lock
ffffffff800140b3: 0f b0 0d 46 6f 01 00 	cmpxchg	byte ptr [rip + 0x16f46], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800140ba: 75 06                	jne	0xffffffff800140c2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7e2>
ffffffff800140bc: eb 11                	jmp	0xffffffff800140cf <taos::processes::loader::load_elf::ha68086dbc075a067+0x7ef>
ffffffff800140be: 66 90                	nop
ffffffff800140c0: f3 90                	pause
ffffffff800140c2: 0f b6 05 37 6f 01 00 	movzx	eax, byte ptr [rip + 0x16f37] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800140c9: 84 c0                	test	al, al
ffffffff800140cb: 75 f3                	jne	0xffffffff800140c0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7e0>
ffffffff800140cd: eb e1                	jmp	0xffffffff800140b0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7d0>
ffffffff800140cf: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800140d4: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800140db: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff800140e0: 4c 89 f9             	mov	rcx, r15
ffffffff800140e3: e8 08 87 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800140e8: c6 05 11 6f 01 00 00 	mov	byte ptr [rip + 0x16f11], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800140ef: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff800140f7: 48 85 c0             	test	rax, rax
ffffffff800140fa: 74 5b                	je	0xffffffff80014157 <taos::processes::loader::load_elf::ha68086dbc075a067+0x877>
ffffffff800140fc: 48 6b c8 38          	imul	rcx, rax, 0x38
ffffffff80014100: b2 01                	mov	dl, 0x1
ffffffff80014102: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80014110: 31 c0                	xor	eax, eax
ffffffff80014112: f0                   	lock
ffffffff80014113: 0f b0 15 e6 6e 01 00 	cmpxchg	byte ptr [rip + 0x16ee6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001411a: 74 1e                	je	0xffffffff8001413a <taos::processes::loader::load_elf::ha68086dbc075a067+0x85a>
ffffffff8001411c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80014120: 0f b6 05 d9 6e 01 00 	movzx	eax, byte ptr [rip + 0x16ed9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014127: 84 c0                	test	al, al
ffffffff80014129: 74 e5                	je	0xffffffff80014110 <taos::processes::loader::load_elf::ha68086dbc075a067+0x830>
ffffffff8001412b: f3 90                	pause
ffffffff8001412d: 0f b6 05 cc 6e 01 00 	movzx	eax, byte ptr [rip + 0x16ecc] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014134: 84 c0                	test	al, al
ffffffff80014136: 75 f3                	jne	0xffffffff8001412b <taos::processes::loader::load_elf::ha68086dbc075a067+0x84b>
ffffffff80014138: eb d6                	jmp	0xffffffff80014110 <taos::processes::loader::load_elf::ha68086dbc075a067+0x830>
ffffffff8001413a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001413f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014146: 48 8b 74 24 50       	mov	rsi, qword ptr [rsp + 0x50]
ffffffff8001414b: e8 a0 86 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014150: c6 05 a9 6e 01 00 00 	mov	byte ptr [rip + 0x16ea9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014157: 48 8b 8c 24 a0 00 00 00      	mov	rcx, qword ptr [rsp + 0xa0]
ffffffff8001415f: 48 85 c9             	test	rcx, rcx
ffffffff80014162: 74 53                	je	0xffffffff800141b7 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8d7>
ffffffff80014164: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff80014168: b2 01                	mov	dl, 0x1
ffffffff8001416a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80014170: 31 c0                	xor	eax, eax
ffffffff80014172: f0                   	lock
ffffffff80014173: 0f b0 15 86 6e 01 00 	cmpxchg	byte ptr [rip + 0x16e86], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001417a: 74 1e                	je	0xffffffff8001419a <taos::processes::loader::load_elf::ha68086dbc075a067+0x8ba>
ffffffff8001417c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80014180: 0f b6 05 79 6e 01 00 	movzx	eax, byte ptr [rip + 0x16e79] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014187: 84 c0                	test	al, al
ffffffff80014189: 74 e5                	je	0xffffffff80014170 <taos::processes::loader::load_elf::ha68086dbc075a067+0x890>
ffffffff8001418b: f3 90                	pause
ffffffff8001418d: 0f b6 05 6c 6e 01 00 	movzx	eax, byte ptr [rip + 0x16e6c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014194: 84 c0                	test	al, al
ffffffff80014196: 75 f3                	jne	0xffffffff8001418b <taos::processes::loader::load_elf::ha68086dbc075a067+0x8ab>
ffffffff80014198: eb d6                	jmp	0xffffffff80014170 <taos::processes::loader::load_elf::ha68086dbc075a067+0x890>
ffffffff8001419a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001419f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800141a6: 48 8b 74 24 58       	mov	rsi, qword ptr [rsp + 0x58]
ffffffff800141ab: e8 40 86 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800141b0: c6 05 49 6e 01 00 00 	mov	byte ptr [rip + 0x16e49], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800141b7: 48 8b 8c 24 a8 00 00 00      	mov	rcx, qword ptr [rsp + 0xa8]
ffffffff800141bf: 48 85 c9             	test	rcx, rcx
ffffffff800141c2: 74 53                	je	0xffffffff80014217 <taos::processes::loader::load_elf::ha68086dbc075a067+0x937>
ffffffff800141c4: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff800141c8: b2 01                	mov	dl, 0x1
ffffffff800141ca: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff800141d0: 31 c0                	xor	eax, eax
ffffffff800141d2: f0                   	lock
ffffffff800141d3: 0f b0 15 26 6e 01 00 	cmpxchg	byte ptr [rip + 0x16e26], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800141da: 74 1e                	je	0xffffffff800141fa <taos::processes::loader::load_elf::ha68086dbc075a067+0x91a>
ffffffff800141dc: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800141e0: 0f b6 05 19 6e 01 00 	movzx	eax, byte ptr [rip + 0x16e19] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800141e7: 84 c0                	test	al, al
ffffffff800141e9: 74 e5                	je	0xffffffff800141d0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8f0>
ffffffff800141eb: f3 90                	pause
ffffffff800141ed: 0f b6 05 0c 6e 01 00 	movzx	eax, byte ptr [rip + 0x16e0c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800141f4: 84 c0                	test	al, al
ffffffff800141f6: 75 f3                	jne	0xffffffff800141eb <taos::processes::loader::load_elf::ha68086dbc075a067+0x90b>
ffffffff800141f8: eb d6                	jmp	0xffffffff800141d0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8f0>
ffffffff800141fa: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800141ff: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014206: 48 8b 74 24 60       	mov	rsi, qword ptr [rsp + 0x60]
ffffffff8001420b: e8 e0 85 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014210: c6 05 e9 6d 01 00 00 	mov	byte ptr [rip + 0x16de9], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014217: 48 8b 8c 24 b0 00 00 00      	mov	rcx, qword ptr [rsp + 0xb0]
ffffffff8001421f: 48 85 c9             	test	rcx, rcx
ffffffff80014222: 74 53                	je	0xffffffff80014277 <taos::processes::loader::load_elf::ha68086dbc075a067+0x997>
ffffffff80014224: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff80014228: b2 01                	mov	dl, 0x1
ffffffff8001422a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80014230: 31 c0                	xor	eax, eax
ffffffff80014232: f0                   	lock
ffffffff80014233: 0f b0 15 c6 6d 01 00 	cmpxchg	byte ptr [rip + 0x16dc6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001423a: 74 1e                	je	0xffffffff8001425a <taos::processes::loader::load_elf::ha68086dbc075a067+0x97a>
ffffffff8001423c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80014240: 0f b6 05 b9 6d 01 00 	movzx	eax, byte ptr [rip + 0x16db9] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014247: 84 c0                	test	al, al
ffffffff80014249: 74 e5                	je	0xffffffff80014230 <taos::processes::loader::load_elf::ha68086dbc075a067+0x950>
ffffffff8001424b: f3 90                	pause
ffffffff8001424d: 0f b6 05 ac 6d 01 00 	movzx	eax, byte ptr [rip + 0x16dac] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014254: 84 c0                	test	al, al
ffffffff80014256: 75 f3                	jne	0xffffffff8001424b <taos::processes::loader::load_elf::ha68086dbc075a067+0x96b>
ffffffff80014258: eb d6                	jmp	0xffffffff80014230 <taos::processes::loader::load_elf::ha68086dbc075a067+0x950>
ffffffff8001425a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001425f: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014266: 48 8b 74 24 68       	mov	rsi, qword ptr [rsp + 0x68]
ffffffff8001426b: e8 80 85 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014270: c6 05 89 6d 01 00 00 	mov	byte ptr [rip + 0x16d89], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014277: 48 b8 00 20 00 00 00 70 00 00	movabs	rax, 0x700000002000
ffffffff80014281: 48 8b 94 24 b8 00 00 00      	mov	rdx, qword ptr [rsp + 0xb8]
ffffffff80014289: 48 81 c4 68 05 00 00 	add	rsp, 0x568
ffffffff80014290: 5b                   	pop	rbx
ffffffff80014291: 41 5c                	pop	r12
ffffffff80014293: 41 5d                	pop	r13
ffffffff80014295: 41 5e                	pop	r14
ffffffff80014297: 41 5f                	pop	r15
ffffffff80014299: 5d                   	pop	rbp
ffffffff8001429a: c3                   	ret
ffffffff8001429b: be 36 00 00 00       	mov	esi, 0x36
ffffffff800142a0: 48 c7 c7 b8 74 02 80 	mov	rdi, -0x7ffd8b48
ffffffff800142a7: 48 c7 c2 50 75 02 80 	mov	rdx, -0x7ffd8ab0
ffffffff800142ae: e8 3d ce 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800142b3: 48 c7 c7 60 76 02 80 	mov	rdi, -0x7ffd89a0
ffffffff800142ba: e8 81 d3 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800142bf: 48 89 f7             	mov	rdi, rsi
ffffffff800142c2: 48 89 c6             	mov	rsi, rax
ffffffff800142c5: 48 c7 c2 e8 76 02 80 	mov	rdx, -0x7ffd8918
ffffffff800142cc: e8 3f c9 00 00       	call	0xffffffff80020c10 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff800142d1: 48 89 c7             	mov	rdi, rax
ffffffff800142d4: 48 8b 34 24          	mov	rsi, qword ptr [rsp]
ffffffff800142d8: 48 c7 c2 e8 76 02 80 	mov	rdx, -0x7ffd8918
ffffffff800142df: e8 1c c9 00 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800142e4: 48 c7 84 24 38 01 00 00 28 3e 02 80  	mov	qword ptr [rsp + 0x138], -0x7ffdc1d8
ffffffff800142f0: 48 c7 84 24 40 01 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x140], 0x1
ffffffff800142fc: 48 c7 84 24 58 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x158], 0x0
ffffffff80014308: 48 c7 84 24 48 01 00 00 08 00 00 00  	mov	qword ptr [rsp + 0x148], 0x8
ffffffff80014314: 48 c7 84 24 50 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x150], 0x0
ffffffff80014320: 48 8d bc 24 38 01 00 00      	lea	rdi, [rsp + 0x138]
ffffffff80014328: 48 c7 c6 38 3e 02 80 	mov	rsi, -0x7ffdc1c8
ffffffff8001432f: e8 3c cd 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80014334: 48 8b 84 24 40 01 00 00      	mov	rax, qword ptr [rsp + 0x140]
ffffffff8001433c: 48 8b 8c 24 48 01 00 00      	mov	rcx, qword ptr [rsp + 0x148]
ffffffff80014344: 48 89 84 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rax
ffffffff8001434c: 48 89 8c 24 20 01 00 00      	mov	qword ptr [rsp + 0x120], rcx
ffffffff80014354: 48 8d 94 24 18 01 00 00      	lea	rdx, [rsp + 0x118]
ffffffff8001435c: be 1d 00 00 00       	mov	esi, 0x1d
ffffffff80014361: 48 c7 c7 20 77 02 80 	mov	rdi, -0x7ffd88e0
ffffffff80014368: 48 c7 c1 00 77 02 80 	mov	rcx, -0x7ffd8900
ffffffff8001436f: 49 c7 c0 40 77 02 80 	mov	r8, -0x7ffd88c0
ffffffff80014376: e8 e5 c7 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8001437b: 48 8b 84 24 58 01 00 00      	mov	rax, qword ptr [rsp + 0x158]
ffffffff80014383: 48 89 84 24 30 01 00 00      	mov	qword ptr [rsp + 0x130], rax
ffffffff8001438b: 48 8b 84 24 50 01 00 00      	mov	rax, qword ptr [rsp + 0x150]
ffffffff80014393: 48 89 84 24 28 01 00 00      	mov	qword ptr [rsp + 0x128], rax
ffffffff8001439b: 48 8b 84 24 40 01 00 00      	mov	rax, qword ptr [rsp + 0x140]
ffffffff800143a3: 48 8b 8c 24 48 01 00 00      	mov	rcx, qword ptr [rsp + 0x148]
ffffffff800143ab: 48 89 8c 24 20 01 00 00      	mov	qword ptr [rsp + 0x120], rcx
ffffffff800143b3: 48 89 84 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rax
ffffffff800143bb: 48 8d 94 24 18 01 00 00      	lea	rdx, [rsp + 0x118]
ffffffff800143c3: be 12 00 00 00       	mov	esi, 0x12
ffffffff800143c8: 48 c7 c7 78 77 02 80 	mov	rdi, -0x7ffd8888
ffffffff800143cf: 48 c7 c1 58 77 02 80 	mov	rcx, -0x7ffd88a8
ffffffff800143d6: 49 c7 c0 90 77 02 80 	mov	r8, -0x7ffd8870
ffffffff800143dd: e8 7e c7 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff800143e2: cc                   	int3
ffffffff800143e3: cc                   	int3
ffffffff800143e4: cc                   	int3
ffffffff800143e5: cc                   	int3
ffffffff800143e6: cc                   	int3
ffffffff800143e7: cc                   	int3
ffffffff800143e8: cc                   	int3
ffffffff800143e9: cc                   	int3
ffffffff800143ea: cc                   	int3
ffffffff800143eb: cc                   	int3
ffffffff800143ec: cc                   	int3
ffffffff800143ed: cc                   	int3
ffffffff800143ee: cc                   	int3
ffffffff800143ef: cc                   	int3

ffffffff800143f0 <<&T as core::fmt::Debug>::fmt::hc628756f65627099>:
ffffffff800143f0: 48 89 f2             	mov	rdx, rsi
ffffffff800143f3: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff800143f6: 48 8b 78 08          	mov	rdi, qword ptr [rax + 0x8]
ffffffff800143fa: 48 8b 70 10          	mov	rsi, qword ptr [rax + 0x10]
ffffffff800143fe: e9 8d ab 00 00       	jmp	0xffffffff8001ef90 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff80014403: cc                   	int3
ffffffff80014404: cc                   	int3
ffffffff80014405: cc                   	int3
ffffffff80014406: cc                   	int3
ffffffff80014407: cc                   	int3
ffffffff80014408: cc                   	int3
ffffffff80014409: cc                   	int3
ffffffff8001440a: cc                   	int3
ffffffff8001440b: cc                   	int3
ffffffff8001440c: cc                   	int3
ffffffff8001440d: cc                   	int3
ffffffff8001440e: cc                   	int3
ffffffff8001440f: cc                   	int3

ffffffff80014410 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8>:
ffffffff80014410: 55                   	push	rbp
ffffffff80014411: 41 57                	push	r15
ffffffff80014413: 41 56                	push	r14
ffffffff80014415: 41 55                	push	r13
ffffffff80014417: 41 54                	push	r12
ffffffff80014419: 53                   	push	rbx
ffffffff8001441a: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001441e: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff80014423: 49 89 d4             	mov	r12, rdx
ffffffff80014426: 45 31 ed             	xor	r13d, r13d
ffffffff80014429: b9 18 00 00 00       	mov	ecx, 0x18
ffffffff8001442e: 48 89 d0             	mov	rax, rdx
ffffffff80014431: 48 f7 e1             	mul	rcx
ffffffff80014434: 48 89 c5             	mov	rbp, rax
ffffffff80014437: 0f 80 28 03 00 00    	jo	0xffffffff80014765 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x355>
ffffffff8001443d: 49 be f8 ff ff ff ff ff ff 7f	movabs	r14, 0x7ffffffffffffff8
ffffffff80014447: 4c 39 f5             	cmp	rbp, r14
ffffffff8001444a: 0f 87 15 03 00 00    	ja	0xffffffff80014765 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x355>
ffffffff80014450: 49 89 f7             	mov	r15, rsi
ffffffff80014453: 48 89 fb             	mov	rbx, rdi
ffffffff80014456: 48 85 ed             	test	rbp, rbp
ffffffff80014459: 74 70                	je	0xffffffff800144cb <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0xbb>
ffffffff8001445b: 0f b6 05 7f 6d 01 00 	movzx	eax, byte ptr [rip + 0x16d7f] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80014462: b1 01                	mov	cl, 0x1
ffffffff80014464: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80014470: 31 c0                	xor	eax, eax
ffffffff80014472: f0                   	lock
ffffffff80014473: 0f b0 0d 86 6b 01 00 	cmpxchg	byte ptr [rip + 0x16b86], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001447a: 74 1e                	je	0xffffffff8001449a <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x8a>
ffffffff8001447c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80014480: 0f b6 05 79 6b 01 00 	movzx	eax, byte ptr [rip + 0x16b79] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014487: 84 c0                	test	al, al
ffffffff80014489: 74 e5                	je	0xffffffff80014470 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x60>
ffffffff8001448b: f3 90                	pause
ffffffff8001448d: 0f b6 05 6c 6b 01 00 	movzx	eax, byte ptr [rip + 0x16b6c] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014494: 84 c0                	test	al, al
ffffffff80014496: 75 f3                	jne	0xffffffff8001448b <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x7b>
ffffffff80014498: eb d6                	jmp	0xffffffff80014470 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x60>
ffffffff8001449a: 41 bd 08 00 00 00    	mov	r13d, 0x8
ffffffff800144a0: be 08 00 00 00       	mov	esi, 0x8
ffffffff800144a5: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff800144ac: 48 89 ea             	mov	rdx, rbp
ffffffff800144af: e8 9c 85 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800144b4: c6 05 45 6b 01 00 00 	mov	byte ptr [rip + 0x16b45], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800144bb: 48 85 c0             	test	rax, rax
ffffffff800144be: 0f 84 a1 02 00 00    	je	0xffffffff80014765 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x355>
ffffffff800144c4: 4c 89 64 24 18       	mov	qword ptr [rsp + 0x18], r12
ffffffff800144c9: eb 0e                	jmp	0xffffffff800144d9 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0xc9>
ffffffff800144cb: b8 08 00 00 00       	mov	eax, 0x8
ffffffff800144d0: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff800144d9: 49 83 fc 02          	cmp	r12, 0x2
ffffffff800144dd: 48 89 5c 24 20       	mov	qword ptr [rsp + 0x20], rbx
ffffffff800144e2: 4c 89 7c 24 10       	mov	qword ptr [rsp + 0x10], r15
ffffffff800144e7: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff800144eb: 0f 82 f0 00 00 00    	jb	0xffffffff800145e1 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x1d1>
ffffffff800144f1: 4c 89 64 24 08       	mov	qword ptr [rsp + 0x8], r12
ffffffff800144f6: 49 8b 47 10          	mov	rax, qword ptr [r15 + 0x10]
ffffffff800144fa: 48 8d 0c c5 00 00 00 00      	lea	rcx, [8*rax]
ffffffff80014502: 45 31 e4             	xor	r12d, r12d
ffffffff80014505: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001450a: 48 c1 e8 3d          	shr	rax, 0x3d
ffffffff8001450e: 0f 85 3f 02 00 00    	jne	0xffffffff80014753 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x343>
ffffffff80014514: 4c 39 f1             	cmp	rcx, r14
ffffffff80014517: 0f 87 36 02 00 00    	ja	0xffffffff80014753 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x343>
ffffffff8001451d: 48 85 c9             	test	rcx, rcx
ffffffff80014520: 0f 84 09 01 00 00    	je	0xffffffff8001462f <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x21f>
ffffffff80014526: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001452b: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff8001452f: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80014534: bd 01 00 00 00       	mov	ebp, 0x1
ffffffff80014539: 41 b5 01             	mov	r13b, 0x1
ffffffff8001453c: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff80014540: 0f b6 05 9a 6c 01 00 	movzx	eax, byte ptr [rip + 0x16c9a] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80014547: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80014550: 31 c0                	xor	eax, eax
ffffffff80014552: f0                   	lock
ffffffff80014553: 44 0f b0 2d a5 6a 01 00      	cmpxchg	byte ptr [rip + 0x16aa5], r13b # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001455b: 75 05                	jne	0xffffffff80014562 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x152>
ffffffff8001455d: eb 11                	jmp	0xffffffff80014570 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x160>
ffffffff8001455f: 90                   	nop
ffffffff80014560: f3 90                	pause
ffffffff80014562: 0f b6 05 97 6a 01 00 	movzx	eax, byte ptr [rip + 0x16a97] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014569: 84 c0                	test	al, al
ffffffff8001456b: 75 f3                	jne	0xffffffff80014560 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x150>
ffffffff8001456d: eb e1                	jmp	0xffffffff80014550 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x140>
ffffffff8001456f: 90                   	nop
ffffffff80014570: 41 bc 08 00 00 00    	mov	r12d, 0x8
ffffffff80014576: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001457b: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014582: 48 89 cb             	mov	rbx, rcx
ffffffff80014585: 48 89 ca             	mov	rdx, rcx
ffffffff80014588: e8 c3 84 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8001458d: 48 89 d9             	mov	rcx, rbx
ffffffff80014590: c6 05 69 6a 01 00 00 	mov	byte ptr [rip + 0x16a69], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014597: 48 85 c0             	test	rax, rax
ffffffff8001459a: 0f 84 b3 01 00 00    	je	0xffffffff80014753 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x343>
ffffffff800145a0: 49 89 c6             	mov	r14, rax
ffffffff800145a3: 48 ff c5             	inc	rbp
ffffffff800145a6: 48 89 c7             	mov	rdi, rax
ffffffff800145a9: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff800145ae: 48 89 da             	mov	rdx, rbx
ffffffff800145b1: ff 15 79 7e 02 00    	call	qword ptr [rip + 0x27e79] # 0xffffffff8003c430
ffffffff800145b7: 48 89 d9             	mov	rcx, rbx
ffffffff800145ba: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff800145bf: 49 89 07             	mov	qword ptr [r15], rax
ffffffff800145c2: 4d 89 77 08          	mov	qword ptr [r15 + 0x8], r14
ffffffff800145c6: 49 89 47 10          	mov	qword ptr [r15 + 0x10], rax
ffffffff800145ca: 49 83 c7 18          	add	r15, 0x18
ffffffff800145ce: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff800145d3: 4c 39 e5             	cmp	rbp, r12
ffffffff800145d6: 0f 85 64 ff ff ff    	jne	0xffffffff80014540 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x130>
ffffffff800145dc: e9 2f 01 00 00       	jmp	0xffffffff80014710 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x300>
ffffffff800145e1: 49 89 c7             	mov	r15, rax
ffffffff800145e4: 4d 85 e4             	test	r12, r12
ffffffff800145e7: 0f 85 23 01 00 00    	jne	0xffffffff80014710 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x300>
ffffffff800145ed: 48 8b 54 24 10       	mov	rdx, qword ptr [rsp + 0x10]
ffffffff800145f2: 48 8b 0a             	mov	rcx, qword ptr [rdx]
ffffffff800145f5: 48 85 c9             	test	rcx, rcx
ffffffff800145f8: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff800145fd: 0f 84 2d 01 00 00    	je	0xffffffff80014730 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x320>
ffffffff80014603: 48 89 c3             	mov	rbx, rax
ffffffff80014606: 48 8b 72 08          	mov	rsi, qword ptr [rdx + 0x8]
ffffffff8001460a: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8001460e: b2 01                	mov	dl, 0x1
ffffffff80014610: 31 c0                	xor	eax, eax
ffffffff80014612: f0                   	lock
ffffffff80014613: 0f b0 15 e6 69 01 00 	cmpxchg	byte ptr [rip + 0x169e6], dl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001461a: 75 06                	jne	0xffffffff80014622 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x212>
ffffffff8001461c: eb 34                	jmp	0xffffffff80014652 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x242>
ffffffff8001461e: 66 90                	nop
ffffffff80014620: f3 90                	pause
ffffffff80014622: 0f b6 05 d7 69 01 00 	movzx	eax, byte ptr [rip + 0x169d7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014629: 84 c0                	test	al, al
ffffffff8001462b: 75 f3                	jne	0xffffffff80014620 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x210>
ffffffff8001462d: eb e1                	jmp	0xffffffff80014610 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x200>
ffffffff8001462f: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff80014634: 49 8d 4c 24 ff       	lea	rcx, [r12 - 0x1]
ffffffff80014639: 49 8d 54 24 fe       	lea	rdx, [r12 - 0x2]
ffffffff8001463e: 89 c8                	mov	eax, ecx
ffffffff80014640: 83 e0 03             	and	eax, 0x3
ffffffff80014643: 48 83 fa 03          	cmp	rdx, 0x3
ffffffff80014647: 73 29                	jae	0xffffffff80014672 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x262>
ffffffff80014649: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff8001464d: e9 97 00 00 00       	jmp	0xffffffff800146e9 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x2d9>
ffffffff80014652: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80014657: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff8001465e: e8 8d 81 ff ff       	call	0xffffffff8000c7f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80014663: c6 05 96 69 01 00 00 	mov	byte ptr [rip + 0x16996], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001466a: 48 89 d8             	mov	rax, rbx
ffffffff8001466d: e9 be 00 00 00       	jmp	0xffffffff80014730 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x320>
ffffffff80014672: 48 83 e1 fc          	and	rcx, -0x4
ffffffff80014676: 4c 8b 3c 24          	mov	r15, qword ptr [rsp]
ffffffff8001467a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80014680: 49 c7 07 00 00 00 00 	mov	qword ptr [r15], 0x0
ffffffff80014687: 49 c7 47 08 08 00 00 00      	mov	qword ptr [r15 + 0x8], 0x8
ffffffff8001468f: 49 c7 47 10 00 00 00 00      	mov	qword ptr [r15 + 0x10], 0x0
ffffffff80014697: 49 c7 47 18 00 00 00 00      	mov	qword ptr [r15 + 0x18], 0x0
ffffffff8001469f: 49 c7 47 20 08 00 00 00      	mov	qword ptr [r15 + 0x20], 0x8
ffffffff800146a7: 49 c7 47 28 00 00 00 00      	mov	qword ptr [r15 + 0x28], 0x0
ffffffff800146af: 49 c7 47 30 00 00 00 00      	mov	qword ptr [r15 + 0x30], 0x0
ffffffff800146b7: 49 c7 47 38 08 00 00 00      	mov	qword ptr [r15 + 0x38], 0x8
ffffffff800146bf: 49 c7 47 40 00 00 00 00      	mov	qword ptr [r15 + 0x40], 0x0
ffffffff800146c7: 49 c7 47 48 00 00 00 00      	mov	qword ptr [r15 + 0x48], 0x0
ffffffff800146cf: 49 c7 47 50 08 00 00 00      	mov	qword ptr [r15 + 0x50], 0x8
ffffffff800146d7: 49 c7 47 58 00 00 00 00      	mov	qword ptr [r15 + 0x58], 0x0
ffffffff800146df: 49 83 c7 60          	add	r15, 0x60
ffffffff800146e3: 48 83 c1 fc          	add	rcx, -0x4
ffffffff800146e7: 75 97                	jne	0xffffffff80014680 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x270>
ffffffff800146e9: 48 85 c0             	test	rax, rax
ffffffff800146ec: 74 22                	je	0xffffffff80014710 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x300>
ffffffff800146ee: 66 90                	nop
ffffffff800146f0: 49 c7 07 00 00 00 00 	mov	qword ptr [r15], 0x0
ffffffff800146f7: 49 c7 47 08 08 00 00 00      	mov	qword ptr [r15 + 0x8], 0x8
ffffffff800146ff: 49 c7 47 10 00 00 00 00      	mov	qword ptr [r15 + 0x10], 0x0
ffffffff80014707: 49 83 c7 18          	add	r15, 0x18
ffffffff8001470b: 48 ff c8             	dec	rax
ffffffff8001470e: 75 e0                	jne	0xffffffff800146f0 <<T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem::h27b0f65fdcc9c8a8+0x2e0>
ffffffff80014710: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80014715: 48 8b 41 10          	mov	rax, qword ptr [rcx + 0x10]
ffffffff80014719: 49 89 47 10          	mov	qword ptr [r15 + 0x10], rax
ffffffff8001471d: 48 8b 01             	mov	rax, qword ptr [rcx]
ffffffff80014720: 48 8b 49 08          	mov	rcx, qword ptr [rcx + 0x8]
ffffffff80014724: 49 89 4f 08          	mov	qword ptr [r15 + 0x8], rcx
ffffffff80014728: 49 89 07             	mov	qword ptr [r15], rax
ffffffff8001472b: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80014730: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff80014735: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff80014738: 48 8b 0c 24          	mov	rcx, qword ptr [rsp]
ffffffff8001473c: 48 89 48 08          	mov	qword ptr [rax + 0x8], rcx
ffffffff80014740: 4c 89 60 10          	mov	qword ptr [rax + 0x10], r12
ffffffff80014744: 48 83 c4 38          	add	rsp, 0x38
ffffffff80014748: 5b                   	pop	rbx
ffffffff80014749: 41 5c                	pop	r12
ffffffff8001474b: 41 5d                	pop	r13
ffffffff8001474d: 41 5e                	pop	r14
ffffffff8001474f: 41 5f                	pop	r15
ffffffff80014751: 5d                   	pop	rbp
ffffffff80014752: c3                   	ret
ffffffff80014753: 4c 89 e7             	mov	rdi, r12
ffffffff80014756: 48 89 ce             	mov	rsi, rcx
ffffffff80014759: 48 c7 c2 20 78 02 80 	mov	rdx, -0x7ffd87e0
ffffffff80014760: e8 32 8f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80014765: 4c 89 ef             	mov	rdi, r13
ffffffff80014768: 48 89 ee             	mov	rsi, rbp
ffffffff8001476b: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80014770: e8 22 8f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80014775: cc                   	int3
ffffffff80014776: cc                   	int3
ffffffff80014777: cc                   	int3
ffffffff80014778: cc                   	int3
ffffffff80014779: cc                   	int3
ffffffff8001477a: cc                   	int3
ffffffff8001477b: cc                   	int3
ffffffff8001477c: cc                   	int3
ffffffff8001477d: cc                   	int3
ffffffff8001477e: cc                   	int3
ffffffff8001477f: cc                   	int3

ffffffff80014780 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff>:
ffffffff80014780: 55                   	push	rbp
ffffffff80014781: 41 57                	push	r15
ffffffff80014783: 41 56                	push	r14
ffffffff80014785: 41 55                	push	r13
ffffffff80014787: 41 54                	push	r12
ffffffff80014789: 53                   	push	rbx
ffffffff8001478a: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8001478e: 4c 8b 7e 10          	mov	r15, qword ptr [rsi + 0x10]
ffffffff80014792: 45 31 ed             	xor	r13d, r13d
ffffffff80014795: b9 38 00 00 00       	mov	ecx, 0x38
ffffffff8001479a: 4c 89 f8             	mov	rax, r15
ffffffff8001479d: 48 f7 e1             	mul	rcx
ffffffff800147a0: 49 89 c4             	mov	r12, rax
ffffffff800147a3: 0f 80 24 02 00 00    	jo	0xffffffff800149cd <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x24d>
ffffffff800147a9: 48 b8 f8 ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffff8
ffffffff800147b3: 49 39 c4             	cmp	r12, rax
ffffffff800147b6: 0f 87 11 02 00 00    	ja	0xffffffff800149cd <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x24d>
ffffffff800147bc: 48 89 fb             	mov	rbx, rdi
ffffffff800147bf: 4d 85 e4             	test	r12, r12
ffffffff800147c2: 0f 84 bb 01 00 00    	je	0xffffffff80014983 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x203>
ffffffff800147c8: 4c 8b 76 08          	mov	r14, qword ptr [rsi + 0x8]
ffffffff800147cc: 0f b6 05 0e 6a 01 00 	movzx	eax, byte ptr [rip + 0x16a0e] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800147d3: b1 01                	mov	cl, 0x1
ffffffff800147d5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800147e0: 31 c0                	xor	eax, eax
ffffffff800147e2: f0                   	lock
ffffffff800147e3: 0f b0 0d 16 68 01 00 	cmpxchg	byte ptr [rip + 0x16816], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800147ea: 75 06                	jne	0xffffffff800147f2 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x72>
ffffffff800147ec: eb 11                	jmp	0xffffffff800147ff <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x7f>
ffffffff800147ee: 66 90                	nop
ffffffff800147f0: f3 90                	pause
ffffffff800147f2: 0f b6 05 07 68 01 00 	movzx	eax, byte ptr [rip + 0x16807] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff800147f9: 84 c0                	test	al, al
ffffffff800147fb: 75 f3                	jne	0xffffffff800147f0 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x70>
ffffffff800147fd: eb e1                	jmp	0xffffffff800147e0 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x60>
ffffffff800147ff: 41 bd 08 00 00 00    	mov	r13d, 0x8
ffffffff80014805: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001480a: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014811: 4c 89 e2             	mov	rdx, r12
ffffffff80014814: e8 37 82 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80014819: c6 05 e0 67 01 00 00 	mov	byte ptr [rip + 0x167e0], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014820: 48 85 c0             	test	rax, rax
ffffffff80014823: 0f 84 a4 01 00 00    	je	0xffffffff800149cd <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x24d>
ffffffff80014829: 4d 85 ff             	test	r15, r15
ffffffff8001482c: 0f 84 56 01 00 00    	je	0xffffffff80014988 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x208>
ffffffff80014832: 48 89 5c 24 10       	mov	qword ptr [rsp + 0x10], rbx
ffffffff80014837: 49 6b cf 38          	imul	rcx, r15, 0x38
ffffffff8001483b: 4c 01 f1             	add	rcx, r14
ffffffff8001483e: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff80014843: 4c 89 7c 24 08       	mov	qword ptr [rsp + 0x8], r15
ffffffff80014848: 4c 89 fb             	mov	rbx, r15
ffffffff8001484b: 31 ed                	xor	ebp, ebp
ffffffff8001484d: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80014852: eb 6d                	jmp	0xffffffff800148c1 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x141>
ffffffff80014854: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80014860: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff80014866: 49 83 c6 38          	add	r14, 0x38
ffffffff8001486a: 4c 6b fd 38          	imul	r15, rbp, 0x38
ffffffff8001486e: 48 ff c5             	inc	rbp
ffffffff80014871: 4c 89 ef             	mov	rdi, r13
ffffffff80014874: 4c 89 e2             	mov	rdx, r12
ffffffff80014877: ff 15 b3 7b 02 00    	call	qword ptr [rip + 0x27bb3] # 0xffffffff8003c430
ffffffff8001487d: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80014882: 4e 89 24 38          	mov	qword ptr [rax + r15], r12
ffffffff80014886: 4e 89 6c 38 08       	mov	qword ptr [rax + r15 + 0x8], r13
ffffffff8001488b: 4e 89 64 38 10       	mov	qword ptr [rax + r15 + 0x10], r12
ffffffff80014890: 48 8b 4c 24 40       	mov	rcx, qword ptr [rsp + 0x40]
ffffffff80014895: 4a 89 4c 38 18       	mov	qword ptr [rax + r15 + 0x18], rcx
ffffffff8001489a: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff8001489f: 4a 89 4c 38 20       	mov	qword ptr [rax + r15 + 0x20], rcx
ffffffff800148a4: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff800148a9: 4a 89 4c 38 28       	mov	qword ptr [rax + r15 + 0x28], rcx
ffffffff800148ae: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff800148b3: 4a 89 4c 38 30       	mov	qword ptr [rax + r15 + 0x30], rcx
ffffffff800148b8: 48 85 db             	test	rbx, rbx
ffffffff800148bb: 0f 84 b6 00 00 00    	je	0xffffffff80014977 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1f7>
ffffffff800148c1: 4c 3b 74 24 20       	cmp	r14, qword ptr [rsp + 0x20]
ffffffff800148c6: 0f 84 ab 00 00 00    	je	0xffffffff80014977 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1f7>
ffffffff800148cc: 48 ff cb             	dec	rbx
ffffffff800148cf: 4d 8b 66 10          	mov	r12, qword ptr [r14 + 0x10]
ffffffff800148d3: 4d 85 e4             	test	r12, r12
ffffffff800148d6: 0f 88 c9 00 00 00    	js	0xffffffff800149a5 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x225>
ffffffff800148dc: 49 8b 4e 18          	mov	rcx, qword ptr [r14 + 0x18]
ffffffff800148e0: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff800148e4: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800148e9: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff800148ed: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800148f2: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff800148f6: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800148fb: 49 8b 76 08          	mov	rsi, qword ptr [r14 + 0x8]
ffffffff800148ff: 48 89 4c 24 40       	mov	qword ptr [rsp + 0x40], rcx
ffffffff80014904: 0f 84 56 ff ff ff    	je	0xffffffff80014860 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0xe0>
ffffffff8001490a: 0f b6 05 d0 68 01 00 	movzx	eax, byte ptr [rip + 0x168d0] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80014911: 31 c0                	xor	eax, eax
ffffffff80014913: b1 01                	mov	cl, 0x1
ffffffff80014915: f0                   	lock
ffffffff80014916: 0f b0 0d e3 66 01 00 	cmpxchg	byte ptr [rip + 0x166e3], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff8001491d: 75 13                	jne	0xffffffff80014932 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1b2>
ffffffff8001491f: eb 28                	jmp	0xffffffff80014949 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1c9>
ffffffff80014921: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff80014930: f3 90                	pause
ffffffff80014932: 0f b6 05 c7 66 01 00 	movzx	eax, byte ptr [rip + 0x166c7] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014939: 84 c0                	test	al, al
ffffffff8001493b: 75 f3                	jne	0xffffffff80014930 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1b0>
ffffffff8001493d: 31 c0                	xor	eax, eax
ffffffff8001493f: f0                   	lock
ffffffff80014940: 0f b0 0d b9 66 01 00 	cmpxchg	byte ptr [rip + 0x166b9], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014947: 75 e9                	jne	0xffffffff80014932 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x1b2>
ffffffff80014949: 49 89 f7             	mov	r15, rsi
ffffffff8001494c: be 01 00 00 00       	mov	esi, 0x1
ffffffff80014951: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014958: 4c 89 e2             	mov	rdx, r12
ffffffff8001495b: e8 f0 80 ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80014960: c6 05 99 66 01 00 00 	mov	byte ptr [rip + 0x16699], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014967: 48 85 c0             	test	rax, rax
ffffffff8001496a: 74 4a                	je	0xffffffff800149b6 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x236>
ffffffff8001496c: 49 89 c5             	mov	r13, rax
ffffffff8001496f: 4c 89 fe             	mov	rsi, r15
ffffffff80014972: e9 ef fe ff ff       	jmp	0xffffffff80014866 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0xe6>
ffffffff80014977: 48 8b 5c 24 10       	mov	rbx, qword ptr [rsp + 0x10]
ffffffff8001497c: 4c 8b 7c 24 08       	mov	r15, qword ptr [rsp + 0x8]
ffffffff80014981: eb 05                	jmp	0xffffffff80014988 <<alloc::vec::Vec<T,A> as core::clone::Clone>::clone::h7726d5246d70bfff+0x208>
ffffffff80014983: b8 08 00 00 00       	mov	eax, 0x8
ffffffff80014988: 4c 89 3b             	mov	qword ptr [rbx], r15
ffffffff8001498b: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001498f: 4c 89 7b 10          	mov	qword ptr [rbx + 0x10], r15
ffffffff80014993: 48 89 d8             	mov	rax, rbx
ffffffff80014996: 48 83 c4 48          	add	rsp, 0x48
ffffffff8001499a: 5b                   	pop	rbx
ffffffff8001499b: 41 5c                	pop	r12
ffffffff8001499d: 41 5d                	pop	r13
ffffffff8001499f: 41 5e                	pop	r14
ffffffff800149a1: 41 5f                	pop	r15
ffffffff800149a3: 5d                   	pop	rbp
ffffffff800149a4: c3                   	ret
ffffffff800149a5: 31 ff                	xor	edi, edi
ffffffff800149a7: 4c 89 ee             	mov	rsi, r13
ffffffff800149aa: 48 c7 c2 20 78 02 80 	mov	rdx, -0x7ffd87e0
ffffffff800149b1: e8 e1 8c 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800149b6: bf 01 00 00 00       	mov	edi, 0x1
ffffffff800149bb: 4d 89 e5             	mov	r13, r12
ffffffff800149be: 4c 89 ee             	mov	rsi, r13
ffffffff800149c1: 48 c7 c2 20 78 02 80 	mov	rdx, -0x7ffd87e0
ffffffff800149c8: e8 ca 8c 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800149cd: 4c 89 ef             	mov	rdi, r13
ffffffff800149d0: 4c 89 e6             	mov	rsi, r12
ffffffff800149d3: 48 c7 c2 38 78 02 80 	mov	rdx, -0x7ffd87c8
ffffffff800149da: e8 b8 8c 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800149df: cc                   	int3

ffffffff800149e0 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c>:
ffffffff800149e0: 55                   	push	rbp
ffffffff800149e1: 41 57                	push	r15
ffffffff800149e3: 41 56                	push	r14
ffffffff800149e5: 41 55                	push	r13
ffffffff800149e7: 41 54                	push	r12
ffffffff800149e9: 53                   	push	rbx
ffffffff800149ea: 48 83 ec 18          	sub	rsp, 0x18
ffffffff800149ee: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff800149f3: 4c 8b 3e             	mov	r15, qword ptr [rsi]
ffffffff800149f6: 48 8b 6e 08          	mov	rbp, qword ptr [rsi + 0x8]
ffffffff800149fa: 45 31 ed             	xor	r13d, r13d
ffffffff800149fd: 49 89 ee             	mov	r14, rbp
ffffffff80014a00: 4d 29 fe             	sub	r14, r15
ffffffff80014a03: 4d 0f 42 f5          	cmovb	r14, r13
ffffffff80014a07: 4e 8d 24 f5 00 00 00 00      	lea	r12, [8*r14]
ffffffff80014a0f: 4c 89 f0             	mov	rax, r14
ffffffff80014a12: 48 c1 e8 3d          	shr	rax, 0x3d
ffffffff80014a16: 0f 85 08 01 00 00    	jne	0xffffffff80014b24 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x144>
ffffffff80014a1c: 48 b8 f8 ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffff8
ffffffff80014a26: 49 39 c4             	cmp	r12, rax
ffffffff80014a29: 0f 87 f5 00 00 00    	ja	0xffffffff80014b24 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x144>
ffffffff80014a2f: 48 89 fb             	mov	rbx, rdi
ffffffff80014a32: 4d 85 e4             	test	r12, r12
ffffffff80014a35: 0f 84 a5 00 00 00    	je	0xffffffff80014ae0 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x100>
ffffffff80014a3b: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff80014a40: 0f b6 05 9a 67 01 00 	movzx	eax, byte ptr [rip + 0x1679a] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80014a47: b1 01                	mov	cl, 0x1
ffffffff80014a49: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80014a50: 31 c0                	xor	eax, eax
ffffffff80014a52: f0                   	lock
ffffffff80014a53: 0f b0 0d a6 65 01 00 	cmpxchg	byte ptr [rip + 0x165a6], cl # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014a5a: 75 06                	jne	0xffffffff80014a62 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x82>
ffffffff80014a5c: eb 11                	jmp	0xffffffff80014a6f <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x8f>
ffffffff80014a5e: 66 90                	nop
ffffffff80014a60: f3 90                	pause
ffffffff80014a62: 0f b6 05 97 65 01 00 	movzx	eax, byte ptr [rip + 0x16597] # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014a69: 84 c0                	test	al, al
ffffffff80014a6b: 75 f3                	jne	0xffffffff80014a60 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x80>
ffffffff80014a6d: eb e1                	jmp	0xffffffff80014a50 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x70>
ffffffff80014a6f: 41 bd 08 00 00 00    	mov	r13d, 0x8
ffffffff80014a75: be 08 00 00 00       	mov	esi, 0x8
ffffffff80014a7a: 48 c7 c7 08 b0 02 80 	mov	rdi, -0x7ffd4ff8
ffffffff80014a81: 4c 89 e2             	mov	rdx, r12
ffffffff80014a84: e8 c7 7f ff ff       	call	0xffffffff8000ca50 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80014a89: c6 05 70 65 01 00 00 	mov	byte ptr [rip + 0x16570], 0x0 # 0xffffffff8002b000 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.4796390557109910071>
ffffffff80014a90: 48 85 c0             	test	rax, rax
ffffffff80014a93: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff80014a98: 0f 84 86 00 00 00    	je	0xffffffff80014b24 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x144>
ffffffff80014a9e: 4c 29 fd             	sub	rbp, r15
ffffffff80014aa1: 76 4a                	jbe	0xffffffff80014aed <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x10d>
ffffffff80014aa3: 48 ba 00 f0 ff ff ff ff 0f 00	movabs	rdx, 0xffffffffff000
ffffffff80014aad: 49 c1 e7 0c          	shl	r15, 0xc
ffffffff80014ab1: 4c 03 7e 10          	add	r15, qword ptr [rsi + 0x10]
ffffffff80014ab5: 31 c9                	xor	ecx, ecx
ffffffff80014ab7: 48 8d b2 00 10 00 00 	lea	rsi, [rdx + 0x1000]
ffffffff80014abe: 66 90                	nop
ffffffff80014ac0: 49 39 f7             	cmp	r15, rsi
ffffffff80014ac3: 73 47                	jae	0xffffffff80014b0c <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x12c>
ffffffff80014ac5: 4c 89 ff             	mov	rdi, r15
ffffffff80014ac8: 48 21 d7             	and	rdi, rdx
ffffffff80014acb: 48 89 3c c8          	mov	qword ptr [rax + 8*rcx], rdi
ffffffff80014acf: 48 ff c1             	inc	rcx
ffffffff80014ad2: 49 81 c7 00 10 00 00 	add	r15, 0x1000
ffffffff80014ad9: 48 39 cd             	cmp	rbp, rcx
ffffffff80014adc: 75 e2                	jne	0xffffffff80014ac0 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0xe0>
ffffffff80014ade: eb 0f                	jmp	0xffffffff80014aef <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0x10f>
ffffffff80014ae0: b8 08 00 00 00       	mov	eax, 0x8
ffffffff80014ae5: 45 31 f6             	xor	r14d, r14d
ffffffff80014ae8: 4c 29 fd             	sub	rbp, r15
ffffffff80014aeb: 77 b6                	ja	0xffffffff80014aa3 <<alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter::hb0fbc7ef398c8b3c+0xc3>
ffffffff80014aed: 31 c9                	xor	ecx, ecx
ffffffff80014aef: 4c 89 33             	mov	qword ptr [rbx], r14
ffffffff80014af2: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff80014af6: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff80014afa: 48 89 d8             	mov	rax, rbx
ffffffff80014afd: 48 83 c4 18          	add	rsp, 0x18
ffffffff80014b01: 5b                   	pop	rbx
ffffffff80014b02: 41 5c                	pop	r12
ffffffff80014b04: 41 5d                	pop	r13
ffffffff80014b06: 41 5e                	pop	r14
ffffffff80014b08: 41 5f                	pop	r15
ffffffff80014b0a: 5d                   	pop	rbp
ffffffff80014b0b: c3                   	ret
ffffffff80014b0c: be 43 00 00 00       	mov	esi, 0x43
ffffffff80014b11: 48 c7 c7 50 79 02 80 	mov	rdi, -0x7ffd86b0
ffffffff80014b18: 48 c7 c2 f0 79 02 80 	mov	rdx, -0x7ffd8610
ffffffff80014b1f: e8 cc c5 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80014b24: 4c 89 ef             	mov	rdi, r13
ffffffff80014b27: 4c 89 e6             	mov	rsi, r12
ffffffff80014b2a: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80014b2f: e8 63 8b 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80014b34: cc                   	int3
ffffffff80014b35: cc                   	int3
ffffffff80014b36: cc                   	int3
ffffffff80014b37: cc                   	int3
ffffffff80014b38: cc                   	int3
ffffffff80014b39: cc                   	int3
ffffffff80014b3a: cc                   	int3
ffffffff80014b3b: cc                   	int3
ffffffff80014b3c: cc                   	int3
ffffffff80014b3d: cc                   	int3
ffffffff80014b3e: cc                   	int3
ffffffff80014b3f: cc                   	int3

ffffffff80014b40 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444>:
ffffffff80014b40: 41 56                	push	r14
ffffffff80014b42: 53                   	push	rbx
ffffffff80014b43: 50                   	push	rax
ffffffff80014b44: 4c 8b 46 20          	mov	r8, qword ptr [rsi + 0x20]
ffffffff80014b48: 4c 8b 4e 28          	mov	r9, qword ptr [rsi + 0x28]
ffffffff80014b4c: 4d 39 c1             	cmp	r9, r8
ffffffff80014b4f: 75 07                	jne	0xffffffff80014b58 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x18>
ffffffff80014b51: 31 c0                	xor	eax, eax
ffffffff80014b53: e9 cf 00 00 00       	jmp	0xffffffff80014c27 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0xe7>
ffffffff80014b58: 48 8b 4e 30          	mov	rcx, qword ptr [rsi + 0x30]
ffffffff80014b5c: 49 39 c8             	cmp	r8, rcx
ffffffff80014b5f: 76 44                	jbe	0xffffffff80014ba5 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x65>
ffffffff80014b61: 4c 8b 1e             	mov	r11, qword ptr [rsi]
ffffffff80014b64: 48 8b 46 08          	mov	rax, qword ptr [rsi + 0x8]
ffffffff80014b68: 45 31 d2             	xor	r10d, r10d
ffffffff80014b6b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80014b70: 48 89 ca             	mov	rdx, rcx
ffffffff80014b73: 48 c1 ea 06          	shr	rdx, 0x6
ffffffff80014b77: 48 39 c2             	cmp	rdx, rax
ffffffff80014b7a: 0f 83 cd 00 00 00    	jae	0xffffffff80014c4d <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x10d>
ffffffff80014b80: bb 01 00 00 00       	mov	ebx, 0x1
ffffffff80014b85: 48 d3 e3             	shl	rbx, cl
ffffffff80014b88: 4d 8b 34 d3          	mov	r14, qword ptr [r11 + 8*rdx]
ffffffff80014b8c: 49 0f a3 ce          	bt	r14, rcx
ffffffff80014b90: 73 2b                	jae	0xffffffff80014bbd <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x7d>
ffffffff80014b92: 48 ff c1             	inc	rcx
ffffffff80014b95: 4c 39 c1             	cmp	rcx, r8
ffffffff80014b98: 49 0f 44 ca          	cmove	rcx, r10
ffffffff80014b9c: 48 89 4e 30          	mov	qword ptr [rsi + 0x30], rcx
ffffffff80014ba0: 49 39 c8             	cmp	r8, rcx
ffffffff80014ba3: 77 cb                	ja	0xffffffff80014b70 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x30>
ffffffff80014ba5: be 31 00 00 00       	mov	esi, 0x31
ffffffff80014baa: 48 c7 c7 74 78 02 80 	mov	rdi, -0x7ffd878c
ffffffff80014bb1: 48 c7 c2 20 79 02 80 	mov	rdx, -0x7ffd86e0
ffffffff80014bb8: e8 33 c5 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80014bbd: 49 ba ff ff ff ff ff ff 0f 00	movabs	r10, 0xfffffffffffff
ffffffff80014bc7: 49 09 de             	or	r14, rbx
ffffffff80014bca: 4d 89 34 d3          	mov	qword ptr [r11 + 8*rdx], r14
ffffffff80014bce: 49 ff c9             	dec	r9
ffffffff80014bd1: 4c 89 4e 28          	mov	qword ptr [rsi + 0x28], r9
ffffffff80014bd5: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff80014bd9: 49 89 c9             	mov	r9, rcx
ffffffff80014bdc: 49 c1 e1 0c          	shl	r9, 0xc
ffffffff80014be0: 48 89 c2             	mov	rdx, rax
ffffffff80014be3: 4c 09 c2             	or	rdx, r8
ffffffff80014be6: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff80014bea: 74 07                	je	0xffffffff80014bf3 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0xb3>
ffffffff80014bec: 31 d2                	xor	edx, edx
ffffffff80014bee: 49 f7 f0             	div	r8
ffffffff80014bf1: eb 05                	jmp	0xffffffff80014bf8 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0xb8>
ffffffff80014bf3: 31 d2                	xor	edx, edx
ffffffff80014bf5: 41 f7 f0             	div	r8d
ffffffff80014bf8: 48 89 56 30          	mov	qword ptr [rsi + 0x30], rdx
ffffffff80014bfc: 48 ff 46 38          	inc	qword ptr [rsi + 0x38]
ffffffff80014c00: 49 8d 42 01          	lea	rax, [r10 + 0x1]
ffffffff80014c04: 49 39 c1             	cmp	r9, rax
ffffffff80014c07: 73 2c                	jae	0xffffffff80014c35 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0xf5>
ffffffff80014c09: 4c 21 d1             	and	rcx, r10
ffffffff80014c0c: 48 8b 46 18          	mov	rax, qword ptr [rsi + 0x18]
ffffffff80014c10: 48 39 c1             	cmp	rcx, rax
ffffffff80014c13: 73 4a                	jae	0xffffffff80014c5f <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444+0x11f>
ffffffff80014c15: 48 8b 46 10          	mov	rax, qword ptr [rsi + 0x10]
ffffffff80014c19: 66 f0 ff 04 48       	lock		inc	word ptr [rax + 2*rcx]
ffffffff80014c1e: 4c 89 4f 08          	mov	qword ptr [rdi + 0x8], r9
ffffffff80014c22: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80014c27: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014c2a: 48 89 f8             	mov	rax, rdi
ffffffff80014c2d: 48 83 c4 08          	add	rsp, 0x8
ffffffff80014c31: 5b                   	pop	rbx
ffffffff80014c32: 41 5e                	pop	r14
ffffffff80014c34: c3                   	ret
ffffffff80014c35: be 43 00 00 00       	mov	esi, 0x43
ffffffff80014c3a: 48 c7 c7 50 79 02 80 	mov	rdi, -0x7ffd86b0
ffffffff80014c41: 48 c7 c2 f0 79 02 80 	mov	rdx, -0x7ffd8610
ffffffff80014c48: e8 a3 c4 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80014c4d: 48 89 d7             	mov	rdi, rdx
ffffffff80014c50: 48 89 c6             	mov	rsi, rax
ffffffff80014c53: 48 c7 c2 38 79 02 80 	mov	rdx, -0x7ffd86c8
ffffffff80014c5a: e8 32 c5 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80014c5f: 48 89 cf             	mov	rdi, rcx
ffffffff80014c62: 48 89 c6             	mov	rsi, rax
ffffffff80014c65: 48 c7 c2 08 7a 02 80 	mov	rdx, -0x7ffd85f8
ffffffff80014c6c: e8 20 c5 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80014c71: cc                   	int3
ffffffff80014c72: cc                   	int3
ffffffff80014c73: cc                   	int3
ffffffff80014c74: cc                   	int3
ffffffff80014c75: cc                   	int3
ffffffff80014c76: cc                   	int3
ffffffff80014c77: cc                   	int3
ffffffff80014c78: cc                   	int3
ffffffff80014c79: cc                   	int3
ffffffff80014c7a: cc                   	int3
ffffffff80014c7b: cc                   	int3
ffffffff80014c7c: cc                   	int3
ffffffff80014c7d: cc                   	int3
ffffffff80014c7e: cc                   	int3
ffffffff80014c7f: cc                   	int3

ffffffff80014c80 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543>:
ffffffff80014c80: 48 83 ec 38          	sub	rsp, 0x38
ffffffff80014c84: 48 ff 47 40          	inc	qword ptr [rdi + 0x40]
ffffffff80014c88: 48 89 f0             	mov	rax, rsi
ffffffff80014c8b: 48 c1 e8 0c          	shr	rax, 0xc
ffffffff80014c8f: 48 8b 4f 18          	mov	rcx, qword ptr [rdi + 0x18]
ffffffff80014c93: 48 39 c8             	cmp	rax, rcx
ffffffff80014c96: 73 5f                	jae	0xffffffff80014cf7 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543+0x77>
ffffffff80014c98: 48 8b 4f 10          	mov	rcx, qword ptr [rdi + 0x10]
ffffffff80014c9c: 66 f0 ff 0c 41       	lock		dec	word ptr [rcx + 2*rax]
ffffffff80014ca1: 0f b7 0c 41          	movzx	ecx, word ptr [rcx + 2*rax]
ffffffff80014ca5: 66 85 c9             	test	cx, cx
ffffffff80014ca8: 74 05                	je	0xffffffff80014caf <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543+0x2f>
ffffffff80014caa: 48 83 c4 38          	add	rsp, 0x38
ffffffff80014cae: c3                   	ret
ffffffff80014caf: 48 39 47 20          	cmp	qword ptr [rdi + 0x20], rax
ffffffff80014cb3: 76 2a                	jbe	0xffffffff80014cdf <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543+0x5f>
ffffffff80014cb5: 48 c1 ee 12          	shr	rsi, 0x12
ffffffff80014cb9: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80014cbd: 48 39 ce             	cmp	rsi, rcx
ffffffff80014cc0: 73 47                	jae	0xffffffff80014d09 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543+0x89>
ffffffff80014cc2: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff80014cc5: 48 8b 14 f1          	mov	rdx, qword ptr [rcx + 8*rsi]
ffffffff80014cc9: 48 85 d2             	test	rdx, rdx
ffffffff80014ccc: 74 4d                	je	0xffffffff80014d1b <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543+0x9b>
ffffffff80014cce: 48 0f b3 c2          	btr	rdx, rax
ffffffff80014cd2: 48 89 14 f1          	mov	qword ptr [rcx + 8*rsi], rdx
ffffffff80014cd6: 48 ff 47 28          	inc	qword ptr [rdi + 0x28]
ffffffff80014cda: 48 83 c4 38          	add	rsp, 0x38
ffffffff80014cde: c3                   	ret
ffffffff80014cdf: be 31 00 00 00       	mov	esi, 0x31
ffffffff80014ce4: 48 c7 c7 74 78 02 80 	mov	rdi, -0x7ffd878c
ffffffff80014ceb: 48 c7 c2 a8 78 02 80 	mov	rdx, -0x7ffd8758
ffffffff80014cf2: e8 f9 c3 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80014cf7: 48 89 c7             	mov	rdi, rax
ffffffff80014cfa: 48 89 ce             	mov	rsi, rcx
ffffffff80014cfd: 48 c7 c2 20 7a 02 80 	mov	rdx, -0x7ffd85e0
ffffffff80014d04: e8 88 c4 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80014d09: 48 89 f7             	mov	rdi, rsi
ffffffff80014d0c: 48 89 ce             	mov	rsi, rcx
ffffffff80014d0f: 48 c7 c2 c0 78 02 80 	mov	rdx, -0x7ffd8740
ffffffff80014d16: e8 76 c4 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80014d1b: 48 c7 44 24 08 f8 78 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd8708
ffffffff80014d24: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff80014d2d: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80014d36: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff80014d3f: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80014d48: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80014d4d: 48 c7 c6 08 79 02 80 	mov	rsi, -0x7ffd86f8
ffffffff80014d54: e8 17 c3 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80014d59: cc                   	int3
ffffffff80014d5a: cc                   	int3
ffffffff80014d5b: cc                   	int3
ffffffff80014d5c: cc                   	int3
ffffffff80014d5d: cc                   	int3
ffffffff80014d5e: cc                   	int3
ffffffff80014d5f: cc                   	int3

ffffffff80014d60 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06>:
ffffffff80014d60: 48 8b 4f 20          	mov	rcx, qword ptr [rdi + 0x20]
ffffffff80014d64: 48 39 f1             	cmp	rcx, rsi
ffffffff80014d67: 76 74                	jbe	0xffffffff80014ddd <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x7d>
ffffffff80014d69: 48 89 f0             	mov	rax, rsi
ffffffff80014d6c: 48 f7 d0             	not	rax
ffffffff80014d6f: 48 01 c1             	add	rcx, rax
ffffffff80014d72: 48 89 4f 20          	mov	qword ptr [rdi + 0x20], rcx
ffffffff80014d76: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80014d79: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff80014d7d: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff80014d81: 48 85 d2             	test	rdx, rdx
ffffffff80014d84: 0f 84 aa 00 00 00    	je	0xffffffff80014e34 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xd4>
ffffffff80014d8a: 49 89 f0             	mov	r8, rsi
ffffffff80014d8d: 49 f7 d8             	neg	r8
ffffffff80014d90: 48 8d 14 c2          	lea	rdx, [rdx + 8*rax]
ffffffff80014d94: 45 31 c9             	xor	r9d, r9d
ffffffff80014d97: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80014da0: 48 39 c8             	cmp	rax, rcx
ffffffff80014da3: 0f 83 af 00 00 00    	jae	0xffffffff80014e58 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf8>
ffffffff80014da9: 48 ff c0             	inc	rax
ffffffff80014dac: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014daf: 49 ff c9             	dec	r9
ffffffff80014db2: 48 83 c2 08          	add	rdx, 0x8
ffffffff80014db6: 4d 39 c8             	cmp	r8, r9
ffffffff80014db9: 75 e5                	jne	0xffffffff80014da0 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x40>
ffffffff80014dbb: 48 39 c8             	cmp	rax, rcx
ffffffff80014dbe: 0f 83 94 00 00 00    	jae	0xffffffff80014e58 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf8>
ffffffff80014dc4: 48 ff c0             	inc	rax
ffffffff80014dc7: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014dca: 48 8b 4f 18          	mov	rcx, qword ptr [rdi + 0x18]
ffffffff80014dce: 48 8d 04 31          	lea	rax, [rcx + rsi]
ffffffff80014dd2: 48 01 f1             	add	rcx, rsi
ffffffff80014dd5: 48 ff c1             	inc	rcx
ffffffff80014dd8: 48 89 4f 18          	mov	qword ptr [rdi + 0x18], rcx
ffffffff80014ddc: c3                   	ret
ffffffff80014ddd: 48 85 c9             	test	rcx, rcx
ffffffff80014de0: 74 76                	je	0xffffffff80014e58 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf8>
ffffffff80014de2: 48 8d 71 ff          	lea	rsi, [rcx - 0x1]
ffffffff80014de6: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff80014de9: 48 8b 57 08          	mov	rdx, qword ptr [rdi + 0x8]
ffffffff80014ded: 48 83 7f 10 00       	cmp	qword ptr [rdi + 0x10], 0x0
ffffffff80014df2: 74 4e                	je	0xffffffff80014e42 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xe2>
ffffffff80014df4: 48 85 f6             	test	rsi, rsi
ffffffff80014df7: 74 2a                	je	0xffffffff80014e23 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xc3>
ffffffff80014df9: be 01 00 00 00       	mov	esi, 0x1
ffffffff80014dfe: 48 29 ce             	sub	rsi, rcx
ffffffff80014e01: 45 31 c0             	xor	r8d, r8d
ffffffff80014e04: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80014e10: 48 39 d0             	cmp	rax, rdx
ffffffff80014e13: 73 3b                	jae	0xffffffff80014e50 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf0>
ffffffff80014e15: 48 ff c0             	inc	rax
ffffffff80014e18: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014e1b: 49 ff c8             	dec	r8
ffffffff80014e1e: 4c 39 c6             	cmp	rsi, r8
ffffffff80014e21: 75 ed                	jne	0xffffffff80014e10 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xb0>
ffffffff80014e23: 48 39 d0             	cmp	rax, rdx
ffffffff80014e26: 73 28                	jae	0xffffffff80014e50 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf0>
ffffffff80014e28: 48 ff c0             	inc	rax
ffffffff80014e2b: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014e2e: 48 01 4f 18          	add	qword ptr [rdi + 0x18], rcx
ffffffff80014e32: eb 1c                	jmp	0xffffffff80014e50 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf0>
ffffffff80014e34: 48 39 c8             	cmp	rax, rcx
ffffffff80014e37: 73 1f                	jae	0xffffffff80014e58 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf8>
ffffffff80014e39: 48 ff c0             	inc	rax
ffffffff80014e3c: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014e3f: 31 d2                	xor	edx, edx
ffffffff80014e41: c3                   	ret
ffffffff80014e42: 48 85 f6             	test	rsi, rsi
ffffffff80014e45: 48 39 d0             	cmp	rax, rdx
ffffffff80014e48: 73 06                	jae	0xffffffff80014e50 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xf0>
ffffffff80014e4a: 48 ff c0             	inc	rax
ffffffff80014e4d: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80014e50: 48 c7 47 20 00 00 00 00      	mov	qword ptr [rdi + 0x20], 0x0
ffffffff80014e58: 31 d2                	xor	edx, edx
ffffffff80014e5a: c3                   	ret
ffffffff80014e5b: cc                   	int3
ffffffff80014e5c: cc                   	int3
ffffffff80014e5d: cc                   	int3
ffffffff80014e5e: cc                   	int3
ffffffff80014e5f: cc                   	int3

ffffffff80014e60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5>:
ffffffff80014e60: 55                   	push	rbp
ffffffff80014e61: 41 57                	push	r15
ffffffff80014e63: 41 56                	push	r14
ffffffff80014e65: 41 55                	push	r13
ffffffff80014e67: 41 54                	push	r12
ffffffff80014e69: 53                   	push	rbx
ffffffff80014e6a: 48 83 ec 78          	sub	rsp, 0x78
ffffffff80014e6e: 4c 89 44 24 08       	mov	qword ptr [rsp + 0x8], r8
ffffffff80014e73: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff80014e78: 4c 8b 21             	mov	r12, qword ptr [rcx]
ffffffff80014e7b: 4c 8b 71 08          	mov	r14, qword ptr [rcx + 0x8]
ffffffff80014e7f: 4d 39 f4             	cmp	r12, r14
ffffffff80014e82: 76 11                	jbe	0xffffffff80014e95 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x35>
ffffffff80014e84: 31 c0                	xor	eax, eax
ffffffff80014e86: 48 83 c4 78          	add	rsp, 0x78
ffffffff80014e8a: 5b                   	pop	rbx
ffffffff80014e8b: 41 5c                	pop	r12
ffffffff80014e8d: 41 5d                	pop	r13
ffffffff80014e8f: 41 5e                	pop	r14
ffffffff80014e91: 41 5f                	pop	r15
ffffffff80014e93: 5d                   	pop	rbp
ffffffff80014e94: c3                   	ret
ffffffff80014e95: 48 89 fb             	mov	rbx, rdi
ffffffff80014e98: 0f b6 d2             	movzx	edx, dl
ffffffff80014e9b: 8d 04 d2             	lea	eax, [rdx + 8*rdx]
ffffffff80014e9e: 8d 48 0c             	lea	ecx, [rax + 0xc]
ffffffff80014ea1: 4d 89 e7             	mov	r15, r12
ffffffff80014ea4: 49 d3 ef             	shr	r15, cl
ffffffff80014ea7: 49 d3 e7             	shl	r15, cl
ffffffff80014eaa: 4c 89 e6             	mov	rsi, r12
ffffffff80014ead: 48 c1 ee 0c          	shr	rsi, 0xc
ffffffff80014eb1: 8d 48 37             	lea	ecx, [rax + 0x37]
ffffffff80014eb4: 48 d3 ee             	shr	rsi, cl
ffffffff80014eb7: 4c 89 f7             	mov	rdi, r14
ffffffff80014eba: 48 c1 ef 0c          	shr	rdi, 0xc
ffffffff80014ebe: 48 d3 ef             	shr	rdi, cl
ffffffff80014ec1: ff ca                	dec	edx
ffffffff80014ec3: ff 24 d5 38 7a 02 80 	jmp	qword ptr [8*rdx - 0x7ffd85c8]
ffffffff80014eca: b2 01                	mov	dl, 0x1
ffffffff80014ecc: eb 06                	jmp	0xffffffff80014ed4 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x74>
ffffffff80014ece: b2 02                	mov	dl, 0x2
ffffffff80014ed0: eb 02                	jmp	0xffffffff80014ed4 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x74>
ffffffff80014ed2: b2 03                	mov	dl, 0x3
ffffffff80014ed4: 49 c1 e7 10          	shl	r15, 0x10
ffffffff80014ed8: 49 c1 ff 10          	sar	r15, 0x10
ffffffff80014edc: 81 e6 ff 01 00 00    	and	esi, 0x1ff
ffffffff80014ee2: 81 e7 ff 01 00 00    	and	edi, 0x1ff
ffffffff80014ee8: 04 03                	add	al, 0x3
ffffffff80014eea: 0f b6 c8             	movzx	ecx, al
ffffffff80014eed: 48 ff c7             	inc	rdi
ffffffff80014ef0: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80014ef9: 48 c7 44 24 30 00 02 00 00   	mov	qword ptr [rsp + 0x30], 0x200
ffffffff80014f02: 48 89 5c 24 38       	mov	qword ptr [rsp + 0x38], rbx
ffffffff80014f07: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff80014f10: 48 89 7c 24 48       	mov	qword ptr [rsp + 0x48], rdi
ffffffff80014f15: 48 c7 c0 ff ff ff ff 	mov	rax, -0x1
ffffffff80014f1c: 48 89 4c 24 70       	mov	qword ptr [rsp + 0x70], rcx
ffffffff80014f21: 48 d3 e0             	shl	rax, cl
ffffffff80014f24: 48 89 74 24 50       	mov	qword ptr [rsp + 0x50], rsi
ffffffff80014f29: 48 f7 d0             	not	rax
ffffffff80014f2c: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff80014f31: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80014f36: 48 83 c0 08          	add	rax, 0x8
ffffffff80014f3a: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80014f3f: 0f b6 c2             	movzx	eax, dl
ffffffff80014f42: 89 44 24 14          	mov	dword ptr [rsp + 0x14], eax
ffffffff80014f46: 48 85 f6             	test	rsi, rsi
ffffffff80014f49: 0f 84 e1 01 00 00    	je	0xffffffff80015130 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2d0>
ffffffff80014f4f: e9 b0 01 00 00       	jmp	0xffffffff80015104 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2a4>
ffffffff80014f54: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80014f60: 48 ff c8             	dec	rax
ffffffff80014f63: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80014f68: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff80014f6d: 48 3b 44 24 30       	cmp	rax, qword ptr [rsp + 0x30]
ffffffff80014f72: 0f 83 c6 01 00 00    	jae	0xffffffff8001513e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2de>
ffffffff80014f78: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff80014f7c: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80014f81: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff80014f86: 48 85 c9             	test	rcx, rcx
ffffffff80014f89: 0f 84 af 01 00 00    	je	0xffffffff8001513e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2de>
ffffffff80014f8f: 4c 8d 2c c1          	lea	r13, [rcx + 8*rax]
ffffffff80014f93: 48 8b 6c 24 40       	mov	rbp, qword ptr [rsp + 0x40]
ffffffff80014f98: 48 8d 45 01          	lea	rax, [rbp + 0x1]
ffffffff80014f9c: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff80014fa1: 49 8b 75 00          	mov	rsi, qword ptr [r13]
ffffffff80014fa5: 89 f0                	mov	eax, esi
ffffffff80014fa7: 25 81 00 00 00       	and	eax, 0x81
ffffffff80014fac: 83 f8 01             	cmp	eax, 0x1
ffffffff80014faf: 0f 85 2b 01 00 00    	jne	0xffffffff800150e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x280>
ffffffff80014fb5: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff80014fbf: 48 21 c6             	and	rsi, rax
ffffffff80014fc2: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff80014fc7: e8 44 7c 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80014fcc: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff80014fd1: 48 d3 e5             	shl	rbp, cl
ffffffff80014fd4: 48 be 00 00 00 00 00 00 01 00	movabs	rsi, 0x1000000000000
ffffffff80014fde: 48 39 f5             	cmp	rbp, rsi
ffffffff80014fe1: 0f 87 a1 01 00 00    	ja	0xffffffff80015188 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x328>
ffffffff80014fe7: 4c 01 fd             	add	rbp, r15
ffffffff80014fea: 0f 82 98 01 00 00    	jb	0xffffffff80015188 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x328>
ffffffff80014ff0: 48 89 e9             	mov	rcx, rbp
ffffffff80014ff3: 48 c1 e9 2f          	shr	rcx, 0x2f
ffffffff80014ff7: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff80014ffb: 74 13                	je	0xffffffff80015010 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x1b0>
ffffffff80014ffd: 83 f9 02             	cmp	ecx, 0x2
ffffffff80015000: 75 1b                	jne	0xffffffff8001501d <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x1bd>
ffffffff80015002: e9 81 01 00 00       	jmp	0xffffffff80015188 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x328>
ffffffff80015007: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80015010: 48 b9 00 00 00 00 00 80 ff ff	movabs	rcx, -0x800000000000
ffffffff8001501a: 48 09 cd             	or	rbp, rcx
ffffffff8001501d: 48 8b 4c 24 68       	mov	rcx, qword ptr [rsp + 0x68]
ffffffff80015022: 48 01 e9             	add	rcx, rbp
ffffffff80015025: 48 ba 00 00 00 00 00 80 00 00	movabs	rdx, 0x800000000000
ffffffff8001502f: 48 01 ca             	add	rdx, rcx
ffffffff80015032: 48 39 f2             	cmp	rdx, rsi
ffffffff80015035: 0f 83 59 01 00 00    	jae	0xffffffff80015194 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x334>
ffffffff8001503b: 48 c1 e5 10          	shl	rbp, 0x10
ffffffff8001503f: 48 c1 fd 10          	sar	rbp, 0x10
ffffffff80015043: 48 81 e5 00 f0 ff ff 	and	rbp, -0x1000
ffffffff8001504a: 49 39 ec             	cmp	r12, rbp
ffffffff8001504d: 49 0f 47 ec          	cmova	rbp, r12
ffffffff80015051: 48 81 e1 00 f0 ff ff 	and	rcx, -0x1000
ffffffff80015058: 49 39 ce             	cmp	r14, rcx
ffffffff8001505b: 49 0f 42 ce          	cmovb	rcx, r14
ffffffff8001505f: 48 89 6c 24 58       	mov	qword ptr [rsp + 0x58], rbp
ffffffff80015064: 48 89 4c 24 60       	mov	qword ptr [rsp + 0x60], rcx
ffffffff80015069: 48 89 c7             	mov	rdi, rax
ffffffff8001506c: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff80015071: 8b 54 24 14          	mov	edx, dword ptr [rsp + 0x14]
ffffffff80015075: 48 8d 4c 24 58       	lea	rcx, [rsp + 0x58]
ffffffff8001507a: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff8001507f: e8 dc fd ff ff       	call	0xffffffff80014e60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5>
ffffffff80015084: 84 c0                	test	al, al
ffffffff80015086: 74 58                	je	0xffffffff800150e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x280>
ffffffff80015088: 49 8b 75 00          	mov	rsi, qword ptr [r13]
ffffffff8001508c: 40 f6 c6 01          	test	sil, 0x1
ffffffff80015090: 0f 84 1a 01 00 00    	je	0xffffffff800151b0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x350>
ffffffff80015096: 40 84 f6             	test	sil, sil
ffffffff80015099: 0f 88 0d 01 00 00    	js	0xffffffff800151ac <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x34c>
ffffffff8001509f: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff800150a9: 48 21 c6             	and	rsi, rax
ffffffff800150ac: 49 c7 45 00 00 00 00 00      	mov	qword ptr [r13], 0x0
ffffffff800150b4: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff800150b9: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff800150bc: 48 83 f8 01          	cmp	rax, 0x1
ffffffff800150c0: 74 2e                	je	0xffffffff800150f0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x290>
ffffffff800150c2: 83 f8 02             	cmp	eax, 0x2
ffffffff800150c5: 0f 85 0f 01 00 00    	jne	0xffffffff800151da <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x37a>
ffffffff800150cb: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff800150d0: e8 db 47 ff ff       	call	0xffffffff800098b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h3f44213f73906f40>
ffffffff800150d5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff800150e0: 48 8b 74 24 50       	mov	rsi, qword ptr [rsp + 0x50]
ffffffff800150e5: 48 85 f6             	test	rsi, rsi
ffffffff800150e8: 74 46                	je	0xffffffff80015130 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2d0>
ffffffff800150ea: eb 18                	jmp	0xffffffff80015104 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2a4>
ffffffff800150ec: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800150f0: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff800150f5: e8 86 fb ff ff       	call	0xffffffff80014c80 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::ha4e9c3e8e4f77543>
ffffffff800150fa: 48 8b 74 24 50       	mov	rsi, qword ptr [rsp + 0x50]
ffffffff800150ff: 48 85 f6             	test	rsi, rsi
ffffffff80015102: 74 2c                	je	0xffffffff80015130 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2d0>
ffffffff80015104: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff8001510d: 48 8d 7c 24 28       	lea	rdi, [rsp + 0x28]
ffffffff80015112: e8 49 fc ff ff       	call	0xffffffff80014d60 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06>
ffffffff80015117: 48 85 d2             	test	rdx, rdx
ffffffff8001511a: 74 22                	je	0xffffffff8001513e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2de>
ffffffff8001511c: 48 89 c5             	mov	rbp, rax
ffffffff8001511f: 49 89 d5             	mov	r13, rdx
ffffffff80015122: e9 7a fe ff ff       	jmp	0xffffffff80014fa1 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x141>
ffffffff80015127: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff80015130: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80015135: 48 85 c0             	test	rax, rax
ffffffff80015138: 0f 85 22 fe ff ff    	jne	0xffffffff80014f60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x100>
ffffffff8001513e: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff80015143: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80015150: 48 83 7c cb f0 00    	cmp	qword ptr [rbx + 8*rcx - 0x10], 0x0
ffffffff80015156: 0f 85 28 fd ff ff    	jne	0xffffffff80014e84 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x24>
ffffffff8001515c: 48 83 7c cb f8 00    	cmp	qword ptr [rbx + 8*rcx - 0x8], 0x0
ffffffff80015162: 0f 85 1c fd ff ff    	jne	0xffffffff80014e84 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x24>
ffffffff80015168: 48 81 f9 00 02 00 00 	cmp	rcx, 0x200
ffffffff8001516f: 0f 94 c0             	sete	al
ffffffff80015172: 0f 84 0e fd ff ff    	je	0xffffffff80014e86 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x26>
ffffffff80015178: 48 83 3c cb 00       	cmp	qword ptr [rbx + 8*rcx], 0x0
ffffffff8001517d: 48 8d 49 03          	lea	rcx, [rcx + 0x3]
ffffffff80015181: 74 cd                	je	0xffffffff80015150 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x2f0>
ffffffff80015183: e9 fe fc ff ff       	jmp	0xffffffff80014e86 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x26>
ffffffff80015188: 48 c7 c7 e0 7a 02 80 	mov	rdi, -0x7ffd8520
ffffffff8001518f: e8 ac c4 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80015194: be 36 00 00 00       	mov	esi, 0x36
ffffffff80015199: 48 c7 c7 f8 7a 02 80 	mov	rdi, -0x7ffd8508
ffffffff800151a0: 48 c7 c2 90 7b 02 80 	mov	rdx, -0x7ffd8470
ffffffff800151a7: e8 44 bf 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800151ac: b0 01                	mov	al, 0x1
ffffffff800151ae: eb 02                	jmp	0xffffffff800151b2 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::h53377371e30d23d5+0x352>
ffffffff800151b0: 31 c0                	xor	eax, eax
ffffffff800151b2: 88 44 24 58          	mov	byte ptr [rsp + 0x58], al
ffffffff800151b6: 48 8d 54 24 58       	lea	rdx, [rsp + 0x58]
ffffffff800151bb: be 2b 00 00 00       	mov	esi, 0x2b
ffffffff800151c0: 48 c7 c7 c8 7b 02 80 	mov	rdi, -0x7ffd8438
ffffffff800151c7: 48 c7 c1 a8 7b 02 80 	mov	rcx, -0x7ffd8458
ffffffff800151ce: 49 c7 c0 f8 7b 02 80 	mov	r8, -0x7ffd8408
ffffffff800151d5: e8 86 b9 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff800151da: e8 51 09 00 00       	call	0xffffffff80015b30 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>
ffffffff800151df: cc                   	int3

ffffffff800151e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>:
ffffffff800151e0: 41 57                	push	r15
ffffffff800151e2: 41 56                	push	r14
ffffffff800151e4: 41 55                	push	r13
ffffffff800151e6: 41 54                	push	r12
ffffffff800151e8: 53                   	push	rbx
ffffffff800151e9: 49 89 f7             	mov	r15, rsi
ffffffff800151ec: 48 89 fb             	mov	rbx, rdi
ffffffff800151ef: 48 89 d0             	mov	rax, rdx
ffffffff800151f2: 48 c1 e8 27          	shr	rax, 0x27
ffffffff800151f6: 25 ff 01 00 00       	and	eax, 0x1ff
ffffffff800151fb: 48 8b 0e             	mov	rcx, qword ptr [rsi]
ffffffff800151fe: 48 8b 34 c1          	mov	rsi, qword ptr [rcx + 8*rax]
ffffffff80015202: 40 f6 c6 01          	test	sil, 0x1
ffffffff80015206: 74 3d                	je	0xffffffff80015245 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff80015208: 40 84 f6             	test	sil, sil
ffffffff8001520b: 0f 88 27 01 00 00    	js	0xffffffff80015338 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x158>
ffffffff80015211: 49 89 d6             	mov	r14, rdx
ffffffff80015214: 49 83 c7 08          	add	r15, 0x8
ffffffff80015218: 49 89 d5             	mov	r13, rdx
ffffffff8001521b: 49 c1 ed 1e          	shr	r13, 0x1e
ffffffff8001521f: 49 bc 00 f0 ff ff ff ff 0f 00	movabs	r12, 0xffffffffff000
ffffffff80015229: 4c 21 e6             	and	rsi, r12
ffffffff8001522c: 4c 89 ff             	mov	rdi, r15
ffffffff8001522f: e8 dc 79 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80015234: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff8001523b: 4a 8b 34 e8          	mov	rsi, qword ptr [rax + 8*r13]
ffffffff8001523f: 40 f6 c6 01          	test	sil, 0x1
ffffffff80015243: 75 14                	jne	0xffffffff80015259 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x79>
ffffffff80015245: 48 c7 03 03 00 00 00 	mov	qword ptr [rbx], 0x3
ffffffff8001524c: 48 89 d8             	mov	rax, rbx
ffffffff8001524f: 5b                   	pop	rbx
ffffffff80015250: 41 5c                	pop	r12
ffffffff80015252: 41 5d                	pop	r13
ffffffff80015254: 41 5e                	pop	r14
ffffffff80015256: 41 5f                	pop	r15
ffffffff80015258: c3                   	ret
ffffffff80015259: 40 84 f6             	test	sil, sil
ffffffff8001525c: 78 7d                	js	0xffffffff800152db <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0xfb>
ffffffff8001525e: 4d 89 f5             	mov	r13, r14
ffffffff80015261: 49 c1 ed 15          	shr	r13, 0x15
ffffffff80015265: 4c 21 e6             	and	rsi, r12
ffffffff80015268: 4c 89 ff             	mov	rdi, r15
ffffffff8001526b: e8 a0 79 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80015270: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff80015277: 4a 8b 34 e8          	mov	rsi, qword ptr [rax + 8*r13]
ffffffff8001527b: 40 f6 c6 01          	test	sil, 0x1
ffffffff8001527f: 74 c4                	je	0xffffffff80015245 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff80015281: 40 84 f6             	test	sil, sil
ffffffff80015284: 0f 88 87 00 00 00    	js	0xffffffff80015311 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x131>
ffffffff8001528a: 4d 89 f5             	mov	r13, r14
ffffffff8001528d: 49 c1 ed 0c          	shr	r13, 0xc
ffffffff80015291: 4c 21 e6             	and	rsi, r12
ffffffff80015294: 4c 89 ff             	mov	rdi, r15
ffffffff80015297: e8 74 79 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8001529c: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff800152a3: 4a 8b 04 e8          	mov	rax, qword ptr [rax + 8*r13]
ffffffff800152a7: 48 85 c0             	test	rax, rax
ffffffff800152aa: 74 99                	je	0xffffffff80015245 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff800152ac: 49 21 c4             	and	r12, rax
ffffffff800152af: 41 81 e6 ff 0f 00 00 	and	r14d, 0xfff
ffffffff800152b6: 48 b9 ff 0f 00 00 00 00 f0 ff	movabs	rcx, -0xffffffffff001
ffffffff800152c0: 48 21 c1             	and	rcx, rax
ffffffff800152c3: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff800152ca: 4c 89 63 08          	mov	qword ptr [rbx + 0x8], r12
ffffffff800152ce: 4c 89 73 10          	mov	qword ptr [rbx + 0x10], r14
ffffffff800152d2: 48 89 4b 18          	mov	qword ptr [rbx + 0x18], rcx
ffffffff800152d6: e9 71 ff ff ff       	jmp	0xffffffff8001524c <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x6c>
ffffffff800152db: 49 81 c4 00 10 00 c0 	add	r12, -0x3ffff000
ffffffff800152e2: 49 21 f4             	and	r12, rsi
ffffffff800152e5: 41 81 e6 ff ff ff 3f 	and	r14d, 0x3fffffff
ffffffff800152ec: 48 b8 ff 0f 00 00 00 00 f0 ff	movabs	rax, -0xffffffffff001
ffffffff800152f6: 48 21 f0             	and	rax, rsi
ffffffff800152f9: 48 c7 03 02 00 00 00 	mov	qword ptr [rbx], 0x2
ffffffff80015300: 4c 89 63 08          	mov	qword ptr [rbx + 0x8], r12
ffffffff80015304: 4c 89 73 10          	mov	qword ptr [rbx + 0x10], r14
ffffffff80015308: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001530c: e9 3b ff ff ff       	jmp	0xffffffff8001524c <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x6c>
ffffffff80015311: 49 81 c4 00 10 e0 ff 	add	r12, -0x1ff000
ffffffff80015318: 49 21 f4             	and	r12, rsi
ffffffff8001531b: 41 81 e6 ff ff 1f 00 	and	r14d, 0x1fffff
ffffffff80015322: 48 b8 ff 0f 00 00 00 00 f0 ff	movabs	rax, -0xffffffffff001
ffffffff8001532c: 48 21 f0             	and	rax, rsi
ffffffff8001532f: 48 c7 03 01 00 00 00 	mov	qword ptr [rbx], 0x1
ffffffff80015336: eb c8                	jmp	0xffffffff80015300 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x120>
ffffffff80015338: be 23 00 00 00       	mov	esi, 0x23
ffffffff8001533d: 48 c7 c7 70 7c 02 80 	mov	rdi, -0x7ffd8390
ffffffff80015344: 48 c7 c2 98 7c 02 80 	mov	rdx, -0x7ffd8368
ffffffff8001534b: e8 a0 bd 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>

ffffffff80015350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>:
ffffffff80015350: 55                   	push	rbp
ffffffff80015351: 41 57                	push	r15
ffffffff80015353: 41 56                	push	r14
ffffffff80015355: 41 55                	push	r13
ffffffff80015357: 41 54                	push	r12
ffffffff80015359: 53                   	push	rbx
ffffffff8001535a: 50                   	push	rax
ffffffff8001535b: 48 89 f8             	mov	rax, rdi
ffffffff8001535e: 48 89 d7             	mov	rdi, rdx
ffffffff80015361: 48 c1 ef 27          	shr	rdi, 0x27
ffffffff80015365: 81 e7 ff 01 00 00    	and	edi, 0x1ff
ffffffff8001536b: 4c 8b 06             	mov	r8, qword ptr [rsi]
ffffffff8001536e: 4d 8b 04 f8          	mov	r8, qword ptr [r8 + 8*rdi]
ffffffff80015372: 41 f6 c0 01          	test	r8b, 0x1
ffffffff80015376: 75 04                	jne	0xffffffff8001537c <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x2c>
ffffffff80015378: 31 ff                	xor	edi, edi
ffffffff8001537a: eb 4e                	jmp	0xffffffff800153ca <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x7a>
ffffffff8001537c: 40 b7 01             	mov	dil, 0x1
ffffffff8001537f: 45 84 c0             	test	r8b, r8b
ffffffff80015382: 78 46                	js	0xffffffff800153ca <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x7a>
ffffffff80015384: 49 89 cf             	mov	r15, rcx
ffffffff80015387: 49 89 c6             	mov	r14, rax
ffffffff8001538a: 48 83 c6 08          	add	rsi, 0x8
ffffffff8001538e: 49 89 d4             	mov	r12, rdx
ffffffff80015391: 48 89 d5             	mov	rbp, rdx
ffffffff80015394: 48 c1 ed 1e          	shr	rbp, 0x1e
ffffffff80015398: 49 bd 00 f0 ff ff ff ff 0f 00	movabs	r13, 0xffffffffff000
ffffffff800153a2: 4d 21 e8             	and	r8, r13
ffffffff800153a5: 48 89 f3             	mov	rbx, rsi
ffffffff800153a8: 48 89 f7             	mov	rdi, rsi
ffffffff800153ab: 4c 89 c6             	mov	rsi, r8
ffffffff800153ae: e8 5d 78 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff800153b3: 81 e5 ff 01 00 00    	and	ebp, 0x1ff
ffffffff800153b9: 48 8b 34 e8          	mov	rsi, qword ptr [rax + 8*rbp]
ffffffff800153bd: 40 f6 c6 01          	test	sil, 0x1
ffffffff800153c1: 75 0d                	jne	0xffffffff800153d0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x80>
ffffffff800153c3: 31 c9                	xor	ecx, ecx
ffffffff800153c5: 4c 89 f0             	mov	rax, r14
ffffffff800153c8: eb 74                	jmp	0xffffffff8001543e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff800153ca: 40 88 78 01          	mov	byte ptr [rax + 0x1], dil
ffffffff800153ce: eb 71                	jmp	0xffffffff80015441 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf1>
ffffffff800153d0: b1 01                	mov	cl, 0x1
ffffffff800153d2: 40 84 f6             	test	sil, sil
ffffffff800153d5: 4c 89 f0             	mov	rax, r14
ffffffff800153d8: 78 64                	js	0xffffffff8001543e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff800153da: 4c 89 e5             	mov	rbp, r12
ffffffff800153dd: 48 c1 ed 15          	shr	rbp, 0x15
ffffffff800153e1: 4c 21 ee             	and	rsi, r13
ffffffff800153e4: 48 89 df             	mov	rdi, rbx
ffffffff800153e7: e8 24 78 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff800153ec: 81 e5 ff 01 00 00    	and	ebp, 0x1ff
ffffffff800153f2: 48 8b 34 e8          	mov	rsi, qword ptr [rax + 8*rbp]
ffffffff800153f6: 40 f6 c6 01          	test	sil, 0x1
ffffffff800153fa: 74 c7                	je	0xffffffff800153c3 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x73>
ffffffff800153fc: b1 01                	mov	cl, 0x1
ffffffff800153fe: 40 84 f6             	test	sil, sil
ffffffff80015401: 4c 89 f0             	mov	rax, r14
ffffffff80015404: 78 38                	js	0xffffffff8001543e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff80015406: 4c 89 e5             	mov	rbp, r12
ffffffff80015409: 48 c1 ed 0c          	shr	rbp, 0xc
ffffffff8001540d: 4c 21 ee             	and	rsi, r13
ffffffff80015410: 48 89 df             	mov	rdi, rbx
ffffffff80015413: e8 f8 77 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80015418: 81 e5 ff 01 00 00    	and	ebp, 0x1ff
ffffffff8001541e: 89 e9                	mov	ecx, ebp
ffffffff80015420: 48 8b 0c c8          	mov	rcx, qword ptr [rax + 8*rcx]
ffffffff80015424: 48 85 c9             	test	rcx, rcx
ffffffff80015427: 74 2b                	je	0xffffffff80015454 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x104>
ffffffff80015429: 4c 21 e9             	and	rcx, r13
ffffffff8001542c: 4c 09 f9             	or	rcx, r15
ffffffff8001542f: 48 89 0c e8          	mov	qword ptr [rax + 8*rbp], rcx
ffffffff80015433: 4c 89 f0             	mov	rax, r14
ffffffff80015436: 4d 89 66 08          	mov	qword ptr [r14 + 0x8], r12
ffffffff8001543a: 31 c9                	xor	ecx, ecx
ffffffff8001543c: eb 05                	jmp	0xffffffff80015443 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf3>
ffffffff8001543e: 88 48 01             	mov	byte ptr [rax + 0x1], cl
ffffffff80015441: b1 01                	mov	cl, 0x1
ffffffff80015443: 88 08                	mov	byte ptr [rax], cl
ffffffff80015445: 48 83 c4 08          	add	rsp, 0x8
ffffffff80015449: 5b                   	pop	rbx
ffffffff8001544a: 41 5c                	pop	r12
ffffffff8001544c: 41 5d                	pop	r13
ffffffff8001544e: 41 5e                	pop	r14
ffffffff80015450: 41 5f                	pop	r15
ffffffff80015452: 5d                   	pop	rbp
ffffffff80015453: c3                   	ret
ffffffff80015454: 4c 89 f0             	mov	rax, r14
ffffffff80015457: 41 c6 46 01 00       	mov	byte ptr [r14 + 0x1], 0x0
ffffffff8001545c: eb e3                	jmp	0xffffffff80015441 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf1>
ffffffff8001545e: cc                   	int3
ffffffff8001545f: cc                   	int3

ffffffff80015460 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1>:
ffffffff80015460: 41 57                	push	r15
ffffffff80015462: 41 56                	push	r14
ffffffff80015464: 41 55                	push	r13
ffffffff80015466: 41 54                	push	r12
ffffffff80015468: 53                   	push	rbx
ffffffff80015469: 49 89 f7             	mov	r15, rsi
ffffffff8001546c: 48 89 fb             	mov	rbx, rdi
ffffffff8001546f: 48 89 d0             	mov	rax, rdx
ffffffff80015472: 48 c1 e8 27          	shr	rax, 0x27
ffffffff80015476: 25 ff 01 00 00       	and	eax, 0x1ff
ffffffff8001547b: 48 8b 0e             	mov	rcx, qword ptr [rsi]
ffffffff8001547e: 48 8b 34 c1          	mov	rsi, qword ptr [rcx + 8*rax]
ffffffff80015482: 89 f0                	mov	eax, esi
ffffffff80015484: 25 81 00 00 00       	and	eax, 0x81
ffffffff80015489: 83 f8 01             	cmp	eax, 0x1
ffffffff8001548c: 0f 85 a7 00 00 00    	jne	0xffffffff80015539 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff80015492: 49 89 d6             	mov	r14, rdx
ffffffff80015495: 49 83 c7 08          	add	r15, 0x8
ffffffff80015499: 49 bc 00 f0 ff ff ff ff 0f 00	movabs	r12, 0xffffffffff000
ffffffff800154a3: 49 89 d5             	mov	r13, rdx
ffffffff800154a6: 49 c1 ed 1e          	shr	r13, 0x1e
ffffffff800154aa: 4c 21 e6             	and	rsi, r12
ffffffff800154ad: 4c 89 ff             	mov	rdi, r15
ffffffff800154b0: e8 5b 77 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff800154b5: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff800154bc: 4a 8b 34 e8          	mov	rsi, qword ptr [rax + 8*r13]
ffffffff800154c0: 89 f0                	mov	eax, esi
ffffffff800154c2: 25 81 00 00 00       	and	eax, 0x81
ffffffff800154c7: 83 f8 01             	cmp	eax, 0x1
ffffffff800154ca: 75 6d                	jne	0xffffffff80015539 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff800154cc: 4d 89 f5             	mov	r13, r14
ffffffff800154cf: 49 c1 ed 15          	shr	r13, 0x15
ffffffff800154d3: 4c 21 e6             	and	rsi, r12
ffffffff800154d6: 4c 89 ff             	mov	rdi, r15
ffffffff800154d9: e8 32 77 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff800154de: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff800154e5: 4a 8b 34 e8          	mov	rsi, qword ptr [rax + 8*r13]
ffffffff800154e9: 89 f0                	mov	eax, esi
ffffffff800154eb: 25 81 00 00 00       	and	eax, 0x81
ffffffff800154f0: 83 f8 01             	cmp	eax, 0x1
ffffffff800154f3: 75 44                	jne	0xffffffff80015539 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff800154f5: 4d 89 f5             	mov	r13, r14
ffffffff800154f8: 49 c1 ed 0c          	shr	r13, 0xc
ffffffff800154fc: 4c 21 e6             	and	rsi, r12
ffffffff800154ff: 4c 89 ff             	mov	rdi, r15
ffffffff80015502: e8 09 77 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80015507: 41 81 e5 ff 01 00 00 	and	r13d, 0x1ff
ffffffff8001550e: 44 89 e9             	mov	ecx, r13d
ffffffff80015511: 48 8b 0c c8          	mov	rcx, qword ptr [rax + 8*rcx]
ffffffff80015515: 89 ca                	mov	edx, ecx
ffffffff80015517: 81 e2 81 00 00 00    	and	edx, 0x81
ffffffff8001551d: 83 fa 01             	cmp	edx, 0x1
ffffffff80015520: 75 35                	jne	0xffffffff80015557 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xf7>
ffffffff80015522: 4c 21 e1             	and	rcx, r12
ffffffff80015525: 4a c7 04 e8 00 00 00 00      	mov	qword ptr [rax + 8*r13], 0x0
ffffffff8001552d: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff80015531: 4c 89 73 10          	mov	qword ptr [rbx + 0x10], r14
ffffffff80015535: 31 c0                	xor	eax, eax
ffffffff80015537: eb 0e                	jmp	0xffffffff80015547 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xe7>
ffffffff80015539: f7 d6                	not	esi
ffffffff8001553b: 83 e6 01             	and	esi, 0x1
ffffffff8001553e: 48 89 73 08          	mov	qword ptr [rbx + 0x8], rsi
ffffffff80015542: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80015547: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001554a: 48 89 d8             	mov	rax, rbx
ffffffff8001554d: 5b                   	pop	rbx
ffffffff8001554e: 41 5c                	pop	r12
ffffffff80015550: 41 5d                	pop	r13
ffffffff80015552: 41 5e                	pop	r14
ffffffff80015554: 41 5f                	pop	r15
ffffffff80015556: c3                   	ret
ffffffff80015557: f7 d1                	not	ecx
ffffffff80015559: 83 e1 01             	and	ecx, 0x1
ffffffff8001555c: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff80015560: eb e0                	jmp	0xffffffff80015542 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xe2>
ffffffff80015562: cc                   	int3
ffffffff80015563: cc                   	int3
ffffffff80015564: cc                   	int3
ffffffff80015565: cc                   	int3
ffffffff80015566: cc                   	int3
ffffffff80015567: cc                   	int3
ffffffff80015568: cc                   	int3
ffffffff80015569: cc                   	int3
ffffffff8001556a: cc                   	int3
ffffffff8001556b: cc                   	int3
ffffffff8001556c: cc                   	int3
ffffffff8001556d: cc                   	int3
ffffffff8001556e: cc                   	int3
ffffffff8001556f: cc                   	int3

ffffffff80015570 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab>:
ffffffff80015570: 55                   	push	rbp
ffffffff80015571: 41 57                	push	r15
ffffffff80015573: 41 56                	push	r14
ffffffff80015575: 41 55                	push	r13
ffffffff80015577: 41 54                	push	r12
ffffffff80015579: 53                   	push	rbx
ffffffff8001557a: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001557e: 4d 89 cd             	mov	r13, r9
ffffffff80015581: 4c 89 44 24 10       	mov	qword ptr [rsp + 0x10], r8
ffffffff80015586: 49 89 cf             	mov	r15, rcx
ffffffff80015589: 49 89 d4             	mov	r12, rdx
ffffffff8001558c: 49 89 f6             	mov	r14, rsi
ffffffff8001558f: 48 89 fb             	mov	rbx, rdi
ffffffff80015592: 48 8b 6c 24 50       	mov	rbp, qword ptr [rsp + 0x50]
ffffffff80015597: 48 c1 ea 27          	shr	rdx, 0x27
ffffffff8001559b: 81 e2 ff 01 00 00    	and	edx, 0x1ff
ffffffff800155a1: c1 e2 03             	shl	edx, 0x3
ffffffff800155a4: 48 03 16             	add	rdx, qword ptr [rsi]
ffffffff800155a7: 49 83 c6 08          	add	r14, 0x8
ffffffff800155ab: 48 89 e7             	mov	rdi, rsp
ffffffff800155ae: 4c 89 f6             	mov	rsi, r14
ffffffff800155b1: 4c 89 c9             	mov	rcx, r9
ffffffff800155b4: 49 89 e8             	mov	r8, rbp
ffffffff800155b7: e8 04 01 00 00       	call	0xffffffff800156c0 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327>
ffffffff800155bc: 80 3c 24 00          	cmp	byte ptr [rsp], 0x0
ffffffff800155c0: 75 58                	jne	0xffffffff8001561a <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xaa>
ffffffff800155c2: 4c 89 e2             	mov	rdx, r12
ffffffff800155c5: 48 c1 ea 1e          	shr	rdx, 0x1e
ffffffff800155c9: 81 e2 ff 01 00 00    	and	edx, 0x1ff
ffffffff800155cf: c1 e2 03             	shl	edx, 0x3
ffffffff800155d2: 48 03 54 24 08       	add	rdx, qword ptr [rsp + 0x8]
ffffffff800155d7: 48 89 e7             	mov	rdi, rsp
ffffffff800155da: 4c 89 f6             	mov	rsi, r14
ffffffff800155dd: 4c 89 e9             	mov	rcx, r13
ffffffff800155e0: 49 89 e8             	mov	r8, rbp
ffffffff800155e3: e8 d8 00 00 00       	call	0xffffffff800156c0 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327>
ffffffff800155e8: 80 3c 24 00          	cmp	byte ptr [rsp], 0x0
ffffffff800155ec: 75 2c                	jne	0xffffffff8001561a <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xaa>
ffffffff800155ee: 4c 89 e2             	mov	rdx, r12
ffffffff800155f1: 48 c1 ea 15          	shr	rdx, 0x15
ffffffff800155f5: 81 e2 ff 01 00 00    	and	edx, 0x1ff
ffffffff800155fb: c1 e2 03             	shl	edx, 0x3
ffffffff800155fe: 48 03 54 24 08       	add	rdx, qword ptr [rsp + 0x8]
ffffffff80015603: 48 89 e7             	mov	rdi, rsp
ffffffff80015606: 4c 89 f6             	mov	rsi, r14
ffffffff80015609: 4c 89 e9             	mov	rcx, r13
ffffffff8001560c: 49 89 e8             	mov	r8, rbp
ffffffff8001560f: e8 ac 00 00 00       	call	0xffffffff800156c0 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327>
ffffffff80015614: 80 3c 24 00          	cmp	byte ptr [rsp], 0x0
ffffffff80015618: 74 1e                	je	0xffffffff80015638 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xc8>
ffffffff8001561a: 0f b6 44 24 01       	movzx	eax, byte ptr [rsp + 0x1]
ffffffff8001561f: 48 83 f0 01          	xor	rax, 0x1
ffffffff80015623: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff80015626: 48 89 d8             	mov	rax, rbx
ffffffff80015629: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001562d: 5b                   	pop	rbx
ffffffff8001562e: 41 5c                	pop	r12
ffffffff80015630: 41 5d                	pop	r13
ffffffff80015632: 41 5e                	pop	r14
ffffffff80015634: 41 5f                	pop	r15
ffffffff80015636: 5d                   	pop	rbp
ffffffff80015637: c3                   	ret
ffffffff80015638: 4c 89 e0             	mov	rax, r12
ffffffff8001563b: 48 c1 e8 0c          	shr	rax, 0xc
ffffffff8001563f: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff80015644: 25 ff 01 00 00       	and	eax, 0x1ff
ffffffff80015649: 89 c2                	mov	edx, eax
ffffffff8001564b: 48 83 3c d1 00       	cmp	qword ptr [rcx + 8*rdx], 0x0
ffffffff80015650: 74 0d                	je	0xffffffff8001565f <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xef>
ffffffff80015652: 48 c7 03 02 00 00 00 	mov	qword ptr [rbx], 0x2
ffffffff80015659: 4c 89 7b 08          	mov	qword ptr [rbx + 0x8], r15
ffffffff8001565d: eb c7                	jmp	0xffffffff80015626 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xb6>
ffffffff8001565f: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff80015664: 40 84 f6             	test	sil, sil
ffffffff80015667: 78 1d                	js	0xffffffff80015686 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0x116>
ffffffff80015669: 4c 89 fa             	mov	rdx, r15
ffffffff8001566c: 48 c1 e2 34          	shl	rdx, 0x34
ffffffff80015670: 75 2c                	jne	0xffffffff8001569e <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0x12e>
ffffffff80015672: 4c 09 fe             	or	rsi, r15
ffffffff80015675: 48 89 34 c1          	mov	qword ptr [rcx + 8*rax], rsi
ffffffff80015679: 4c 89 63 08          	mov	qword ptr [rbx + 0x8], r12
ffffffff8001567d: 48 c7 03 03 00 00 00 	mov	qword ptr [rbx], 0x3
ffffffff80015684: eb a0                	jmp	0xffffffff80015626 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hb50b718a8f0c35ab+0xb6>
ffffffff80015686: be 3c 00 00 00       	mov	esi, 0x3c
ffffffff8001568b: 48 c7 c7 50 7d 02 80 	mov	rdi, -0x7ffd82b0
ffffffff80015692: 48 c7 c2 08 7e 02 80 	mov	rdx, -0x7ffd81f8
ffffffff80015699: e8 52 ba 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001569e: be 31 00 00 00       	mov	esi, 0x31
ffffffff800156a3: 48 c7 c7 20 7e 02 80 	mov	rdi, -0x7ffd81e0
ffffffff800156aa: 48 c7 c2 58 7e 02 80 	mov	rdx, -0x7ffd81a8
ffffffff800156b1: e8 3a ba 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800156b6: cc                   	int3
ffffffff800156b7: cc                   	int3
ffffffff800156b8: cc                   	int3
ffffffff800156b9: cc                   	int3
ffffffff800156ba: cc                   	int3
ffffffff800156bb: cc                   	int3
ffffffff800156bc: cc                   	int3
ffffffff800156bd: cc                   	int3
ffffffff800156be: cc                   	int3
ffffffff800156bf: cc                   	int3

ffffffff800156c0 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327>:
ffffffff800156c0: 41 57                	push	r15
ffffffff800156c2: 41 56                	push	r14
ffffffff800156c4: 41 54                	push	r12
ffffffff800156c6: 53                   	push	rbx
ffffffff800156c7: 48 83 ec 18          	sub	rsp, 0x18
ffffffff800156cb: 49 89 ce             	mov	r14, rcx
ffffffff800156ce: 48 89 fb             	mov	rbx, rdi
ffffffff800156d1: 48 8b 02             	mov	rax, qword ptr [rdx]
ffffffff800156d4: 48 85 c0             	test	rax, rax
ffffffff800156d7: 74 4c                	je	0xffffffff80015725 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x65>
ffffffff800156d9: 4d 85 f6             	test	r14, r14
ffffffff800156dc: 74 1e                	je	0xffffffff800156fc <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x3c>
ffffffff800156de: 4c 89 f1             	mov	rcx, r14
ffffffff800156e1: 48 21 c1             	and	rcx, rax
ffffffff800156e4: 48 bf ff 0f 00 00 00 00 f0 ff	movabs	rdi, -0xffffffffff001
ffffffff800156ee: 48 21 cf             	and	rdi, rcx
ffffffff800156f1: 4c 39 f7             	cmp	rdi, r14
ffffffff800156f4: 74 06                	je	0xffffffff800156fc <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x3c>
ffffffff800156f6: 4c 09 f0             	or	rax, r14
ffffffff800156f9: 48 89 02             	mov	qword ptr [rdx], rax
ffffffff800156fc: a8 01                	test	al, 0x1
ffffffff800156fe: 0f 84 05 01 00 00    	je	0xffffffff80015809 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x149>
ffffffff80015704: 84 c0                	test	al, al
ffffffff80015706: 78 4a                	js	0xffffffff80015752 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x92>
ffffffff80015708: 48 b9 00 f0 ff ff ff ff 0f 00	movabs	rcx, 0xffffffffff000
ffffffff80015712: 48 21 c8             	and	rax, rcx
ffffffff80015715: 48 89 f7             	mov	rdi, rsi
ffffffff80015718: 48 89 c6             	mov	rsi, rax
ffffffff8001571b: e8 f0 74 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff80015720: e9 8e 00 00 00       	jmp	0xffffffff800157b3 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0xf3>
ffffffff80015725: 49 8b 00             	mov	rax, qword ptr [r8]
ffffffff80015728: 49 83 c0 08          	add	r8, 0x8
ffffffff8001572c: 49 89 d7             	mov	r15, rdx
ffffffff8001572f: 49 89 f4             	mov	r12, rsi
ffffffff80015732: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80015737: 4c 89 c6             	mov	rsi, r8
ffffffff8001573a: 48 85 c0             	test	rax, rax
ffffffff8001573d: 74 1a                	je	0xffffffff80015759 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x99>
ffffffff8001573f: 83 f8 01             	cmp	eax, 0x1
ffffffff80015742: 75 78                	jne	0xffffffff800157bc <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0xfc>
ffffffff80015744: e8 f7 f3 ff ff       	call	0xffffffff80014b40 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::hcbecd7d3f1cca444>
ffffffff80015749: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff8001574e: 75 15                	jne	0xffffffff80015765 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0xa5>
ffffffff80015750: eb 76                	jmp	0xffffffff800157c8 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x108>
ffffffff80015752: 66 c7 03 01 00       	mov	word ptr [rbx], 0x1
ffffffff80015757: eb 74                	jmp	0xffffffff800157cd <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x10d>
ffffffff80015759: e8 02 01 00 00       	call	0xffffffff80015860 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>
ffffffff8001575e: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff80015763: 74 63                	je	0xffffffff800157c8 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x108>
ffffffff80015765: 45 84 f6             	test	r14b, r14b
ffffffff80015768: 78 6f                	js	0xffffffff800157d9 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x119>
ffffffff8001576a: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001576f: 48 89 f0             	mov	rax, rsi
ffffffff80015772: 48 c1 e0 34          	shl	rax, 0x34
ffffffff80015776: 75 79                	jne	0xffffffff800157f1 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x131>
ffffffff80015778: 4c 09 f6             	or	rsi, r14
ffffffff8001577b: 49 89 37             	mov	qword ptr [r15], rsi
ffffffff8001577e: 41 f6 c6 01          	test	r14b, 0x1
ffffffff80015782: 0f 84 81 00 00 00    	je	0xffffffff80015809 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x149>
ffffffff80015788: 4c 89 e7             	mov	rdi, r12
ffffffff8001578b: 48 b8 00 f0 ff ff ff ff 0f 00	movabs	rax, 0xffffffffff000
ffffffff80015795: 48 21 c6             	and	rsi, rax
ffffffff80015798: e8 73 74 00 00       	call	0xffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8001579d: 49 89 c6             	mov	r14, rax
ffffffff800157a0: ba 00 10 00 00       	mov	edx, 0x1000
ffffffff800157a5: 48 89 c7             	mov	rdi, rax
ffffffff800157a8: 31 f6                	xor	esi, esi
ffffffff800157aa: ff 15 90 6c 02 00    	call	qword ptr [rip + 0x26c90] # 0xffffffff8003c440
ffffffff800157b0: 4c 89 f0             	mov	rax, r14
ffffffff800157b3: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff800157b7: c6 03 00             	mov	byte ptr [rbx], 0x0
ffffffff800157ba: eb 11                	jmp	0xffffffff800157cd <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0x10d>
ffffffff800157bc: e8 ef 3e ff ff       	call	0xffffffff800096b0 <<taos::memory::buddy_frame_allocator::BuddyFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h3352f3d3b7d511da>
ffffffff800157c1: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff800157c6: 75 9d                	jne	0xffffffff80015765 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h6abe1151ae018e2e.llvm.11687200728944222327+0xa5>
ffffffff800157c8: 66 c7 03 01 01       	mov	word ptr [rbx], 0x101
ffffffff800157cd: 48 83 c4 18          	add	rsp, 0x18
ffffffff800157d1: 5b                   	pop	rbx
ffffffff800157d2: 41 5c                	pop	r12
ffffffff800157d4: 41 5e                	pop	r14
ffffffff800157d6: 41 5f                	pop	r15
ffffffff800157d8: c3                   	ret
ffffffff800157d9: be 3c 00 00 00       	mov	esi, 0x3c
ffffffff800157de: 48 c7 c7 50 7d 02 80 	mov	rdi, -0x7ffd82b0
ffffffff800157e5: 48 c7 c2 08 7e 02 80 	mov	rdx, -0x7ffd81f8
ffffffff800157ec: e8 ff b8 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800157f1: be 31 00 00 00       	mov	esi, 0x31
ffffffff800157f6: 48 c7 c7 20 7e 02 80 	mov	rdi, -0x7ffd81e0
ffffffff800157fd: 48 c7 c2 58 7e 02 80 	mov	rdx, -0x7ffd81a8
ffffffff80015804: e8 e7 b8 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80015809: be 24 00 00 00       	mov	esi, 0x24
ffffffff8001580e: 48 c7 c7 70 7e 02 80 	mov	rdi, -0x7ffd8190
ffffffff80015815: 48 c7 c2 98 7e 02 80 	mov	rdx, -0x7ffd8168
ffffffff8001581c: e8 cf b8 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80015821: cc                   	int3
ffffffff80015822: cc                   	int3
ffffffff80015823: cc                   	int3
ffffffff80015824: cc                   	int3
ffffffff80015825: cc                   	int3
ffffffff80015826: cc                   	int3
ffffffff80015827: cc                   	int3
ffffffff80015828: cc                   	int3
ffffffff80015829: cc                   	int3
ffffffff8001582a: cc                   	int3
ffffffff8001582b: cc                   	int3
ffffffff8001582c: cc                   	int3
ffffffff8001582d: cc                   	int3
ffffffff8001582e: cc                   	int3
ffffffff8001582f: cc                   	int3

ffffffff80015830 <<x86_64::structures::paging::page_table::FrameError as core::fmt::Debug>::fmt::h5195bcaf09baa688>:
ffffffff80015830: 80 3f 00             	cmp	byte ptr [rdi], 0x0
ffffffff80015833: b8 09 00 00 00       	mov	eax, 0x9
ffffffff80015838: ba 0f 00 00 00       	mov	edx, 0xf
ffffffff8001583d: 48 0f 45 d0          	cmovne	rdx, rax
ffffffff80015841: 48 c7 c1 bf 7e 02 80 	mov	rcx, -0x7ffd8141
ffffffff80015848: 48 c7 c0 b0 7e 02 80 	mov	rax, -0x7ffd8150
ffffffff8001584f: 48 0f 45 c1          	cmovne	rax, rcx
ffffffff80015853: 48 89 f7             	mov	rdi, rsi
ffffffff80015856: 48 89 c6             	mov	rsi, rax
ffffffff80015859: e9 d2 91 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001585e: cc                   	int3
ffffffff8001585f: cc                   	int3

ffffffff80015860 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>:
ffffffff80015860: 55                   	push	rbp
ffffffff80015861: 41 57                	push	r15
ffffffff80015863: 41 56                	push	r14
ffffffff80015865: 41 55                	push	r13
ffffffff80015867: 41 54                	push	r12
ffffffff80015869: 53                   	push	rbx
ffffffff8001586a: 50                   	push	rax
ffffffff8001586b: 48 b8 00 00 00 00 00 00 10 00	movabs	rax, 0x10000000000000
ffffffff80015875: 48 ba 00 00 00 00 00 7f 00 00	movabs	rdx, 0x7f0000000000
ffffffff8001587f: 4c 8b 46 20          	mov	r8, qword ptr [rsi + 0x20]
ffffffff80015883: 48 8b 4e 28          	mov	rcx, qword ptr [rsi + 0x28]
ffffffff80015887: 4d 8b 48 08          	mov	r9, qword ptr [r8 + 0x8]
ffffffff8001588b: 4d 8b 40 10          	mov	r8, qword ptr [r8 + 0x10]
ffffffff8001588f: 4f 8d 0c c8          	lea	r9, [r8 + 8*r9]
ffffffff80015893: 4c 8b 56 38          	mov	r10, qword ptr [rsi + 0x38]
ffffffff80015897: 4c 8b 5e 40          	mov	r11, qword ptr [rsi + 0x40]
ffffffff8001589b: 40 b5 02             	mov	bpl, 0x2
ffffffff8001589e: 31 db                	xor	ebx, ebx
ffffffff800158a0: eb 25                	jmp	0xffffffff800158c7 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x67>
ffffffff800158a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff800158b0: 4d 8d bc 24 00 10 00 00      	lea	r15, [r12 + 0x1000]
ffffffff800158b8: 40 b5 01             	mov	bpl, 0x1
ffffffff800158bb: 48 ff c3             	inc	rbx
ffffffff800158be: 49 39 c4             	cmp	r12, rax
ffffffff800158c1: 0f 83 03 01 00 00    	jae	0xffffffff800159ca <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x16a>
ffffffff800158c7: 48 39 cb             	cmp	rbx, rcx
ffffffff800158ca: 0f 84 12 01 00 00    	je	0xffffffff800159e2 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x182>
ffffffff800158d0: 40 80 fd 02          	cmp	bpl, 0x2
ffffffff800158d4: 0f 85 96 00 00 00    	jne	0xffffffff80015970 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x110>
ffffffff800158da: 4d 85 c0             	test	r8, r8
ffffffff800158dd: 0f 84 85 01 00 00    	je	0xffffffff80015a68 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff800158e3: 4d 39 c8             	cmp	r8, r9
ffffffff800158e6: 0f 84 7c 01 00 00    	je	0xffffffff80015a68 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff800158ec: 4d 8b 30             	mov	r14, qword ptr [r8]
ffffffff800158ef: 49 83 c0 08          	add	r8, 0x8
ffffffff800158f3: 49 83 7e 10 00       	cmp	qword ptr [r14 + 0x10], 0x0
ffffffff800158f8: 75 e9                	jne	0xffffffff800158e3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x83>
ffffffff800158fa: 4d 8b 3e             	mov	r15, qword ptr [r14]
ffffffff800158fd: 4d 8b 76 08          	mov	r14, qword ptr [r14 + 0x8]
ffffffff80015901: 4d 01 fe             	add	r14, r15
ffffffff80015904: 4d 29 fe             	sub	r14, r15
ffffffff80015907: 41 bc 00 00 00 00    	mov	r12d, 0x0
ffffffff8001590d: 4d 0f 43 e6          	cmovae	r12, r14
ffffffff80015911: 4d 89 e5             	mov	r13, r12
ffffffff80015914: 49 c1 ed 0c          	shr	r13, 0xc
ffffffff80015918: 41 81 e4 ff 0f 00 00 	and	r12d, 0xfff
ffffffff8001591f: 49 83 fc 01          	cmp	r12, 0x1
ffffffff80015923: 49 83 dd ff          	sbb	r13, -0x1
ffffffff80015927: 49 ff cd             	dec	r13
ffffffff8001592a: 4c 89 fd             	mov	rbp, r15
ffffffff8001592d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80015930: 49 83 fd ff          	cmp	r13, -0x1
ffffffff80015934: 74 ad                	je	0xffffffff800158e3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x83>
ffffffff80015936: 49 89 ec             	mov	r12, rbp
ffffffff80015939: 4d 89 ee             	mov	r14, r13
ffffffff8001593c: 4d 39 d7             	cmp	r15, r10
ffffffff8001593f: 0f 82 6b ff ff ff    	jb	0xffffffff800158b0 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff80015945: 4d 8d 2c 14          	lea	r13, [r12 + rdx]
ffffffff80015949: 49 81 fd 00 00 50 00 	cmp	r13, 0x500000
ffffffff80015950: 0f 87 5a ff ff ff    	ja	0xffffffff800158b0 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff80015956: 4d 8d 6e ff          	lea	r13, [r14 - 0x1]
ffffffff8001595a: 49 8d ac 24 00 10 00 00      	lea	rbp, [r12 + 0x1000]
ffffffff80015962: 4d 39 e3             	cmp	r11, r12
ffffffff80015965: 77 c9                	ja	0xffffffff80015930 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0xd0>
ffffffff80015967: e9 44 ff ff ff       	jmp	0xffffffff800158b0 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff8001596c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80015970: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff80015976: 4d 29 f5             	sub	r13, r14
ffffffff80015979: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80015980: 49 83 fd 01          	cmp	r13, 0x1
ffffffff80015984: 0f 84 50 ff ff ff    	je	0xffffffff800158da <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x7a>
ffffffff8001598a: 4d 89 fc             	mov	r12, r15
ffffffff8001598d: 4d 89 ee             	mov	r14, r13
ffffffff80015990: 4d 39 fa             	cmp	r10, r15
ffffffff80015993: 77 1e                	ja	0xffffffff800159b3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x153>
ffffffff80015995: 4d 8d 3c 14          	lea	r15, [r12 + rdx]
ffffffff80015999: 49 81 ff 00 00 50 00 	cmp	r15, 0x500000
ffffffff800159a0: 77 11                	ja	0xffffffff800159b3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x153>
ffffffff800159a2: 4d 8d 6e 01          	lea	r13, [r14 + 0x1]
ffffffff800159a6: 4d 8d bc 24 00 10 00 00      	lea	r15, [r12 + 0x1000]
ffffffff800159ae: 4d 39 e3             	cmp	r11, r12
ffffffff800159b1: 77 cd                	ja	0xffffffff80015980 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x120>
ffffffff800159b3: 4d 8d bc 24 00 10 00 00      	lea	r15, [r12 + 0x1000]
ffffffff800159bb: 49 f7 de             	neg	r14
ffffffff800159be: 48 ff c3             	inc	rbx
ffffffff800159c1: 49 39 c4             	cmp	r12, rax
ffffffff800159c4: 0f 82 fd fe ff ff    	jb	0xffffffff800158c7 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x67>
ffffffff800159ca: be 43 00 00 00       	mov	esi, 0x43
ffffffff800159cf: 48 c7 c7 10 7c 02 80 	mov	rdi, -0x7ffd83f0
ffffffff800159d6: 48 c7 c2 58 7c 02 80 	mov	rdx, -0x7ffd83a8
ffffffff800159dd: e8 0e b7 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff800159e2: 40 80 fd 02          	cmp	bpl, 0x2
ffffffff800159e6: 0f 85 95 00 00 00    	jne	0xffffffff80015a81 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x221>
ffffffff800159ec: 4d 85 c0             	test	r8, r8
ffffffff800159ef: 74 77                	je	0xffffffff80015a68 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff800159f1: 4d 39 c8             	cmp	r8, r9
ffffffff800159f4: 74 72                	je	0xffffffff80015a68 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff800159f6: 45 31 f6             	xor	r14d, r14d
ffffffff800159f9: eb 09                	jmp	0xffffffff80015a04 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x1a4>
ffffffff800159fb: 49 83 c0 08          	add	r8, 0x8
ffffffff800159ff: 4d 39 c8             	cmp	r8, r9
ffffffff80015a02: 74 64                	je	0xffffffff80015a68 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff80015a04: 49 8b 18             	mov	rbx, qword ptr [r8]
ffffffff80015a07: 48 83 7b 10 00       	cmp	qword ptr [rbx + 0x10], 0x0
ffffffff80015a0c: 75 ed                	jne	0xffffffff800159fb <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x19b>
ffffffff80015a0e: 4c 8b 3b             	mov	r15, qword ptr [rbx]
ffffffff80015a11: 48 8b 5b 08          	mov	rbx, qword ptr [rbx + 0x8]
ffffffff80015a15: 4c 01 fb             	add	rbx, r15
ffffffff80015a18: 4c 29 fb             	sub	rbx, r15
ffffffff80015a1b: 49 0f 42 de          	cmovb	rbx, r14
ffffffff80015a1f: 49 89 dc             	mov	r12, rbx
ffffffff80015a22: 49 c1 ec 0c          	shr	r12, 0xc
ffffffff80015a26: 81 e3 ff 0f 00 00    	and	ebx, 0xfff
ffffffff80015a2c: 48 83 fb 01          	cmp	rbx, 0x1
ffffffff80015a30: 49 83 dc ff          	sbb	r12, -0x1
ffffffff80015a34: 49 f7 d4             	not	r12
ffffffff80015a37: 4d 89 fd             	mov	r13, r15
ffffffff80015a3a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80015a40: 49 ff c4             	inc	r12
ffffffff80015a43: 74 b6                	je	0xffffffff800159fb <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x19b>
ffffffff80015a45: 4c 89 eb             	mov	rbx, r13
ffffffff80015a48: 4d 39 d7             	cmp	r15, r10
ffffffff80015a4b: 72 6d                	jb	0xffffffff80015aba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff80015a4d: 4c 8d 2c 13          	lea	r13, [rbx + rdx]
ffffffff80015a51: 49 81 fd 00 00 50 00 	cmp	r13, 0x500000
ffffffff80015a58: 77 60                	ja	0xffffffff80015aba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff80015a5a: 4c 8d ab 00 10 00 00 	lea	r13, [rbx + 0x1000]
ffffffff80015a61: 49 39 db             	cmp	r11, rbx
ffffffff80015a64: 77 da                	ja	0xffffffff80015a40 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x1e0>
ffffffff80015a66: eb 52                	jmp	0xffffffff80015aba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff80015a68: 48 c7 07 00 00 00 00 	mov	qword ptr [rdi], 0x0
ffffffff80015a6f: 48 89 f8             	mov	rax, rdi
ffffffff80015a72: 48 83 c4 08          	add	rsp, 0x8
ffffffff80015a76: 5b                   	pop	rbx
ffffffff80015a77: 41 5c                	pop	r12
ffffffff80015a79: 41 5d                	pop	r13
ffffffff80015a7b: 41 5e                	pop	r14
ffffffff80015a7d: 41 5f                	pop	r15
ffffffff80015a7f: 5d                   	pop	rbp
ffffffff80015a80: c3                   	ret
ffffffff80015a81: 49 ff c6             	inc	r14
ffffffff80015a84: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80015a90: 49 ff ce             	dec	r14
ffffffff80015a93: 0f 84 53 ff ff ff    	je	0xffffffff800159ec <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x18c>
ffffffff80015a99: 4c 89 fb             	mov	rbx, r15
ffffffff80015a9c: 4d 39 fa             	cmp	r10, r15
ffffffff80015a9f: 77 19                	ja	0xffffffff80015aba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff80015aa1: 4c 8d 3c 13          	lea	r15, [rbx + rdx]
ffffffff80015aa5: 49 81 ff 00 00 50 00 	cmp	r15, 0x500000
ffffffff80015aac: 77 0c                	ja	0xffffffff80015aba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff80015aae: 4c 8d bb 00 10 00 00 	lea	r15, [rbx + 0x1000]
ffffffff80015ab5: 49 39 db             	cmp	r11, rbx
ffffffff80015ab8: 77 d6                	ja	0xffffffff80015a90 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x230>
ffffffff80015aba: 48 39 c3             	cmp	rbx, rax
ffffffff80015abd: 0f 83 07 ff ff ff    	jae	0xffffffff800159ca <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x16a>
ffffffff80015ac3: 48 ff c1             	inc	rcx
ffffffff80015ac6: 48 89 4e 28          	mov	qword ptr [rsi + 0x28], rcx
ffffffff80015aca: 48 8b 4e 30          	mov	rcx, qword ptr [rsi + 0x30]
ffffffff80015ace: 48 81 f9 00 14 00 00 	cmp	rcx, 0x1400
ffffffff80015ad5: 73 3d                	jae	0xffffffff80015b14 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x2b4>
ffffffff80015ad7: 48 05 00 f0 ff ff    	add	rax, -0x1000
ffffffff80015add: 48 21 c3             	and	rbx, rax
ffffffff80015ae0: 48 83 3e 00          	cmp	qword ptr [rsi], 0x0
ffffffff80015ae4: 75 0b                	jne	0xffffffff80015af1 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x291>
ffffffff80015ae6: 48 c7 06 01 00 00 00 	mov	qword ptr [rsi], 0x1
ffffffff80015aed: 48 89 5e 08          	mov	qword ptr [rsi + 0x8], rbx
ffffffff80015af1: 48 c7 46 10 01 00 00 00      	mov	qword ptr [rsi + 0x10], 0x1
ffffffff80015af9: 48 89 5e 18          	mov	qword ptr [rsi + 0x18], rbx
ffffffff80015afd: 48 ff c1             	inc	rcx
ffffffff80015b00: 48 89 4e 30          	mov	qword ptr [rsi + 0x30], rcx
ffffffff80015b04: 48 c7 07 01 00 00 00 	mov	qword ptr [rdi], 0x1
ffffffff80015b0b: 48 89 5f 08          	mov	qword ptr [rdi + 0x8], rbx
ffffffff80015b0f: e9 5b ff ff ff       	jmp	0xffffffff80015a6f <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x20f>
ffffffff80015b14: be 3d 00 00 00       	mov	esi, 0x3d
ffffffff80015b19: 48 c7 c7 88 7f 02 80 	mov	rdi, -0x7ffd8078
ffffffff80015b20: 48 c7 c2 c8 7f 02 80 	mov	rdx, -0x7ffd8038
ffffffff80015b27: e8 c4 b5 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80015b2c: cc                   	int3
ffffffff80015b2d: cc                   	int3
ffffffff80015b2e: cc                   	int3
ffffffff80015b2f: cc                   	int3

ffffffff80015b30 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>:
ffffffff80015b30: 48 83 ec 38          	sub	rsp, 0x38
ffffffff80015b34: 48 c7 44 24 08 18 80 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd7fe8
ffffffff80015b3d: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff80015b46: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80015b4f: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff80015b58: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff80015b61: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80015b66: 48 c7 c6 28 80 02 80 	mov	rsi, -0x7ffd7fd8
ffffffff80015b6d: e8 fe b4 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80015b72: cc                   	int3
ffffffff80015b73: cc                   	int3
ffffffff80015b74: cc                   	int3
ffffffff80015b75: cc                   	int3
ffffffff80015b76: cc                   	int3
ffffffff80015b77: cc                   	int3
ffffffff80015b78: cc                   	int3
ffffffff80015b79: cc                   	int3
ffffffff80015b7a: cc                   	int3
ffffffff80015b7b: cc                   	int3
ffffffff80015b7c: cc                   	int3
ffffffff80015b7d: cc                   	int3
ffffffff80015b7e: cc                   	int3
ffffffff80015b7f: cc                   	int3

ffffffff80015b80 <goblin::elf::Elf::parse::hfb1810c3f1f87358>:
ffffffff80015b80: 55                   	push	rbp
ffffffff80015b81: 41 57                	push	r15
ffffffff80015b83: 41 56                	push	r14
ffffffff80015b85: 41 55                	push	r13
ffffffff80015b87: 41 54                	push	r12
ffffffff80015b89: 53                   	push	rbx
ffffffff80015b8a: 48 81 ec 38 06 00 00 	sub	rsp, 0x638
ffffffff80015b91: 48 89 f5             	mov	rbp, rsi
ffffffff80015b94: 49 89 fd             	mov	r13, rdi
ffffffff80015b97: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80015b9f: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff80015ba4: 31 c9                	xor	ecx, ecx
ffffffff80015ba6: e8 15 5d 00 00       	call	0xffffffff8001b8c0 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744>
ffffffff80015bab: 48 8b 9c 24 10 02 00 00      	mov	rbx, qword ptr [rsp + 0x210]
ffffffff80015bb3: 4c 8b 9c 24 18 02 00 00      	mov	r11, qword ptr [rsp + 0x218]
ffffffff80015bbb: 4c 8b bc 24 20 02 00 00      	mov	r15, qword ptr [rsp + 0x220]
ffffffff80015bc3: 4c 8b a4 24 28 02 00 00      	mov	r12, qword ptr [rsp + 0x228]
ffffffff80015bcb: f6 84 24 08 02 00 00 01      	test	byte ptr [rsp + 0x208], 0x1
ffffffff80015bd3: 74 1d                	je	0xffffffff80015bf2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x72>
ffffffff80015bd5: 49 89 5d 08          	mov	qword ptr [r13 + 0x8], rbx
ffffffff80015bd9: 4d 89 5d 10          	mov	qword ptr [r13 + 0x10], r11
ffffffff80015bdd: 4d 89 7d 18          	mov	qword ptr [r13 + 0x18], r15
ffffffff80015be1: 4d 89 65 20          	mov	qword ptr [r13 + 0x20], r12
ffffffff80015be5: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80015bed: e9 e1 1e 00 00       	jmp	0xffffffff80017ad3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80015bf2: 4c 89 6c 24 18       	mov	qword ptr [rsp + 0x18], r13
ffffffff80015bf7: 4c 8b ac 24 30 02 00 00      	mov	r13, qword ptr [rsp + 0x230]
ffffffff80015bff: 48 8b 84 24 38 02 00 00      	mov	rax, qword ptr [rsp + 0x238]
ffffffff80015c07: 48 89 84 24 48 03 00 00      	mov	qword ptr [rsp + 0x348], rax
ffffffff80015c0f: 0f b7 8c 24 40 02 00 00      	movzx	ecx, word ptr [rsp + 0x240]
ffffffff80015c17: 66 89 8c 24 50 03 00 00      	mov	word ptr [rsp + 0x350], cx
ffffffff80015c1f: 44 0f b7 94 24 42 02 00 00   	movzx	r10d, word ptr [rsp + 0x242]
ffffffff80015c28: 8b 94 24 44 02 00 00 	mov	edx, dword ptr [rsp + 0x244]
ffffffff80015c2f: 0f b7 b4 24 48 02 00 00      	movzx	esi, word ptr [rsp + 0x248]
ffffffff80015c37: 0f b7 bc 24 4a 02 00 00      	movzx	edi, word ptr [rsp + 0x24a]
ffffffff80015c3f: 44 0f b7 84 24 4c 02 00 00   	movzx	r8d, word ptr [rsp + 0x24c]
ffffffff80015c48: 44 0f b7 8c 24 4e 02 00 00   	movzx	r9d, word ptr [rsp + 0x24e]
ffffffff80015c51: 48 89 9c 24 b8 04 00 00      	mov	qword ptr [rsp + 0x4b8], rbx
ffffffff80015c59: 4c 89 9c 24 c0 04 00 00      	mov	qword ptr [rsp + 0x4c0], r11
ffffffff80015c61: 4c 89 bc 24 c8 04 00 00      	mov	qword ptr [rsp + 0x4c8], r15
ffffffff80015c69: 4c 89 a4 24 d0 04 00 00      	mov	qword ptr [rsp + 0x4d0], r12
ffffffff80015c71: 4c 89 ac 24 d8 04 00 00      	mov	qword ptr [rsp + 0x4d8], r13
ffffffff80015c79: 66 89 8c 24 e8 04 00 00      	mov	word ptr [rsp + 0x4e8], cx
ffffffff80015c81: 48 89 84 24 e0 04 00 00      	mov	qword ptr [rsp + 0x4e0], rax
ffffffff80015c89: 66 44 89 94 24 ea 04 00 00   	mov	word ptr [rsp + 0x4ea], r10w
ffffffff80015c92: 89 94 24 ec 04 00 00 	mov	dword ptr [rsp + 0x4ec], edx
ffffffff80015c99: 66 89 b4 24 f0 04 00 00      	mov	word ptr [rsp + 0x4f0], si
ffffffff80015ca1: 66 89 bc 24 f2 04 00 00      	mov	word ptr [rsp + 0x4f2], di
ffffffff80015ca9: 66 44 89 84 24 f4 04 00 00   	mov	word ptr [rsp + 0x4f4], r8w
ffffffff80015cb2: 66 44 89 8c 24 f6 04 00 00   	mov	word ptr [rsp + 0x4f6], r9w
ffffffff80015cbb: 0f b7 8c 24 e8 04 00 00      	movzx	ecx, word ptr [rsp + 0x4e8]
ffffffff80015cc3: 49 89 de             	mov	r14, rbx
ffffffff80015cc6: 49 c1 ee 20          	shr	r14, 0x20
ffffffff80015cca: 44 88 b4 24 40 04 00 00      	mov	byte ptr [rsp + 0x440], r14b
ffffffff80015cd2: 41 8d 46 fd          	lea	eax, [r14 - 0x3]
ffffffff80015cd6: 3c fe                	cmp	al, -0x2
ffffffff80015cd8: 0f 83 e1 00 00 00    	jae	0xffffffff80015dbf <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23f>
ffffffff80015cde: 48 8d 84 24 bd 04 00 00      	lea	rax, [rsp + 0x4bd]
ffffffff80015ce6: 48 8d 8c 24 40 04 00 00      	lea	rcx, [rsp + 0x440]
ffffffff80015cee: 48 89 8c 24 f8 04 00 00      	mov	qword ptr [rsp + 0x4f8], rcx
ffffffff80015cf6: 48 c7 84 24 00 05 00 00 90 01 02 80  	mov	qword ptr [rsp + 0x500], -0x7ffdfe70
ffffffff80015d02: 48 89 84 24 08 05 00 00      	mov	qword ptr [rsp + 0x508], rax
ffffffff80015d0a: 48 c7 84 24 10 05 00 00 90 01 02 80  	mov	qword ptr [rsp + 0x510], -0x7ffdfe70
ffffffff80015d16: 48 c7 84 24 08 02 00 00 88 81 02 80  	mov	qword ptr [rsp + 0x208], -0x7ffd7e78
ffffffff80015d22: 48 c7 84 24 10 02 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x210], 0x2
ffffffff80015d2e: 48 c7 84 24 28 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x228], 0x0
ffffffff80015d3a: 48 8d 84 24 f8 04 00 00      	lea	rax, [rsp + 0x4f8]
ffffffff80015d42: 48 89 84 24 18 02 00 00      	mov	qword ptr [rsp + 0x218], rax
ffffffff80015d4a: 48 c7 84 24 20 02 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x220], 0x2
ffffffff80015d56: 48 8d bc 24 f0 00 00 00      	lea	rdi, [rsp + 0xf0]
ffffffff80015d5e: 48 8d b4 24 08 02 00 00      	lea	rsi, [rsp + 0x208]
ffffffff80015d66: e8 45 79 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80015d6b: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 0xf0]
ffffffff80015d73: 8b 8c 24 f8 00 00 00 	mov	ecx, dword ptr [rsp + 0xf8]
ffffffff80015d7a: 0f b6 94 24 fc 00 00 00      	movzx	edx, byte ptr [rsp + 0xfc]
ffffffff80015d82: 48 8b b4 24 fd 00 00 00      	mov	rsi, qword ptr [rsp + 0xfd]
ffffffff80015d8a: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80015d8f: 49 89 75 1d          	mov	qword ptr [r13 + 0x1d], rsi
ffffffff80015d93: 8b b4 24 04 01 00 00 	mov	esi, dword ptr [rsp + 0x104]
ffffffff80015d9a: 41 89 75 24          	mov	dword ptr [r13 + 0x24], esi
ffffffff80015d9e: 49 c7 45 08 03 00 00 00      	mov	qword ptr [r13 + 0x8], 0x3
ffffffff80015da6: 49 89 45 10          	mov	qword ptr [r13 + 0x10], rax
ffffffff80015daa: 41 89 4d 18          	mov	dword ptr [r13 + 0x18], ecx
ffffffff80015dae: 41 88 55 1c          	mov	byte ptr [r13 + 0x1c], dl
ffffffff80015db2: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80015dba: e9 14 1d 00 00       	jmp	0xffffffff80017ad3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80015dbf: 66 89 4c 24 7a       	mov	word ptr [rsp + 0x7a], cx
ffffffff80015dc4: 4c 89 9c 24 a0 04 00 00      	mov	qword ptr [rsp + 0x4a0], r11
ffffffff80015dcc: 44 89 94 24 e4 00 00 00      	mov	dword ptr [rsp + 0xe4], r10d
ffffffff80015dd4: 66 44 89 4c 24 64    	mov	word ptr [rsp + 0x64], r9w
ffffffff80015dda: 66 44 89 44 24 66    	mov	word ptr [rsp + 0x66], r8w
ffffffff80015de0: 66 89 7c 24 7c       	mov	word ptr [rsp + 0x7c], di
ffffffff80015de5: 89 94 24 04 02 00 00 	mov	dword ptr [rsp + 0x204], edx
ffffffff80015dec: 66 89 74 24 7e       	mov	word ptr [rsp + 0x7e], si
ffffffff80015df1: 44 0f b7 c6          	movzx	r8d, si
ffffffff80015df5: 48 b8 00 00 00 00 00 ff 00 00	movabs	rax, 0xff0000000000
ffffffff80015dff: 48 89 9c 24 98 04 00 00      	mov	qword ptr [rsp + 0x498], rbx
ffffffff80015e07: 48 21 d8             	and	rax, rbx
ffffffff80015e0a: 48 89 c2             	mov	rdx, rax
ffffffff80015e0d: 48 b9 00 00 00 00 00 01 00 00	movabs	rcx, 0x10000000000
ffffffff80015e17: 31 c0                	xor	eax, eax
ffffffff80015e19: 48 89 94 24 60 01 00 00      	mov	qword ptr [rsp + 0x160], rdx
ffffffff80015e21: 48 39 ca             	cmp	rdx, rcx
ffffffff80015e24: 0f 94 44 24 3f       	sete	byte ptr [rsp + 0x3f]
ffffffff80015e29: 0f 95 c0             	setne	al
ffffffff80015e2c: 45 31 c9             	xor	r9d, r9d
ffffffff80015e2f: 4c 89 74 24 48       	mov	qword ptr [rsp + 0x48], r14
ffffffff80015e34: 41 80 fe 02          	cmp	r14b, 0x2
ffffffff80015e38: 41 0f 94 c1          	sete	r9b
ffffffff80015e3c: 89 44 24 24          	mov	dword ptr [rsp + 0x24], eax
ffffffff80015e40: 89 04 24             	mov	dword ptr [rsp], eax
ffffffff80015e43: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80015e4b: 48 89 6c 24 30       	mov	qword ptr [rsp + 0x30], rbp
ffffffff80015e50: 48 89 ee             	mov	rsi, rbp
ffffffff80015e53: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80015e58: 4c 89 e1             	mov	rcx, r12
ffffffff80015e5b: 44 89 4c 24 74       	mov	dword ptr [rsp + 0x74], r9d
ffffffff80015e60: e8 2b 49 00 00       	call	0xffffffff8001a790 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9>
ffffffff80015e65: 48 8b 84 24 08 02 00 00      	mov	rax, qword ptr [rsp + 0x208]
ffffffff80015e6d: 4c 8b b4 24 10 02 00 00      	mov	r14, qword ptr [rsp + 0x210]
ffffffff80015e75: 48 8b ac 24 18 02 00 00      	mov	rbp, qword ptr [rsp + 0x218]
ffffffff80015e7d: 48 8b 8c 24 20 02 00 00      	mov	rcx, qword ptr [rsp + 0x220]
ffffffff80015e85: 48 83 f8 07          	cmp	rax, 0x7
ffffffff80015e89: 0f 85 c1 00 00 00    	jne	0xffffffff80015f50 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3d0>
ffffffff80015e8f: 4c 89 ac 24 10 04 00 00      	mov	qword ptr [rsp + 0x410], r13
ffffffff80015e97: 4c 89 a4 24 88 04 00 00      	mov	qword ptr [rsp + 0x488], r12
ffffffff80015e9f: 4c 89 bc 24 90 04 00 00      	mov	qword ptr [rsp + 0x490], r15
ffffffff80015ea7: 48 85 c9             	test	rcx, rcx
ffffffff80015eaa: 48 89 8c 24 08 04 00 00      	mov	qword ptr [rsp + 0x408], rcx
ffffffff80015eb2: 0f 84 ba 00 00 00    	je	0xffffffff80015f72 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3f2>
ffffffff80015eb8: 4c 6b f9 38          	imul	r15, rcx, 0x38
ffffffff80015ebc: 45 31 e4             	xor	r12d, r12d
ffffffff80015ebf: 4c 8d ac 24 08 02 00 00      	lea	r13, [rsp + 0x208]
ffffffff80015ec7: 31 ff                	xor	edi, edi
ffffffff80015ec9: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80015ece: eb 1d                	jmp	0xffffffff80015eed <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x36d>
ffffffff80015ed0: 31 ff                	xor	edi, edi
ffffffff80015ed2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80015ee0: 49 83 c4 38          	add	r12, 0x38
ffffffff80015ee4: 4d 39 e7             	cmp	r15, r12
ffffffff80015ee7: 0f 84 8c 00 00 00    	je	0xffffffff80015f79 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3f9>
ffffffff80015eed: 42 83 7c 25 30 03    	cmp	dword ptr [rbp + r12 + 0x30], 0x3
ffffffff80015ef3: 75 eb                	jne	0xffffffff80015ee0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80015ef5: 4a 8b 54 25 18       	mov	rdx, qword ptr [rbp + r12 + 0x18]
ffffffff80015efa: 48 85 d2             	test	rdx, rdx
ffffffff80015efd: 74 e1                	je	0xffffffff80015ee0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80015eff: 4a 8b 74 25 00       	mov	rsi, qword ptr [rbp + r12]
ffffffff80015f04: 4c 89 d0             	mov	rax, r10
ffffffff80015f07: 48 29 f0             	sub	rax, rsi
ffffffff80015f0a: 72 c4                	jb	0xffffffff80015ed0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x350>
ffffffff80015f0c: 48 ff ca             	dec	rdx
ffffffff80015f0f: bf 00 00 00 00       	mov	edi, 0x0
ffffffff80015f14: 48 39 c2             	cmp	rdx, rax
ffffffff80015f17: 77 c7                	ja	0xffffffff80015ee0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80015f19: 48 03 74 24 30       	add	rsi, qword ptr [rsp + 0x30]
ffffffff80015f1e: 4c 89 ef             	mov	rdi, r13
ffffffff80015f21: e8 fa ac 00 00       	call	0xffffffff80020c20 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff80015f26: 83 bc 24 08 02 00 00 01      	cmp	dword ptr [rsp + 0x208], 0x1
ffffffff80015f2e: 75 09                	jne	0xffffffff80015f39 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3b9>
ffffffff80015f30: 31 ff                	xor	edi, edi
ffffffff80015f32: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80015f37: eb a7                	jmp	0xffffffff80015ee0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80015f39: 48 8b bc 24 10 02 00 00      	mov	rdi, qword ptr [rsp + 0x210]
ffffffff80015f41: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff80015f49: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80015f4e: eb 90                	jmp	0xffffffff80015ee0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80015f50: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80015f55: 4d 89 75 10          	mov	qword ptr [r13 + 0x10], r14
ffffffff80015f59: 49 89 6d 18          	mov	qword ptr [r13 + 0x18], rbp
ffffffff80015f5d: 49 89 4d 20          	mov	qword ptr [r13 + 0x20], rcx
ffffffff80015f61: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80015f65: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80015f6d: e9 61 1b 00 00       	jmp	0xffffffff80017ad3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80015f72: 31 ff                	xor	edi, edi
ffffffff80015f74: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80015f79: 48 89 8c 24 80 04 00 00      	mov	qword ptr [rsp + 0x480], rcx
ffffffff80015f81: 48 8b 8c 24 10 04 00 00      	mov	rcx, qword ptr [rsp + 0x410]
ffffffff80015f89: 48 85 c9             	test	rcx, rcx
ffffffff80015f8c: 0f 84 8b 00 00 00    	je	0xffffffff8001601d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x49d>
ffffffff80015f92: 49 89 ff             	mov	r15, rdi
ffffffff80015f95: 44 0f b7 44 24 66    	movzx	r8d, word ptr [rsp + 0x66]
ffffffff80015f9b: 45 31 c9             	xor	r9d, r9d
ffffffff80015f9e: 4c 8b 6c 24 48       	mov	r13, qword ptr [rsp + 0x48]
ffffffff80015fa3: 41 80 fd 02          	cmp	r13b, 0x2
ffffffff80015fa7: 41 0f 94 c1          	sete	r9b
ffffffff80015fab: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80015faf: 89 04 24             	mov	dword ptr [rsp], eax
ffffffff80015fb2: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80015fba: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80015fbf: 4c 89 d2             	mov	rdx, r10
ffffffff80015fc2: e8 69 4d 00 00       	call	0xffffffff8001ad30 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98>
ffffffff80015fc7: 48 8b 84 24 08 02 00 00      	mov	rax, qword ptr [rsp + 0x208]
ffffffff80015fcf: 48 8b 8c 24 10 02 00 00      	mov	rcx, qword ptr [rsp + 0x210]
ffffffff80015fd7: 4c 8b 8c 24 18 02 00 00      	mov	r9, qword ptr [rsp + 0x218]
ffffffff80015fdf: 4c 8b 84 24 20 02 00 00      	mov	r8, qword ptr [rsp + 0x220]
ffffffff80015fe7: 48 83 f8 07          	cmp	rax, 0x7
ffffffff80015feb: 0f 85 62 01 00 00    	jne	0xffffffff80016153 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x5d3>
ffffffff80015ff1: 0f b7 44 24 64       	movzx	eax, word ptr [rsp + 0x64]
ffffffff80015ff6: 66 83 f8 ff          	cmp	ax, -0x1
ffffffff80015ffa: 48 89 8c 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rcx
ffffffff80016002: 0f 84 16 07 00 00    	je	0xffffffff8001671e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb9e>
ffffffff80016008: 0f b7 c0             	movzx	eax, ax
ffffffff8001600b: 4c 89 ff             	mov	rdi, r15
ffffffff8001600e: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016013: 4c 39 c0             	cmp	rax, r8
ffffffff80016016: 73 1f                	jae	0xffffffff80016037 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff80016018: e9 1f 07 00 00       	jmp	0xffffffff8001673c <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xbbc>
ffffffff8001601d: 41 b9 08 00 00 00    	mov	r9d, 0x8
ffffffff80016023: 48 c7 84 24 d8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xd8], 0x0
ffffffff8001602f: 45 31 c0             	xor	r8d, r8d
ffffffff80016032: 4c 8b 6c 24 48       	mov	r13, qword ptr [rsp + 0x48]
ffffffff80016037: 48 c7 84 24 08 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x208], 0x0
ffffffff80016043: 48 c7 84 24 10 02 00 00 08 00 00 00  	mov	qword ptr [rsp + 0x210], 0x8
ffffffff8001604f: 48 c7 84 24 18 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x218], 0x0
ffffffff8001605b: 66 c7 84 24 20 02 00 00 00 00	mov	word ptr [rsp + 0x220], 0x0
ffffffff80016065: 48 c7 84 24 30 02 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x230], 0x1
ffffffff80016071: 48 c7 84 24 38 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x238], 0x0
ffffffff8001607d: 41 bc 08 00 00 00    	mov	r12d, 0x8
ffffffff80016083: 48 c7 84 24 f8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1f8], 0x0
ffffffff8001608f: 48 8b 84 24 28 02 00 00      	mov	rax, qword ptr [rsp + 0x228]
ffffffff80016097: 48 89 84 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rax
ffffffff8001609f: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff800160a7: 48 8b 94 24 20 02 00 00      	mov	rdx, qword ptr [rsp + 0x220]
ffffffff800160af: 48 89 94 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rdx
ffffffff800160b7: 48 8b b4 24 30 02 00 00      	mov	rsi, qword ptr [rsp + 0x230]
ffffffff800160bf: 48 89 b4 24 58 04 00 00      	mov	qword ptr [rsp + 0x458], rsi
ffffffff800160c7: 48 8b b4 24 38 02 00 00      	mov	rsi, qword ptr [rsp + 0x238]
ffffffff800160cf: 48 89 b4 24 60 04 00 00      	mov	qword ptr [rsp + 0x460], rsi
ffffffff800160d7: 48 89 8c 24 40 04 00 00      	mov	qword ptr [rsp + 0x440], rcx
ffffffff800160df: 48 89 94 24 48 04 00 00      	mov	qword ptr [rsp + 0x448], rdx
ffffffff800160e7: 48 89 84 24 50 04 00 00      	mov	qword ptr [rsp + 0x450], rax
ffffffff800160ef: 4a 8d 0c c5 00 00 00 00      	lea	rcx, [8*r8]
ffffffff800160f7: 4c 8d 1c c9          	lea	r11, [rcx + 8*rcx]
ffffffff800160fb: 4b 8d 04 19          	lea	rax, [r9 + r11]
ffffffff800160ff: 4c 89 74 24 50       	mov	qword ptr [rsp + 0x50], r14
ffffffff80016104: 4c 89 4c 24 58       	mov	qword ptr [rsp + 0x58], r9
ffffffff80016109: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80016110: 4d 85 db             	test	r11, r11
ffffffff80016113: 74 60                	je	0xffffffff80016175 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x5f5>
ffffffff80016115: 49 83 c3 b8          	add	r11, -0x48
ffffffff80016119: 83 78 f0 02          	cmp	dword ptr [rax - 0x10], 0x2
ffffffff8001611d: 48 8d 40 b8          	lea	rax, [rax - 0x48]
ffffffff80016121: 75 ed                	jne	0xffffffff80016110 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x590>
ffffffff80016123: 4b 8b 74 19 30       	mov	rsi, qword ptr [r9 + r11 + 0x30]
ffffffff80016128: 48 85 f6             	test	rsi, rsi
ffffffff8001612b: 0f 84 a2 06 00 00    	je	0xffffffff800167d3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xc53>
ffffffff80016131: 4b 8b 44 19 20       	mov	rax, qword ptr [r9 + r11 + 0x20]
ffffffff80016136: 48 89 c2             	mov	rdx, rax
ffffffff80016139: 48 09 f2             	or	rdx, rsi
ffffffff8001613c: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff80016140: 0f 84 71 07 00 00    	je	0xffffffff800168b7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd37>
ffffffff80016146: 31 d2                	xor	edx, edx
ffffffff80016148: 48 f7 f6             	div	rsi
ffffffff8001614b: 48 89 c6             	mov	rsi, rax
ffffffff8001614e: e9 6a 07 00 00       	jmp	0xffffffff800168bd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd3d>
ffffffff80016153: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80016158: 49 89 4d 10          	mov	qword ptr [r13 + 0x10], rcx
ffffffff8001615c: 4d 89 4d 18          	mov	qword ptr [r13 + 0x18], r9
ffffffff80016160: 4d 89 45 20          	mov	qword ptr [r13 + 0x20], r8
ffffffff80016164: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80016168: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80016170: e9 48 19 00 00       	jmp	0xffffffff80017abd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f3d>
ffffffff80016175: 48 89 8c 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rcx
ffffffff8001617d: 4c 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r8
ffffffff80016185: 48 89 bc 24 00 04 00 00      	mov	qword ptr [rsp + 0x400], rdi
ffffffff8001618d: c6 44 24 17 01       	mov	byte ptr [rsp + 0x17], 0x1
ffffffff80016192: b8 08 00 00 00       	mov	eax, 0x8
ffffffff80016197: 48 89 84 24 e8 01 00 00      	mov	qword ptr [rsp + 0x1e8], rax
ffffffff8001619f: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800161a4: 48 89 84 24 e8 03 00 00      	mov	qword ptr [rsp + 0x3e8], rax
ffffffff800161ac: 48 c7 84 24 e0 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3e0], 0x0
ffffffff800161b8: 48 c7 84 24 d8 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3d8], 0x0
ffffffff800161c4: 48 c7 84 24 d0 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3d0], 0x0
ffffffff800161d0: 48 c7 84 24 c8 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3c8], 0x0
ffffffff800161dc: 48 c7 84 24 f0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1f0], 0x0
ffffffff800161e8: 48 c7 84 24 c0 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3c0], 0x0
ffffffff800161f4: 48 c7 84 24 f8 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3f8], 0x0
ffffffff80016200: 31 db                	xor	ebx, ebx
ffffffff80016202: 45 31 ff             	xor	r15d, r15d
ffffffff80016205: 48 c7 84 24 d8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1d8], 0x0
ffffffff80016211: 48 89 84 24 f0 03 00 00      	mov	qword ptr [rsp + 0x3f0], rax
ffffffff80016219: 45 31 c9             	xor	r9d, r9d
ffffffff8001621c: 41 80 fd 02          	cmp	r13b, 0x2
ffffffff80016220: 41 0f 94 c1          	sete	r9b
ffffffff80016224: 48 c7 84 24 68 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x168], 0x0
ffffffff80016230: 48 c7 84 24 70 01 00 00 08 00 00 00  	mov	qword ptr [rsp + 0x170], 0x8
ffffffff8001623c: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x178], 0x0
ffffffff80016248: 48 c7 84 24 80 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x180], 0x0
ffffffff80016254: 48 c7 84 24 88 01 00 00 08 00 00 00  	mov	qword ptr [rsp + 0x188], 0x8
ffffffff80016260: 48 c7 84 24 90 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x190], 0x0
ffffffff8001626c: 66 c7 84 24 00 01 00 00 00 00	mov	word ptr [rsp + 0x100], 0x0
ffffffff80016276: 48 c7 84 24 10 01 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x110], 0x1
ffffffff80016282: 48 c7 84 24 18 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x118], 0x0
ffffffff8001628e: 48 c7 84 24 e8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xe8], 0x0
ffffffff8001629a: 48 c7 84 24 f0 00 00 00 08 00 00 00  	mov	qword ptr [rsp + 0xf0], 0x8
ffffffff800162a6: 48 c7 84 24 f8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xf8], 0x0
ffffffff800162b2: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff800162b6: 89 04 24             	mov	dword ptr [rsp], eax
ffffffff800162b9: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff800162c1: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff800162c6: 4c 89 d2             	mov	rdx, r10
ffffffff800162c9: 48 89 e9             	mov	rcx, rbp
ffffffff800162cc: 4c 8b 84 24 08 04 00 00      	mov	r8, qword ptr [rsp + 0x408]
ffffffff800162d4: e8 87 22 00 00       	call	0xffffffff80018560 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7>
ffffffff800162d9: 4c 8b b4 24 08 02 00 00      	mov	r14, qword ptr [rsp + 0x208]
ffffffff800162e1: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff800162e9: 48 89 84 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rax
ffffffff800162f1: 48 8b 84 24 18 02 00 00      	mov	rax, qword ptr [rsp + 0x218]
ffffffff800162f9: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rax
ffffffff80016301: 48 8b 84 24 20 02 00 00      	mov	rax, qword ptr [rsp + 0x220]
ffffffff80016309: 48 89 84 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rax
ffffffff80016311: 48 8b 84 24 28 02 00 00      	mov	rax, qword ptr [rsp + 0x228]
ffffffff80016319: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rax
ffffffff80016321: 49 83 fe 03          	cmp	r14, 0x3
ffffffff80016325: 75 4f                	jne	0xffffffff80016376 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x7f6>
ffffffff80016327: 48 8b 84 24 b0 00 00 00      	mov	rax, qword ptr [rsp + 0xb0]
ffffffff8001632f: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80016334: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff80016338: 48 8b 84 24 a8 00 00 00      	mov	rax, qword ptr [rsp + 0xa8]
ffffffff80016340: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff80016344: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff8001634c: 48 8b 8c 24 a0 00 00 00      	mov	rcx, qword ptr [rsp + 0xa0]
ffffffff80016354: 49 89 4d 10          	mov	qword ptr [r13 + 0x10], rcx
ffffffff80016358: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff8001635c: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80016364: bb 08 00 00 00       	mov	ebx, 0x8
ffffffff80016369: 45 31 ff             	xor	r15d, r15d
ffffffff8001636c: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80016371: e9 51 16 00 00       	jmp	0xffffffff800179c7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff80016376: 48 8d b4 24 30 02 00 00      	lea	rsi, [rsp + 0x230]
ffffffff8001637e: 48 8d bc 24 20 05 00 00      	lea	rdi, [rsp + 0x520]
ffffffff80016386: ba 18 01 00 00       	mov	edx, 0x118
ffffffff8001638b: ff 15 9f 60 02 00    	call	qword ptr [rip + 0x2609f] # 0xffffffff8003c430
ffffffff80016391: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff80016399: 48 8b 8c 24 a0 00 00 00      	mov	rcx, qword ptr [rsp + 0xa0]
ffffffff800163a1: 48 89 84 24 00 05 00 00      	mov	qword ptr [rsp + 0x500], rax
ffffffff800163a9: 48 89 8c 24 08 05 00 00      	mov	qword ptr [rsp + 0x508], rcx
ffffffff800163b1: 48 8b 84 24 a8 00 00 00      	mov	rax, qword ptr [rsp + 0xa8]
ffffffff800163b9: 48 89 84 24 10 05 00 00      	mov	qword ptr [rsp + 0x510], rax
ffffffff800163c1: 48 8b 84 24 b0 00 00 00      	mov	rax, qword ptr [rsp + 0xb0]
ffffffff800163c9: 48 89 84 24 18 05 00 00      	mov	qword ptr [rsp + 0x518], rax
ffffffff800163d1: 4c 89 b4 24 f8 04 00 00      	mov	qword ptr [rsp + 0x4f8], r14
ffffffff800163d9: 49 83 fe 02          	cmp	r14, 0x2
ffffffff800163dd: 0f 85 f7 03 00 00    	jne	0xffffffff800167da <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xc5a>
ffffffff800163e3: 4c 89 bc 24 50 01 00 00      	mov	qword ptr [rsp + 0x150], r15
ffffffff800163eb: 48 89 9c 24 b8 03 00 00      	mov	qword ptr [rsp + 0x3b8], rbx
ffffffff800163f3: 4c 89 64 24 40       	mov	qword ptr [rsp + 0x40], r12
ffffffff800163f8: c6 44 24 16 01       	mov	byte ptr [rsp + 0x16], 0x1
ffffffff800163fd: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80016402: 48 89 84 24 48 01 00 00      	mov	qword ptr [rsp + 0x148], rax
ffffffff8001640a: 66 b8 01 00          	mov	ax, 0x1
ffffffff8001640e: 89 84 24 e0 00 00 00 	mov	dword ptr [rsp + 0xe0], eax
ffffffff80016415: bb 08 00 00 00       	mov	ebx, 0x8
ffffffff8001641a: 48 c7 84 24 c8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1c8], 0x0
ffffffff80016426: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001642f: 48 c7 84 24 a0 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3a0], 0x0
ffffffff8001643b: 48 c7 84 24 b0 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3b0], 0x0
ffffffff80016447: 48 c7 84 24 a8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1a8], 0x0
ffffffff80016453: 48 c7 84 24 30 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x130], 0x0
ffffffff8001645f: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff8001646b: 48 c7 84 24 a8 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x3a8], 0x0
ffffffff80016477: 48 c7 84 24 b8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xb8], 0x0
ffffffff80016483: 48 c7 84 24 b8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1b8], 0x0
ffffffff8001648f: 48 c7 84 24 90 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x90], 0x0
ffffffff8001649b: c6 44 24 15 01       	mov	byte ptr [rsp + 0x15], 0x1
ffffffff800164a0: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800164a5: 48 c7 84 24 98 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x398], 0x0
ffffffff800164b1: 48 c7 84 24 c0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1c0], 0x0
ffffffff800164bd: 48 c7 84 24 38 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x138], 0x0
ffffffff800164c9: 48 c7 84 24 28 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x128], 0x0
ffffffff800164d5: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800164da: 48 89 84 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], rax
ffffffff800164e2: 48 c7 84 24 70 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x370], 0x0
ffffffff800164ee: 48 c7 84 24 68 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x368], 0x0
ffffffff800164fa: 48 c7 84 24 90 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x390], 0x0
ffffffff80016506: 48 c7 84 24 88 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x388], 0x0
ffffffff80016512: 48 c7 84 24 80 03 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x380], 0x0
ffffffff8001651e: 48 89 84 24 78 03 00 00      	mov	qword ptr [rsp + 0x378], rax
ffffffff80016526: 48 c7 84 24 d0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1d0], 0x0
ffffffff80016532: 48 c7 84 24 b0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1b0], 0x0
ffffffff8001653e: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff80016543: 48 89 8c 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rcx
ffffffff8001654b: 48 c7 84 24 98 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x98], 0x0
ffffffff80016557: 48 c7 84 24 a0 00 00 00 08 00 00 00  	mov	qword ptr [rsp + 0xa0], 0x8
ffffffff80016563: 48 c7 84 24 a8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0xa8], 0x0
ffffffff8001656f: 48 83 bc 24 d0 00 00 00 00   	cmp	qword ptr [rsp + 0xd0], 0x0
ffffffff80016578: 48 89 6c 24 68       	mov	qword ptr [rsp + 0x68], rbp
ffffffff8001657d: 0f 84 26 05 00 00    	je	0xffffffff80016aa9 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf29>
ffffffff80016583: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 0xc8]
ffffffff8001658b: 4c 8d 3c c0          	lea	r15, [rax + 8*rax]
ffffffff8001658f: 45 31 e4             	xor	r12d, r12d
ffffffff80016592: 4c 8b 6c 24 58       	mov	r13, qword ptr [rsp + 0x58]
ffffffff80016597: 48 89 9c 24 58 01 00 00      	mov	qword ptr [rsp + 0x158], rbx
ffffffff8001659f: eb 5f                	jmp	0xffffffff80016600 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa80>
ffffffff800165a1: 4c 8b 8c 24 a0 00 00 00      	mov	r9, qword ptr [rsp + 0xa0]
ffffffff800165a9: 49 6b ce 38          	imul	rcx, r14, 0x38
ffffffff800165ad: 4d 89 24 09          	mov	qword ptr [r9 + rcx], r12
ffffffff800165b1: 49 89 7c 09 08       	mov	qword ptr [r9 + rcx + 0x8], rdi
ffffffff800165b6: 49 89 6c 09 10       	mov	qword ptr [r9 + rcx + 0x10], rbp
ffffffff800165bb: 48 01 f5             	add	rbp, rsi
ffffffff800165be: 49 89 44 09 18       	mov	qword ptr [r9 + rcx + 0x18], rax
ffffffff800165c3: 49 89 74 09 20       	mov	qword ptr [r9 + rcx + 0x20], rsi
ffffffff800165c8: 49 89 6c 09 28       	mov	qword ptr [r9 + rcx + 0x28], rbp
ffffffff800165cd: 41 88 54 09 30       	mov	byte ptr [r9 + rcx + 0x30], dl
ffffffff800165d2: 8b 54 24 74          	mov	edx, dword ptr [rsp + 0x74]
ffffffff800165d6: 41 88 54 09 31       	mov	byte ptr [r9 + rcx + 0x31], dl
ffffffff800165db: 8b 54 24 24          	mov	edx, dword ptr [rsp + 0x24]
ffffffff800165df: 41 88 54 09 32       	mov	byte ptr [r9 + rcx + 0x32], dl
ffffffff800165e4: 49 ff c6             	inc	r14
ffffffff800165e7: 4c 89 b4 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], r14
ffffffff800165ef: 49 83 c5 48          	add	r13, 0x48
ffffffff800165f3: 49 ff c4             	inc	r12
ffffffff800165f6: 49 83 c7 b8          	add	r15, -0x48
ffffffff800165fa: 0f 84 a9 04 00 00    	je	0xffffffff80016aa9 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf29>
ffffffff80016600: 45 8b 75 38          	mov	r14d, dword ptr [r13 + 0x38]
ffffffff80016604: 41 83 fe 04          	cmp	r14d, 0x4
ffffffff80016608: 74 06                	je	0xffffffff80016610 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa90>
ffffffff8001660a: 41 83 fe 09          	cmp	r14d, 0x9
ffffffff8001660e: 75 df                	jne	0xffffffff800165ef <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa6f>
ffffffff80016610: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80016618: 4c 89 ee             	mov	rsi, r13
ffffffff8001661b: 4c 89 c2             	mov	rdx, r8
ffffffff8001661e: e8 6d 4c 00 00       	call	0xffffffff8001b290 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff80016623: 48 8b ac 24 08 02 00 00      	mov	rbp, qword ptr [rsp + 0x208]
ffffffff8001662b: 48 83 fd 07          	cmp	rbp, 0x7
ffffffff8001662f: 0f 85 5f 0a 00 00    	jne	0xffffffff80017094 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1514>
ffffffff80016635: 49 8b 75 18          	mov	rsi, qword ptr [r13 + 0x18]
ffffffff80016639: 49 8b 6d 20          	mov	rbp, qword ptr [r13 + 0x20]
ffffffff8001663d: 48 85 ed             	test	rbp, rbp
ffffffff80016640: 74 25                	je	0xffffffff80016667 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xae7>
ffffffff80016642: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff80016647: 4c 89 c0             	mov	rax, r8
ffffffff8001664a: 48 29 f0             	sub	rax, rsi
ffffffff8001664d: 0f 82 71 11 00 00    	jb	0xffffffff800177c4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c44>
ffffffff80016653: 48 39 e8             	cmp	rax, rbp
ffffffff80016656: 0f 82 6f 11 00 00    	jb	0xffffffff800177cb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c4b>
ffffffff8001665c: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80016661: 48 8d 3c 30          	lea	rdi, [rax + rsi]
ffffffff80016665: eb 0a                	jmp	0xffffffff80016671 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xaf1>
ffffffff80016667: bf 01 00 00 00       	mov	edi, 0x1
ffffffff8001666c: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff80016671: 31 c0                	xor	eax, eax
ffffffff80016673: 41 83 fe 04          	cmp	r14d, 0x4
ffffffff80016677: 0f 94 c0             	sete	al
ffffffff8001667a: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff8001667f: 48 8d 14 85 08 00 00 00      	lea	rdx, [4*rax + 0x8]
ffffffff80016687: 48 8d 0c c5 10 00 00 00      	lea	rcx, [8*rax + 0x10]
ffffffff8001668f: 48 0f 45 ca          	cmovne	rcx, rdx
ffffffff80016693: 48 89 e8             	mov	rax, rbp
ffffffff80016696: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8001669a: 74 0a                	je	0xffffffff800166a6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb26>
ffffffff8001669c: 48 89 e8             	mov	rax, rbp
ffffffff8001669f: 31 d2                	xor	edx, edx
ffffffff800166a1: 48 f7 f1             	div	rcx
ffffffff800166a4: eb 06                	jmp	0xffffffff800166ac <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb2c>
ffffffff800166a6: 89 e8                	mov	eax, ebp
ffffffff800166a8: 31 d2                	xor	edx, edx
ffffffff800166aa: f7 f1                	div	ecx
ffffffff800166ac: 41 83 fe 04          	cmp	r14d, 0x4
ffffffff800166b0: 0f 94 c2             	sete	dl
ffffffff800166b3: 4c 8b b4 24 a8 00 00 00      	mov	r14, qword ptr [rsp + 0xa8]
ffffffff800166bb: 4c 3b b4 24 98 00 00 00      	cmp	r14, qword ptr [rsp + 0x98]
ffffffff800166c3: 0f 85 d8 fe ff ff    	jne	0xffffffff800165a1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa21>
ffffffff800166c9: 48 89 bc 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rdi
ffffffff800166d1: 48 8d bc 24 98 00 00 00      	lea	rdi, [rsp + 0x98]
ffffffff800166d9: 48 89 b4 24 e0 01 00 00      	mov	qword ptr [rsp + 0x1e0], rsi
ffffffff800166e1: 48 c7 c6 d0 80 02 80 	mov	rsi, -0x7ffd7f30
ffffffff800166e8: 48 89 c3             	mov	rbx, rax
ffffffff800166eb: 88 54 24 3e          	mov	byte ptr [rsp + 0x3e], dl
ffffffff800166ef: e8 dc 3f 00 00       	call	0xffffffff8001a6d0 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>
ffffffff800166f4: 0f b6 54 24 3e       	movzx	edx, byte ptr [rsp + 0x3e]
ffffffff800166f9: 48 89 d8             	mov	rax, rbx
ffffffff800166fc: 48 8b bc 24 c0 00 00 00      	mov	rdi, qword ptr [rsp + 0xc0]
ffffffff80016704: 48 8b b4 24 e0 01 00 00      	mov	rsi, qword ptr [rsp + 0x1e0]
ffffffff8001670c: 48 8b 9c 24 58 01 00 00      	mov	rbx, qword ptr [rsp + 0x158]
ffffffff80016714: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff80016719: e9 83 fe ff ff       	jmp	0xffffffff800165a1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa21>
ffffffff8001671e: 4d 85 c0             	test	r8, r8
ffffffff80016721: 4c 89 ff             	mov	rdi, r15
ffffffff80016724: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016729: 0f 84 d1 03 00 00    	je	0xffffffff80016b00 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf80>
ffffffff8001672f: 41 8b 41 3c          	mov	eax, dword ptr [r9 + 0x3c]
ffffffff80016733: 4c 39 c0             	cmp	rax, r8
ffffffff80016736: 0f 83 fb f8 ff ff    	jae	0xffffffff80016037 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff8001673c: 4c 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r8
ffffffff80016744: 48 8d 04 c0          	lea	rax, [rax + 8*rax]
ffffffff80016748: 4c 89 cb             	mov	rbx, r9
ffffffff8001674b: 4d 8d 24 c1          	lea	r12, [r9 + 8*rax]
ffffffff8001674f: 48 8d bc 24 f8 04 00 00      	lea	rdi, [rsp + 0x4f8]
ffffffff80016757: 4c 89 e6             	mov	rsi, r12
ffffffff8001675a: 4c 89 d2             	mov	rdx, r10
ffffffff8001675d: 4d 89 d5             	mov	r13, r10
ffffffff80016760: e8 2b 4b 00 00       	call	0xffffffff8001b290 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff80016765: 83 bc 24 f8 04 00 00 07      	cmp	dword ptr [rsp + 0x4f8], 0x7
ffffffff8001676d: 0f 85 84 02 00 00    	jne	0xffffffff800169f7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xe77>
ffffffff80016773: 49 8b 4c 24 18       	mov	rcx, qword ptr [r12 + 0x18]
ffffffff80016778: 4d 8b 44 24 20       	mov	r8, qword ptr [r12 + 0x20]
ffffffff8001677d: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80016785: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff8001678a: 4c 89 ea             	mov	rdx, r13
ffffffff8001678d: 45 31 c9             	xor	r9d, r9d
ffffffff80016790: e8 2b 55 00 00       	call	0xffffffff8001bcc0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff80016795: 48 8b 84 24 08 02 00 00      	mov	rax, qword ptr [rsp + 0x208]
ffffffff8001679d: 48 89 84 24 f8 01 00 00      	mov	qword ptr [rsp + 0x1f8], rax
ffffffff800167a5: 48 f7 d8             	neg	rax
ffffffff800167a8: 0f 80 89 02 00 00    	jo	0xffffffff80016a37 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xeb7>
ffffffff800167ae: 4c 8b a4 24 10 02 00 00      	mov	r12, qword ptr [rsp + 0x210]
ffffffff800167b6: 4c 89 ff             	mov	rdi, r15
ffffffff800167b9: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff800167be: 4c 8b 6c 24 48       	mov	r13, qword ptr [rsp + 0x48]
ffffffff800167c3: 4c 8b 84 24 d0 00 00 00      	mov	r8, qword ptr [rsp + 0xd0]
ffffffff800167cb: 49 89 d9             	mov	r9, rbx
ffffffff800167ce: e9 bc f8 ff ff       	jmp	0xffffffff8001608f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x50f>
ffffffff800167d3: 31 f6                	xor	esi, esi
ffffffff800167d5: e9 e3 00 00 00       	jmp	0xffffffff800168bd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd3d>
ffffffff800167da: 48 8b 84 24 08 06 00 00      	mov	rax, qword ptr [rsp + 0x608]
ffffffff800167e2: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rax
ffffffff800167ea: 48 8b 8c 24 68 05 00 00      	mov	rcx, qword ptr [rsp + 0x568]
ffffffff800167f2: 4c 8b 84 24 70 05 00 00      	mov	r8, qword ptr [rsp + 0x570]
ffffffff800167fa: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80016802: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80016807: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8001680c: 45 31 c9             	xor	r9d, r9d
ffffffff8001680f: e8 ac 54 00 00       	call	0xffffffff8001bcc0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff80016814: 4c 8b b4 24 08 02 00 00      	mov	r14, qword ptr [rsp + 0x208]
ffffffff8001681c: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff80016824: 4c 89 f1             	mov	rcx, r14
ffffffff80016827: 48 f7 d9             	neg	rcx
ffffffff8001682a: 48 89 84 24 18 04 00 00      	mov	qword ptr [rsp + 0x418], rax
ffffffff80016832: 48 8b 84 24 18 02 00 00      	mov	rax, qword ptr [rsp + 0x218]
ffffffff8001683a: 48 89 84 24 20 04 00 00      	mov	qword ptr [rsp + 0x420], rax
ffffffff80016842: 48 8b 84 24 20 02 00 00      	mov	rax, qword ptr [rsp + 0x220]
ffffffff8001684a: 48 89 84 24 28 04 00 00      	mov	qword ptr [rsp + 0x428], rax
ffffffff80016852: 48 8b 84 24 28 02 00 00      	mov	rax, qword ptr [rsp + 0x228]
ffffffff8001685a: 48 89 84 24 30 04 00 00      	mov	qword ptr [rsp + 0x430], rax
ffffffff80016862: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80016867: 0f 81 9b 02 00 00    	jno	0xffffffff80016b08 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf88>
ffffffff8001686d: 48 8b 84 24 30 04 00 00      	mov	rax, qword ptr [rsp + 0x430]
ffffffff80016875: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff80016879: 48 8b 84 24 28 04 00 00      	mov	rax, qword ptr [rsp + 0x428]
ffffffff80016881: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff80016885: 48 8b 84 24 18 04 00 00      	mov	rax, qword ptr [rsp + 0x418]
ffffffff8001688d: 48 8b 8c 24 20 04 00 00      	mov	rcx, qword ptr [rsp + 0x420]
ffffffff80016895: 49 89 4d 10          	mov	qword ptr [r13 + 0x10], rcx
ffffffff80016899: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff8001689d: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff800168a5: bb 08 00 00 00       	mov	ebx, 0x8
ffffffff800168aa: 45 31 ff             	xor	r15d, r15d
ffffffff800168ad: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff800168b2: e9 e3 10 00 00       	jmp	0xffffffff8001799a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff800168b7: 31 d2                	xor	edx, edx
ffffffff800168b9: f7 f6                	div	esi
ffffffff800168bb: 89 c6                	mov	esi, eax
ffffffff800168bd: 31 c0                	xor	eax, eax
ffffffff800168bf: 41 80 fd 02          	cmp	r13b, 0x2
ffffffff800168c3: 0f 94 c0             	sete	al
ffffffff800168c6: 4b 8b 5c 19 18       	mov	rbx, qword ptr [r9 + r11 + 0x18]
ffffffff800168cb: 48 89 9c 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rbx
ffffffff800168d3: 48 89 b4 24 f8 04 00 00      	mov	qword ptr [rsp + 0x4f8], rsi
ffffffff800168db: 48 8d 14 c5 10 00 00 00      	lea	rdx, [8*rax + 0x10]
ffffffff800168e3: 48 89 f0             	mov	rax, rsi
ffffffff800168e6: 48 f7 e2             	mul	rdx
ffffffff800168e9: 0f 80 50 17 00 00    	jo	0xffffffff8001803f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x24bf>
ffffffff800168ef: 4c 89 d2             	mov	rdx, r10
ffffffff800168f2: 48 29 da             	sub	rdx, rbx
ffffffff800168f5: 73 07                	jae	0xffffffff800168fe <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd7e>
ffffffff800168f7: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800168fc: eb 0a                	jmp	0xffffffff80016908 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd88>
ffffffff800168fe: 48 39 c2             	cmp	rdx, rax
ffffffff80016901: 73 27                	jae	0xffffffff8001692a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xdaa>
ffffffff80016903: 31 c9                	xor	ecx, ecx
ffffffff80016905: 48 89 c3             	mov	rbx, rax
ffffffff80016908: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff8001690d: 49 89 4d 08          	mov	qword ptr [r13 + 0x8], rcx
ffffffff80016911: 49 89 5d 10          	mov	qword ptr [r13 + 0x10], rbx
ffffffff80016915: 49 89 55 18          	mov	qword ptr [r13 + 0x18], rdx
ffffffff80016919: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff8001691d: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80016925: e9 4a 11 00 00       	jmp	0xffffffff80017a74 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff8001692a: 48 89 8c 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rcx
ffffffff80016932: 48 89 84 24 d8 01 00 00      	mov	qword ptr [rsp + 0x1d8], rax
ffffffff8001693a: 48 89 b4 24 50 01 00 00      	mov	qword ptr [rsp + 0x150], rsi
ffffffff80016942: 48 89 bc 24 00 04 00 00      	mov	qword ptr [rsp + 0x400], rdi
ffffffff8001694a: 48 8b 4c 24 58       	mov	rcx, qword ptr [rsp + 0x58]
ffffffff8001694f: 46 8b 4c 19 3c       	mov	r9d, dword ptr [rcx + r11 + 0x3c]
ffffffff80016954: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff8001695c: 4c 8b 7c 24 30       	mov	r15, qword ptr [rsp + 0x30]
ffffffff80016961: 4c 89 fe             	mov	rsi, r15
ffffffff80016964: 4c 89 d2             	mov	rdx, r10
ffffffff80016967: 4c 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], r8
ffffffff8001696f: e8 1c 17 00 00       	call	0xffffffff80018090 <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6>
ffffffff80016974: 48 8b 8c 24 08 02 00 00      	mov	rcx, qword ptr [rsp + 0x208]
ffffffff8001697c: 48 89 c8             	mov	rax, rcx
ffffffff8001697f: 48 f7 d8             	neg	rax
ffffffff80016982: 0f 81 51 02 00 00    	jno	0xffffffff80016bd9 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1059>
ffffffff80016988: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff80016990: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff80016998: 0f b7 94 24 20 02 00 00      	movzx	edx, word ptr [rsp + 0x220]
ffffffff800169a0: 48 8b b4 24 22 02 00 00      	mov	rsi, qword ptr [rsp + 0x222]
ffffffff800169a8: 48 89 b4 24 98 01 00 00      	mov	qword ptr [rsp + 0x198], rsi
ffffffff800169b0: 48 8b b4 24 28 02 00 00      	mov	rsi, qword ptr [rsp + 0x228]
ffffffff800169b8: 48 89 b4 24 9e 01 00 00      	mov	qword ptr [rsp + 0x19e], rsi
ffffffff800169c0: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800169c5: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff800169c9: 49 89 4d 10          	mov	qword ptr [r13 + 0x10], rcx
ffffffff800169cd: 66 41 89 55 18       	mov	word ptr [r13 + 0x18], dx
ffffffff800169d2: 48 8b 84 24 98 01 00 00      	mov	rax, qword ptr [rsp + 0x198]
ffffffff800169da: 48 8b 8c 24 9e 01 00 00      	mov	rcx, qword ptr [rsp + 0x19e]
ffffffff800169e2: 49 89 45 1a          	mov	qword ptr [r13 + 0x1a], rax
ffffffff800169e6: 49 89 4d 20          	mov	qword ptr [r13 + 0x20], rcx
ffffffff800169ea: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff800169f2: e9 7d 10 00 00       	jmp	0xffffffff80017a74 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff800169f7: 48 8b 84 24 10 05 00 00      	mov	rax, qword ptr [rsp + 0x510]
ffffffff800169ff: 48 89 84 24 28 02 00 00      	mov	qword ptr [rsp + 0x228], rax
ffffffff80016a07: 48 8b 84 24 08 05 00 00      	mov	rax, qword ptr [rsp + 0x508]
ffffffff80016a0f: 48 89 84 24 20 02 00 00      	mov	qword ptr [rsp + 0x220], rax
ffffffff80016a17: 48 8b 84 24 f8 04 00 00      	mov	rax, qword ptr [rsp + 0x4f8]
ffffffff80016a1f: 48 8b 8c 24 00 05 00 00      	mov	rcx, qword ptr [rsp + 0x500]
ffffffff80016a27: 48 89 8c 24 18 02 00 00      	mov	qword ptr [rsp + 0x218], rcx
ffffffff80016a2f: 48 89 84 24 10 02 00 00      	mov	qword ptr [rsp + 0x210], rax
ffffffff80016a37: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff80016a3f: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff80016a47: 48 89 8c 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rcx
ffffffff80016a4f: 48 8b 8c 24 20 02 00 00      	mov	rcx, qword ptr [rsp + 0x220]
ffffffff80016a57: 48 89 8c 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rcx
ffffffff80016a5f: 48 8b 8c 24 28 02 00 00      	mov	rcx, qword ptr [rsp + 0x228]
ffffffff80016a67: 48 89 8c 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rcx
ffffffff80016a6f: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80016a74: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80016a78: 48 8b 84 24 e8 00 00 00      	mov	rax, qword ptr [rsp + 0xe8]
ffffffff80016a80: 48 8b 8c 24 f0 00 00 00      	mov	rcx, qword ptr [rsp + 0xf0]
ffffffff80016a88: 49 89 45 10          	mov	qword ptr [r13 + 0x10], rax
ffffffff80016a8c: 49 89 4d 18          	mov	qword ptr [r13 + 0x18], rcx
ffffffff80016a90: 48 8b 84 24 f8 00 00 00      	mov	rax, qword ptr [rsp + 0xf8]
ffffffff80016a98: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff80016a9c: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80016aa4: e9 f2 0f 00 00       	jmp	0xffffffff80017a9b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f1b>
ffffffff80016aa9: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 0xc8]
ffffffff80016ab1: 48 8d 04 c0          	lea	rax, [rax + 8*rax]
ffffffff80016ab5: 31 c9                	xor	ecx, ecx
ffffffff80016ab7: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80016abc: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80016ac1: 48 39 c8             	cmp	rax, rcx
ffffffff80016ac4: 0f 84 fc 01 00 00    	je	0xffffffff80016cc6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1146>
ffffffff80016aca: 48 83 c1 48          	add	rcx, 0x48
ffffffff80016ace: 81 7a 38 ff ff ff 6f 	cmp	dword ptr [rdx + 0x38], 0x6fffffff
ffffffff80016ad5: 48 8d 52 48          	lea	rdx, [rdx + 0x48]
ffffffff80016ad9: 75 e6                	jne	0xffffffff80016ac1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf41>
ffffffff80016adb: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80016ae0: 4c 8b 6c 0a d0       	mov	r13, qword ptr [rdx + rcx - 0x30]
ffffffff80016ae5: 48 8b 54 0a d8       	mov	rdx, qword ptr [rdx + rcx - 0x28]
ffffffff80016aea: 4c 89 c1             	mov	rcx, r8
ffffffff80016aed: 4c 29 e9             	sub	rcx, r13
ffffffff80016af0: 0f 83 d1 05 00 00    	jae	0xffffffff800170c7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1547>
ffffffff80016af6: bd 01 00 00 00       	mov	ebp, 0x1
ffffffff80016afb: e9 d5 05 00 00       	jmp	0xffffffff800170d5 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1555>
ffffffff80016b00: 45 31 c0             	xor	r8d, r8d
ffffffff80016b03: e9 2f f5 ff ff       	jmp	0xffffffff80016037 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff80016b08: 4c 89 bc 24 50 01 00 00      	mov	qword ptr [rsp + 0x150], r15
ffffffff80016b10: 4c 8d bc 24 10 01 00 00      	lea	r15, [rsp + 0x110]
ffffffff80016b18: 48 8b 84 24 30 02 00 00      	mov	rax, qword ptr [rsp + 0x230]
ffffffff80016b20: 48 8b 8c 24 38 02 00 00      	mov	rcx, qword ptr [rsp + 0x238]
ffffffff80016b28: 48 89 8c 24 b0 04 00 00      	mov	qword ptr [rsp + 0x4b0], rcx
ffffffff80016b30: 48 89 84 24 a8 04 00 00      	mov	qword ptr [rsp + 0x4a8], rax
ffffffff80016b38: 48 8b 84 24 e8 00 00 00      	mov	rax, qword ptr [rsp + 0xe8]
ffffffff80016b40: 48 85 c0             	test	rax, rax
ffffffff80016b43: 74 1a                	je	0xffffffff80016b5f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xfdf>
ffffffff80016b45: 48 8b bc 24 f0 00 00 00      	mov	rdi, qword ptr [rsp + 0xf0]
ffffffff80016b4d: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80016b51: 48 8d 34 40          	lea	rsi, [rax + 2*rax]
ffffffff80016b55: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80016b5a: e8 01 24 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80016b5f: 4c 89 b4 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], r14
ffffffff80016b67: 48 8b 84 24 30 04 00 00      	mov	rax, qword ptr [rsp + 0x430]
ffffffff80016b6f: 49 89 47 f8          	mov	qword ptr [r15 - 0x8], rax
ffffffff80016b73: 48 8b 84 24 28 04 00 00      	mov	rax, qword ptr [rsp + 0x428]
ffffffff80016b7b: 49 89 47 f0          	mov	qword ptr [r15 - 0x10], rax
ffffffff80016b7f: 48 8b 84 24 18 04 00 00      	mov	rax, qword ptr [rsp + 0x418]
ffffffff80016b87: 48 8b 8c 24 20 04 00 00      	mov	rcx, qword ptr [rsp + 0x420]
ffffffff80016b8f: 49 89 4f e8          	mov	qword ptr [r15 - 0x18], rcx
ffffffff80016b93: 49 89 47 e0          	mov	qword ptr [r15 - 0x20], rax
ffffffff80016b97: 48 8b 84 24 a8 04 00 00      	mov	rax, qword ptr [rsp + 0x4a8]
ffffffff80016b9f: 48 8b 8c 24 b0 04 00 00      	mov	rcx, qword ptr [rsp + 0x4b0]
ffffffff80016ba7: 49 89 4f 08          	mov	qword ptr [r15 + 0x8], rcx
ffffffff80016bab: 49 89 07             	mov	qword ptr [r15], rax
ffffffff80016bae: 48 8b b4 24 10 06 00 00      	mov	rsi, qword ptr [rsp + 0x610]
ffffffff80016bb6: 48 85 f6             	test	rsi, rsi
ffffffff80016bb9: 0f 84 9c 01 00 00    	je	0xffffffff80016d5b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x11db>
ffffffff80016bbf: 48 8d bc 24 e8 00 00 00      	lea	rdi, [rsp + 0xe8]
ffffffff80016bc7: e8 04 54 00 00       	call	0xffffffff8001bfd0 <goblin::strtab::Strtab::get_at::h79549c4c464d6553>
ffffffff80016bcc: 48 89 84 24 d0 01 00 00      	mov	qword ptr [rsp + 0x1d0], rax
ffffffff80016bd4: e9 8e 01 00 00       	jmp	0xffffffff80016d67 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x11e7>
ffffffff80016bd9: 48 89 8c 24 f0 01 00 00      	mov	qword ptr [rsp + 0x1f0], rcx
ffffffff80016be1: 48 8b 84 24 d8 01 00 00      	mov	rax, qword ptr [rsp + 0x1d8]
ffffffff80016be9: 48 01 d8             	add	rax, rbx
ffffffff80016bec: 48 89 84 24 f8 03 00 00      	mov	qword ptr [rsp + 0x3f8], rax
ffffffff80016bf4: 49 8d 04 1f          	lea	rax, [r15 + rbx]
ffffffff80016bf8: 48 89 84 24 f0 03 00 00      	mov	qword ptr [rsp + 0x3f0], rax
ffffffff80016c00: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff80016c08: 48 89 84 24 e8 01 00 00      	mov	qword ptr [rsp + 0x1e8], rax
ffffffff80016c10: 48 8b 84 24 18 02 00 00      	mov	rax, qword ptr [rsp + 0x218]
ffffffff80016c18: 48 89 84 24 c8 03 00 00      	mov	qword ptr [rsp + 0x3c8], rax
ffffffff80016c20: 0f b6 84 24 20 02 00 00      	movzx	eax, byte ptr [rsp + 0x220]
ffffffff80016c28: 48 89 84 24 d0 03 00 00      	mov	qword ptr [rsp + 0x3d0], rax
ffffffff80016c30: 0f b6 84 24 21 02 00 00      	movzx	eax, byte ptr [rsp + 0x221]
ffffffff80016c38: 48 89 84 24 d8 03 00 00      	mov	qword ptr [rsp + 0x3d8], rax
ffffffff80016c40: 48 8b 84 24 22 02 00 00      	mov	rax, qword ptr [rsp + 0x222]
ffffffff80016c48: 48 89 84 24 98 01 00 00      	mov	qword ptr [rsp + 0x198], rax
ffffffff80016c50: 48 8b 84 24 28 02 00 00      	mov	rax, qword ptr [rsp + 0x228]
ffffffff80016c58: 48 89 84 24 9e 01 00 00      	mov	qword ptr [rsp + 0x19e], rax
ffffffff80016c60: 48 8b 84 24 30 02 00 00      	mov	rax, qword ptr [rsp + 0x230]
ffffffff80016c68: 48 89 84 24 e8 03 00 00      	mov	qword ptr [rsp + 0x3e8], rax
ffffffff80016c70: 48 8b 84 24 38 02 00 00      	mov	rax, qword ptr [rsp + 0x238]
ffffffff80016c78: 48 89 84 24 e0 03 00 00      	mov	qword ptr [rsp + 0x3e0], rax
ffffffff80016c80: 48 8b 84 24 98 01 00 00      	mov	rax, qword ptr [rsp + 0x198]
ffffffff80016c88: 48 8b 8c 24 9e 01 00 00      	mov	rcx, qword ptr [rsp + 0x19e]
ffffffff80016c90: 48 89 84 24 68 04 00 00      	mov	qword ptr [rsp + 0x468], rax
ffffffff80016c98: 48 89 8c 24 6e 04 00 00      	mov	qword ptr [rsp + 0x46e], rcx
ffffffff80016ca0: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80016ca4: 48 89 84 24 c0 03 00 00      	mov	qword ptr [rsp + 0x3c0], rax
ffffffff80016cac: 8b 44 24 74          	mov	eax, dword ptr [rsp + 0x74]
ffffffff80016cb0: 88 44 24 17          	mov	byte ptr [rsp + 0x17], al
ffffffff80016cb4: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016cb9: 4c 8b bc 24 50 01 00 00      	mov	r15, qword ptr [rsp + 0x150]
ffffffff80016cc1: e9 53 f5 ff ff       	jmp	0xffffffff80016219 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x699>
ffffffff80016cc6: 41 bc 02 00 00 00    	mov	r12d, 0x2
ffffffff80016ccc: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff80016cd1: 31 c9                	xor	ecx, ecx
ffffffff80016cd3: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80016cd8: 48 39 c8             	cmp	rax, rcx
ffffffff80016cdb: 74 36                	je	0xffffffff80016d13 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1193>
ffffffff80016cdd: 48 83 c1 48          	add	rcx, 0x48
ffffffff80016ce1: 81 7a 38 fd ff ff 6f 	cmp	dword ptr [rdx + 0x38], 0x6ffffffd
ffffffff80016ce8: 48 8d 52 48          	lea	rdx, [rdx + 0x48]
ffffffff80016cec: 75 ea                	jne	0xffffffff80016cd8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1158>
ffffffff80016cee: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80016cf3: 48 8b 74 0a d0       	mov	rsi, qword ptr [rdx + rcx - 0x30]
ffffffff80016cf8: 48 8b 6c 0a d8       	mov	rbp, qword ptr [rdx + rcx - 0x28]
ffffffff80016cfd: 4c 89 c2             	mov	rdx, r8
ffffffff80016d00: 48 29 f2             	sub	rdx, rsi
ffffffff80016d03: 0f 83 f1 0a 00 00    	jae	0xffffffff800177fa <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c7a>
ffffffff80016d09: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80016d0e: e9 f5 0a 00 00       	jmp	0xffffffff80017808 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c88>
ffffffff80016d13: bf 02 00 00 00       	mov	edi, 0x2
ffffffff80016d18: 31 c9                	xor	ecx, ecx
ffffffff80016d1a: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80016d1f: 48 39 c8             	cmp	rax, rcx
ffffffff80016d22: 0f 84 05 04 00 00    	je	0xffffffff8001712d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x15ad>
ffffffff80016d28: 48 83 c1 48          	add	rcx, 0x48
ffffffff80016d2c: 81 7a 38 fe ff ff 6f 	cmp	dword ptr [rdx + 0x38], 0x6ffffffe
ffffffff80016d33: 48 8d 52 48          	lea	rdx, [rdx + 0x48]
ffffffff80016d37: 75 e6                	jne	0xffffffff80016d1f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x119f>
ffffffff80016d39: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff80016d3e: 48 8b 54 08 d0       	mov	rdx, qword ptr [rax + rcx - 0x30]
ffffffff80016d43: 48 8b 6c 08 d8       	mov	rbp, qword ptr [rax + rcx - 0x28]
ffffffff80016d48: 49 29 d0             	sub	r8, rdx
ffffffff80016d4b: 0f 83 eb 0b 00 00    	jae	0xffffffff8001793c <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1dbc>
ffffffff80016d51: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80016d56: e9 ef 0b 00 00       	jmp	0xffffffff8001794a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1dca>
ffffffff80016d5b: 48 c7 84 24 d0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1d0], 0x0
ffffffff80016d67: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80016d6c: 48 89 9c 24 b8 03 00 00      	mov	qword ptr [rsp + 0x3b8], rbx
ffffffff80016d74: 48 83 bc 24 f8 05 00 00 00   	cmp	qword ptr [rsp + 0x5f8], 0x0
ffffffff80016d7d: 48 89 6c 24 68       	mov	qword ptr [rsp + 0x68], rbp
ffffffff80016d82: 4c 89 64 24 40       	mov	qword ptr [rsp + 0x40], r12
ffffffff80016d87: 48 89 94 24 78 04 00 00      	mov	qword ptr [rsp + 0x478], rdx
ffffffff80016d8f: 74 44                	je	0xffffffff80016dd5 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1255>
ffffffff80016d91: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80016d99: 48 8d b4 24 f8 04 00 00      	lea	rsi, [rsp + 0x4f8]
ffffffff80016da1: 48 8d 94 24 e8 00 00 00      	lea	rdx, [rsp + 0xe8]
ffffffff80016da9: e8 42 1d 00 00       	call	0xffffffff80018af0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca>
ffffffff80016dae: 48 8b 84 24 08 02 00 00      	mov	rax, qword ptr [rsp + 0x208]
ffffffff80016db6: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80016dbb: 48 8b 9c 24 10 02 00 00      	mov	rbx, qword ptr [rsp + 0x210]
ffffffff80016dc3: 48 8b 84 24 18 02 00 00      	mov	rax, qword ptr [rsp + 0x218]
ffffffff80016dcb: 48 89 84 24 c8 01 00 00      	mov	qword ptr [rsp + 0x1c8], rax
ffffffff80016dd3: eb 1a                	jmp	0xffffffff80016def <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x126f>
ffffffff80016dd5: bb 08 00 00 00       	mov	ebx, 0x8
ffffffff80016dda: 48 c7 84 24 c8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x1c8], 0x0
ffffffff80016de6: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff80016def: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016df4: 4c 8b ac 24 30 06 00 00      	mov	r13, qword ptr [rsp + 0x630]
ffffffff80016dfc: 4d 85 ed             	test	r13, r13
ffffffff80016dff: 0f 84 36 02 00 00    	je	0xffffffff8001703b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14bb>
ffffffff80016e05: 4c 8b a4 24 28 06 00 00      	mov	r12, qword ptr [rsp + 0x628]
ffffffff80016e0d: 49 c1 e5 04          	shl	r13, 0x4
ffffffff80016e11: 4d 01 e5             	add	r13, r12
ffffffff80016e14: eb 3b                	jmp	0xffffffff80016e51 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12d1>
ffffffff80016e16: 48 8d 84 24 70 01 00 00      	lea	rax, [rsp + 0x170]
ffffffff80016e1e: 48 8d 8c 24 78 01 00 00      	lea	rcx, [rsp + 0x178]
ffffffff80016e26: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff80016e29: 4c 89 f2             	mov	rdx, r14
ffffffff80016e2c: 48 c1 e2 04          	shl	rdx, 0x4
ffffffff80016e30: 4c 89 3c 10          	mov	qword ptr [rax + rdx], r15
ffffffff80016e34: 48 89 6c 10 08       	mov	qword ptr [rax + rdx + 0x8], rbp
ffffffff80016e39: 49 ff c6             	inc	r14
ffffffff80016e3c: 4c 89 31             	mov	qword ptr [rcx], r14
ffffffff80016e3f: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80016e44: 49 83 c4 10          	add	r12, 0x10
ffffffff80016e48: 4d 39 ec             	cmp	r12, r13
ffffffff80016e4b: 0f 84 ea 01 00 00    	je	0xffffffff8001703b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14bb>
ffffffff80016e51: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff80016e55: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff80016e59: 74 2a                	je	0xffffffff80016e85 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1305>
ffffffff80016e5b: 48 83 f8 1d          	cmp	rax, 0x1d
ffffffff80016e5f: 75 e3                	jne	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80016e61: 48 8b 94 24 f8 00 00 00      	mov	rdx, qword ptr [rsp + 0xf8]
ffffffff80016e69: 48 85 d2             	test	rdx, rdx
ffffffff80016e6c: 74 d6                	je	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80016e6e: 49 8b 44 24 08       	mov	rax, qword ptr [r12 + 0x8]
ffffffff80016e73: 48 8b 8c 24 f0 00 00 00      	mov	rcx, qword ptr [rsp + 0xf0]
ffffffff80016e7b: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80016e7f: 75 2f                	jne	0xffffffff80016eb0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1330>
ffffffff80016e81: 31 f6                	xor	esi, esi
ffffffff80016e83: eb 5d                	jmp	0xffffffff80016ee2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1362>
ffffffff80016e85: 48 8b 94 24 f8 00 00 00      	mov	rdx, qword ptr [rsp + 0xf8]
ffffffff80016e8d: 48 85 d2             	test	rdx, rdx
ffffffff80016e90: 74 b2                	je	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80016e92: 49 8b 44 24 08       	mov	rax, qword ptr [r12 + 0x8]
ffffffff80016e97: 48 8b 8c 24 f0 00 00 00      	mov	rcx, qword ptr [rsp + 0xf0]
ffffffff80016e9f: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80016ea3: 0f 85 b8 00 00 00    	jne	0xffffffff80016f61 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13e1>
ffffffff80016ea9: 31 f6                	xor	esi, esi
ffffffff80016eab: e9 e2 00 00 00       	jmp	0xffffffff80016f92 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1412>
ffffffff80016eb0: 31 ff                	xor	edi, edi
ffffffff80016eb2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80016ec0: 49 89 d0             	mov	r8, rdx
ffffffff80016ec3: 49 d1 e8             	shr	r8
ffffffff80016ec6: 49 8d 34 38          	lea	rsi, [r8 + rdi]
ffffffff80016eca: 4c 8d 0c 76          	lea	r9, [rsi + 2*rsi]
ffffffff80016ece: 4a 39 04 c9          	cmp	qword ptr [rcx + 8*r9], rax
ffffffff80016ed2: 48 0f 47 f7          	cmova	rsi, rdi
ffffffff80016ed6: 4c 29 c2             	sub	rdx, r8
ffffffff80016ed9: 48 89 f7             	mov	rdi, rsi
ffffffff80016edc: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80016ee0: 77 de                	ja	0xffffffff80016ec0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1340>
ffffffff80016ee2: 48 8d 14 76          	lea	rdx, [rsi + 2*rsi]
ffffffff80016ee6: 48 39 04 d1          	cmp	qword ptr [rcx + 8*rdx], rax
ffffffff80016eea: 75 0c                	jne	0xffffffff80016ef8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1378>
ffffffff80016eec: 4c 8b 7c d1 08       	mov	r15, qword ptr [rcx + 8*rdx + 0x8]
ffffffff80016ef1: 48 8b 6c d1 10       	mov	rbp, qword ptr [rcx + 8*rdx + 0x10]
ffffffff80016ef6: eb 29                	jmp	0xffffffff80016f21 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13a1>
ffffffff80016ef8: 48 83 d6 00          	adc	rsi, 0x0
ffffffff80016efc: 0f 84 42 ff ff ff    	je	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80016f02: 48 8d 14 76          	lea	rdx, [rsi + 2*rsi]
ffffffff80016f06: 4c 8b 7c d1 f0       	mov	r15, qword ptr [rcx + 8*rdx - 0x10]
ffffffff80016f0b: 48 8b 6c d1 f8       	mov	rbp, qword ptr [rcx + 8*rdx - 0x8]
ffffffff80016f10: 48 2b 44 d1 e8       	sub	rax, qword ptr [rcx + 8*rdx - 0x18]
ffffffff80016f15: 0f 85 e6 00 00 00    	jne	0xffffffff80017001 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1481>
ffffffff80016f1b: 48 29 c5             	sub	rbp, rax
ffffffff80016f1e: 49 01 c7             	add	r15, rax
ffffffff80016f21: 4c 8b b4 24 90 01 00 00      	mov	r14, qword ptr [rsp + 0x190]
ffffffff80016f29: 4c 3b b4 24 80 01 00 00      	cmp	r14, qword ptr [rsp + 0x180]
ffffffff80016f31: 75 19                	jne	0xffffffff80016f4c <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13cc>
ffffffff80016f33: 48 8d bc 24 80 01 00 00      	lea	rdi, [rsp + 0x180]
ffffffff80016f3b: 48 c7 c6 a0 80 02 80 	mov	rsi, -0x7ffd7f60
ffffffff80016f42: e8 f9 35 00 00       	call	0xffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80016f47: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016f4c: 48 8d 84 24 88 01 00 00      	lea	rax, [rsp + 0x188]
ffffffff80016f54: 48 8d 8c 24 90 01 00 00      	lea	rcx, [rsp + 0x190]
ffffffff80016f5c: e9 c5 fe ff ff       	jmp	0xffffffff80016e26 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12a6>
ffffffff80016f61: 31 ff                	xor	edi, edi
ffffffff80016f63: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80016f70: 49 89 d0             	mov	r8, rdx
ffffffff80016f73: 49 d1 e8             	shr	r8
ffffffff80016f76: 49 8d 34 38          	lea	rsi, [r8 + rdi]
ffffffff80016f7a: 4c 8d 0c 76          	lea	r9, [rsi + 2*rsi]
ffffffff80016f7e: 4a 39 04 c9          	cmp	qword ptr [rcx + 8*r9], rax
ffffffff80016f82: 48 0f 47 f7          	cmova	rsi, rdi
ffffffff80016f86: 4c 29 c2             	sub	rdx, r8
ffffffff80016f89: 48 89 f7             	mov	rdi, rsi
ffffffff80016f8c: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80016f90: 77 de                	ja	0xffffffff80016f70 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13f0>
ffffffff80016f92: 48 8d 14 76          	lea	rdx, [rsi + 2*rsi]
ffffffff80016f96: 48 39 04 d1          	cmp	qword ptr [rcx + 8*rdx], rax
ffffffff80016f9a: 75 0c                	jne	0xffffffff80016fa8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1428>
ffffffff80016f9c: 4c 8b 7c d1 08       	mov	r15, qword ptr [rcx + 8*rdx + 0x8]
ffffffff80016fa1: 48 8b 6c d1 10       	mov	rbp, qword ptr [rcx + 8*rdx + 0x10]
ffffffff80016fa6: eb 25                	jmp	0xffffffff80016fcd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x144d>
ffffffff80016fa8: 48 83 d6 00          	adc	rsi, 0x0
ffffffff80016fac: 0f 84 92 fe ff ff    	je	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80016fb2: 48 8d 14 76          	lea	rdx, [rsi + 2*rsi]
ffffffff80016fb6: 4c 8b 7c d1 f0       	mov	r15, qword ptr [rcx + 8*rdx - 0x10]
ffffffff80016fbb: 48 8b 6c d1 f8       	mov	rbp, qword ptr [rcx + 8*rdx - 0x8]
ffffffff80016fc0: 48 2b 44 d1 e8       	sub	rax, qword ptr [rcx + 8*rdx - 0x18]
ffffffff80016fc5: 75 4f                	jne	0xffffffff80017016 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1496>
ffffffff80016fc7: 48 29 c5             	sub	rbp, rax
ffffffff80016fca: 49 01 c7             	add	r15, rax
ffffffff80016fcd: 4c 8b b4 24 78 01 00 00      	mov	r14, qword ptr [rsp + 0x178]
ffffffff80016fd5: 4c 3b b4 24 68 01 00 00      	cmp	r14, qword ptr [rsp + 0x168]
ffffffff80016fdd: 0f 85 33 fe ff ff    	jne	0xffffffff80016e16 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1296>
ffffffff80016fe3: 48 8d bc 24 68 01 00 00      	lea	rdi, [rsp + 0x168]
ffffffff80016feb: 48 c7 c6 b8 80 02 80 	mov	rsi, -0x7ffd7f48
ffffffff80016ff2: e8 49 35 00 00       	call	0xffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80016ff7: 4c 8b 54 24 08       	mov	r10, qword ptr [rsp + 0x8]
ffffffff80016ffc: e9 15 fe ff ff       	jmp	0xffffffff80016e16 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1296>
ffffffff80017001: 48 39 c5             	cmp	rbp, rax
ffffffff80017004: 76 22                	jbe	0xffffffff80017028 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14a8>
ffffffff80017006: 41 80 3c 07 c0       	cmp	byte ptr [r15 + rax], -0x40
ffffffff8001700b: 0f 8c 33 fe ff ff    	jl	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80017011: e9 05 ff ff ff       	jmp	0xffffffff80016f1b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x139b>
ffffffff80017016: 48 39 c5             	cmp	rbp, rax
ffffffff80017019: 76 18                	jbe	0xffffffff80017033 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14b3>
ffffffff8001701b: 41 80 3c 07 c0       	cmp	byte ptr [r15 + rax], -0x40
ffffffff80017020: 0f 8c 1e fe ff ff    	jl	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80017026: eb 9f                	jmp	0xffffffff80016fc7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1447>
ffffffff80017028: 0f 85 16 fe ff ff    	jne	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff8001702e: e9 e8 fe ff ff       	jmp	0xffffffff80016f1b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x139b>
ffffffff80017033: 0f 85 0b fe ff ff    	jne	0xffffffff80016e44 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80017039: eb 8c                	jmp	0xffffffff80016fc7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1447>
ffffffff8001703b: 48 8b 8c 24 28 05 00 00      	mov	rcx, qword ptr [rsp + 0x528]
ffffffff80017043: 4c 8b 84 24 30 05 00 00      	mov	r8, qword ptr [rsp + 0x530]
ffffffff8001704b: 4d 85 c0             	test	r8, r8
ffffffff8001704e: 74 2d                	je	0xffffffff8001707d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14fd>
ffffffff80017050: 4c 89 d0             	mov	rax, r10
ffffffff80017053: 48 29 c8             	sub	rax, rcx
ffffffff80017056: 48 8b 6c 24 68       	mov	rbp, qword ptr [rsp + 0x68]
ffffffff8001705b: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff80017060: 48 8b 74 24 48       	mov	rsi, qword ptr [rsp + 0x48]
ffffffff80017065: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff8001706a: 0f 83 8d 00 00 00    	jae	0xffffffff800170fd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x157d>
ffffffff80017070: 48 89 ca             	mov	rdx, rcx
ffffffff80017073: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80017078: e9 8e 00 00 00       	jmp	0xffffffff8001710b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x158b>
ffffffff8001707d: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80017082: 48 89 84 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], rax
ffffffff8001708a: 48 8b 74 24 48       	mov	rsi, qword ptr [rsp + 0x48]
ffffffff8001708f: e9 d6 07 00 00       	jmp	0xffffffff8001786a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1cea>
ffffffff80017094: 48 8b 84 24 20 02 00 00      	mov	rax, qword ptr [rsp + 0x220]
ffffffff8001709c: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800170a1: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff800170a5: 48 8b 84 24 10 02 00 00      	mov	rax, qword ptr [rsp + 0x210]
ffffffff800170ad: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff800170b5: 49 89 4d 18          	mov	qword ptr [r13 + 0x18], rcx
ffffffff800170b9: 49 89 45 10          	mov	qword ptr [r13 + 0x10], rax
ffffffff800170bd: b8 08 00 00 00       	mov	eax, 0x8
ffffffff800170c2: e9 1f 07 00 00       	jmp	0xffffffff800177e6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c66>
ffffffff800170c7: 48 39 d1             	cmp	rcx, rdx
ffffffff800170ca: 0f 83 4e 07 00 00    	jae	0xffffffff8001781e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c9e>
ffffffff800170d0: 31 ed                	xor	ebp, ebp
ffffffff800170d2: 49 89 d5             	mov	r13, rdx
ffffffff800170d5: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff800170da: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff800170df: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff800170e4: 4c 89 68 10          	mov	qword ptr [rax + 0x10], r13
ffffffff800170e8: 49 89 c5             	mov	r13, rax
ffffffff800170eb: 48 89 48 18          	mov	qword ptr [rax + 0x18], rcx
ffffffff800170ef: 48 89 50 20          	mov	qword ptr [rax + 0x20], rdx
ffffffff800170f3: b8 08 00 00 00       	mov	eax, 0x8
ffffffff800170f8: e9 68 08 00 00       	jmp	0xffffffff80017965 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1de5>
ffffffff800170fd: 4c 39 c0             	cmp	rax, r8
ffffffff80017100: 0f 83 54 07 00 00    	jae	0xffffffff8001785a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1cda>
ffffffff80017106: 31 c9                	xor	ecx, ecx
ffffffff80017108: 4c 89 c2             	mov	rdx, r8
ffffffff8001710b: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff80017110: 49 89 4d 08          	mov	qword ptr [r13 + 0x8], rcx
ffffffff80017114: 49 89 55 10          	mov	qword ptr [r13 + 0x10], rdx
ffffffff80017118: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff8001711c: 4d 89 45 20          	mov	qword ptr [r13 + 0x20], r8
ffffffff80017120: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80017128: e9 6d 08 00 00       	jmp	0xffffffff8001799a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff8001712d: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80017132: 49 89 f7             	mov	r15, rsi
ffffffff80017135: 48 89 9c 24 58 01 00 00      	mov	qword ptr [rsp + 0x158], rbx
ffffffff8001713d: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff80017142: 31 d2                	xor	edx, edx
ffffffff80017144: 66 83 7c 24 7a 03    	cmp	word ptr [rsp + 0x7a], 0x3
ffffffff8001714a: 48 8b 5c 24 18       	mov	rbx, qword ptr [rsp + 0x18]
ffffffff8001714f: 48 89 bb a0 03 00 00 	mov	qword ptr [rbx + 0x3a0], rdi
ffffffff80017156: 48 89 ab a8 03 00 00 	mov	qword ptr [rbx + 0x3a8], rbp
ffffffff8001715d: 48 89 83 b0 03 00 00 	mov	qword ptr [rbx + 0x3b0], rax
ffffffff80017164: 48 89 8b b8 03 00 00 	mov	qword ptr [rbx + 0x3b8], rcx
ffffffff8001716b: 0f b6 6c 24 15       	movzx	ebp, byte ptr [rsp + 0x15]
ffffffff80017170: 0f 45 ea             	cmovne	ebp, edx
ffffffff80017173: 48 8b 84 24 40 04 00 00      	mov	rax, qword ptr [rsp + 0x440]
ffffffff8001717b: 48 8b 8c 24 48 04 00 00      	mov	rcx, qword ptr [rsp + 0x448]
ffffffff80017183: 48 89 83 80 01 00 00 	mov	qword ptr [rbx + 0x180], rax
ffffffff8001718a: 48 89 8b 88 01 00 00 	mov	qword ptr [rbx + 0x188], rcx
ffffffff80017191: 48 8b 84 24 50 04 00 00      	mov	rax, qword ptr [rsp + 0x450]
ffffffff80017199: 48 89 83 90 01 00 00 	mov	qword ptr [rbx + 0x190], rax
ffffffff800171a0: 48 8b 84 24 58 04 00 00      	mov	rax, qword ptr [rsp + 0x458]
ffffffff800171a8: 48 89 83 98 01 00 00 	mov	qword ptr [rbx + 0x198], rax
ffffffff800171af: 48 8b 84 24 60 04 00 00      	mov	rax, qword ptr [rsp + 0x460]
ffffffff800171b7: 48 89 83 a0 01 00 00 	mov	qword ptr [rbx + 0x1a0], rax
ffffffff800171be: 48 8d b4 24 f8 04 00 00      	lea	rsi, [rsp + 0x4f8]
ffffffff800171c6: ba 40 01 00 00       	mov	edx, 0x140
ffffffff800171cb: 48 89 df             	mov	rdi, rbx
ffffffff800171ce: ff 15 5c 52 02 00    	call	qword ptr [rip + 0x2525c] # 0xffffffff8003c430
ffffffff800171d4: 0f b7 84 24 24 01 00 00      	movzx	eax, word ptr [rsp + 0x124]
ffffffff800171dc: 66 89 83 a6 02 00 00 	mov	word ptr [rbx + 0x2a6], ax
ffffffff800171e3: 8b 84 24 20 01 00 00 	mov	eax, dword ptr [rsp + 0x120]
ffffffff800171ea: 89 83 a2 02 00 00    	mov	dword ptr [rbx + 0x2a2], eax
ffffffff800171f0: 48 8b 84 24 18 01 00 00      	mov	rax, qword ptr [rsp + 0x118]
ffffffff800171f8: 48 89 83 d8 01 00 00 	mov	qword ptr [rbx + 0x1d8], rax
ffffffff800171ff: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 0x110]
ffffffff80017207: 48 89 83 d0 01 00 00 	mov	qword ptr [rbx + 0x1d0], rax
ffffffff8001720e: 48 8b 84 24 08 01 00 00      	mov	rax, qword ptr [rsp + 0x108]
ffffffff80017216: 48 89 83 c8 01 00 00 	mov	qword ptr [rbx + 0x1c8], rax
ffffffff8001721d: 48 8b 84 24 00 01 00 00      	mov	rax, qword ptr [rsp + 0x100]
ffffffff80017225: 48 89 83 c0 01 00 00 	mov	qword ptr [rbx + 0x1c0], rax
ffffffff8001722c: 48 8b 84 24 f8 00 00 00      	mov	rax, qword ptr [rsp + 0xf8]
ffffffff80017234: 48 89 83 b8 01 00 00 	mov	qword ptr [rbx + 0x1b8], rax
ffffffff8001723b: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 0xf0]
ffffffff80017243: 48 89 83 b0 01 00 00 	mov	qword ptr [rbx + 0x1b0], rax
ffffffff8001724a: 48 8b 84 24 e8 00 00 00      	mov	rax, qword ptr [rsp + 0xe8]
ffffffff80017252: 48 89 83 a8 01 00 00 	mov	qword ptr [rbx + 0x1a8], rax
ffffffff80017259: 0f b7 84 24 3e 04 00 00      	movzx	eax, word ptr [rsp + 0x43e]
ffffffff80017261: 66 89 83 d6 02 00 00 	mov	word ptr [rbx + 0x2d6], ax
ffffffff80017268: 8b 84 24 3a 04 00 00 	mov	eax, dword ptr [rsp + 0x43a]
ffffffff8001726f: 89 83 d2 02 00 00    	mov	dword ptr [rbx + 0x2d2], eax
ffffffff80017275: 48 8b 84 24 6e 04 00 00      	mov	rax, qword ptr [rsp + 0x46e]
ffffffff8001727d: 48 89 83 00 02 00 00 	mov	qword ptr [rbx + 0x200], rax
ffffffff80017284: 48 8b 84 24 68 04 00 00      	mov	rax, qword ptr [rsp + 0x468]
ffffffff8001728c: 48 89 83 fa 01 00 00 	mov	qword ptr [rbx + 0x1fa], rax
ffffffff80017293: 8b 84 24 59 03 00 00 	mov	eax, dword ptr [rsp + 0x359]
ffffffff8001729a: 89 83 03 03 00 00    	mov	dword ptr [rbx + 0x303], eax
ffffffff800172a0: 0f b6 84 24 5d 03 00 00      	movzx	eax, byte ptr [rsp + 0x35d]
ffffffff800172a8: 88 83 07 03 00 00    	mov	byte ptr [rbx + 0x307], al
ffffffff800172ae: 8b 84 24 5e 03 00 00 	mov	eax, dword ptr [rsp + 0x35e]
ffffffff800172b5: 89 83 33 03 00 00    	mov	dword ptr [rbx + 0x333], eax
ffffffff800172bb: 0f b6 84 24 62 03 00 00      	movzx	eax, byte ptr [rsp + 0x362]
ffffffff800172c3: 88 83 37 03 00 00    	mov	byte ptr [rbx + 0x337], al
ffffffff800172c9: 8b 84 24 63 03 00 00 	mov	eax, dword ptr [rsp + 0x363]
ffffffff800172d0: 89 83 63 03 00 00    	mov	dword ptr [rbx + 0x363], eax
ffffffff800172d6: 0f b6 84 24 67 03 00 00      	movzx	eax, byte ptr [rsp + 0x367]
ffffffff800172de: 88 83 67 03 00 00    	mov	byte ptr [rbx + 0x367], al
ffffffff800172e4: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff800172ec: 48 89 83 18 02 00 00 	mov	qword ptr [rbx + 0x218], rax
ffffffff800172f3: 48 8b 84 24 a0 00 00 00      	mov	rax, qword ptr [rsp + 0xa0]
ffffffff800172fb: 48 89 83 20 02 00 00 	mov	qword ptr [rbx + 0x220], rax
ffffffff80017302: 48 8b 84 24 a8 00 00 00      	mov	rax, qword ptr [rsp + 0xa8]
ffffffff8001730a: 48 89 83 28 02 00 00 	mov	qword ptr [rbx + 0x228], rax
ffffffff80017311: 48 8b 84 24 78 01 00 00      	mov	rax, qword ptr [rsp + 0x178]
ffffffff80017319: 48 89 83 58 02 00 00 	mov	qword ptr [rbx + 0x258], rax
ffffffff80017320: 48 8b 84 24 70 01 00 00      	mov	rax, qword ptr [rsp + 0x170]
ffffffff80017328: 48 89 83 50 02 00 00 	mov	qword ptr [rbx + 0x250], rax
ffffffff8001732f: 48 8b 84 24 68 01 00 00      	mov	rax, qword ptr [rsp + 0x168]
ffffffff80017337: 48 89 83 48 02 00 00 	mov	qword ptr [rbx + 0x248], rax
ffffffff8001733e: 48 8b 84 24 80 01 00 00      	mov	rax, qword ptr [rsp + 0x180]
ffffffff80017346: 48 89 83 60 02 00 00 	mov	qword ptr [rbx + 0x260], rax
ffffffff8001734d: 48 8b 84 24 88 01 00 00      	mov	rax, qword ptr [rsp + 0x188]
ffffffff80017355: 48 89 83 68 02 00 00 	mov	qword ptr [rbx + 0x268], rax
ffffffff8001735c: 48 8b 84 24 90 01 00 00      	mov	rax, qword ptr [rsp + 0x190]
ffffffff80017364: 48 89 83 70 02 00 00 	mov	qword ptr [rbx + 0x270], rax
ffffffff8001736b: 48 8b 84 24 98 04 00 00      	mov	rax, qword ptr [rsp + 0x498]
ffffffff80017373: 48 89 83 c0 03 00 00 	mov	qword ptr [rbx + 0x3c0], rax
ffffffff8001737a: 48 8b 84 24 a0 04 00 00      	mov	rax, qword ptr [rsp + 0x4a0]
ffffffff80017382: 48 89 83 c8 03 00 00 	mov	qword ptr [rbx + 0x3c8], rax
ffffffff80017389: 48 8b 8c 24 90 04 00 00      	mov	rcx, qword ptr [rsp + 0x490]
ffffffff80017391: 48 89 8b d0 03 00 00 	mov	qword ptr [rbx + 0x3d0], rcx
ffffffff80017398: 0f b7 84 24 50 03 00 00      	movzx	eax, word ptr [rsp + 0x350]
ffffffff800173a0: 66 89 83 f0 03 00 00 	mov	word ptr [rbx + 0x3f0], ax
ffffffff800173a7: 48 8b 84 24 48 03 00 00      	mov	rax, qword ptr [rsp + 0x348]
ffffffff800173af: 48 89 83 e8 03 00 00 	mov	qword ptr [rbx + 0x3e8], rax
ffffffff800173b6: 4c 89 ab 68 03 00 00 	mov	qword ptr [rbx + 0x368], r13
ffffffff800173bd: 49 89 dd             	mov	r13, rbx
ffffffff800173c0: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 0xc8]
ffffffff800173c8: 48 89 83 70 03 00 00 	mov	qword ptr [rbx + 0x370], rax
ffffffff800173cf: 4c 89 a3 78 03 00 00 	mov	qword ptr [rbx + 0x378], r12
ffffffff800173d6: 4c 89 bb 80 03 00 00 	mov	qword ptr [rbx + 0x380], r15
ffffffff800173dd: 48 8b 84 24 e0 01 00 00      	mov	rax, qword ptr [rsp + 0x1e0]
ffffffff800173e5: 48 89 83 88 03 00 00 	mov	qword ptr [rbx + 0x388], rax
ffffffff800173ec: 48 8b 84 24 c0 00 00 00      	mov	rax, qword ptr [rsp + 0xc0]
ffffffff800173f4: 48 89 83 90 03 00 00 	mov	qword ptr [rbx + 0x390], rax
ffffffff800173fb: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80017400: 48 89 83 98 03 00 00 	mov	qword ptr [rbx + 0x398], rax
ffffffff80017407: 4c 89 b3 40 01 00 00 	mov	qword ptr [rbx + 0x140], r14
ffffffff8001740e: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff80017413: 48 89 83 48 01 00 00 	mov	qword ptr [rbx + 0x148], rax
ffffffff8001741a: 48 8b 84 24 08 04 00 00      	mov	rax, qword ptr [rsp + 0x408]
ffffffff80017422: 48 89 83 50 01 00 00 	mov	qword ptr [rbx + 0x150], rax
ffffffff80017429: 48 8b 84 24 d8 00 00 00      	mov	rax, qword ptr [rsp + 0xd8]
ffffffff80017431: 48 89 83 58 01 00 00 	mov	qword ptr [rbx + 0x158], rax
ffffffff80017438: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff8001743d: 48 89 83 60 01 00 00 	mov	qword ptr [rbx + 0x160], rax
ffffffff80017444: 48 8b 84 24 d0 00 00 00      	mov	rax, qword ptr [rsp + 0xd0]
ffffffff8001744c: 48 89 83 68 01 00 00 	mov	qword ptr [rbx + 0x168], rax
ffffffff80017453: 48 8b 84 24 f8 01 00 00      	mov	rax, qword ptr [rsp + 0x1f8]
ffffffff8001745b: 48 89 83 70 01 00 00 	mov	qword ptr [rbx + 0x170], rax
ffffffff80017462: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff80017467: 48 89 83 78 01 00 00 	mov	qword ptr [rbx + 0x178], rax
ffffffff8001746e: 48 8b 84 24 f0 01 00 00      	mov	rax, qword ptr [rsp + 0x1f0]
ffffffff80017476: 48 89 83 e0 01 00 00 	mov	qword ptr [rbx + 0x1e0], rax
ffffffff8001747d: 48 8b 84 24 e8 01 00 00      	mov	rax, qword ptr [rsp + 0x1e8]
ffffffff80017485: 48 89 83 e8 01 00 00 	mov	qword ptr [rbx + 0x1e8], rax
ffffffff8001748c: 48 8b 84 24 c8 03 00 00      	mov	rax, qword ptr [rsp + 0x3c8]
ffffffff80017494: 48 89 83 f0 01 00 00 	mov	qword ptr [rbx + 0x1f0], rax
ffffffff8001749b: 48 8b 84 24 d0 03 00 00      	mov	rax, qword ptr [rsp + 0x3d0]
ffffffff800174a3: 88 83 f8 01 00 00    	mov	byte ptr [rbx + 0x1f8], al
ffffffff800174a9: 48 8b 84 24 d8 03 00 00      	mov	rax, qword ptr [rsp + 0x3d8]
ffffffff800174b1: 88 83 f9 01 00 00    	mov	byte ptr [rbx + 0x1f9], al
ffffffff800174b7: 48 8b 84 24 e8 03 00 00      	mov	rax, qword ptr [rsp + 0x3e8]
ffffffff800174bf: 48 89 83 08 02 00 00 	mov	qword ptr [rbx + 0x208], rax
ffffffff800174c6: 48 8b 84 24 e0 03 00 00      	mov	rax, qword ptr [rsp + 0x3e0]
ffffffff800174ce: 48 89 83 10 02 00 00 	mov	qword ptr [rbx + 0x210], rax
ffffffff800174d5: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff800174da: 48 89 83 30 02 00 00 	mov	qword ptr [rbx + 0x230], rax
ffffffff800174e1: 48 8b 84 24 58 01 00 00      	mov	rax, qword ptr [rsp + 0x158]
ffffffff800174e9: 48 89 83 38 02 00 00 	mov	qword ptr [rbx + 0x238], rax
ffffffff800174f0: 48 8b 84 24 c8 01 00 00      	mov	rax, qword ptr [rsp + 0x1c8]
ffffffff800174f8: 48 89 83 40 02 00 00 	mov	qword ptr [rbx + 0x240], rax
ffffffff800174ff: 48 8b 84 24 78 03 00 00      	mov	rax, qword ptr [rsp + 0x378]
ffffffff80017507: 48 89 83 78 02 00 00 	mov	qword ptr [rbx + 0x278], rax
ffffffff8001750e: 48 8b 84 24 80 03 00 00      	mov	rax, qword ptr [rsp + 0x380]
ffffffff80017516: 48 89 83 80 02 00 00 	mov	qword ptr [rbx + 0x280], rax
ffffffff8001751d: 48 8b 84 24 88 03 00 00      	mov	rax, qword ptr [rsp + 0x388]
ffffffff80017525: 48 89 83 88 02 00 00 	mov	qword ptr [rbx + 0x288], rax
ffffffff8001752c: 48 8b 84 24 90 03 00 00      	mov	rax, qword ptr [rsp + 0x390]
ffffffff80017534: 48 89 83 90 02 00 00 	mov	qword ptr [rbx + 0x290], rax
ffffffff8001753b: 48 8b 84 24 68 03 00 00      	mov	rax, qword ptr [rsp + 0x368]
ffffffff80017543: 48 89 83 98 02 00 00 	mov	qword ptr [rbx + 0x298], rax
ffffffff8001754a: 0f b6 44 24 16       	movzx	eax, byte ptr [rsp + 0x16]
ffffffff8001754f: 88 83 a0 02 00 00    	mov	byte ptr [rbx + 0x2a0], al
ffffffff80017555: 48 8b 84 24 70 03 00 00      	mov	rax, qword ptr [rsp + 0x370]
ffffffff8001755d: 88 83 a1 02 00 00    	mov	byte ptr [rbx + 0x2a1], al
ffffffff80017563: 48 8b 84 24 f0 03 00 00      	mov	rax, qword ptr [rsp + 0x3f0]
ffffffff8001756b: 48 89 83 a8 02 00 00 	mov	qword ptr [rbx + 0x2a8], rax
ffffffff80017572: 48 8b 84 24 d8 01 00 00      	mov	rax, qword ptr [rsp + 0x1d8]
ffffffff8001757a: 48 89 83 b0 02 00 00 	mov	qword ptr [rbx + 0x2b0], rax
ffffffff80017581: 48 8b 84 24 50 01 00 00      	mov	rax, qword ptr [rsp + 0x150]
ffffffff80017589: 48 89 83 b8 02 00 00 	mov	qword ptr [rbx + 0x2b8], rax
ffffffff80017590: 48 8b 84 24 b8 03 00 00      	mov	rax, qword ptr [rsp + 0x3b8]
ffffffff80017598: 48 89 83 c0 02 00 00 	mov	qword ptr [rbx + 0x2c0], rax
ffffffff8001759f: 48 8b 84 24 f8 03 00 00      	mov	rax, qword ptr [rsp + 0x3f8]
ffffffff800175a7: 48 89 83 c8 02 00 00 	mov	qword ptr [rbx + 0x2c8], rax
ffffffff800175ae: 0f b6 44 24 17       	movzx	eax, byte ptr [rsp + 0x17]
ffffffff800175b3: 88 83 d0 02 00 00    	mov	byte ptr [rbx + 0x2d0], al
ffffffff800175b9: 48 8b 84 24 c0 03 00 00      	mov	rax, qword ptr [rsp + 0x3c0]
ffffffff800175c1: 88 83 d1 02 00 00    	mov	byte ptr [rbx + 0x2d1], al
ffffffff800175c7: 48 8b 84 24 40 01 00 00      	mov	rax, qword ptr [rsp + 0x140]
ffffffff800175cf: 48 89 83 d8 02 00 00 	mov	qword ptr [rbx + 0x2d8], rax
ffffffff800175d6: 48 8b 84 24 28 01 00 00      	mov	rax, qword ptr [rsp + 0x128]
ffffffff800175de: 48 89 83 e0 02 00 00 	mov	qword ptr [rbx + 0x2e0], rax
ffffffff800175e5: 48 8b 84 24 38 01 00 00      	mov	rax, qword ptr [rsp + 0x138]
ffffffff800175ed: 48 89 83 e8 02 00 00 	mov	qword ptr [rbx + 0x2e8], rax
ffffffff800175f4: 48 8b 84 24 c0 01 00 00      	mov	rax, qword ptr [rsp + 0x1c0]
ffffffff800175fc: 48 89 83 f0 02 00 00 	mov	qword ptr [rbx + 0x2f0], rax
ffffffff80017603: 48 8b 84 24 98 03 00 00      	mov	rax, qword ptr [rsp + 0x398]
ffffffff8001760b: 48 89 83 f8 02 00 00 	mov	qword ptr [rbx + 0x2f8], rax
ffffffff80017612: 48 8b 84 24 a0 03 00 00      	mov	rax, qword ptr [rsp + 0x3a0]
ffffffff8001761a: 88 83 00 03 00 00    	mov	byte ptr [rbx + 0x300], al
ffffffff80017620: 8b 84 24 e0 00 00 00 	mov	eax, dword ptr [rsp + 0xe0]
ffffffff80017627: 66 89 83 01 03 00 00 	mov	word ptr [rbx + 0x301], ax
ffffffff8001762e: 48 8b 94 24 80 00 00 00      	mov	rdx, qword ptr [rsp + 0x80]
ffffffff80017636: 48 89 93 08 03 00 00 	mov	qword ptr [rbx + 0x308], rdx
ffffffff8001763d: 48 8b 94 24 90 00 00 00      	mov	rdx, qword ptr [rsp + 0x90]
ffffffff80017645: 48 89 93 10 03 00 00 	mov	qword ptr [rbx + 0x310], rdx
ffffffff8001764c: 48 8b 94 24 b8 01 00 00      	mov	rdx, qword ptr [rsp + 0x1b8]
ffffffff80017654: 48 89 93 18 03 00 00 	mov	qword ptr [rbx + 0x318], rdx
ffffffff8001765b: 48 8b 94 24 b8 00 00 00      	mov	rdx, qword ptr [rsp + 0xb8]
ffffffff80017663: 48 89 93 20 03 00 00 	mov	qword ptr [rbx + 0x320], rdx
ffffffff8001766a: 48 8b 94 24 a8 03 00 00      	mov	rdx, qword ptr [rsp + 0x3a8]
ffffffff80017672: 48 89 93 28 03 00 00 	mov	qword ptr [rbx + 0x328], rdx
ffffffff80017679: c6 83 30 03 00 00 00 	mov	byte ptr [rbx + 0x330], 0x0
ffffffff80017680: 66 89 83 31 03 00 00 	mov	word ptr [rbx + 0x331], ax
ffffffff80017687: 48 8b 94 24 48 01 00 00      	mov	rdx, qword ptr [rsp + 0x148]
ffffffff8001768f: 48 89 93 38 03 00 00 	mov	qword ptr [rbx + 0x338], rdx
ffffffff80017696: 48 8b 94 24 88 00 00 00      	mov	rdx, qword ptr [rsp + 0x88]
ffffffff8001769e: 48 89 93 40 03 00 00 	mov	qword ptr [rbx + 0x340], rdx
ffffffff800176a5: 48 8b 94 24 30 01 00 00      	mov	rdx, qword ptr [rsp + 0x130]
ffffffff800176ad: 48 89 93 48 03 00 00 	mov	qword ptr [rbx + 0x348], rdx
ffffffff800176b4: 48 8b 94 24 a8 01 00 00      	mov	rdx, qword ptr [rsp + 0x1a8]
ffffffff800176bc: 48 89 93 50 03 00 00 	mov	qword ptr [rbx + 0x350], rdx
ffffffff800176c3: 48 8b 94 24 b0 03 00 00      	mov	rdx, qword ptr [rsp + 0x3b0]
ffffffff800176cb: 48 89 93 58 03 00 00 	mov	qword ptr [rbx + 0x358], rdx
ffffffff800176d2: 48 8b 94 24 b0 01 00 00      	mov	rdx, qword ptr [rsp + 0x1b0]
ffffffff800176da: 88 93 60 03 00 00    	mov	byte ptr [rbx + 0x360], dl
ffffffff800176e0: 66 89 83 61 03 00 00 	mov	word ptr [rbx + 0x361], ax
ffffffff800176e7: 48 8b 84 24 88 04 00 00      	mov	rax, qword ptr [rsp + 0x488]
ffffffff800176ef: 48 89 83 d8 03 00 00 	mov	qword ptr [rbx + 0x3d8], rax
ffffffff800176f6: 48 8b 84 24 10 04 00 00      	mov	rax, qword ptr [rsp + 0x410]
ffffffff800176fe: 48 89 83 e0 03 00 00 	mov	qword ptr [rbx + 0x3e0], rax
ffffffff80017705: 8b 84 24 e4 00 00 00 	mov	eax, dword ptr [rsp + 0xe4]
ffffffff8001770c: 66 89 83 f2 03 00 00 	mov	word ptr [rbx + 0x3f2], ax
ffffffff80017713: 8b 84 24 04 02 00 00 	mov	eax, dword ptr [rsp + 0x204]
ffffffff8001771a: 89 83 f4 03 00 00    	mov	dword ptr [rbx + 0x3f4], eax
ffffffff80017720: 0f b7 44 24 7e       	movzx	eax, word ptr [rsp + 0x7e]
ffffffff80017725: 66 89 83 f8 03 00 00 	mov	word ptr [rbx + 0x3f8], ax
ffffffff8001772c: 0f b7 44 24 7c       	movzx	eax, word ptr [rsp + 0x7c]
ffffffff80017731: 66 89 83 fa 03 00 00 	mov	word ptr [rbx + 0x3fa], ax
ffffffff80017738: 0f b7 44 24 66       	movzx	eax, word ptr [rsp + 0x66]
ffffffff8001773d: 66 89 83 fc 03 00 00 	mov	word ptr [rbx + 0x3fc], ax
ffffffff80017744: 0f b7 44 24 64       	movzx	eax, word ptr [rsp + 0x64]
ffffffff80017749: 66 89 83 fe 03 00 00 	mov	word ptr [rbx + 0x3fe], ax
ffffffff80017750: 48 8b 84 24 d0 01 00 00      	mov	rax, qword ptr [rsp + 0x1d0]
ffffffff80017758: 48 89 83 00 04 00 00 	mov	qword ptr [rbx + 0x400], rax
ffffffff8001775f: 48 8b 84 24 78 04 00 00      	mov	rax, qword ptr [rsp + 0x478]
ffffffff80017767: 48 89 83 08 04 00 00 	mov	qword ptr [rbx + 0x408], rax
ffffffff8001776e: 48 8b 84 24 00 04 00 00      	mov	rax, qword ptr [rsp + 0x400]
ffffffff80017776: 48 89 83 10 04 00 00 	mov	qword ptr [rbx + 0x410], rax
ffffffff8001777d: 48 8b 84 24 80 04 00 00      	mov	rax, qword ptr [rsp + 0x480]
ffffffff80017785: 48 89 83 18 04 00 00 	mov	qword ptr [rbx + 0x418], rax
ffffffff8001778c: 48 89 8b 20 04 00 00 	mov	qword ptr [rbx + 0x420], rcx
ffffffff80017793: 8b 4c 24 74          	mov	ecx, dword ptr [rsp + 0x74]
ffffffff80017797: 88 8b 28 04 00 00    	mov	byte ptr [rbx + 0x428], cl
ffffffff8001779d: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff800177a1: 88 83 29 04 00 00    	mov	byte ptr [rbx + 0x429], al
ffffffff800177a7: 88 8b 2a 04 00 00    	mov	byte ptr [rbx + 0x42a], cl
ffffffff800177ad: 40 88 ab 2b 04 00 00 	mov	byte ptr [rbx + 0x42b], bpl
ffffffff800177b4: 0f b6 44 24 3f       	movzx	eax, byte ptr [rsp + 0x3f]
ffffffff800177b9: 88 83 2c 04 00 00    	mov	byte ptr [rbx + 0x42c], al
ffffffff800177bf: e9 0f 03 00 00       	jmp	0xffffffff80017ad3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff800177c4: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800177c9: eb 05                	jmp	0xffffffff800177d0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c50>
ffffffff800177cb: 48 89 ee             	mov	rsi, rbp
ffffffff800177ce: 31 c9                	xor	ecx, ecx
ffffffff800177d0: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff800177d5: 49 89 4d 08          	mov	qword ptr [r13 + 0x8], rcx
ffffffff800177d9: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff800177dd: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff800177e1: b8 20 00 00 00       	mov	eax, 0x20
ffffffff800177e6: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff800177eb: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff800177f0: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff800177f5: e9 6b 01 00 00       	jmp	0xffffffff80017965 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1de5>
ffffffff800177fa: 48 39 ea             	cmp	rdx, rbp
ffffffff800177fd: 0f 83 e5 02 00 00    	jae	0xffffffff80017ae8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f68>
ffffffff80017803: 31 c0                	xor	eax, eax
ffffffff80017805: 48 89 ee             	mov	rsi, rbp
ffffffff80017808: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff8001780d: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80017811: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff80017815: 49 89 55 18          	mov	qword ptr [r13 + 0x18], rdx
ffffffff80017819: e9 3d 01 00 00       	jmp	0xffffffff8001795b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ddb>
ffffffff8001781e: 48 89 94 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rdx
ffffffff80017826: 31 c9                	xor	ecx, ecx
ffffffff80017828: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff8001782d: 0f 94 c1             	sete	cl
ffffffff80017830: 45 31 e4             	xor	r12d, r12d
ffffffff80017833: 48 ba 00 00 00 00 00 01 00 00	movabs	rdx, 0x10000000000
ffffffff8001783d: 48 39 94 24 60 01 00 00      	cmp	qword ptr [rsp + 0x160], rdx
ffffffff80017845: 41 0f 95 c4          	setne	r12b
ffffffff80017849: 4c 03 6c 24 30       	add	r13, qword ptr [rsp + 0x30]
ffffffff8001784e: 41 c1 e4 08          	shl	r12d, 0x8
ffffffff80017852: 49 09 cc             	or	r12, rcx
ffffffff80017855: e9 72 f4 ff ff       	jmp	0xffffffff80016ccc <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x114c>
ffffffff8001785a: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001785f: 48 01 c8             	add	rax, rcx
ffffffff80017862: 48 89 84 24 40 01 00 00      	mov	qword ptr [rsp + 0x140], rax
ffffffff8001786a: 48 89 8c 24 c0 01 00 00      	mov	qword ptr [rsp + 0x1c0], rcx
ffffffff80017872: 40 80 fe 02          	cmp	sil, 0x2
ffffffff80017876: b8 18 00 00 00       	mov	eax, 0x18
ffffffff8001787b: b9 0c 00 00 00       	mov	ecx, 0xc
ffffffff80017880: 48 0f 44 c8          	cmove	rcx, rax
ffffffff80017884: 4c 89 c0             	mov	rax, r8
ffffffff80017887: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8001788b: 74 0a                	je	0xffffffff80017897 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d17>
ffffffff8001788d: 4c 89 c0             	mov	rax, r8
ffffffff80017890: 31 d2                	xor	edx, edx
ffffffff80017892: 48 f7 f1             	div	rcx
ffffffff80017895: eb 07                	jmp	0xffffffff8001789e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d1e>
ffffffff80017897: 44 89 c0             	mov	eax, r8d
ffffffff8001789a: 31 d2                	xor	edx, edx
ffffffff8001789c: f7 f1                	div	ecx
ffffffff8001789e: 48 89 84 24 38 01 00 00      	mov	qword ptr [rsp + 0x138], rax
ffffffff800178a6: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff800178ab: 31 ed                	xor	ebp, ebp
ffffffff800178ad: 40 80 fe 02          	cmp	sil, 0x2
ffffffff800178b1: 41 0f 94 c4          	sete	r12b
ffffffff800178b5: 48 b8 00 00 00 00 00 01 00 00	movabs	rax, 0x10000000000
ffffffff800178bf: 48 39 84 24 60 01 00 00      	cmp	qword ptr [rsp + 0x160], rax
ffffffff800178c7: 41 0f 95 c5          	setne	r13b
ffffffff800178cb: 4c 8b b4 24 48 05 00 00      	mov	r14, qword ptr [rsp + 0x548]
ffffffff800178d3: 48 8b 84 24 50 05 00 00      	mov	rax, qword ptr [rsp + 0x550]
ffffffff800178db: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800178e0: 48 89 8c 24 48 01 00 00      	mov	qword ptr [rsp + 0x148], rcx
ffffffff800178e8: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800178ed: 48 85 c0             	test	rax, rax
ffffffff800178f0: 48 89 84 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rax
ffffffff800178f8: 0f 84 44 02 00 00    	je	0xffffffff80017b42 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1fc2>
ffffffff800178fe: 4c 89 d0             	mov	rax, r10
ffffffff80017901: 4c 29 f0             	sub	rax, r14
ffffffff80017904: 73 02                	jae	0xffffffff80017908 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d88>
ffffffff80017906: eb 16                	jmp	0xffffffff8001791e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d9e>
ffffffff80017908: 48 8b 94 24 90 00 00 00      	mov	rdx, qword ptr [rsp + 0x90]
ffffffff80017910: 48 39 d0             	cmp	rax, rdx
ffffffff80017913: 0f 83 1a 02 00 00    	jae	0xffffffff80017b33 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1fb3>
ffffffff80017919: 31 c9                	xor	ecx, ecx
ffffffff8001791b: 49 89 d6             	mov	r14, rdx
ffffffff8001791e: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80017923: 49 89 4d 08          	mov	qword ptr [r13 + 0x8], rcx
ffffffff80017927: 4d 89 75 10          	mov	qword ptr [r13 + 0x10], r14
ffffffff8001792b: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff8001792f: 48 8b 84 24 90 00 00 00      	mov	rax, qword ptr [rsp + 0x90]
ffffffff80017937: e9 8e 02 00 00       	jmp	0xffffffff80017bca <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x204a>
ffffffff8001793c: 49 39 e8             	cmp	r8, rbp
ffffffff8001793f: 0f 83 a5 02 00 00    	jae	0xffffffff80017bea <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x206a>
ffffffff80017945: 31 c0                	xor	eax, eax
ffffffff80017947: 48 89 ea             	mov	rdx, rbp
ffffffff8001794a: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff8001794f: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80017953: 49 89 55 10          	mov	qword ptr [r13 + 0x10], rdx
ffffffff80017957: 4d 89 45 18          	mov	qword ptr [r13 + 0x18], r8
ffffffff8001795b: b8 20 00 00 00       	mov	eax, 0x20
ffffffff80017960: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff80017965: 49 89 6c 05 00       	mov	qword ptr [r13 + rax], rbp
ffffffff8001796a: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80017972: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 0x98]
ffffffff8001797a: 48 85 c0             	test	rax, rax
ffffffff8001797d: 74 16                	je	0xffffffff80017995 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e15>
ffffffff8001797f: 48 8b bc 24 a0 00 00 00      	mov	rdi, qword ptr [rsp + 0xa0]
ffffffff80017987: 48 6b f0 38          	imul	rsi, rax, 0x38
ffffffff8001798b: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017990: e8 cb 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017995: 48 8b 6c 24 68       	mov	rbp, qword ptr [rsp + 0x68]
ffffffff8001799a: 83 bc 24 f8 04 00 00 02      	cmp	dword ptr [rsp + 0x4f8], 0x2
ffffffff800179a2: 74 23                	je	0xffffffff800179c7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff800179a4: 48 8b b4 24 20 06 00 00      	mov	rsi, qword ptr [rsp + 0x620]
ffffffff800179ac: 48 85 f6             	test	rsi, rsi
ffffffff800179af: 74 16                	je	0xffffffff800179c7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff800179b1: 48 8b bc 24 28 06 00 00      	mov	rdi, qword ptr [rsp + 0x628]
ffffffff800179b9: 48 c1 e6 04          	shl	rsi, 0x4
ffffffff800179bd: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800179c2: e8 99 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff800179c7: 48 8b 84 24 e8 00 00 00      	mov	rax, qword ptr [rsp + 0xe8]
ffffffff800179cf: 48 85 c0             	test	rax, rax
ffffffff800179d2: 74 1a                	je	0xffffffff800179ee <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e6e>
ffffffff800179d4: 48 8b bc 24 f0 00 00 00      	mov	rdi, qword ptr [rsp + 0xf0]
ffffffff800179dc: 48 c1 e0 03          	shl	rax, 0x3
ffffffff800179e0: 48 8d 34 40          	lea	rsi, [rax + 2*rax]
ffffffff800179e4: ba 08 00 00 00       	mov	edx, 0x8
ffffffff800179e9: e8 72 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff800179ee: 48 8b b4 24 80 01 00 00      	mov	rsi, qword ptr [rsp + 0x180]
ffffffff800179f6: 48 85 f6             	test	rsi, rsi
ffffffff800179f9: 74 16                	je	0xffffffff80017a11 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e91>
ffffffff800179fb: 48 8b bc 24 88 01 00 00      	mov	rdi, qword ptr [rsp + 0x188]
ffffffff80017a03: 48 c1 e6 04          	shl	rsi, 0x4
ffffffff80017a07: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017a0c: e8 4f 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017a11: 48 8b b4 24 68 01 00 00      	mov	rsi, qword ptr [rsp + 0x168]
ffffffff80017a19: 48 85 f6             	test	rsi, rsi
ffffffff80017a1c: 74 16                	je	0xffffffff80017a34 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1eb4>
ffffffff80017a1e: 48 8b bc 24 70 01 00 00      	mov	rdi, qword ptr [rsp + 0x170]
ffffffff80017a26: 48 c1 e6 04          	shl	rsi, 0x4
ffffffff80017a2a: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017a2f: e8 2c 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017a34: 4d 85 ff             	test	r15, r15
ffffffff80017a37: 74 14                	je	0xffffffff80017a4d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ecd>
ffffffff80017a39: 49 c1 e7 04          	shl	r15, 0x4
ffffffff80017a3d: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017a42: 48 89 df             	mov	rdi, rbx
ffffffff80017a45: 4c 89 fe             	mov	rsi, r15
ffffffff80017a48: e8 13 15 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017a4d: 48 8b 84 24 f0 01 00 00      	mov	rax, qword ptr [rsp + 0x1f0]
ffffffff80017a55: 48 85 c0             	test	rax, rax
ffffffff80017a58: 74 1a                	je	0xffffffff80017a74 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff80017a5a: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80017a5e: 48 8d 34 40          	lea	rsi, [rax + 2*rax]
ffffffff80017a62: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017a67: 48 8b bc 24 e8 01 00 00      	mov	rdi, qword ptr [rsp + 0x1e8]
ffffffff80017a6f: e8 ec 14 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017a74: 48 8b 84 24 f8 01 00 00      	mov	rax, qword ptr [rsp + 0x1f8]
ffffffff80017a7c: 48 85 c0             	test	rax, rax
ffffffff80017a7f: 48 8b 5c 24 58       	mov	rbx, qword ptr [rsp + 0x58]
ffffffff80017a84: 74 15                	je	0xffffffff80017a9b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f1b>
ffffffff80017a86: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80017a8a: 48 8d 34 40          	lea	rsi, [rax + 2*rax]
ffffffff80017a8e: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017a93: 4c 89 e7             	mov	rdi, r12
ffffffff80017a96: e8 c5 14 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017a9b: 48 8b 84 24 d8 00 00 00      	mov	rax, qword ptr [rsp + 0xd8]
ffffffff80017aa3: 48 85 c0             	test	rax, rax
ffffffff80017aa6: 74 15                	je	0xffffffff80017abd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f3d>
ffffffff80017aa8: 48 c1 e0 03          	shl	rax, 0x3
ffffffff80017aac: 48 8d 34 c0          	lea	rsi, [rax + 8*rax]
ffffffff80017ab0: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017ab5: 48 89 df             	mov	rdi, rbx
ffffffff80017ab8: e8 a3 14 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017abd: 4d 85 f6             	test	r14, r14
ffffffff80017ac0: 74 11                	je	0xffffffff80017ad3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80017ac2: 49 6b f6 38          	imul	rsi, r14, 0x38
ffffffff80017ac6: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80017acb: 48 89 ef             	mov	rdi, rbp
ffffffff80017ace: e8 8d 14 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80017ad3: 4c 89 e8             	mov	rax, r13
ffffffff80017ad6: 48 81 c4 38 06 00 00 	add	rsp, 0x638
ffffffff80017add: 5b                   	pop	rbx
ffffffff80017ade: 41 5c                	pop	r12
ffffffff80017ae0: 41 5d                	pop	r13
ffffffff80017ae2: 41 5e                	pop	r14
ffffffff80017ae4: 41 5f                	pop	r15
ffffffff80017ae6: 5d                   	pop	rbp
ffffffff80017ae7: c3                   	ret
ffffffff80017ae8: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80017aed: 8b 4c 0a f8          	mov	ecx, dword ptr [rdx + rcx - 0x8]
ffffffff80017af1: 48 89 8c 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rcx
ffffffff80017af9: 31 c9                	xor	ecx, ecx
ffffffff80017afb: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017b00: 0f 94 c1             	sete	cl
ffffffff80017b03: 31 ff                	xor	edi, edi
ffffffff80017b05: 48 ba 00 00 00 00 00 01 00 00	movabs	rdx, 0x10000000000
ffffffff80017b0f: 48 39 94 24 60 01 00 00      	cmp	qword ptr [rsp + 0x160], rdx
ffffffff80017b17: 40 0f 95 c7          	setne	dil
ffffffff80017b1b: 48 03 74 24 30       	add	rsi, qword ptr [rsp + 0x30]
ffffffff80017b20: c1 e7 08             	shl	edi, 0x8
ffffffff80017b23: 48 09 cf             	or	rdi, rcx
ffffffff80017b26: 48 89 ac 24 e0 01 00 00      	mov	qword ptr [rsp + 0x1e0], rbp
ffffffff80017b2e: e9 e5 f1 ff ff       	jmp	0xffffffff80016d18 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1198>
ffffffff80017b33: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80017b38: 4a 8d 0c 30          	lea	rcx, [rax + r14]
ffffffff80017b3c: 48 89 d0             	mov	rax, rdx
ffffffff80017b3f: 48 89 ca             	mov	rdx, rcx
ffffffff80017b42: 48 89 94 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rdx
ffffffff80017b4a: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017b4f: 0f 94 c1             	sete	cl
ffffffff80017b52: 80 c1 03             	add	cl, 0x3
ffffffff80017b55: 48 d3 e8             	shr	rax, cl
ffffffff80017b58: 48 89 84 24 b8 01 00 00      	mov	qword ptr [rsp + 0x1b8], rax
ffffffff80017b60: 48 8b 94 24 88 05 00 00      	mov	rdx, qword ptr [rsp + 0x588]
ffffffff80017b68: 48 8b 8c 24 90 05 00 00      	mov	rcx, qword ptr [rsp + 0x590]
ffffffff80017b70: 48 8b bc 24 98 05 00 00      	mov	rdi, qword ptr [rsp + 0x598]
ffffffff80017b78: 48 89 94 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rdx
ffffffff80017b80: 48 85 d2             	test	rdx, rdx
ffffffff80017b83: 0f 84 c2 00 00 00    	je	0xffffffff80017c4b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x20cb>
ffffffff80017b89: 4c 89 d0             	mov	rax, r10
ffffffff80017b8c: 48 89 fe             	mov	rsi, rdi
ffffffff80017b8f: 48 29 f8             	sub	rax, rdi
ffffffff80017b92: 73 07                	jae	0xffffffff80017b9b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x201b>
ffffffff80017b94: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80017b99: eb 16                	jmp	0xffffffff80017bb1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2031>
ffffffff80017b9b: 48 8b 94 24 88 00 00 00      	mov	rdx, qword ptr [rsp + 0x88]
ffffffff80017ba3: 48 39 d0             	cmp	rax, rdx
ffffffff80017ba6: 0f 83 8c 00 00 00    	jae	0xffffffff80017c38 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x20b8>
ffffffff80017bac: 31 c9                	xor	ecx, ecx
ffffffff80017bae: 48 89 d6             	mov	rsi, rdx
ffffffff80017bb1: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80017bb6: 49 89 4d 08          	mov	qword ptr [r13 + 0x8], rcx
ffffffff80017bba: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff80017bbe: 49 89 45 18          	mov	qword ptr [r13 + 0x18], rax
ffffffff80017bc2: 48 8b 84 24 88 00 00 00      	mov	rax, qword ptr [rsp + 0x88]
ffffffff80017bca: 49 89 45 20          	mov	qword ptr [r13 + 0x20], rax
ffffffff80017bce: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80017bd6: 48 8b 6c 24 68       	mov	rbp, qword ptr [rsp + 0x68]
ffffffff80017bdb: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80017be0: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff80017be5: e9 b0 fd ff ff       	jmp	0xffffffff8001799a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff80017bea: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80017bef: 49 89 f7             	mov	r15, rsi
ffffffff80017bf2: 48 89 9c 24 58 01 00 00      	mov	qword ptr [rsp + 0x158], rbx
ffffffff80017bfa: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff80017bff: 8b 44 08 f8          	mov	eax, dword ptr [rax + rcx - 0x8]
ffffffff80017c03: 31 f6                	xor	esi, esi
ffffffff80017c05: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017c0a: 40 0f 94 c6          	sete	sil
ffffffff80017c0e: 31 c9                	xor	ecx, ecx
ffffffff80017c10: 48 bf 00 00 00 00 00 01 00 00	movabs	rdi, 0x10000000000
ffffffff80017c1a: 48 39 bc 24 60 01 00 00      	cmp	qword ptr [rsp + 0x160], rdi
ffffffff80017c22: 0f 95 c1             	setne	cl
ffffffff80017c25: 48 8b 7c 24 30       	mov	rdi, qword ptr [rsp + 0x30]
ffffffff80017c2a: 48 01 d7             	add	rdi, rdx
ffffffff80017c2d: c1 e1 08             	shl	ecx, 0x8
ffffffff80017c30: 48 09 f1             	or	rcx, rsi
ffffffff80017c33: e9 0a f5 ff ff       	jmp	0xffffffff80017142 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x15c2>
ffffffff80017c38: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff80017c3d: 48 89 f7             	mov	rdi, rsi
ffffffff80017c40: 48 01 f0             	add	rax, rsi
ffffffff80017c43: 48 89 84 24 48 01 00 00      	mov	qword ptr [rsp + 0x148], rax
ffffffff80017c4b: 48 89 bc 24 a8 01 00 00      	mov	qword ptr [rsp + 0x1a8], rdi
ffffffff80017c53: 31 c0                	xor	eax, eax
ffffffff80017c55: 48 83 f9 07          	cmp	rcx, 0x7
ffffffff80017c59: 0f 94 c0             	sete	al
ffffffff80017c5c: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017c61: 48 8d 14 85 08 00 00 00      	lea	rdx, [4*rax + 0x8]
ffffffff80017c69: 48 8d 34 c5 10 00 00 00      	lea	rsi, [8*rax + 0x10]
ffffffff80017c71: 48 0f 45 f2          	cmovne	rsi, rdx
ffffffff80017c75: 48 8b 84 24 88 00 00 00      	mov	rax, qword ptr [rsp + 0x88]
ffffffff80017c7d: 48 89 c2             	mov	rdx, rax
ffffffff80017c80: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff80017c84: 74 07                	je	0xffffffff80017c8d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x210d>
ffffffff80017c86: 31 d2                	xor	edx, edx
ffffffff80017c88: 48 f7 f6             	div	rsi
ffffffff80017c8b: eb 04                	jmp	0xffffffff80017c91 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2111>
ffffffff80017c8d: 31 d2                	xor	edx, edx
ffffffff80017c8f: f7 f6                	div	esi
ffffffff80017c91: 48 89 84 24 30 01 00 00      	mov	qword ptr [rsp + 0x130], rax
ffffffff80017c99: 48 83 f9 07          	cmp	rcx, 0x7
ffffffff80017c9d: 0f 94 c0             	sete	al
ffffffff80017ca0: 48 89 84 24 b0 01 00 00      	mov	qword ptr [rsp + 0x1b0], rax
ffffffff80017ca8: f6 84 24 f8 04 00 00 01      	test	byte ptr [rsp + 0x4f8], 0x1
ffffffff80017cb0: 4c 89 84 24 28 01 00 00      	mov	qword ptr [rsp + 0x128], r8
ffffffff80017cb8: 74 30                	je	0xffffffff80017cea <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x216a>
ffffffff80017cba: 45 31 c0             	xor	r8d, r8d
ffffffff80017cbd: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017cc2: 41 0f 94 c0          	sete	r8b
ffffffff80017cc6: 48 8b 8c 24 00 05 00 00      	mov	rcx, qword ptr [rsp + 0x500]
ffffffff80017cce: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80017cd6: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80017cdb: 4c 89 d2             	mov	rdx, r10
ffffffff80017cde: 44 8b 4c 24 24       	mov	r9d, dword ptr [rsp + 0x24]
ffffffff80017ce3: e8 88 04 00 00       	call	0xffffffff80018170 <goblin::elf::gnu_hash_len::h50a1755dadcf02de>
ffffffff80017ce8: eb 46                	jmp	0xffffffff80017d30 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x21b0>
ffffffff80017cea: f6 84 24 08 05 00 00 01      	test	byte ptr [rsp + 0x508], 0x1
ffffffff80017cf2: 0f 84 8a 00 00 00    	je	0xffffffff80017d82 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2202>
ffffffff80017cf8: 45 31 c9             	xor	r9d, r9d
ffffffff80017cfb: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017d00: 41 0f 94 c1          	sete	r9b
ffffffff80017d04: 48 8b 8c 24 10 05 00 00      	mov	rcx, qword ptr [rsp + 0x510]
ffffffff80017d0c: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80017d10: 89 04 24             	mov	dword ptr [rsp], eax
ffffffff80017d13: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80017d1b: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80017d20: 4c 89 d2             	mov	rdx, r10
ffffffff80017d23: 44 8b 84 24 e4 00 00 00      	mov	r8d, dword ptr [rsp + 0xe4]
ffffffff80017d2b: e8 60 07 00 00       	call	0xffffffff80018490 <goblin::elf::hash_len::hbf61a7b243282ab8>
ffffffff80017d30: 48 8b 84 24 08 02 00 00      	mov	rax, qword ptr [rsp + 0x208]
ffffffff80017d38: 4c 8b bc 24 10 02 00 00      	mov	r15, qword ptr [rsp + 0x210]
ffffffff80017d40: 48 83 f8 07          	cmp	rax, 0x7
ffffffff80017d44: 75 12                	jne	0xffffffff80017d58 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x21d8>
ffffffff80017d46: 4c 89 b4 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], r14
ffffffff80017d4e: 4c 8b 84 24 28 01 00 00      	mov	r8, qword ptr [rsp + 0x128]
ffffffff80017d56: eb 35                	jmp	0xffffffff80017d8d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x220d>
ffffffff80017d58: 48 8b 8c 24 18 02 00 00      	mov	rcx, qword ptr [rsp + 0x218]
ffffffff80017d60: 48 8b 94 24 20 02 00 00      	mov	rdx, qword ptr [rsp + 0x220]
ffffffff80017d68: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80017d6d: 49 89 55 20          	mov	qword ptr [r13 + 0x20], rdx
ffffffff80017d71: 49 89 4d 18          	mov	qword ptr [r13 + 0x18], rcx
ffffffff80017d75: 49 89 45 08          	mov	qword ptr [r13 + 0x8], rax
ffffffff80017d79: 4d 89 7d 10          	mov	qword ptr [r13 + 0x10], r15
ffffffff80017d7d: e9 c0 01 00 00       	jmp	0xffffffff80017f42 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23c2>
ffffffff80017d82: 4c 89 b4 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], r14
ffffffff80017d8a: 45 31 ff             	xor	r15d, r15d
ffffffff80017d8d: 48 8b 8c 24 80 00 00 00      	mov	rcx, qword ptr [rsp + 0x80]
ffffffff80017d95: 31 c0                	xor	eax, eax
ffffffff80017d97: 44 88 e8             	mov	al, r13b
ffffffff80017d9a: 41 89 c5             	mov	r13d, eax
ffffffff80017d9d: 44 88 e5             	mov	bpl, r12b
ffffffff80017da0: 41 c1 e5 08          	shl	r13d, 0x8
ffffffff80017da4: 41 09 ed             	or	r13d, ebp
ffffffff80017da7: 31 ed                	xor	ebp, ebp
ffffffff80017da9: 80 7c 24 48 02       	cmp	byte ptr [rsp + 0x48], 0x2
ffffffff80017dae: 40 0f 94 c5          	sete	bpl
ffffffff80017db2: 48 8b 84 24 40 01 00 00      	mov	rax, qword ptr [rsp + 0x140]
ffffffff80017dba: 48 89 84 24 08 02 00 00      	mov	qword ptr [rsp + 0x208], rax
ffffffff80017dc2: 4c 89 84 24 10 02 00 00      	mov	qword ptr [rsp + 0x210], r8
ffffffff80017dca: 48 c7 84 24 18 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x218], 0x0
ffffffff80017dd6: 48 c7 84 24 20 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x220], 0x0
ffffffff80017de2: 48 8b 84 24 38 01 00 00      	mov	rax, qword ptr [rsp + 0x138]
ffffffff80017dea: 48 89 84 24 28 02 00 00      	mov	qword ptr [rsp + 0x228], rax
ffffffff80017df2: c6 84 24 30 02 00 00 01      	mov	byte ptr [rsp + 0x230], 0x1
ffffffff80017dfa: 66 44 89 ac 24 31 02 00 00   	mov	word ptr [rsp + 0x231], r13w
ffffffff80017e03: 48 89 8c 24 38 02 00 00      	mov	qword ptr [rsp + 0x238], rcx
ffffffff80017e0b: 4c 8b b4 24 90 00 00 00      	mov	r14, qword ptr [rsp + 0x90]
ffffffff80017e13: 4c 89 b4 24 40 02 00 00      	mov	qword ptr [rsp + 0x240], r14
ffffffff80017e1b: 48 c7 84 24 48 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x248], 0x0
ffffffff80017e27: 48 c7 84 24 50 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x250], 0x0
ffffffff80017e33: 48 8b 84 24 b8 01 00 00      	mov	rax, qword ptr [rsp + 0x1b8]
ffffffff80017e3b: 48 89 84 24 58 02 00 00      	mov	qword ptr [rsp + 0x258], rax
ffffffff80017e43: c6 84 24 60 02 00 00 00      	mov	byte ptr [rsp + 0x260], 0x0
ffffffff80017e4b: 66 44 89 ac 24 61 02 00 00   	mov	word ptr [rsp + 0x261], r13w
ffffffff80017e54: 48 8b 84 24 48 01 00 00      	mov	rax, qword ptr [rsp + 0x148]
ffffffff80017e5c: 48 89 84 24 68 02 00 00      	mov	qword ptr [rsp + 0x268], rax
ffffffff80017e64: 4c 8b b4 24 88 00 00 00      	mov	r14, qword ptr [rsp + 0x88]
ffffffff80017e6c: 4c 89 b4 24 70 02 00 00      	mov	qword ptr [rsp + 0x270], r14
ffffffff80017e74: 48 c7 84 24 78 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x278], 0x0
ffffffff80017e80: 48 c7 84 24 80 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x280], 0x0
ffffffff80017e8c: 48 8b 84 24 30 01 00 00      	mov	rax, qword ptr [rsp + 0x130]
ffffffff80017e94: 48 89 84 24 88 02 00 00      	mov	qword ptr [rsp + 0x288], rax
ffffffff80017e9c: 48 8b 84 24 b0 01 00 00      	mov	rax, qword ptr [rsp + 0x1b0]
ffffffff80017ea4: 88 84 24 90 02 00 00 	mov	byte ptr [rsp + 0x290], al
ffffffff80017eab: 66 44 89 ac 24 91 02 00 00   	mov	word ptr [rsp + 0x291], r13w
ffffffff80017eb4: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80017ebc: 31 f6                	xor	esi, esi
ffffffff80017ebe: 4d 89 c4             	mov	r12, r8
ffffffff80017ec1: e8 4a 36 00 00       	call	0xffffffff8001b510 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045>
ffffffff80017ec6: 4c 8d 40 01          	lea	r8, [rax + 0x1]
ffffffff80017eca: 4d 39 f8             	cmp	r8, r15
ffffffff80017ecd: 4d 0f 46 c7          	cmovbe	r8, r15
ffffffff80017ed1: 48 85 c0             	test	rax, rax
ffffffff80017ed4: 4d 0f 44 c7          	cmove	r8, r15
ffffffff80017ed8: 48 8b 8c 24 78 05 00 00      	mov	rcx, qword ptr [rsp + 0x578]
ffffffff80017ee0: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff80017ee4: 89 04 24             	mov	dword ptr [rsp], eax
ffffffff80017ee7: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80017eef: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff80017ef4: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80017ef9: 41 89 e9             	mov	r9d, ebp
ffffffff80017efc: e8 6f 2c 00 00       	call	0xffffffff8001ab70 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5>
ffffffff80017f01: 0f b6 84 24 30 02 00 00      	movzx	eax, byte ptr [rsp + 0x230]
ffffffff80017f09: 48 8b bc 24 08 02 00 00      	mov	rdi, qword ptr [rsp + 0x208]
ffffffff80017f11: 48 8b b4 24 10 02 00 00      	mov	rsi, qword ptr [rsp + 0x210]
ffffffff80017f19: 48 8b 94 24 18 02 00 00      	mov	rdx, qword ptr [rsp + 0x218]
ffffffff80017f21: 48 8b 8c 24 20 02 00 00      	mov	rcx, qword ptr [rsp + 0x220]
ffffffff80017f29: 3c 02                	cmp	al, 0x2
ffffffff80017f2b: 75 36                	jne	0xffffffff80017f63 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23e3>
ffffffff80017f2d: 4c 8b 6c 24 18       	mov	r13, qword ptr [rsp + 0x18]
ffffffff80017f32: 49 89 7d 08          	mov	qword ptr [r13 + 0x8], rdi
ffffffff80017f36: 49 89 75 10          	mov	qword ptr [r13 + 0x10], rsi
ffffffff80017f3a: 49 89 55 18          	mov	qword ptr [r13 + 0x18], rdx
ffffffff80017f3e: 49 89 4d 20          	mov	qword ptr [r13 + 0x20], rcx
ffffffff80017f42: 49 c7 45 00 03 00 00 00      	mov	qword ptr [r13], 0x3
ffffffff80017f4a: 48 8b 6c 24 68       	mov	rbp, qword ptr [rsp + 0x68]
ffffffff80017f4f: 4c 8b 74 24 50       	mov	r14, qword ptr [rsp + 0x50]
ffffffff80017f54: 4c 8b 64 24 40       	mov	r12, qword ptr [rsp + 0x40]
ffffffff80017f59: 4c 8b 7c 24 28       	mov	r15, qword ptr [rsp + 0x28]
ffffffff80017f5e: e9 37 fa ff ff       	jmp	0xffffffff8001799a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff80017f63: 48 89 bc 24 78 03 00 00      	mov	qword ptr [rsp + 0x378], rdi
ffffffff80017f6b: 48 89 b4 24 80 03 00 00      	mov	qword ptr [rsp + 0x380], rsi
ffffffff80017f73: 48 89 94 24 88 03 00 00      	mov	qword ptr [rsp + 0x388], rdx
ffffffff80017f7b: 48 89 8c 24 90 03 00 00      	mov	qword ptr [rsp + 0x390], rcx
ffffffff80017f83: 88 44 24 16          	mov	byte ptr [rsp + 0x16], al
ffffffff80017f87: 44 89 ac 24 e0 00 00 00      	mov	dword ptr [rsp + 0xe0], r13d
ffffffff80017f8f: 48 8b 84 24 c0 01 00 00      	mov	rax, qword ptr [rsp + 0x1c0]
ffffffff80017f97: 4c 01 e0             	add	rax, r12
ffffffff80017f9a: 48 89 84 24 98 03 00 00      	mov	qword ptr [rsp + 0x398], rax
ffffffff80017fa2: 48 8b 84 24 b8 00 00 00      	mov	rax, qword ptr [rsp + 0xb8]
ffffffff80017faa: 48 8b 8c 24 90 00 00 00      	mov	rcx, qword ptr [rsp + 0x90]
ffffffff80017fb2: 48 01 c8             	add	rax, rcx
ffffffff80017fb5: 48 89 84 24 a8 03 00 00      	mov	qword ptr [rsp + 0x3a8], rax
ffffffff80017fbd: 48 8b 84 24 a8 01 00 00      	mov	rax, qword ptr [rsp + 0x1a8]
ffffffff80017fc5: 4c 01 f0             	add	rax, r14
ffffffff80017fc8: 48 89 84 24 b0 03 00 00      	mov	qword ptr [rsp + 0x3b0], rax
ffffffff80017fd0: f7 84 24 c0 00 00 00 00 00 00 08     	test	dword ptr [rsp + 0xc0], 0x8000000
ffffffff80017fdb: 0f 94 44 24 15       	sete	byte ptr [rsp + 0x15]
ffffffff80017fe0: 48 8b 84 24 28 02 00 00      	mov	rax, qword ptr [rsp + 0x228]
ffffffff80017fe8: 48 89 84 24 68 03 00 00      	mov	qword ptr [rsp + 0x368], rax
ffffffff80017ff0: 0f b6 84 24 31 02 00 00      	movzx	eax, byte ptr [rsp + 0x231]
ffffffff80017ff8: 48 89 84 24 70 03 00 00      	mov	qword ptr [rsp + 0x370], rax
ffffffff80018000: 8b 84 24 32 02 00 00 	mov	eax, dword ptr [rsp + 0x232]
ffffffff80018007: 89 84 24 20 01 00 00 	mov	dword ptr [rsp + 0x120], eax
ffffffff8001800e: 0f b7 84 24 36 02 00 00      	movzx	eax, word ptr [rsp + 0x236]
ffffffff80018016: 66 89 84 24 24 01 00 00      	mov	word ptr [rsp + 0x124], ax
ffffffff8001801e: b0 01                	mov	al, 0x1
ffffffff80018020: 48 89 84 24 a0 03 00 00      	mov	qword ptr [rsp + 0x3a0], rax
ffffffff80018028: 48 8b 6c 24 68       	mov	rbp, qword ptr [rsp + 0x68]
ffffffff8001802d: 4c 8b 44 24 08       	mov	r8, qword ptr [rsp + 0x8]
ffffffff80018032: 48 8b 8c 24 80 00 00 00      	mov	rcx, qword ptr [rsp + 0x80]
ffffffff8001803a: e9 04 e5 ff ff       	jmp	0xffffffff80016543 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x9c3>
ffffffff8001803f: 48 8d bc 24 08 02 00 00      	lea	rdi, [rsp + 0x208]
ffffffff80018047: 48 8d b4 24 e8 00 00 00      	lea	rsi, [rsp + 0xe8]
ffffffff8001804f: 48 8d 94 24 f8 04 00 00      	lea	rdx, [rsp + 0x4f8]
ffffffff80018057: e8 e4 2b 00 00       	call	0xffffffff8001ac40 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>
ffffffff8001805c: 48 8b 8c 24 08 02 00 00      	mov	rcx, qword ptr [rsp + 0x208]
ffffffff80018064: 48 8b 9c 24 10 02 00 00      	mov	rbx, qword ptr [rsp + 0x210]
ffffffff8001806c: 48 8b 94 24 18 02 00 00      	mov	rdx, qword ptr [rsp + 0x218]
ffffffff80018074: 48 8b 84 24 20 02 00 00      	mov	rax, qword ptr [rsp + 0x220]
ffffffff8001807c: e9 87 e8 ff ff       	jmp	0xffffffff80016908 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd88>
ffffffff80018081: cc                   	int3
ffffffff80018082: cc                   	int3
ffffffff80018083: cc                   	int3
ffffffff80018084: cc                   	int3
ffffffff80018085: cc                   	int3
ffffffff80018086: cc                   	int3
ffffffff80018087: cc                   	int3
ffffffff80018088: cc                   	int3
ffffffff80018089: cc                   	int3
ffffffff8001808a: cc                   	int3
ffffffff8001808b: cc                   	int3
ffffffff8001808c: cc                   	int3
ffffffff8001808d: cc                   	int3
ffffffff8001808e: cc                   	int3
ffffffff8001808f: cc                   	int3

ffffffff80018090 <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6>:
ffffffff80018090: 41 57                	push	r15
ffffffff80018092: 41 56                	push	r14
ffffffff80018094: 41 54                	push	r12
ffffffff80018096: 53                   	push	rbx
ffffffff80018097: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8001809b: 49 81 f9 ff ff 00 00 	cmp	r9, 0xffff
ffffffff800180a2: 75 09                	jne	0xffffffff800180ad <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x1d>
ffffffff800180a4: 4d 85 c0             	test	r8, r8
ffffffff800180a7: 74 52                	je	0xffffffff800180fb <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x6b>
ffffffff800180a9: 44 8b 49 3c          	mov	r9d, dword ptr [rcx + 0x3c]
ffffffff800180ad: 4d 39 c1             	cmp	r9, r8
ffffffff800180b0: 73 49                	jae	0xffffffff800180fb <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x6b>
ffffffff800180b2: 49 89 f6             	mov	r14, rsi
ffffffff800180b5: 48 89 fb             	mov	rbx, rdi
ffffffff800180b8: 4b 8d 04 c9          	lea	rax, [r9 + 8*r9]
ffffffff800180bc: 4c 8d 3c c1          	lea	r15, [rcx + 8*rax]
ffffffff800180c0: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff800180c5: 4c 89 fe             	mov	rsi, r15
ffffffff800180c8: 49 89 d4             	mov	r12, rdx
ffffffff800180cb: e8 c0 31 00 00       	call	0xffffffff8001b290 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff800180d0: 83 7c 24 08 07       	cmp	dword ptr [rsp + 0x8], 0x7
ffffffff800180d5: 75 53                	jne	0xffffffff8001812a <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x9a>
ffffffff800180d7: 49 8b 4f 18          	mov	rcx, qword ptr [r15 + 0x18]
ffffffff800180db: 4d 8b 47 20          	mov	r8, qword ptr [r15 + 0x20]
ffffffff800180df: 48 89 df             	mov	rdi, rbx
ffffffff800180e2: 4c 89 f6             	mov	rsi, r14
ffffffff800180e5: 4c 89 e2             	mov	rdx, r12
ffffffff800180e8: 45 31 c9             	xor	r9d, r9d
ffffffff800180eb: 48 83 c4 28          	add	rsp, 0x28
ffffffff800180ef: 5b                   	pop	rbx
ffffffff800180f0: 41 5c                	pop	r12
ffffffff800180f2: 41 5e                	pop	r14
ffffffff800180f4: 41 5f                	pop	r15
ffffffff800180f6: e9 c5 3b 00 00       	jmp	0xffffffff8001bcc0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff800180fb: 48 c7 07 00 00 00 00 	mov	qword ptr [rdi], 0x0
ffffffff80018102: 48 c7 47 08 08 00 00 00      	mov	qword ptr [rdi + 0x8], 0x8
ffffffff8001810a: 48 c7 47 10 00 00 00 00      	mov	qword ptr [rdi + 0x10], 0x0
ffffffff80018112: 66 c7 47 18 00 00    	mov	word ptr [rdi + 0x18], 0x0
ffffffff80018118: 48 c7 47 28 01 00 00 00      	mov	qword ptr [rdi + 0x28], 0x1
ffffffff80018120: 48 c7 47 30 00 00 00 00      	mov	qword ptr [rdi + 0x30], 0x0
ffffffff80018128: eb 31                	jmp	0xffffffff8001815b <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0xcb>
ffffffff8001812a: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001812f: 48 89 43 20          	mov	qword ptr [rbx + 0x20], rax
ffffffff80018133: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff80018138: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001813c: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff80018141: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80018146: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001814a: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001814e: 48 b8 00 00 00 00 00 00 00 80	movabs	rax, -0x8000000000000000
ffffffff80018158: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001815b: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001815f: 5b                   	pop	rbx
ffffffff80018160: 41 5c                	pop	r12
ffffffff80018162: 41 5e                	pop	r14
ffffffff80018164: 41 5f                	pop	r15
ffffffff80018166: c3                   	ret
ffffffff80018167: cc                   	int3
ffffffff80018168: cc                   	int3
ffffffff80018169: cc                   	int3
ffffffff8001816a: cc                   	int3
ffffffff8001816b: cc                   	int3
ffffffff8001816c: cc                   	int3
ffffffff8001816d: cc                   	int3
ffffffff8001816e: cc                   	int3
ffffffff8001816f: cc                   	int3

ffffffff80018170 <goblin::elf::gnu_hash_len::h50a1755dadcf02de>:
ffffffff80018170: 48 89 d0             	mov	rax, rdx
ffffffff80018173: 48 29 c8             	sub	rax, rcx
ffffffff80018176: 73 0e                	jae	0xffffffff80018186 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x16>
ffffffff80018178: 48 89 ca             	mov	rdx, rcx
ffffffff8001817b: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8001817f: be 01 00 00 00       	mov	esi, 0x1
ffffffff80018184: eb 0f                	jmp	0xffffffff80018195 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x25>
ffffffff80018186: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8001818a: 73 17                	jae	0xffffffff800181a3 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x33>
ffffffff8001818c: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff80018191: 31 d2                	xor	edx, edx
ffffffff80018193: 31 f6                	xor	esi, esi
ffffffff80018195: 89 57 0c             	mov	dword ptr [rdi + 0xc], edx
ffffffff80018198: 48 89 47 10          	mov	qword ptr [rdi + 0x10], rax
ffffffff8001819c: 48 89 37             	mov	qword ptr [rdi], rsi
ffffffff8001819f: 89 4f 08             	mov	dword ptr [rdi + 0x8], ecx
ffffffff800181a2: c3                   	ret
ffffffff800181a3: 55                   	push	rbp
ffffffff800181a4: 41 57                	push	r15
ffffffff800181a6: 41 56                	push	r14
ffffffff800181a8: 41 55                	push	r13
ffffffff800181aa: 41 54                	push	r12
ffffffff800181ac: 53                   	push	rbx
ffffffff800181ad: 48 83 ec 78          	sub	rsp, 0x78
ffffffff800181b1: 44 8b 14 0e          	mov	r10d, dword ptr [rsi + rcx]
ffffffff800181b5: 44 89 d0             	mov	eax, r10d
ffffffff800181b8: 0f c8                	bswap	eax
ffffffff800181ba: 45 84 c9             	test	r9b, r9b
ffffffff800181bd: 41 0f 44 c2          	cmove	eax, r10d
ffffffff800181c1: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff800181c5: 4c 8d 51 04          	lea	r10, [rcx + 0x4]
ffffffff800181c9: 49 89 d3             	mov	r11, rdx
ffffffff800181cc: 4d 29 d3             	sub	r11, r10
ffffffff800181cf: 73 0e                	jae	0xffffffff800181df <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x6f>
ffffffff800181d1: 4c 89 d0             	mov	rax, r10
ffffffff800181d4: 48 c1 e8 20          	shr	rax, 0x20
ffffffff800181d8: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800181dd: eb 10                	jmp	0xffffffff800181ef <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x7f>
ffffffff800181df: 49 83 fb 04          	cmp	r11, 0x4
ffffffff800181e3: 73 27                	jae	0xffffffff8001820c <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x9c>
ffffffff800181e5: 41 ba 04 00 00 00    	mov	r10d, 0x4
ffffffff800181eb: 31 c0                	xor	eax, eax
ffffffff800181ed: 31 c9                	xor	ecx, ecx
ffffffff800181ef: 89 47 0c             	mov	dword ptr [rdi + 0xc], eax
ffffffff800181f2: 4c 89 5f 10          	mov	qword ptr [rdi + 0x10], r11
ffffffff800181f6: 48 89 0f             	mov	qword ptr [rdi], rcx
ffffffff800181f9: 44 89 57 08          	mov	dword ptr [rdi + 0x8], r10d
ffffffff800181fd: 48 83 c4 78          	add	rsp, 0x78
ffffffff80018201: 5b                   	pop	rbx
ffffffff80018202: 41 5c                	pop	r12
ffffffff80018204: 41 5d                	pop	r13
ffffffff80018206: 41 5e                	pop	r14
ffffffff80018208: 41 5f                	pop	r15
ffffffff8001820a: 5d                   	pop	rbp
ffffffff8001820b: c3                   	ret
ffffffff8001820c: 44 8b 5c 0e 04       	mov	r11d, dword ptr [rsi + rcx + 0x4]
ffffffff80018211: 45 89 da             	mov	r10d, r11d
ffffffff80018214: 41 0f ca             	bswap	r10d
ffffffff80018217: 45 84 c9             	test	r9b, r9b
ffffffff8001821a: 45 0f 44 d3          	cmove	r10d, r11d
ffffffff8001821e: 4c 89 54 24 08       	mov	qword ptr [rsp + 0x8], r10
ffffffff80018223: 4c 8d 59 08          	lea	r11, [rcx + 0x8]
ffffffff80018227: 48 89 d3             	mov	rbx, rdx
ffffffff8001822a: 4c 29 db             	sub	rbx, r11
ffffffff8001822d: 73 0e                	jae	0xffffffff8001823d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xcd>
ffffffff8001822f: 4c 89 d8             	mov	rax, r11
ffffffff80018232: 48 c1 e8 20          	shr	rax, 0x20
ffffffff80018236: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001823b: eb 10                	jmp	0xffffffff8001824d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xdd>
ffffffff8001823d: 48 83 fb 04          	cmp	rbx, 0x4
ffffffff80018241: 73 1a                	jae	0xffffffff8001825d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xed>
ffffffff80018243: 41 bb 04 00 00 00    	mov	r11d, 0x4
ffffffff80018249: 31 c0                	xor	eax, eax
ffffffff8001824b: 31 c9                	xor	ecx, ecx
ffffffff8001824d: 89 47 0c             	mov	dword ptr [rdi + 0xc], eax
ffffffff80018250: 48 89 5f 10          	mov	qword ptr [rdi + 0x10], rbx
ffffffff80018254: 48 89 0f             	mov	qword ptr [rdi], rcx
ffffffff80018257: 44 89 5f 08          	mov	dword ptr [rdi + 0x8], r11d
ffffffff8001825b: eb a0                	jmp	0xffffffff800181fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff8001825d: 42 8b 1c 1e          	mov	ebx, dword ptr [rsi + r11]
ffffffff80018261: 41 89 db             	mov	r11d, ebx
ffffffff80018264: 41 0f cb             	bswap	r11d
ffffffff80018267: 45 84 c9             	test	r9b, r9b
ffffffff8001826a: 44 0f 44 db          	cmove	r11d, ebx
ffffffff8001826e: 4c 89 5c 24 10       	mov	qword ptr [rsp + 0x10], r11
ffffffff80018273: 48 85 c0             	test	rax, rax
ffffffff80018276: 74 75                	je	0xffffffff800182ed <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff80018278: 45 85 d2             	test	r10d, r10d
ffffffff8001827b: 74 70                	je	0xffffffff800182ed <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff8001827d: 45 85 db             	test	r11d, r11d
ffffffff80018280: 74 6b                	je	0xffffffff800182ed <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff80018282: 41 80 c8 02          	or	r8b, 0x2
ffffffff80018286: 48 89 cb             	mov	rbx, rcx
ffffffff80018289: 44 89 c1             	mov	ecx, r8d
ffffffff8001828c: 49 d3 e3             	shl	r11, cl
ffffffff8001828f: 49 89 d8             	mov	r8, rbx
ffffffff80018292: 4e 8d 34 1b          	lea	r14, [rbx + r11]
ffffffff80018296: 49 83 c6 10          	add	r14, 0x10
ffffffff8001829a: 49 89 d7             	mov	r15, rdx
ffffffff8001829d: 4d 29 df             	sub	r15, r11
ffffffff800182a0: 49 29 df             	sub	r15, rbx
ffffffff800182a3: 49 83 c7 f0          	add	r15, -0x10
ffffffff800182a7: 45 84 c9             	test	r9b, r9b
ffffffff800182aa: 0f 84 c2 00 00 00    	je	0xffffffff80018372 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x202>
ffffffff800182b0: 31 c9                	xor	ecx, ecx
ffffffff800182b2: 4c 89 f3             	mov	rbx, r14
ffffffff800182b5: 49 89 c4             	mov	r12, rax
ffffffff800182b8: 48 39 d3             	cmp	rbx, rdx
ffffffff800182bb: 0f 87 fa 00 00 00    	ja	0xffffffff800183bb <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x24b>
ffffffff800182c1: 4d 89 fd             	mov	r13, r15
ffffffff800182c4: 49 83 ed 04          	sub	r13, 0x4
ffffffff800182c8: 0f 82 fb 00 00 00    	jb	0xffffffff800183c9 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x259>
ffffffff800182ce: 44 8b 3c 1e          	mov	r15d, dword ptr [rsi + rbx]
ffffffff800182d2: 41 0f cf             	bswap	r15d
ffffffff800182d5: 4c 39 f9             	cmp	rcx, r15
ffffffff800182d8: 49 0f 46 cf          	cmovbe	rcx, r15
ffffffff800182dc: 48 83 c3 04          	add	rbx, 0x4
ffffffff800182e0: 4d 89 ef             	mov	r15, r13
ffffffff800182e3: 49 ff cc             	dec	r12
ffffffff800182e6: 75 d0                	jne	0xffffffff800182b8 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x148>
ffffffff800182e8: e9 b5 00 00 00       	jmp	0xffffffff800183a2 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x232>
ffffffff800182ed: 48 89 e0             	mov	rax, rsp
ffffffff800182f0: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff800182f5: 48 c7 44 24 20 10 04 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffdfbf0
ffffffff800182fe: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80018303: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80018308: 48 c7 44 24 30 10 04 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffdfbf0
ffffffff80018311: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80018316: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001831b: 48 c7 44 24 40 10 04 02 80   	mov	qword ptr [rsp + 0x40], -0x7ffdfbf0
ffffffff80018324: 48 c7 44 24 48 20 81 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffd7ee0
ffffffff8001832d: 48 c7 44 24 50 03 00 00 00   	mov	qword ptr [rsp + 0x50], 0x3
ffffffff80018336: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff8001833f: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80018344: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff80018349: 48 c7 44 24 60 03 00 00 00   	mov	qword ptr [rsp + 0x60], 0x3
ffffffff80018352: 48 8d 47 08          	lea	rax, [rdi + 0x8]
ffffffff80018356: 48 8d 74 24 48       	lea	rsi, [rsp + 0x48]
ffffffff8001835b: 48 89 fb             	mov	rbx, rdi
ffffffff8001835e: 48 89 c7             	mov	rdi, rax
ffffffff80018361: e8 4a 53 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80018366: 48 c7 03 03 00 00 00 	mov	qword ptr [rbx], 0x3
ffffffff8001836d: e9 8b fe ff ff       	jmp	0xffffffff800181fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff80018372: 45 31 ed             	xor	r13d, r13d
ffffffff80018375: 4c 89 f3             	mov	rbx, r14
ffffffff80018378: 49 89 c4             	mov	r12, rax
ffffffff8001837b: 48 39 d3             	cmp	rbx, rdx
ffffffff8001837e: 77 3b                	ja	0xffffffff800183bb <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x24b>
ffffffff80018380: 4c 89 fd             	mov	rbp, r15
ffffffff80018383: 48 83 ed 04          	sub	rbp, 0x4
ffffffff80018387: 72 40                	jb	0xffffffff800183c9 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x259>
ffffffff80018389: 8b 0c 1e             	mov	ecx, dword ptr [rsi + rbx]
ffffffff8001838c: 49 39 cd             	cmp	r13, rcx
ffffffff8001838f: 49 0f 47 cd          	cmova	rcx, r13
ffffffff80018393: 48 83 c3 04          	add	rbx, 0x4
ffffffff80018397: 49 89 ef             	mov	r15, rbp
ffffffff8001839a: 49 89 cd             	mov	r13, rcx
ffffffff8001839d: 49 ff cc             	dec	r12
ffffffff800183a0: 75 d9                	jne	0xffffffff8001837b <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x20b>
ffffffff800183a2: 4c 39 d1             	cmp	rcx, r10
ffffffff800183a5: 73 3d                	jae	0xffffffff800183e4 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x274>
ffffffff800183a7: 48 c7 47 08 00 00 00 00      	mov	qword ptr [rdi + 0x8], 0x0
ffffffff800183af: 48 c7 07 07 00 00 00 	mov	qword ptr [rdi], 0x7
ffffffff800183b6: e9 42 fe ff ff       	jmp	0xffffffff800181fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff800183bb: 48 89 d8             	mov	rax, rbx
ffffffff800183be: 48 c1 e8 20          	shr	rax, 0x20
ffffffff800183c2: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800183c7: eb 09                	jmp	0xffffffff800183d2 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x262>
ffffffff800183c9: 31 c0                	xor	eax, eax
ffffffff800183cb: bb 04 00 00 00       	mov	ebx, 0x4
ffffffff800183d0: 31 c9                	xor	ecx, ecx
ffffffff800183d2: 89 47 0c             	mov	dword ptr [rdi + 0xc], eax
ffffffff800183d5: 4c 89 7f 10          	mov	qword ptr [rdi + 0x10], r15
ffffffff800183d9: 48 89 0f             	mov	qword ptr [rdi], rcx
ffffffff800183dc: 89 5f 08             	mov	dword ptr [rdi + 0x8], ebx
ffffffff800183df: e9 19 fe ff ff       	jmp	0xffffffff800181fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff800183e4: 4c 29 d0             	sub	rax, r10
ffffffff800183e7: 48 01 c8             	add	rax, rcx
ffffffff800183ea: 4d 8d 14 86          	lea	r10, [r14 + 4*rax]
ffffffff800183ee: 48 c1 e0 02          	shl	rax, 0x2
ffffffff800183f2: 45 84 c9             	test	r9b, r9b
ffffffff800183f5: 74 32                	je	0xffffffff80018429 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2b9>
ffffffff800183f7: 49 89 d1             	mov	r9, rdx
ffffffff800183fa: 4d 29 d9             	sub	r9, r11
ffffffff800183fd: 4d 29 c1             	sub	r9, r8
ffffffff80018400: 49 29 c1             	sub	r9, rax
ffffffff80018403: 49 83 c1 f0          	add	r9, -0x10
ffffffff80018407: 49 39 d2             	cmp	r10, rdx
ffffffff8001840a: 77 5c                	ja	0xffffffff80018468 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2f8>
ffffffff8001840c: 4c 89 c8             	mov	rax, r9
ffffffff8001840f: 48 83 e8 04          	sub	rax, 0x4
ffffffff80018413: 72 61                	jb	0xffffffff80018476 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x306>
ffffffff80018415: 48 ff c1             	inc	rcx
ffffffff80018418: 42 f6 44 16 03 01    	test	byte ptr [rsi + r10 + 0x3], 0x1
ffffffff8001841e: 4d 8d 52 04          	lea	r10, [r10 + 0x4]
ffffffff80018422: 49 89 c1             	mov	r9, rax
ffffffff80018425: 74 e0                	je	0xffffffff80018407 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x297>
ffffffff80018427: eb 2f                	jmp	0xffffffff80018458 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2e8>
ffffffff80018429: 49 89 d1             	mov	r9, rdx
ffffffff8001842c: 4d 29 d9             	sub	r9, r11
ffffffff8001842f: 4d 29 c1             	sub	r9, r8
ffffffff80018432: 49 29 c1             	sub	r9, rax
ffffffff80018435: 49 83 c1 f0          	add	r9, -0x10
ffffffff80018439: 49 39 d2             	cmp	r10, rdx
ffffffff8001843c: 77 2a                	ja	0xffffffff80018468 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2f8>
ffffffff8001843e: 4c 89 c8             	mov	rax, r9
ffffffff80018441: 48 83 e8 04          	sub	rax, 0x4
ffffffff80018445: 72 2f                	jb	0xffffffff80018476 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x306>
ffffffff80018447: 48 ff c1             	inc	rcx
ffffffff8001844a: 42 f6 04 16 01       	test	byte ptr [rsi + r10], 0x1
ffffffff8001844f: 4d 8d 52 04          	lea	r10, [r10 + 0x4]
ffffffff80018453: 49 89 c1             	mov	r9, rax
ffffffff80018456: 74 e1                	je	0xffffffff80018439 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2c9>
ffffffff80018458: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff8001845c: 48 c7 07 07 00 00 00 	mov	qword ptr [rdi], 0x7
ffffffff80018463: e9 95 fd ff ff       	jmp	0xffffffff800181fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff80018468: 4c 89 d0             	mov	rax, r10
ffffffff8001846b: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8001846f: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80018474: eb 0a                	jmp	0xffffffff80018480 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x310>
ffffffff80018476: 31 c0                	xor	eax, eax
ffffffff80018478: 41 ba 04 00 00 00    	mov	r10d, 0x4
ffffffff8001847e: 31 c9                	xor	ecx, ecx
ffffffff80018480: 89 47 0c             	mov	dword ptr [rdi + 0xc], eax
ffffffff80018483: 4c 89 4f 10          	mov	qword ptr [rdi + 0x10], r9
ffffffff80018487: e9 6a fd ff ff       	jmp	0xffffffff800181f6 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x86>
ffffffff8001848c: cc                   	int3
ffffffff8001848d: cc                   	int3
ffffffff8001848e: cc                   	int3
ffffffff8001848f: cc                   	int3

ffffffff80018490 <goblin::elf::hash_len::hbf61a7b243282ab8>:
ffffffff80018490: 0f b6 44 24 08       	movzx	eax, byte ptr [rsp + 0x8]
ffffffff80018495: 66 41 83 f8 29       	cmp	r8w, 0x29
ffffffff8001849a: 74 0a                	je	0xffffffff800184a6 <goblin::elf::hash_len::hbf61a7b243282ab8+0x16>
ffffffff8001849c: 45 0f b7 c0          	movzx	r8d, r8w
ffffffff800184a0: 41 83 f8 16          	cmp	r8d, 0x16
ffffffff800184a4: 75 2a                	jne	0xffffffff800184d0 <goblin::elf::hash_len::hbf61a7b243282ab8+0x40>
ffffffff800184a6: 45 84 c9             	test	r9b, r9b
ffffffff800184a9: 74 25                	je	0xffffffff800184d0 <goblin::elf::hash_len::hbf61a7b243282ab8+0x40>
ffffffff800184ab: 48 83 c1 04          	add	rcx, 0x4
ffffffff800184af: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff800184b6: 4c 0f 43 c1          	cmovae	r8, rcx
ffffffff800184ba: 4c 29 c2             	sub	rdx, r8
ffffffff800184bd: 73 52                	jae	0xffffffff80018511 <goblin::elf::hash_len::hbf61a7b243282ab8+0x81>
ffffffff800184bf: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800184c4: 48 89 57 10          	mov	qword ptr [rdi + 0x10], rdx
ffffffff800184c8: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff800184cb: 4c 89 47 08          	mov	qword ptr [rdi + 0x8], r8
ffffffff800184cf: c3                   	ret
ffffffff800184d0: 48 83 c1 04          	add	rcx, 0x4
ffffffff800184d4: 49 c7 c0 ff ff ff ff 	mov	r8, -0x1
ffffffff800184db: 4c 0f 43 c1          	cmovae	r8, rcx
ffffffff800184df: 4c 29 c2             	sub	rdx, r8
ffffffff800184e2: 73 0e                	jae	0xffffffff800184f2 <goblin::elf::hash_len::hbf61a7b243282ab8+0x62>
ffffffff800184e4: 4c 89 c0             	mov	rax, r8
ffffffff800184e7: 48 c1 e8 20          	shr	rax, 0x20
ffffffff800184eb: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800184f0: eb 10                	jmp	0xffffffff80018502 <goblin::elf::hash_len::hbf61a7b243282ab8+0x72>
ffffffff800184f2: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff800184f6: 73 33                	jae	0xffffffff8001852b <goblin::elf::hash_len::hbf61a7b243282ab8+0x9b>
ffffffff800184f8: 41 b8 04 00 00 00    	mov	r8d, 0x4
ffffffff800184fe: 31 c0                	xor	eax, eax
ffffffff80018500: 31 c9                	xor	ecx, ecx
ffffffff80018502: 89 47 0c             	mov	dword ptr [rdi + 0xc], eax
ffffffff80018505: 48 89 57 10          	mov	qword ptr [rdi + 0x10], rdx
ffffffff80018509: 48 89 0f             	mov	qword ptr [rdi], rcx
ffffffff8001850c: 44 89 47 08          	mov	dword ptr [rdi + 0x8], r8d
ffffffff80018510: c3                   	ret
ffffffff80018511: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff80018515: 73 2d                	jae	0xffffffff80018544 <goblin::elf::hash_len::hbf61a7b243282ab8+0xb4>
ffffffff80018517: 41 b8 08 00 00 00    	mov	r8d, 0x8
ffffffff8001851d: 31 c0                	xor	eax, eax
ffffffff8001851f: 48 89 57 10          	mov	qword ptr [rdi + 0x10], rdx
ffffffff80018523: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80018526: 4c 89 47 08          	mov	qword ptr [rdi + 0x8], r8
ffffffff8001852a: c3                   	ret
ffffffff8001852b: 42 8b 14 06          	mov	edx, dword ptr [rsi + r8]
ffffffff8001852f: 89 d1                	mov	ecx, edx
ffffffff80018531: 0f c9                	bswap	ecx
ffffffff80018533: 84 c0                	test	al, al
ffffffff80018535: 0f 44 ca             	cmove	ecx, edx
ffffffff80018538: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff8001853c: 48 c7 07 07 00 00 00 	mov	qword ptr [rdi], 0x7
ffffffff80018543: c3                   	ret
ffffffff80018544: 4a 8b 14 06          	mov	rdx, qword ptr [rsi + r8]
ffffffff80018548: 48 89 d1             	mov	rcx, rdx
ffffffff8001854b: 48 0f c9             	bswap	rcx
ffffffff8001854e: 84 c0                	test	al, al
ffffffff80018550: 48 0f 44 ca          	cmove	rcx, rdx
ffffffff80018554: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff80018558: 48 c7 07 07 00 00 00 	mov	qword ptr [rdi], 0x7
ffffffff8001855f: c3                   	ret

ffffffff80018560 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7>:
ffffffff80018560: 55                   	push	rbp
ffffffff80018561: 41 57                	push	r15
ffffffff80018563: 41 56                	push	r14
ffffffff80018565: 41 55                	push	r13
ffffffff80018567: 41 54                	push	r12
ffffffff80018569: 53                   	push	rbx
ffffffff8001856a: 48 81 ec 88 03 00 00 	sub	rsp, 0x388
ffffffff80018571: 44 89 cb             	mov	ebx, r9d
ffffffff80018574: 4d 89 c5             	mov	r13, r8
ffffffff80018577: 49 89 cf             	mov	r15, rcx
ffffffff8001857a: 49 89 fc             	mov	r12, rdi
ffffffff8001857d: 44 0f b6 84 24 c0 03 00 00   	movzx	r8d, byte ptr [rsp + 0x3c0]
ffffffff80018586: 49 6b c5 38          	imul	rax, r13, 0x38
ffffffff8001858a: 31 c9                	xor	ecx, ecx
ffffffff8001858c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80018590: 48 39 c8             	cmp	rax, rcx
ffffffff80018593: 0f 84 71 01 00 00    	je	0xffffffff8001870a <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1aa>
ffffffff80018599: 48 8d 79 38          	lea	rdi, [rcx + 0x38]
ffffffff8001859d: 41 83 7c 0f 30 02    	cmp	dword ptr [r15 + rcx + 0x30], 0x2
ffffffff800185a3: 48 89 f9             	mov	rcx, rdi
ffffffff800185a6: 75 e8                	jne	0xffffffff80018590 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x30>
ffffffff800185a8: 49 8b 44 3f c8       	mov	rax, qword ptr [r15 + rdi - 0x38]
ffffffff800185ad: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800185b2: 49 8b 7c 3f e0       	mov	rdi, qword ptr [r15 + rdi - 0x20]
ffffffff800185b7: 48 89 7c 24 38       	mov	qword ptr [rsp + 0x38], rdi
ffffffff800185bc: 48 85 ff             	test	rdi, rdi
ffffffff800185bf: 0f 84 52 01 00 00    	je	0xffffffff80018717 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1b7>
ffffffff800185c5: 48 29 c2             	sub	rdx, rax
ffffffff800185c8: 0f 92 c1             	setb	cl
ffffffff800185cb: 48 39 fa             	cmp	rdx, rdi
ffffffff800185ce: 0f 92 c2             	setb	dl
ffffffff800185d1: 08 ca                	or	dl, cl
ffffffff800185d3: 0f 84 45 01 00 00    	je	0xffffffff8001871e <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1be>
ffffffff800185d9: 48 8d 44 24 30       	lea	rax, [rsp + 0x30]
ffffffff800185de: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rax
ffffffff800185e6: 48 c7 84 24 b8 00 00 00 70 de 01 80  	mov	qword ptr [rsp + 0xb8], -0x7ffe2190
ffffffff800185f2: 48 8d 44 24 38       	lea	rax, [rsp + 0x38]
ffffffff800185f7: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rax
ffffffff800185ff: 48 c7 84 24 c8 00 00 00 70 de 01 80  	mov	qword ptr [rsp + 0xc8], -0x7ffe2190
ffffffff8001860b: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff80018614: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff8001861d: 48 c7 44 24 60 00 00 00 00   	mov	qword ptr [rsp + 0x60], 0x0
ffffffff80018626: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff80018630: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff80018635: c6 44 24 70 03       	mov	byte ptr [rsp + 0x70], 0x3
ffffffff8001863a: 48 c7 44 24 78 02 00 00 00   	mov	qword ptr [rsp + 0x78], 0x2
ffffffff80018643: 48 c7 84 24 88 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x88], 0x2
ffffffff8001864f: 48 c7 84 24 98 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x98], 0x1
ffffffff8001865b: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rax
ffffffff80018663: c6 84 24 a8 00 00 00 03      	mov	byte ptr [rsp + 0xa8], 0x3
ffffffff8001866b: 48 c7 84 24 d0 00 00 00 c0 83 02 80  	mov	qword ptr [rsp + 0xd0], -0x7ffd7c40
ffffffff80018677: 48 c7 84 24 d8 00 00 00 03 00 00 00  	mov	qword ptr [rsp + 0xd8], 0x3
ffffffff80018683: 48 8d 44 24 40       	lea	rax, [rsp + 0x40]
ffffffff80018688: 48 89 84 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rax
ffffffff80018690: 48 c7 84 24 f8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xf8], 0x2
ffffffff8001869c: 48 8d 84 24 b0 00 00 00      	lea	rax, [rsp + 0xb0]
ffffffff800186a4: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rax
ffffffff800186ac: 48 c7 84 24 e8 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0xe8], 0x2
ffffffff800186b8: 48 8d bc 24 08 01 00 00      	lea	rdi, [rsp + 0x108]
ffffffff800186c0: 48 8d b4 24 d0 00 00 00      	lea	rsi, [rsp + 0xd0]
ffffffff800186c8: e8 e3 4f 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff800186cd: 48 8b 84 24 08 01 00 00      	mov	rax, qword ptr [rsp + 0x108]
ffffffff800186d5: 48 8b 8c 24 10 01 00 00      	mov	rcx, qword ptr [rsp + 0x110]
ffffffff800186dd: 48 8b 94 24 18 01 00 00      	mov	rdx, qword ptr [rsp + 0x118]
ffffffff800186e5: 49 c7 44 24 08 03 00 00 00   	mov	qword ptr [r12 + 0x8], 0x3
ffffffff800186ee: 49 89 44 24 10       	mov	qword ptr [r12 + 0x10], rax
ffffffff800186f3: 49 89 4c 24 18       	mov	qword ptr [r12 + 0x18], rcx
ffffffff800186f8: 49 89 54 24 20       	mov	qword ptr [r12 + 0x20], rdx
ffffffff800186fd: 49 c7 04 24 03 00 00 00      	mov	qword ptr [r12], 0x3
ffffffff80018705: e9 9d 03 00 00       	jmp	0xffffffff80018aa7 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff8001870a: 49 c7 04 24 02 00 00 00      	mov	qword ptr [r12], 0x2
ffffffff80018712: e9 90 03 00 00       	jmp	0xffffffff80018aa7 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80018717: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001871c: eb 03                	jmp	0xffffffff80018721 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1c1>
ffffffff8001871e: 48 01 c6             	add	rsi, rax
ffffffff80018721: 8d 4b 03             	lea	ecx, [rbx + 0x3]
ffffffff80018724: 48 89 fa             	mov	rdx, rdi
ffffffff80018727: 48 d3 ea             	shr	rdx, cl
ffffffff8001872a: 48 89 d5             	mov	rbp, rdx
ffffffff8001872d: 48 c1 e5 04          	shl	rbp, 0x4
ffffffff80018731: 45 31 f6             	xor	r14d, r14d
ffffffff80018734: 48 89 d0             	mov	rax, rdx
ffffffff80018737: 48 c1 e8 3c          	shr	rax, 0x3c
ffffffff8001873b: 0f 85 94 03 00 00    	jne	0xffffffff80018ad5 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff80018741: 48 b8 f8 ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffff8
ffffffff8001874b: 48 39 c5             	cmp	rbp, rax
ffffffff8001874e: 0f 87 81 03 00 00    	ja	0xffffffff80018ad5 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff80018754: 48 85 ed             	test	rbp, rbp
ffffffff80018757: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff8001875c: 48 89 7c 24 20       	mov	qword ptr [rsp + 0x20], rdi
ffffffff80018761: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80018766: 74 40                	je	0xffffffff800187a8 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x248>
ffffffff80018768: 0f b6 05 72 2a 01 00 	movzx	eax, byte ptr [rip + 0x12a72] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001876f: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff80018775: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001877a: 48 89 ef             	mov	rdi, rbp
ffffffff8001877d: e8 8e 07 ff ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff80018782: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff80018787: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001878c: 44 0f b6 84 24 c0 03 00 00   	movzx	r8d, byte ptr [rsp + 0x3c0]
ffffffff80018795: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001879a: 48 85 c0             	test	rax, rax
ffffffff8001879d: 0f 84 32 03 00 00    	je	0xffffffff80018ad5 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff800187a3: 48 89 d1             	mov	rcx, rdx
ffffffff800187a6: eb 07                	jmp	0xffffffff800187af <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x24f>
ffffffff800187a8: b8 08 00 00 00       	mov	eax, 0x8
ffffffff800187ad: 31 c9                	xor	ecx, ecx
ffffffff800187af: 48 89 4c 24 40       	mov	qword ptr [rsp + 0x40], rcx
ffffffff800187b4: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff800187b9: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff800187c2: 48 85 d2             	test	rdx, rdx
ffffffff800187c5: 0f 84 d5 00 00 00    	je	0xffffffff800188a0 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x340>
ffffffff800187cb: 4c 89 64 24 08       	mov	qword ptr [rsp + 0x8], r12
ffffffff800187d0: 84 db                	test	bl, bl
ffffffff800187d2: 4c 89 6c 24 10       	mov	qword ptr [rsp + 0x10], r13
ffffffff800187d7: 0f 84 a0 01 00 00    	je	0xffffffff8001897d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x41d>
ffffffff800187dd: bd 01 00 00 00       	mov	ebp, 0x1
ffffffff800187e2: 49 89 fc             	mov	r12, rdi
ffffffff800187e5: 45 31 f6             	xor	r14d, r14d
ffffffff800187e8: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff800187f0: 49 83 fc 08          	cmp	r12, 0x8
ffffffff800187f4: 0f 82 56 02 00 00    	jb	0xffffffff80018a50 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4f0>
ffffffff800187fa: 49 8d 5c 24 f8       	lea	rbx, [r12 - 0x8]
ffffffff800187ff: 48 83 fb 08          	cmp	rbx, 0x8
ffffffff80018803: 0f 82 54 02 00 00    	jb	0xffffffff80018a5d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4fd>
ffffffff80018809: 4a 8b 04 36          	mov	rax, qword ptr [rsi + r14]
ffffffff8001880d: 49 89 c5             	mov	r13, rax
ffffffff80018810: 49 0f cd             	bswap	r13
ffffffff80018813: 48 8d 4d ff          	lea	rcx, [rbp - 0x1]
ffffffff80018817: 45 84 c0             	test	r8b, r8b
ffffffff8001881a: 4c 0f 44 e8          	cmove	r13, rax
ffffffff8001881e: 4a 8b 44 36 08       	mov	rax, qword ptr [rsi + r14 + 0x8]
ffffffff80018823: 48 89 c3             	mov	rbx, rax
ffffffff80018826: 48 0f cb             	bswap	rbx
ffffffff80018829: 48 0f 44 d8          	cmove	rbx, rax
ffffffff8001882d: 48 3b 4c 24 40       	cmp	rcx, qword ptr [rsp + 0x40]
ffffffff80018832: 75 29                	jne	0xffffffff8001885d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x2fd>
ffffffff80018834: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff80018839: 48 c7 c6 98 83 02 80 	mov	rsi, -0x7ffd7c68
ffffffff80018840: e8 fb 1c 00 00       	call	0xffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80018845: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff8001884a: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001884f: 44 0f b6 84 24 c0 03 00 00   	movzx	r8d, byte ptr [rsp + 0x3c0]
ffffffff80018858: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001885d: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80018862: 4e 89 2c 30          	mov	qword ptr [rax + r14], r13
ffffffff80018866: 4a 89 5c 30 08       	mov	qword ptr [rax + r14 + 0x8], rbx
ffffffff8001886b: 48 89 6c 24 50       	mov	qword ptr [rsp + 0x50], rbp
ffffffff80018870: 4d 85 ed             	test	r13, r13
ffffffff80018873: 0f 84 43 02 00 00    	je	0xffffffff80018abc <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x55c>
ffffffff80018879: 48 39 ea             	cmp	rdx, rbp
ffffffff8001887c: 4c 8b 6c 24 10       	mov	r13, qword ptr [rsp + 0x10]
ffffffff80018881: 0f 84 44 02 00 00    	je	0xffffffff80018acb <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x56b>
ffffffff80018887: 49 83 c6 10          	add	r14, 0x10
ffffffff8001888b: 48 ff c5             	inc	rbp
ffffffff8001888e: 49 83 c4 f0          	add	r12, -0x10
ffffffff80018892: 49 39 fe             	cmp	r14, rdi
ffffffff80018895: 0f 86 55 ff ff ff    	jbe	0xffffffff800187f0 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x290>
ffffffff8001889b: e9 9f 01 00 00       	jmp	0xffffffff80018a3f <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4df>
ffffffff800188a0: 31 ed                	xor	ebp, ebp
ffffffff800188a2: 48 8d bc 24 50 01 00 00      	lea	rdi, [rsp + 0x150]
ffffffff800188aa: 48 c7 84 24 20 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x120], 0x0
ffffffff800188b6: 48 c7 84 24 30 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x130], 0x0
ffffffff800188c2: 48 c7 84 24 40 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x140], 0x0
ffffffff800188ce: ba f1 00 00 00       	mov	edx, 0xf1
ffffffff800188d3: 31 f6                	xor	esi, esi
ffffffff800188d5: ff 15 65 3b 02 00    	call	qword ptr [rip + 0x23b65] # 0xffffffff8003c440
ffffffff800188db: 48 85 ed             	test	rbp, rbp
ffffffff800188de: 74 41                	je	0xffffffff80018921 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x3c1>
ffffffff800188e0: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff800188e5: 48 c1 e5 04          	shl	rbp, 0x4
ffffffff800188e9: 48 01 c5             	add	rbp, rax
ffffffff800188ec: 48 8d 9c 24 20 01 00 00      	lea	rbx, [rsp + 0x120]
ffffffff800188f4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80018900: 4c 8d 70 10          	lea	r14, [rax + 0x10]
ffffffff80018904: 48 8b 08             	mov	rcx, qword ptr [rax]
ffffffff80018907: 4c 8b 40 08          	mov	r8, qword ptr [rax + 0x8]
ffffffff8001890b: 48 89 df             	mov	rdi, rbx
ffffffff8001890e: 4c 89 fe             	mov	rsi, r15
ffffffff80018911: 4c 89 ea             	mov	rdx, r13
ffffffff80018914: e8 67 04 00 00       	call	0xffffffff80018d80 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977>
ffffffff80018919: 4c 89 f0             	mov	rax, r14
ffffffff8001891c: 49 39 ee             	cmp	r14, rbp
ffffffff8001891f: 75 df                	jne	0xffffffff80018900 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x3a0>
ffffffff80018921: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff80018926: 48 89 84 24 80 03 00 00      	mov	qword ptr [rsp + 0x380], rax
ffffffff8001892e: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff80018933: 48 8b 4c 24 48       	mov	rcx, qword ptr [rsp + 0x48]
ffffffff80018938: 48 89 8c 24 78 03 00 00      	mov	qword ptr [rsp + 0x378], rcx
ffffffff80018940: 48 89 84 24 70 03 00 00      	mov	qword ptr [rsp + 0x370], rax
ffffffff80018948: 48 8d 9c 24 48 02 00 00      	lea	rbx, [rsp + 0x248]
ffffffff80018950: 48 8d b4 24 20 01 00 00      	lea	rsi, [rsp + 0x120]
ffffffff80018958: 4c 8b 35 d1 3a 02 00 	mov	r14, qword ptr [rip + 0x23ad1] # 0xffffffff8003c430
ffffffff8001895f: ba 28 01 00 00       	mov	edx, 0x128
ffffffff80018964: 48 89 df             	mov	rdi, rbx
ffffffff80018967: 41 ff d6             	call	r14
ffffffff8001896a: ba 40 01 00 00       	mov	edx, 0x140
ffffffff8001896f: 4c 89 e7             	mov	rdi, r12
ffffffff80018972: 48 89 de             	mov	rsi, rbx
ffffffff80018975: 41 ff d6             	call	r14
ffffffff80018978: e9 2a 01 00 00       	jmp	0xffffffff80018aa7 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff8001897d: 41 bc 01 00 00 00    	mov	r12d, 0x1
ffffffff80018983: 31 ed                	xor	ebp, ebp
ffffffff80018985: 45 31 f6             	xor	r14d, r14d
ffffffff80018988: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80018990: 48 89 fb             	mov	rbx, rdi
ffffffff80018993: 4c 29 f3             	sub	rbx, r14
ffffffff80018996: 48 83 fb 04          	cmp	rbx, 0x4
ffffffff8001899a: 0f 82 a6 00 00 00    	jb	0xffffffff80018a46 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4e6>
ffffffff800189a0: 48 83 c3 fc          	add	rbx, -0x4
ffffffff800189a4: 48 83 fb 04          	cmp	rbx, 0x4
ffffffff800189a8: 0f 82 98 00 00 00    	jb	0xffffffff80018a46 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4e6>
ffffffff800189ae: 42 8b 04 36          	mov	eax, dword ptr [rsi + r14]
ffffffff800189b2: 42 8b 4c 36 04       	mov	ecx, dword ptr [rsi + r14 + 0x4]
ffffffff800189b7: 41 89 c5             	mov	r13d, eax
ffffffff800189ba: 41 0f cd             	bswap	r13d
ffffffff800189bd: 45 84 c0             	test	r8b, r8b
ffffffff800189c0: 44 0f 44 e8          	cmove	r13d, eax
ffffffff800189c4: 89 cb                	mov	ebx, ecx
ffffffff800189c6: 0f cb                	bswap	ebx
ffffffff800189c8: 0f 44 d9             	cmove	ebx, ecx
ffffffff800189cb: 48 3b 6c 24 40       	cmp	rbp, qword ptr [rsp + 0x40]
ffffffff800189d0: 75 29                	jne	0xffffffff800189fb <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x49b>
ffffffff800189d2: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff800189d7: 48 c7 c6 98 83 02 80 	mov	rsi, -0x7ffd7c68
ffffffff800189de: e8 5d 1b 00 00       	call	0xffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff800189e3: 48 8b 54 24 18       	mov	rdx, qword ptr [rsp + 0x18]
ffffffff800189e8: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff800189ed: 44 0f b6 84 24 c0 03 00 00   	movzx	r8d, byte ptr [rsp + 0x3c0]
ffffffff800189f6: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff800189fb: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff80018a00: 48 89 e9             	mov	rcx, rbp
ffffffff80018a03: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff80018a07: 4c 89 2c 08          	mov	qword ptr [rax + rcx], r13
ffffffff80018a0b: 48 89 5c 08 08       	mov	qword ptr [rax + rcx + 0x8], rbx
ffffffff80018a10: 48 ff c5             	inc	rbp
ffffffff80018a13: 48 89 6c 24 50       	mov	qword ptr [rsp + 0x50], rbp
ffffffff80018a18: 4d 85 ed             	test	r13, r13
ffffffff80018a1b: 0f 84 9b 00 00 00    	je	0xffffffff80018abc <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x55c>
ffffffff80018a21: 49 39 d4             	cmp	r12, rdx
ffffffff80018a24: 4c 8b 6c 24 10       	mov	r13, qword ptr [rsp + 0x10]
ffffffff80018a29: 0f 84 9c 00 00 00    	je	0xffffffff80018acb <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x56b>
ffffffff80018a2f: 49 83 c6 08          	add	r14, 0x8
ffffffff80018a33: 49 ff c4             	inc	r12
ffffffff80018a36: 49 39 fe             	cmp	r14, rdi
ffffffff80018a39: 0f 86 51 ff ff ff    	jbe	0xffffffff80018990 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x430>
ffffffff80018a3f: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80018a44: eb 1f                	jmp	0xffffffff80018a65 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80018a46: 41 be 04 00 00 00    	mov	r14d, 0x4
ffffffff80018a4c: 31 c0                	xor	eax, eax
ffffffff80018a4e: eb 15                	jmp	0xffffffff80018a65 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80018a50: 4c 89 e3             	mov	rbx, r12
ffffffff80018a53: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff80018a59: 31 c0                	xor	eax, eax
ffffffff80018a5b: eb 08                	jmp	0xffffffff80018a65 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80018a5d: 31 c0                	xor	eax, eax
ffffffff80018a5f: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff80018a65: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff80018a6a: 49 89 44 24 08       	mov	qword ptr [r12 + 0x8], rax
ffffffff80018a6f: 4d 89 74 24 10       	mov	qword ptr [r12 + 0x10], r14
ffffffff80018a74: 49 89 5c 24 18       	mov	qword ptr [r12 + 0x18], rbx
ffffffff80018a79: 49 c7 44 24 20 10 00 00 00   	mov	qword ptr [r12 + 0x20], 0x10
ffffffff80018a82: 49 c7 04 24 03 00 00 00      	mov	qword ptr [r12], 0x3
ffffffff80018a8a: 48 8b 74 24 40       	mov	rsi, qword ptr [rsp + 0x40]
ffffffff80018a8f: 48 85 f6             	test	rsi, rsi
ffffffff80018a92: 74 13                	je	0xffffffff80018aa7 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80018a94: 48 8b 7c 24 48       	mov	rdi, qword ptr [rsp + 0x48]
ffffffff80018a99: 48 c1 e6 04          	shl	rsi, 0x4
ffffffff80018a9d: ba 08 00 00 00       	mov	edx, 0x8
ffffffff80018aa2: e8 b9 04 ff ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff80018aa7: 4c 89 e0             	mov	rax, r12
ffffffff80018aaa: 48 81 c4 88 03 00 00 	add	rsp, 0x388
ffffffff80018ab1: 5b                   	pop	rbx
ffffffff80018ab2: 41 5c                	pop	r12
ffffffff80018ab4: 41 5d                	pop	r13
ffffffff80018ab6: 41 5e                	pop	r14
ffffffff80018ab8: 41 5f                	pop	r15
ffffffff80018aba: 5d                   	pop	rbp
ffffffff80018abb: c3                   	ret
ffffffff80018abc: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff80018ac1: 4c 8b 6c 24 10       	mov	r13, qword ptr [rsp + 0x10]
ffffffff80018ac6: e9 d7 fd ff ff       	jmp	0xffffffff800188a2 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x342>
ffffffff80018acb: 4c 8b 64 24 08       	mov	r12, qword ptr [rsp + 0x8]
ffffffff80018ad0: e9 cd fd ff ff       	jmp	0xffffffff800188a2 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x342>
ffffffff80018ad5: 4c 89 f7             	mov	rdi, r14
ffffffff80018ad8: 48 89 ee             	mov	rsi, rbp
ffffffff80018adb: 48 c7 c2 80 83 02 80 	mov	rdx, -0x7ffd7c80
ffffffff80018ae2: e8 b0 4b 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80018ae7: cc                   	int3
ffffffff80018ae8: cc                   	int3
ffffffff80018ae9: cc                   	int3
ffffffff80018aea: cc                   	int3
ffffffff80018aeb: cc                   	int3
ffffffff80018aec: cc                   	int3
ffffffff80018aed: cc                   	int3
ffffffff80018aee: cc                   	int3
ffffffff80018aef: cc                   	int3

ffffffff80018af0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca>:
ffffffff80018af0: 55                   	push	rbp
ffffffff80018af1: 41 57                	push	r15
ffffffff80018af3: 41 56                	push	r14
ffffffff80018af5: 41 55                	push	r13
ffffffff80018af7: 41 54                	push	r12
ffffffff80018af9: 53                   	push	rbx
ffffffff80018afa: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff80018b01: 49 89 d6             	mov	r14, rdx
ffffffff80018b04: 49 89 f7             	mov	r15, rsi
ffffffff80018b07: 48 8b 9e 00 01 00 00 	mov	rbx, qword ptr [rsi + 0x100]
ffffffff80018b0e: 4c 8b ae 38 01 00 00 	mov	r13, qword ptr [rsi + 0x138]
ffffffff80018b15: 49 39 dd             	cmp	r13, rbx
ffffffff80018b18: 49 0f 42 dd          	cmovb	rbx, r13
ffffffff80018b1c: 48 85 db             	test	rbx, rbx
ffffffff80018b1f: 48 89 7c 24 20       	mov	qword ptr [rsp + 0x20], rdi
ffffffff80018b24: 74 34                	je	0xffffffff80018b5a <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x6a>
ffffffff80018b26: 49 89 dc             	mov	r12, rbx
ffffffff80018b29: 49 c1 e4 04          	shl	r12, 0x4
ffffffff80018b2d: 0f b6 05 ad 26 01 00 	movzx	eax, byte ptr [rip + 0x126ad] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80018b34: be 08 00 00 00       	mov	esi, 0x8
ffffffff80018b39: 4c 89 e7             	mov	rdi, r12
ffffffff80018b3c: e8 cf 03 ff ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff80018b41: 48 85 c0             	test	rax, rax
ffffffff80018b44: 75 19                	jne	0xffffffff80018b5f <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x6f>
ffffffff80018b46: bf 08 00 00 00       	mov	edi, 0x8
ffffffff80018b4b: 4c 89 e6             	mov	rsi, r12
ffffffff80018b4e: 48 c7 c2 f0 83 02 80 	mov	rdx, -0x7ffd7c10
ffffffff80018b55: e8 3d 4b 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80018b5a: b8 08 00 00 00       	mov	eax, 0x8
ffffffff80018b5f: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff80018b64: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff80018b69: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff80018b72: 4d 85 ed             	test	r13, r13
ffffffff80018b75: 0f 84 cc 01 00 00    	je	0xffffffff80018d47 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x257>
ffffffff80018b7b: 49 8b af 30 01 00 00 	mov	rbp, qword ptr [r15 + 0x130]
ffffffff80018b82: 49 c1 e5 04          	shl	r13, 0x4
ffffffff80018b86: 49 01 ed             	add	r13, rbp
ffffffff80018b89: 4d 8b 66 08          	mov	r12, qword ptr [r14 + 0x8]
ffffffff80018b8d: 4d 8b 76 10          	mov	r14, qword ptr [r14 + 0x10]
ffffffff80018b91: 4c 89 74 24 28       	mov	qword ptr [rsp + 0x28], r14
ffffffff80018b96: eb 37                	jmp	0xffffffff80018bcf <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xdf>
ffffffff80018b98: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80018ba0: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff80018ba5: 4c 89 f1             	mov	rcx, r14
ffffffff80018ba8: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff80018bac: 4c 89 3c 08          	mov	qword ptr [rax + rcx], r15
ffffffff80018bb0: 48 89 5c 08 08       	mov	qword ptr [rax + rcx + 0x8], rbx
ffffffff80018bb5: 49 ff c6             	inc	r14
ffffffff80018bb8: 4c 89 74 24 18       	mov	qword ptr [rsp + 0x18], r14
ffffffff80018bbd: 4c 8b 74 24 28       	mov	r14, qword ptr [rsp + 0x28]
ffffffff80018bc2: 48 83 c5 10          	add	rbp, 0x10
ffffffff80018bc6: 4c 39 ed             	cmp	rbp, r13
ffffffff80018bc9: 0f 84 78 01 00 00    	je	0xffffffff80018d47 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x257>
ffffffff80018bcf: 48 83 7d 00 01       	cmp	qword ptr [rbp], 0x1
ffffffff80018bd4: 75 ec                	jne	0xffffffff80018bc2 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff80018bd6: 4d 85 f6             	test	r14, r14
ffffffff80018bd9: 0f 84 c1 00 00 00    	je	0xffffffff80018ca0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff80018bdf: 48 8b 45 08          	mov	rax, qword ptr [rbp + 0x8]
ffffffff80018be3: 49 83 fe 01          	cmp	r14, 0x1
ffffffff80018be7: 75 04                	jne	0xffffffff80018bed <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xfd>
ffffffff80018be9: 31 c9                	xor	ecx, ecx
ffffffff80018beb: eb 35                	jmp	0xffffffff80018c22 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x132>
ffffffff80018bed: 4c 89 f2             	mov	rdx, r14
ffffffff80018bf0: 31 f6                	xor	esi, esi
ffffffff80018bf2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80018c00: 48 89 d7             	mov	rdi, rdx
ffffffff80018c03: 48 d1 ef             	shr	rdi
ffffffff80018c06: 48 8d 0c 37          	lea	rcx, [rdi + rsi]
ffffffff80018c0a: 4c 8d 04 49          	lea	r8, [rcx + 2*rcx]
ffffffff80018c0e: 4b 39 04 c4          	cmp	qword ptr [r12 + 8*r8], rax
ffffffff80018c12: 48 0f 47 ce          	cmova	rcx, rsi
ffffffff80018c16: 48 29 fa             	sub	rdx, rdi
ffffffff80018c19: 48 89 ce             	mov	rsi, rcx
ffffffff80018c1c: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80018c20: 77 de                	ja	0xffffffff80018c00 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x110>
ffffffff80018c22: 48 8d 14 49          	lea	rdx, [rcx + 2*rcx]
ffffffff80018c26: 49 39 04 d4          	cmp	qword ptr [r12 + 8*rdx], rax
ffffffff80018c2a: 75 1c                	jne	0xffffffff80018c48 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x158>
ffffffff80018c2c: 4d 8b 7c d4 08       	mov	r15, qword ptr [r12 + 8*rdx + 0x8]
ffffffff80018c31: 49 8b 5c d4 10       	mov	rbx, qword ptr [r12 + 8*rdx + 0x10]
ffffffff80018c36: 4c 8b 74 24 18       	mov	r14, qword ptr [rsp + 0x18]
ffffffff80018c3b: 4c 3b 74 24 08       	cmp	r14, qword ptr [rsp + 0x8]
ffffffff80018c40: 0f 85 5a ff ff ff    	jne	0xffffffff80018ba0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff80018c46: eb 31                	jmp	0xffffffff80018c79 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x189>
ffffffff80018c48: 48 83 d1 00          	adc	rcx, 0x0
ffffffff80018c4c: 74 52                	je	0xffffffff80018ca0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff80018c4e: 48 8d 0c 49          	lea	rcx, [rcx + 2*rcx]
ffffffff80018c52: 4d 8b 7c cc f0       	mov	r15, qword ptr [r12 + 8*rcx - 0x10]
ffffffff80018c57: 49 8b 5c cc f8       	mov	rbx, qword ptr [r12 + 8*rcx - 0x8]
ffffffff80018c5c: 49 2b 44 cc e8       	sub	rax, qword ptr [r12 + 8*rcx - 0x18]
ffffffff80018c61: 75 2c                	jne	0xffffffff80018c8f <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x19f>
ffffffff80018c63: 48 29 c3             	sub	rbx, rax
ffffffff80018c66: 49 01 c7             	add	r15, rax
ffffffff80018c69: 4c 8b 74 24 18       	mov	r14, qword ptr [rsp + 0x18]
ffffffff80018c6e: 4c 3b 74 24 08       	cmp	r14, qword ptr [rsp + 0x8]
ffffffff80018c73: 0f 85 27 ff ff ff    	jne	0xffffffff80018ba0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff80018c79: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff80018c7e: 48 c7 c6 08 84 02 80 	mov	rsi, -0x7ffd7bf8
ffffffff80018c85: e8 b6 18 00 00       	call	0xffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80018c8a: e9 11 ff ff ff       	jmp	0xffffffff80018ba0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff80018c8f: 48 39 c3             	cmp	rbx, rax
ffffffff80018c92: 76 09                	jbe	0xffffffff80018c9d <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1ad>
ffffffff80018c94: 41 80 3c 07 c0       	cmp	byte ptr [r15 + rax], -0x40
ffffffff80018c99: 7d c8                	jge	0xffffffff80018c63 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x173>
ffffffff80018c9b: eb 03                	jmp	0xffffffff80018ca0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff80018c9d: 74 c4                	je	0xffffffff80018c63 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x173>
ffffffff80018c9f: 90                   	nop
ffffffff80018ca0: 48 8b 05 81 37 02 00 	mov	rax, qword ptr [rip + 0x23781] # 0xffffffff8003c428 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80018ca7: 48 83 f8 02          	cmp	rax, 0x2
ffffffff80018cab: 0f 82 11 ff ff ff    	jb	0xffffffff80018bc2 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff80018cb1: 48 8d 45 08          	lea	rax, [rbp + 0x8]
ffffffff80018cb5: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80018cba: 48 c7 44 24 38 10 04 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdfbf0
ffffffff80018cc3: 48 c7 44 24 68 38 84 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd7bc8
ffffffff80018ccc: 48 c7 44 24 70 01 00 00 00   	mov	qword ptr [rsp + 0x70], 0x1
ffffffff80018cd5: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80018ce1: 48 8d 44 24 30       	lea	rax, [rsp + 0x30]
ffffffff80018ce6: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff80018ceb: 48 c7 84 24 80 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x80], 0x1
ffffffff80018cf7: 48 c7 c7 48 84 02 80 	mov	rdi, -0x7ffd7bb8
ffffffff80018cfe: e8 9d 3a 00 00       	call	0xffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff80018d03: 48 c7 44 24 40 60 84 02 80   	mov	qword ptr [rsp + 0x40], -0x7ffd7ba0
ffffffff80018d0c: 48 c7 44 24 48 14 00 00 00   	mov	qword ptr [rsp + 0x48], 0x14
ffffffff80018d15: 48 c7 44 24 50 60 84 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffd7ba0
ffffffff80018d1e: 48 c7 44 24 58 14 00 00 00   	mov	qword ptr [rsp + 0x58], 0x14
ffffffff80018d27: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff80018d2c: be 02 00 00 00       	mov	esi, 0x2
ffffffff80018d31: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff80018d36: 48 8d 54 24 40       	lea	rdx, [rsp + 0x40]
ffffffff80018d3b: 31 c9                	xor	ecx, ecx
ffffffff80018d3d: e8 1e 39 00 00       	call	0xffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff80018d42: e9 7b fe ff ff       	jmp	0xffffffff80018bc2 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff80018d47: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff80018d4c: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff80018d51: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff80018d55: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff80018d5a: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80018d5f: 48 89 48 08          	mov	qword ptr [rax + 0x8], rcx
ffffffff80018d63: 48 89 10             	mov	qword ptr [rax], rdx
ffffffff80018d66: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff80018d6d: 5b                   	pop	rbx
ffffffff80018d6e: 41 5c                	pop	r12
ffffffff80018d70: 41 5d                	pop	r13
ffffffff80018d72: 41 5e                	pop	r14
ffffffff80018d74: 41 5f                	pop	r15
ffffffff80018d76: 5d                   	pop	rbp
ffffffff80018d77: c3                   	ret
ffffffff80018d78: cc                   	int3
ffffffff80018d79: cc                   	int3
ffffffff80018d7a: cc                   	int3
ffffffff80018d7b: cc                   	int3
ffffffff80018d7c: cc                   	int3
ffffffff80018d7d: cc                   	int3
ffffffff80018d7e: cc                   	int3
ffffffff80018d7f: cc                   	int3

ffffffff80018d80 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977>:
ffffffff80018d80: 48 8d 41 ff          	lea	rax, [rcx - 0x1]
ffffffff80018d84: 48 83 f8 1d          	cmp	rax, 0x1d
ffffffff80018d88: 77 0f                	ja	0xffffffff80018d99 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x19>
ffffffff80018d8a: ff 24 c5 a8 81 02 80 	jmp	qword ptr [8*rax - 0x7ffd7e58]
ffffffff80018d91: 48 ff 87 00 01 00 00 	inc	qword ptr [rdi + 0x100]
ffffffff80018d98: c3                   	ret
ffffffff80018d99: 48 8d 81 10 00 00 90 	lea	rax, [rcx - 0x6ffffff0]
ffffffff80018da0: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff80018da4: 77 4b                	ja	0xffffffff80018df1 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x71>
ffffffff80018da6: ff 24 c5 98 82 02 80 	jmp	qword ptr [8*rax - 0x7ffd7d68]
ffffffff80018dad: 48 85 d2             	test	rdx, rdx
ffffffff80018db0: 74 35                	je	0xffffffff80018de7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x67>
ffffffff80018db2: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018db6: 31 c0                	xor	eax, eax
ffffffff80018db8: eb 0f                	jmp	0xffffffff80018dc9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x49>
ffffffff80018dba: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80018dc0: 48 83 c0 38          	add	rax, 0x38
ffffffff80018dc4: 48 39 c1             	cmp	rcx, rax
ffffffff80018dc7: 74 1e                	je	0xffffffff80018de7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x67>
ffffffff80018dc9: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018dce: 75 f0                	jne	0xffffffff80018dc0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff80018dd0: 4c 89 c2             	mov	rdx, r8
ffffffff80018dd3: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018dd8: 72 e6                	jb	0xffffffff80018dc0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff80018dda: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018ddf: 73 df                	jae	0xffffffff80018dc0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff80018de1: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018de5: 73 02                	jae	0xffffffff80018de9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x69>
ffffffff80018de7: 31 d2                	xor	edx, edx
ffffffff80018de9: 48 89 97 c8 00 00 00 	mov	qword ptr [rdi + 0xc8], rdx
ffffffff80018df0: c3                   	ret
ffffffff80018df1: 48 81 f9 f5 fe ff 6f 	cmp	rcx, 0x6ffffef5
ffffffff80018df8: 75 55                	jne	0xffffffff80018e4f <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xcf>
ffffffff80018dfa: 48 85 d2             	test	rdx, rdx
ffffffff80018dfd: 0f 84 b6 04 00 00    	je	0xffffffff800192b9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x539>
ffffffff80018e03: 48 6b d2 38          	imul	rdx, rdx, 0x38
ffffffff80018e07: 31 c0                	xor	eax, eax
ffffffff80018e09: 45 31 c9             	xor	r9d, r9d
ffffffff80018e0c: eb 0f                	jmp	0xffffffff80018e1d <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x9d>
ffffffff80018e0e: 66 90                	nop
ffffffff80018e10: 49 83 c1 38          	add	r9, 0x38
ffffffff80018e14: 4c 39 ca             	cmp	rdx, r9
ffffffff80018e17: 0f 84 94 04 00 00    	je	0xffffffff800192b1 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x531>
ffffffff80018e1d: 42 83 7c 0e 30 01    	cmp	dword ptr [rsi + r9 + 0x30], 0x1
ffffffff80018e23: 75 eb                	jne	0xffffffff80018e10 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff80018e25: 4c 89 c1             	mov	rcx, r8
ffffffff80018e28: 4a 2b 4c 0e 08       	sub	rcx, qword ptr [rsi + r9 + 0x8]
ffffffff80018e2d: 72 e1                	jb	0xffffffff80018e10 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff80018e2f: 4a 3b 4c 0e 20       	cmp	rcx, qword ptr [rsi + r9 + 0x20]
ffffffff80018e34: 73 da                	jae	0xffffffff80018e10 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff80018e36: 4a 03 0c 0e          	add	rcx, qword ptr [rsi + r9]
ffffffff80018e3a: 0f 92 c0             	setb	al
ffffffff80018e3d: 0f 82 8a 04 00 00    	jb	0xffffffff800192cd <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x54d>
ffffffff80018e43: 34 01                	xor	al, 0x1
ffffffff80018e45: 0f b6 c0             	movzx	eax, al
ffffffff80018e48: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff80018e4b: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff80018e4f: c3                   	ret
ffffffff80018e50: 48 85 d2             	test	rdx, rdx
ffffffff80018e53: 74 32                	je	0xffffffff80018e87 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x107>
ffffffff80018e55: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018e59: 31 c0                	xor	eax, eax
ffffffff80018e5b: eb 0c                	jmp	0xffffffff80018e69 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe9>
ffffffff80018e5d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80018e60: 48 83 c0 38          	add	rax, 0x38
ffffffff80018e64: 48 39 c1             	cmp	rcx, rax
ffffffff80018e67: 74 1e                	je	0xffffffff80018e87 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x107>
ffffffff80018e69: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018e6e: 75 f0                	jne	0xffffffff80018e60 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff80018e70: 4c 89 c2             	mov	rdx, r8
ffffffff80018e73: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018e78: 72 e6                	jb	0xffffffff80018e60 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff80018e7a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018e7f: 73 df                	jae	0xffffffff80018e60 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff80018e81: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018e85: 73 02                	jae	0xffffffff80018e89 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x109>
ffffffff80018e87: 31 d2                	xor	edx, edx
ffffffff80018e89: 48 89 97 e0 00 00 00 	mov	qword ptr [rdi + 0xe0], rdx
ffffffff80018e90: c3                   	ret
ffffffff80018e91: 4c 89 47 60          	mov	qword ptr [rdi + 0x60], r8
ffffffff80018e95: c3                   	ret
ffffffff80018e96: 4c 89 47 58          	mov	qword ptr [rdi + 0x58], r8
ffffffff80018e9a: c3                   	ret
ffffffff80018e9b: 4c 89 87 18 01 00 00 	mov	qword ptr [rdi + 0x118], r8
ffffffff80018ea2: c3                   	ret
ffffffff80018ea3: 48 85 d2             	test	rdx, rdx
ffffffff80018ea6: 74 2f                	je	0xffffffff80018ed7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x157>
ffffffff80018ea8: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018eac: 31 c0                	xor	eax, eax
ffffffff80018eae: eb 09                	jmp	0xffffffff80018eb9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x139>
ffffffff80018eb0: 48 83 c0 38          	add	rax, 0x38
ffffffff80018eb4: 48 39 c1             	cmp	rcx, rax
ffffffff80018eb7: 74 1e                	je	0xffffffff80018ed7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x157>
ffffffff80018eb9: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018ebe: 75 f0                	jne	0xffffffff80018eb0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff80018ec0: 4c 89 c2             	mov	rdx, r8
ffffffff80018ec3: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018ec8: 72 e6                	jb	0xffffffff80018eb0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff80018eca: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018ecf: 73 df                	jae	0xffffffff80018eb0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff80018ed1: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018ed5: 73 02                	jae	0xffffffff80018ed9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x159>
ffffffff80018ed7: 31 d2                	xor	edx, edx
ffffffff80018ed9: 48 89 97 d8 00 00 00 	mov	qword ptr [rdi + 0xd8], rdx
ffffffff80018ee0: c3                   	ret
ffffffff80018ee1: 48 85 d2             	test	rdx, rdx
ffffffff80018ee4: 74 31                	je	0xffffffff80018f17 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x197>
ffffffff80018ee6: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018eea: 31 c0                	xor	eax, eax
ffffffff80018eec: eb 0b                	jmp	0xffffffff80018ef9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x179>
ffffffff80018eee: 66 90                	nop
ffffffff80018ef0: 48 83 c0 38          	add	rax, 0x38
ffffffff80018ef4: 48 39 c1             	cmp	rcx, rax
ffffffff80018ef7: 74 1e                	je	0xffffffff80018f17 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x197>
ffffffff80018ef9: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018efe: 75 f0                	jne	0xffffffff80018ef0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff80018f00: 4c 89 c2             	mov	rdx, r8
ffffffff80018f03: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018f08: 72 e6                	jb	0xffffffff80018ef0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff80018f0a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018f0f: 73 df                	jae	0xffffffff80018ef0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff80018f11: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018f15: 73 02                	jae	0xffffffff80018f19 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x199>
ffffffff80018f17: 31 d2                	xor	edx, edx
ffffffff80018f19: 48 89 97 f0 00 00 00 	mov	qword ptr [rdi + 0xf0], rdx
ffffffff80018f20: c3                   	ret
ffffffff80018f21: 48 85 d2             	test	rdx, rdx
ffffffff80018f24: 74 31                	je	0xffffffff80018f57 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d7>
ffffffff80018f26: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018f2a: 31 c0                	xor	eax, eax
ffffffff80018f2c: eb 0b                	jmp	0xffffffff80018f39 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b9>
ffffffff80018f2e: 66 90                	nop
ffffffff80018f30: 48 83 c0 38          	add	rax, 0x38
ffffffff80018f34: 48 39 c1             	cmp	rcx, rax
ffffffff80018f37: 74 1e                	je	0xffffffff80018f57 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d7>
ffffffff80018f39: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018f3e: 75 f0                	jne	0xffffffff80018f30 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff80018f40: 4c 89 c2             	mov	rdx, r8
ffffffff80018f43: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018f48: 72 e6                	jb	0xffffffff80018f30 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff80018f4a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018f4f: 73 df                	jae	0xffffffff80018f30 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff80018f51: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018f55: 73 02                	jae	0xffffffff80018f59 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d9>
ffffffff80018f57: 31 d2                	xor	edx, edx
ffffffff80018f59: 48 89 97 d0 00 00 00 	mov	qword ptr [rdi + 0xd0], rdx
ffffffff80018f60: c3                   	ret
ffffffff80018f61: 4c 89 87 f8 00 00 00 	mov	qword ptr [rdi + 0xf8], r8
ffffffff80018f68: c3                   	ret
ffffffff80018f69: 48 85 d2             	test	rdx, rdx
ffffffff80018f6c: 74 39                	je	0xffffffff80018fa7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x227>
ffffffff80018f6e: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80018f72: 31 c0                	xor	eax, eax
ffffffff80018f74: eb 13                	jmp	0xffffffff80018f89 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x209>
ffffffff80018f76: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80018f80: 48 83 c0 38          	add	rax, 0x38
ffffffff80018f84: 48 39 c1             	cmp	rcx, rax
ffffffff80018f87: 74 1e                	je	0xffffffff80018fa7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x227>
ffffffff80018f89: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff80018f8e: 75 f0                	jne	0xffffffff80018f80 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff80018f90: 4c 89 c2             	mov	rdx, r8
ffffffff80018f93: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80018f98: 72 e6                	jb	0xffffffff80018f80 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff80018f9a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff80018f9f: 73 df                	jae	0xffffffff80018f80 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff80018fa1: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80018fa5: 73 02                	jae	0xffffffff80018fa9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x229>
ffffffff80018fa7: 31 d2                	xor	edx, edx
ffffffff80018fa9: 48 89 97 80 00 00 00 	mov	qword ptr [rdi + 0x80], rdx
ffffffff80018fb0: c3                   	ret
ffffffff80018fb1: 48 85 d2             	test	rdx, rdx
ffffffff80018fb4: 0f 84 e1 02 00 00    	je	0xffffffff8001929b <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x51b>
ffffffff80018fba: 48 6b d2 38          	imul	rdx, rdx, 0x38
ffffffff80018fbe: 31 c0                	xor	eax, eax
ffffffff80018fc0: 45 31 c9             	xor	r9d, r9d
ffffffff80018fc3: eb 18                	jmp	0xffffffff80018fdd <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x25d>
ffffffff80018fc5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff80018fd0: 49 83 c1 38          	add	r9, 0x38
ffffffff80018fd4: 4c 39 ca             	cmp	rdx, r9
ffffffff80018fd7: 0f 84 ac 02 00 00    	je	0xffffffff80019289 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x509>
ffffffff80018fdd: 42 83 7c 0e 30 01    	cmp	dword ptr [rsi + r9 + 0x30], 0x1
ffffffff80018fe3: 75 eb                	jne	0xffffffff80018fd0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff80018fe5: 4c 89 c1             	mov	rcx, r8
ffffffff80018fe8: 4a 2b 4c 0e 08       	sub	rcx, qword ptr [rsi + r9 + 0x8]
ffffffff80018fed: 72 e1                	jb	0xffffffff80018fd0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff80018fef: 4a 3b 4c 0e 20       	cmp	rcx, qword ptr [rsi + r9 + 0x20]
ffffffff80018ff4: 73 da                	jae	0xffffffff80018fd0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff80018ff6: 4a 03 0c 0e          	add	rcx, qword ptr [rsi + r9]
ffffffff80018ffa: 0f 92 c0             	setb	al
ffffffff80018ffd: 0f 82 c0 02 00 00    	jb	0xffffffff800192c3 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x543>
ffffffff80019003: 34 01                	xor	al, 0x1
ffffffff80019005: 0f b6 c0             	movzx	eax, al
ffffffff80019008: 48 89 47 10          	mov	qword ptr [rdi + 0x10], rax
ffffffff8001900c: 48 89 4f 18          	mov	qword ptr [rdi + 0x18], rcx
ffffffff80019010: c3                   	ret
ffffffff80019011: 48 85 d2             	test	rdx, rdx
ffffffff80019014: 74 31                	je	0xffffffff80019047 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c7>
ffffffff80019016: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff8001901a: 31 c0                	xor	eax, eax
ffffffff8001901c: eb 0b                	jmp	0xffffffff80019029 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a9>
ffffffff8001901e: 66 90                	nop
ffffffff80019020: 48 83 c0 38          	add	rax, 0x38
ffffffff80019024: 48 39 c1             	cmp	rcx, rax
ffffffff80019027: 74 1e                	je	0xffffffff80019047 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c7>
ffffffff80019029: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff8001902e: 75 f0                	jne	0xffffffff80019020 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff80019030: 4c 89 c2             	mov	rdx, r8
ffffffff80019033: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80019038: 72 e6                	jb	0xffffffff80019020 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff8001903a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff8001903f: 73 df                	jae	0xffffffff80019020 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff80019041: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80019045: 73 02                	jae	0xffffffff80019049 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c9>
ffffffff80019047: 31 d2                	xor	edx, edx
ffffffff80019049: 48 89 57 30          	mov	qword ptr [rdi + 0x30], rdx
ffffffff8001904d: c3                   	ret
ffffffff8001904e: 4c 89 87 98 00 00 00 	mov	qword ptr [rdi + 0x98], r8
ffffffff80019055: c3                   	ret
ffffffff80019056: 4c 89 47 78          	mov	qword ptr [rdi + 0x78], r8
ffffffff8001905a: c3                   	ret
ffffffff8001905b: 48 85 d2             	test	rdx, rdx
ffffffff8001905e: 0f 84 42 02 00 00    	je	0xffffffff800192a6 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x526>
ffffffff80019064: 48 6b d2 38          	imul	rdx, rdx, 0x38
ffffffff80019068: 31 c0                	xor	eax, eax
ffffffff8001906a: 45 31 c9             	xor	r9d, r9d
ffffffff8001906d: eb 0e                	jmp	0xffffffff8001907d <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2fd>
ffffffff8001906f: 90                   	nop
ffffffff80019070: 49 83 c1 38          	add	r9, 0x38
ffffffff80019074: 4c 39 ca             	cmp	rdx, r9
ffffffff80019077: 0f 84 15 02 00 00    	je	0xffffffff80019292 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x512>
ffffffff8001907d: 42 83 7c 0e 30 01    	cmp	dword ptr [rsi + r9 + 0x30], 0x1
ffffffff80019083: 75 eb                	jne	0xffffffff80019070 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff80019085: 4c 89 c1             	mov	rcx, r8
ffffffff80019088: 4a 2b 4c 0e 08       	sub	rcx, qword ptr [rsi + r9 + 0x8]
ffffffff8001908d: 72 e1                	jb	0xffffffff80019070 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff8001908f: 4a 3b 4c 0e 20       	cmp	rcx, qword ptr [rsi + r9 + 0x20]
ffffffff80019094: 73 da                	jae	0xffffffff80019070 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff80019096: 4a 03 0c 0e          	add	rcx, qword ptr [rsi + r9]
ffffffff8001909a: 0f 92 c0             	setb	al
ffffffff8001909d: 0f 82 25 02 00 00    	jb	0xffffffff800192c8 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x548>
ffffffff800190a3: 34 01                	xor	al, 0x1
ffffffff800190a5: 0f b6 c0             	movzx	eax, al
ffffffff800190a8: 48 89 47 20          	mov	qword ptr [rdi + 0x20], rax
ffffffff800190ac: 48 89 4f 28          	mov	qword ptr [rdi + 0x28], rcx
ffffffff800190b0: c3                   	ret
ffffffff800190b1: 4c 89 87 90 00 00 00 	mov	qword ptr [rdi + 0x90], r8
ffffffff800190b8: c3                   	ret
ffffffff800190b9: 48 85 d2             	test	rdx, rdx
ffffffff800190bc: 74 39                	je	0xffffffff800190f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x377>
ffffffff800190be: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff800190c2: 31 c0                	xor	eax, eax
ffffffff800190c4: eb 13                	jmp	0xffffffff800190d9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x359>
ffffffff800190c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff800190d0: 48 83 c0 38          	add	rax, 0x38
ffffffff800190d4: 48 39 c1             	cmp	rcx, rax
ffffffff800190d7: 74 1e                	je	0xffffffff800190f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x377>
ffffffff800190d9: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff800190de: 75 f0                	jne	0xffffffff800190d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff800190e0: 4c 89 c2             	mov	rdx, r8
ffffffff800190e3: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff800190e8: 72 e6                	jb	0xffffffff800190d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff800190ea: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff800190ef: 73 df                	jae	0xffffffff800190d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff800190f1: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff800190f5: 73 02                	jae	0xffffffff800190f9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x379>
ffffffff800190f7: 31 d2                	xor	edx, edx
ffffffff800190f9: 48 89 57 70          	mov	qword ptr [rdi + 0x70], rdx
ffffffff800190fd: c3                   	ret
ffffffff800190fe: 4c 89 87 e8 00 00 00 	mov	qword ptr [rdi + 0xe8], r8
ffffffff80019105: c3                   	ret
ffffffff80019106: 4c 89 47 38          	mov	qword ptr [rdi + 0x38], r8
ffffffff8001910a: c3                   	ret
ffffffff8001910b: 48 85 d2             	test	rdx, rdx
ffffffff8001910e: 74 37                	je	0xffffffff80019147 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c7>
ffffffff80019110: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80019114: 31 c0                	xor	eax, eax
ffffffff80019116: eb 11                	jmp	0xffffffff80019129 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a9>
ffffffff80019118: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80019120: 48 83 c0 38          	add	rax, 0x38
ffffffff80019124: 48 39 c1             	cmp	rcx, rax
ffffffff80019127: 74 1e                	je	0xffffffff80019147 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c7>
ffffffff80019129: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff8001912e: 75 f0                	jne	0xffffffff80019120 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff80019130: 4c 89 c2             	mov	rdx, r8
ffffffff80019133: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80019138: 72 e6                	jb	0xffffffff80019120 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff8001913a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff8001913f: 73 df                	jae	0xffffffff80019120 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff80019141: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80019145: 73 02                	jae	0xffffffff80019149 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c9>
ffffffff80019147: 31 d2                	xor	edx, edx
ffffffff80019149: 48 89 57 50          	mov	qword ptr [rdi + 0x50], rdx
ffffffff8001914d: c3                   	ret
ffffffff8001914e: 4c 89 47 40          	mov	qword ptr [rdi + 0x40], r8
ffffffff80019152: c3                   	ret
ffffffff80019153: 4c 89 87 88 00 00 00 	mov	qword ptr [rdi + 0x88], r8
ffffffff8001915a: c3                   	ret
ffffffff8001915b: 48 85 d2             	test	rdx, rdx
ffffffff8001915e: 74 37                	je	0xffffffff80019197 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x417>
ffffffff80019160: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff80019164: 31 c0                	xor	eax, eax
ffffffff80019166: eb 11                	jmp	0xffffffff80019179 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f9>
ffffffff80019168: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff80019170: 48 83 c0 38          	add	rax, 0x38
ffffffff80019174: 48 39 c1             	cmp	rcx, rax
ffffffff80019177: 74 1e                	je	0xffffffff80019197 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x417>
ffffffff80019179: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff8001917e: 75 f0                	jne	0xffffffff80019170 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff80019180: 4c 89 c2             	mov	rdx, r8
ffffffff80019183: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80019188: 72 e6                	jb	0xffffffff80019170 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff8001918a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff8001918f: 73 df                	jae	0xffffffff80019170 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff80019191: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80019195: 73 02                	jae	0xffffffff80019199 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x419>
ffffffff80019197: 31 d2                	xor	edx, edx
ffffffff80019199: 48 89 97 a0 00 00 00 	mov	qword ptr [rdi + 0xa0], rdx
ffffffff800191a0: c3                   	ret
ffffffff800191a1: c6 87 20 01 00 00 01 	mov	byte ptr [rdi + 0x120], 0x1
ffffffff800191a8: c3                   	ret
ffffffff800191a9: 4c 89 87 08 01 00 00 	mov	qword ptr [rdi + 0x108], r8
ffffffff800191b0: c3                   	ret
ffffffff800191b1: 4c 89 87 10 01 00 00 	mov	qword ptr [rdi + 0x110], r8
ffffffff800191b8: c3                   	ret
ffffffff800191b9: 4c 89 47 68          	mov	qword ptr [rdi + 0x68], r8
ffffffff800191bd: c3                   	ret
ffffffff800191be: 4c 89 47 48          	mov	qword ptr [rdi + 0x48], r8
ffffffff800191c2: c3                   	ret
ffffffff800191c3: 48 85 d2             	test	rdx, rdx
ffffffff800191c6: 74 2f                	je	0xffffffff800191f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x477>
ffffffff800191c8: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff800191cc: 31 c0                	xor	eax, eax
ffffffff800191ce: eb 09                	jmp	0xffffffff800191d9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x459>
ffffffff800191d0: 48 83 c0 38          	add	rax, 0x38
ffffffff800191d4: 48 39 c1             	cmp	rcx, rax
ffffffff800191d7: 74 1e                	je	0xffffffff800191f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x477>
ffffffff800191d9: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff800191de: 75 f0                	jne	0xffffffff800191d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff800191e0: 4c 89 c2             	mov	rdx, r8
ffffffff800191e3: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff800191e8: 72 e6                	jb	0xffffffff800191d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff800191ea: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff800191ef: 73 df                	jae	0xffffffff800191d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff800191f1: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff800191f5: 73 02                	jae	0xffffffff800191f9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x479>
ffffffff800191f7: 31 d2                	xor	edx, edx
ffffffff800191f9: 48 89 97 a8 00 00 00 	mov	qword ptr [rdi + 0xa8], rdx
ffffffff80019200: c3                   	ret
ffffffff80019201: 48 85 d2             	test	rdx, rdx
ffffffff80019204: 74 31                	je	0xffffffff80019237 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b7>
ffffffff80019206: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff8001920a: 31 c0                	xor	eax, eax
ffffffff8001920c: eb 0b                	jmp	0xffffffff80019219 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x499>
ffffffff8001920e: 66 90                	nop
ffffffff80019210: 48 83 c0 38          	add	rax, 0x38
ffffffff80019214: 48 39 c1             	cmp	rcx, rax
ffffffff80019217: 74 1e                	je	0xffffffff80019237 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b7>
ffffffff80019219: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff8001921e: 75 f0                	jne	0xffffffff80019210 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff80019220: 4c 89 c2             	mov	rdx, r8
ffffffff80019223: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80019228: 72 e6                	jb	0xffffffff80019210 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff8001922a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff8001922f: 73 df                	jae	0xffffffff80019210 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff80019231: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80019235: 73 02                	jae	0xffffffff80019239 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b9>
ffffffff80019237: 31 d2                	xor	edx, edx
ffffffff80019239: 48 89 97 b8 00 00 00 	mov	qword ptr [rdi + 0xb8], rdx
ffffffff80019240: c3                   	ret
ffffffff80019241: 48 85 d2             	test	rdx, rdx
ffffffff80019244: 74 31                	je	0xffffffff80019277 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f7>
ffffffff80019246: 48 6b ca 38          	imul	rcx, rdx, 0x38
ffffffff8001924a: 31 c0                	xor	eax, eax
ffffffff8001924c: eb 0b                	jmp	0xffffffff80019259 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d9>
ffffffff8001924e: 66 90                	nop
ffffffff80019250: 48 83 c0 38          	add	rax, 0x38
ffffffff80019254: 48 39 c1             	cmp	rcx, rax
ffffffff80019257: 74 1e                	je	0xffffffff80019277 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f7>
ffffffff80019259: 83 7c 06 30 01       	cmp	dword ptr [rsi + rax + 0x30], 0x1
ffffffff8001925e: 75 f0                	jne	0xffffffff80019250 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff80019260: 4c 89 c2             	mov	rdx, r8
ffffffff80019263: 48 2b 54 06 08       	sub	rdx, qword ptr [rsi + rax + 0x8]
ffffffff80019268: 72 e6                	jb	0xffffffff80019250 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff8001926a: 48 3b 54 06 20       	cmp	rdx, qword ptr [rsi + rax + 0x20]
ffffffff8001926f: 73 df                	jae	0xffffffff80019250 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff80019271: 48 03 14 06          	add	rdx, qword ptr [rsi + rax]
ffffffff80019275: 73 02                	jae	0xffffffff80019279 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f9>
ffffffff80019277: 31 d2                	xor	edx, edx
ffffffff80019279: 48 89 97 b0 00 00 00 	mov	qword ptr [rdi + 0xb0], rdx
ffffffff80019280: c3                   	ret
ffffffff80019281: 4c 89 87 c0 00 00 00 	mov	qword ptr [rdi + 0xc0], r8
ffffffff80019288: c3                   	ret
ffffffff80019289: 48 89 47 10          	mov	qword ptr [rdi + 0x10], rax
ffffffff8001928d: 48 89 4f 18          	mov	qword ptr [rdi + 0x18], rcx
ffffffff80019291: c3                   	ret
ffffffff80019292: 48 89 47 20          	mov	qword ptr [rdi + 0x20], rax
ffffffff80019296: 48 89 4f 28          	mov	qword ptr [rdi + 0x28], rcx
ffffffff8001929a: c3                   	ret
ffffffff8001929b: 31 c0                	xor	eax, eax
ffffffff8001929d: 48 89 47 10          	mov	qword ptr [rdi + 0x10], rax
ffffffff800192a1: 48 89 4f 18          	mov	qword ptr [rdi + 0x18], rcx
ffffffff800192a5: c3                   	ret
ffffffff800192a6: 31 c0                	xor	eax, eax
ffffffff800192a8: 48 89 47 20          	mov	qword ptr [rdi + 0x20], rax
ffffffff800192ac: 48 89 4f 28          	mov	qword ptr [rdi + 0x28], rcx
ffffffff800192b0: c3                   	ret
ffffffff800192b1: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff800192b4: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff800192b8: c3                   	ret
ffffffff800192b9: 31 c0                	xor	eax, eax
ffffffff800192bb: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff800192be: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff800192c2: c3                   	ret
ffffffff800192c3: e9 3b fd ff ff       	jmp	0xffffffff80019003 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x283>
ffffffff800192c8: e9 d6 fd ff ff       	jmp	0xffffffff800190a3 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x323>
ffffffff800192cd: e9 71 fb ff ff       	jmp	0xffffffff80018e43 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xc3>
ffffffff800192d2: cc                   	int3
ffffffff800192d3: cc                   	int3
ffffffff800192d4: cc                   	int3
ffffffff800192d5: cc                   	int3
ffffffff800192d6: cc                   	int3
ffffffff800192d7: cc                   	int3
ffffffff800192d8: cc                   	int3
ffffffff800192d9: cc                   	int3
ffffffff800192da: cc                   	int3
ffffffff800192db: cc                   	int3
ffffffff800192dc: cc                   	int3
ffffffff800192dd: cc                   	int3
ffffffff800192de: cc                   	int3
ffffffff800192df: cc                   	int3

ffffffff800192e0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E>:
ffffffff800192e0: 55                   	push	rbp
ffffffff800192e1: 41 57                	push	r15
ffffffff800192e3: 41 56                	push	r14
ffffffff800192e5: 41 55                	push	r13
ffffffff800192e7: 41 54                	push	r12
ffffffff800192e9: 53                   	push	rbx
ffffffff800192ea: 48 83 ec 18          	sub	rsp, 0x18
ffffffff800192ee: 48 89 f8             	mov	rax, rdi
ffffffff800192f1: 4c 8b 39             	mov	r15, qword ptr [rcx]
ffffffff800192f4: 4c 29 fa             	sub	rdx, r15
ffffffff800192f7: 73 1c                	jae	0xffffffff80019315 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x35>
ffffffff800192f9: bf 10 00 00 00       	mov	edi, 0x10
ffffffff800192fe: 41 be 01 00 00 00    	mov	r14d, 0x1
ffffffff80019304: 41 b9 08 00 00 00    	mov	r9d, 0x8
ffffffff8001930a: 41 ba 01 00 00 00    	mov	r10d, 0x1
ffffffff80019310: e9 fe 00 00 00       	jmp	0xffffffff80019413 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x133>
ffffffff80019315: 41 ba 01 00 00 00    	mov	r10d, 0x1
ffffffff8001931b: bf 18 00 00 00       	mov	edi, 0x18
ffffffff80019320: 41 be 04 00 00 00    	mov	r14d, 0x4
ffffffff80019326: 41 b9 10 00 00 00    	mov	r9d, 0x10
ffffffff8001932c: 41 bb 08 00 00 00    	mov	r11d, 0x8
ffffffff80019332: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019336: 73 07                	jae	0xffffffff8001933f <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x5f>
ffffffff80019338: 31 db                	xor	ebx, ebx
ffffffff8001933a: e9 cd 00 00 00       	jmp	0xffffffff8001940c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff8001933f: 42 8b 1c 3e          	mov	ebx, dword ptr [rsi + r15]
ffffffff80019343: 89 dd                	mov	ebp, ebx
ffffffff80019345: 0f cd                	bswap	ebp
ffffffff80019347: 45 84 c0             	test	r8b, r8b
ffffffff8001934a: 0f 44 eb             	cmove	ebp, ebx
ffffffff8001934d: 4c 8d 62 fc          	lea	r12, [rdx - 0x4]
ffffffff80019351: 49 83 fc 04          	cmp	r12, 0x4
ffffffff80019355: 73 0a                	jae	0xffffffff80019361 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x81>
ffffffff80019357: 31 db                	xor	ebx, ebx
ffffffff80019359: 4c 89 e2             	mov	rdx, r12
ffffffff8001935c: e9 ab 00 00 00       	jmp	0xffffffff8001940c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff80019361: 46 8b 5c 3e 04       	mov	r11d, dword ptr [rsi + r15 + 0x4]
ffffffff80019366: 45 89 dc             	mov	r12d, r11d
ffffffff80019369: 41 0f cc             	bswap	r12d
ffffffff8001936c: 45 84 c0             	test	r8b, r8b
ffffffff8001936f: 45 0f 44 e3          	cmove	r12d, r11d
ffffffff80019373: 4c 8d 6a f8          	lea	r13, [rdx - 0x8]
ffffffff80019377: 41 bb 08 00 00 00    	mov	r11d, 0x8
ffffffff8001937d: 49 83 fd 08          	cmp	r13, 0x8
ffffffff80019381: 72 7e                	jb	0xffffffff80019401 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff80019383: 4a 8b 5c 3e 08       	mov	rbx, qword ptr [rsi + r15 + 0x8]
ffffffff80019388: 49 89 de             	mov	r14, rbx
ffffffff8001938b: 49 0f ce             	bswap	r14
ffffffff8001938e: 45 84 c0             	test	r8b, r8b
ffffffff80019391: 4c 0f 44 f3          	cmove	r14, rbx
ffffffff80019395: 4c 8d 6a f0          	lea	r13, [rdx - 0x10]
ffffffff80019399: 49 83 fd 08          	cmp	r13, 0x8
ffffffff8001939d: 72 62                	jb	0xffffffff80019401 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff8001939f: 4a 8b 5c 3e 10       	mov	rbx, qword ptr [rsi + r15 + 0x10]
ffffffff800193a4: 49 89 dd             	mov	r13, rbx
ffffffff800193a7: 49 0f cd             	bswap	r13
ffffffff800193aa: 45 84 c0             	test	r8b, r8b
ffffffff800193ad: 4c 0f 44 eb          	cmove	r13, rbx
ffffffff800193b1: 4c 89 6c 24 10       	mov	qword ptr [rsp + 0x10], r13
ffffffff800193b6: 4c 8d 6a e8          	lea	r13, [rdx - 0x18]
ffffffff800193ba: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800193be: 72 41                	jb	0xffffffff80019401 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff800193c0: 4a 8b 5c 3e 18       	mov	rbx, qword ptr [rsi + r15 + 0x18]
ffffffff800193c5: 49 89 dd             	mov	r13, rbx
ffffffff800193c8: 49 0f cd             	bswap	r13
ffffffff800193cb: 45 84 c0             	test	r8b, r8b
ffffffff800193ce: 4c 0f 44 eb          	cmove	r13, rbx
ffffffff800193d2: 4c 89 6c 24 08       	mov	qword ptr [rsp + 0x8], r13
ffffffff800193d7: 4c 8d 6a e0          	lea	r13, [rdx - 0x20]
ffffffff800193db: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800193df: 72 20                	jb	0xffffffff80019401 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff800193e1: 4c 89 34 24          	mov	qword ptr [rsp], r14
ffffffff800193e5: 4e 8b 74 3e 20       	mov	r14, qword ptr [rsi + r15 + 0x20]
ffffffff800193ea: 4c 89 f3             	mov	rbx, r14
ffffffff800193ed: 48 0f cb             	bswap	rbx
ffffffff800193f0: 45 84 c0             	test	r8b, r8b
ffffffff800193f3: 49 0f 44 de          	cmove	rbx, r14
ffffffff800193f7: 4c 8d 6a d8          	lea	r13, [rdx - 0x28]
ffffffff800193fb: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800193ff: 73 2c                	jae	0xffffffff8001942d <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x14d>
ffffffff80019401: 31 db                	xor	ebx, ebx
ffffffff80019403: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff80019409: 4c 89 ea             	mov	rdx, r13
ffffffff8001940c: 4a 89 1c 18          	mov	qword ptr [rax + r11], rbx
ffffffff80019410: 49 89 d7             	mov	r15, rdx
ffffffff80019413: 4e 89 34 08          	mov	qword ptr [rax + r9], r14
ffffffff80019417: 4c 89 3c 38          	mov	qword ptr [rax + rdi], r15
ffffffff8001941b: 4c 89 10             	mov	qword ptr [rax], r10
ffffffff8001941e: 48 83 c4 18          	add	rsp, 0x18
ffffffff80019422: 5b                   	pop	rbx
ffffffff80019423: 41 5c                	pop	r12
ffffffff80019425: 41 5d                	pop	r13
ffffffff80019427: 41 5e                	pop	r14
ffffffff80019429: 41 5f                	pop	r15
ffffffff8001942b: 5d                   	pop	rbp
ffffffff8001942c: c3                   	ret
ffffffff8001942d: 48 83 c2 d0          	add	rdx, -0x30
ffffffff80019431: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff80019435: 73 0a                	jae	0xffffffff80019441 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x161>
ffffffff80019437: 31 db                	xor	ebx, ebx
ffffffff80019439: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff8001943f: eb cb                	jmp	0xffffffff8001940c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff80019441: 4a 8b 54 3e 28       	mov	rdx, qword ptr [rsi + r15 + 0x28]
ffffffff80019446: 49 89 d6             	mov	r14, rdx
ffffffff80019449: 49 0f ce             	bswap	r14
ffffffff8001944c: 45 84 c0             	test	r8b, r8b
ffffffff8001944f: 4c 0f 44 f2          	cmove	r14, rdx
ffffffff80019453: 4a 8b 74 3e 30       	mov	rsi, qword ptr [rsi + r15 + 0x30]
ffffffff80019458: 48 89 f2             	mov	rdx, rsi
ffffffff8001945b: 48 0f ca             	bswap	rdx
ffffffff8001945e: 48 0f 44 d6          	cmove	rdx, rsi
ffffffff80019462: 49 c1 e4 20          	shl	r12, 0x20
ffffffff80019466: 89 ee                	mov	esi, ebp
ffffffff80019468: 4c 09 e6             	or	rsi, r12
ffffffff8001946b: 49 83 c7 38          	add	r15, 0x38
ffffffff8001946f: 4c 89 39             	mov	qword ptr [rcx], r15
ffffffff80019472: 48 89 70 08          	mov	qword ptr [rax + 0x8], rsi
ffffffff80019476: 48 8b 0c 24          	mov	rcx, qword ptr [rsp]
ffffffff8001947a: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff8001947e: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff80019483: 48 89 48 18          	mov	qword ptr [rax + 0x18], rcx
ffffffff80019487: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff8001948c: 48 89 48 20          	mov	qword ptr [rax + 0x20], rcx
ffffffff80019490: bf 38 00 00 00       	mov	edi, 0x38
ffffffff80019495: 41 b9 30 00 00 00    	mov	r9d, 0x30
ffffffff8001949b: 41 bb 28 00 00 00    	mov	r11d, 0x28
ffffffff800194a1: 45 31 d2             	xor	r10d, r10d
ffffffff800194a4: e9 63 ff ff ff       	jmp	0xffffffff8001940c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff800194a9: cc                   	int3
ffffffff800194aa: cc                   	int3
ffffffff800194ab: cc                   	int3
ffffffff800194ac: cc                   	int3
ffffffff800194ad: cc                   	int3
ffffffff800194ae: cc                   	int3
ffffffff800194af: cc                   	int3

ffffffff800194b0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE>:
ffffffff800194b0: 48 89 f8             	mov	rax, rdi
ffffffff800194b3: 48 8b 39             	mov	rdi, qword ptr [rcx]
ffffffff800194b6: 48 29 fa             	sub	rdx, rdi
ffffffff800194b9: 73 14                	jae	0xffffffff800194cf <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x1f>
ffffffff800194bb: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff800194c3: 48 89 78 10          	mov	qword ptr [rax + 0x10], rdi
ffffffff800194c7: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800194cc: 89 08                	mov	dword ptr [rax], ecx
ffffffff800194ce: c3                   	ret
ffffffff800194cf: 55                   	push	rbp
ffffffff800194d0: 41 57                	push	r15
ffffffff800194d2: 41 56                	push	r14
ffffffff800194d4: 41 55                	push	r13
ffffffff800194d6: 41 54                	push	r12
ffffffff800194d8: 53                   	push	rbx
ffffffff800194d9: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff800194dd: 73 08                	jae	0xffffffff800194e7 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x37>
ffffffff800194df: 49 89 d5             	mov	r13, rdx
ffffffff800194e2: e9 f2 00 00 00       	jmp	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800194e7: 44 8b 14 3e          	mov	r10d, dword ptr [rsi + rdi]
ffffffff800194eb: 45 89 d1             	mov	r9d, r10d
ffffffff800194ee: 41 0f c9             	bswap	r9d
ffffffff800194f1: 45 84 c0             	test	r8b, r8b
ffffffff800194f4: 45 0f 44 ca          	cmove	r9d, r10d
ffffffff800194f8: 4c 8d 6a fc          	lea	r13, [rdx - 0x4]
ffffffff800194fc: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019500: 0f 82 d3 00 00 00    	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80019506: 44 8b 54 3e 04       	mov	r10d, dword ptr [rsi + rdi + 0x4]
ffffffff8001950b: 45 89 d3             	mov	r11d, r10d
ffffffff8001950e: 41 0f cb             	bswap	r11d
ffffffff80019511: 45 84 c0             	test	r8b, r8b
ffffffff80019514: 45 0f 44 da          	cmove	r11d, r10d
ffffffff80019518: 4c 8d 6a f8          	lea	r13, [rdx - 0x8]
ffffffff8001951c: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019520: 0f 82 b3 00 00 00    	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80019526: 8b 5c 3e 08          	mov	ebx, dword ptr [rsi + rdi + 0x8]
ffffffff8001952a: 41 89 da             	mov	r10d, ebx
ffffffff8001952d: 41 0f ca             	bswap	r10d
ffffffff80019530: 45 84 c0             	test	r8b, r8b
ffffffff80019533: 44 0f 44 d3          	cmove	r10d, ebx
ffffffff80019537: 4c 8d 6a f4          	lea	r13, [rdx - 0xc]
ffffffff8001953b: 49 83 fd 04          	cmp	r13, 0x4
ffffffff8001953f: 0f 82 94 00 00 00    	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80019545: 8b 6c 3e 0c          	mov	ebp, dword ptr [rsi + rdi + 0xc]
ffffffff80019549: 89 eb                	mov	ebx, ebp
ffffffff8001954b: 0f cb                	bswap	ebx
ffffffff8001954d: 45 84 c0             	test	r8b, r8b
ffffffff80019550: 0f 44 dd             	cmove	ebx, ebp
ffffffff80019553: 4c 8d 6a f0          	lea	r13, [rdx - 0x10]
ffffffff80019557: 49 83 fd 04          	cmp	r13, 0x4
ffffffff8001955b: 72 7c                	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff8001955d: 44 8b 74 3e 10       	mov	r14d, dword ptr [rsi + rdi + 0x10]
ffffffff80019562: 44 89 f5             	mov	ebp, r14d
ffffffff80019565: 0f cd                	bswap	ebp
ffffffff80019567: 45 84 c0             	test	r8b, r8b
ffffffff8001956a: 41 0f 44 ee          	cmove	ebp, r14d
ffffffff8001956e: 4c 8d 6a ec          	lea	r13, [rdx - 0x14]
ffffffff80019572: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019576: 72 61                	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80019578: 44 8b 7c 3e 14       	mov	r15d, dword ptr [rsi + rdi + 0x14]
ffffffff8001957d: 45 89 fe             	mov	r14d, r15d
ffffffff80019580: 41 0f ce             	bswap	r14d
ffffffff80019583: 45 84 c0             	test	r8b, r8b
ffffffff80019586: 45 0f 44 f7          	cmove	r14d, r15d
ffffffff8001958a: 4c 8d 6a e8          	lea	r13, [rdx - 0x18]
ffffffff8001958e: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019592: 72 45                	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80019594: 44 8b 64 3e 18       	mov	r12d, dword ptr [rsi + rdi + 0x18]
ffffffff80019599: 45 89 e7             	mov	r15d, r12d
ffffffff8001959c: 41 0f cf             	bswap	r15d
ffffffff8001959f: 45 84 c0             	test	r8b, r8b
ffffffff800195a2: 45 0f 44 fc          	cmove	r15d, r12d
ffffffff800195a6: 4c 8d 6a e4          	lea	r13, [rdx - 0x1c]
ffffffff800195aa: 49 83 fd 04          	cmp	r13, 0x4
ffffffff800195ae: 72 29                	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800195b0: 44 8b 6c 3e 1c       	mov	r13d, dword ptr [rsi + rdi + 0x1c]
ffffffff800195b5: 45 89 ec             	mov	r12d, r13d
ffffffff800195b8: 41 0f cc             	bswap	r12d
ffffffff800195bb: 45 84 c0             	test	r8b, r8b
ffffffff800195be: 45 0f 44 e5          	cmove	r12d, r13d
ffffffff800195c2: 4c 8d 6a e0          	lea	r13, [rdx - 0x20]
ffffffff800195c6: 49 83 fd 04          	cmp	r13, 0x4
ffffffff800195ca: 72 0d                	jb	0xffffffff800195d9 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800195cc: 48 83 c2 dc          	add	rdx, -0x24
ffffffff800195d0: 49 89 d5             	mov	r13, rdx
ffffffff800195d3: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff800195d7: 73 26                	jae	0xffffffff800195ff <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x14f>
ffffffff800195d9: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff800195e1: 48 c7 40 10 04 00 00 00      	mov	qword ptr [rax + 0x10], 0x4
ffffffff800195e9: 4c 89 68 18          	mov	qword ptr [rax + 0x18], r13
ffffffff800195ed: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff800195f2: 5b                   	pop	rbx
ffffffff800195f3: 41 5c                	pop	r12
ffffffff800195f5: 41 5d                	pop	r13
ffffffff800195f7: 41 5e                	pop	r14
ffffffff800195f9: 41 5f                	pop	r15
ffffffff800195fb: 5d                   	pop	rbp
ffffffff800195fc: 89 08                	mov	dword ptr [rax], ecx
ffffffff800195fe: c3                   	ret
ffffffff800195ff: 44 8b 6c 3e 20       	mov	r13d, dword ptr [rsi + rdi + 0x20]
ffffffff80019604: 8b 74 3e 24          	mov	esi, dword ptr [rsi + rdi + 0x24]
ffffffff80019608: 44 89 ea             	mov	edx, r13d
ffffffff8001960b: 0f ca                	bswap	edx
ffffffff8001960d: 45 84 c0             	test	r8b, r8b
ffffffff80019610: 41 0f 44 d5          	cmove	edx, r13d
ffffffff80019614: 41 89 f0             	mov	r8d, esi
ffffffff80019617: 41 0f c8             	bswap	r8d
ffffffff8001961a: 44 0f 44 c6          	cmove	r8d, esi
ffffffff8001961e: 49 c1 e3 20          	shl	r11, 0x20
ffffffff80019622: 44 89 ce             	mov	esi, r9d
ffffffff80019625: 4c 09 de             	or	rsi, r11
ffffffff80019628: 49 c1 e6 20          	shl	r14, 0x20
ffffffff8001962c: 41 89 e9             	mov	r9d, ebp
ffffffff8001962f: 4d 09 f1             	or	r9, r14
ffffffff80019632: 48 83 c7 28          	add	rdi, 0x28
ffffffff80019636: 48 89 39             	mov	qword ptr [rcx], rdi
ffffffff80019639: 48 89 70 04          	mov	qword ptr [rax + 0x4], rsi
ffffffff8001963d: 44 89 50 0c          	mov	dword ptr [rax + 0xc], r10d
ffffffff80019641: 89 58 10             	mov	dword ptr [rax + 0x10], ebx
ffffffff80019644: 4c 89 48 14          	mov	qword ptr [rax + 0x14], r9
ffffffff80019648: 44 89 78 1c          	mov	dword ptr [rax + 0x1c], r15d
ffffffff8001964c: 44 89 60 20          	mov	dword ptr [rax + 0x20], r12d
ffffffff80019650: 89 50 24             	mov	dword ptr [rax + 0x24], edx
ffffffff80019653: 44 89 40 28          	mov	dword ptr [rax + 0x28], r8d
ffffffff80019657: 31 c9                	xor	ecx, ecx
ffffffff80019659: eb 97                	jmp	0xffffffff800195f2 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x142>
ffffffff8001965b: cc                   	int3
ffffffff8001965c: cc                   	int3
ffffffff8001965d: cc                   	int3
ffffffff8001965e: cc                   	int3
ffffffff8001965f: cc                   	int3

ffffffff80019660 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E>:
ffffffff80019660: 41 57                	push	r15
ffffffff80019662: 41 56                	push	r14
ffffffff80019664: 41 54                	push	r12
ffffffff80019666: 53                   	push	rbx
ffffffff80019667: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8001966b: 48 89 fb             	mov	rbx, rdi
ffffffff8001966e: 4c 8b 21             	mov	r12, qword ptr [rcx]
ffffffff80019671: 4c 29 e2             	sub	rdx, r12
ffffffff80019674: 73 18                	jae	0xffffffff8001968e <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0x2e>
ffffffff80019676: 48 c7 43 08 01 00 00 00      	mov	qword ptr [rbx + 0x8], 0x1
ffffffff8001967e: 4c 89 63 10          	mov	qword ptr [rbx + 0x10], r12
ffffffff80019682: 48 c7 03 01 00 00 00 	mov	qword ptr [rbx], 0x1
ffffffff80019689: e9 8d 00 00 00       	jmp	0xffffffff8001971b <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0xbb>
ffffffff8001968e: 49 89 ce             	mov	r14, rcx
ffffffff80019691: 4c 01 e6             	add	rsi, r12
ffffffff80019694: 41 0f b6 c8          	movzx	ecx, r8b
ffffffff80019698: 45 0f b6 c1          	movzx	r8d, r9b
ffffffff8001969c: 49 89 e7             	mov	r15, rsp
ffffffff8001969f: 4c 89 ff             	mov	rdi, r15
ffffffff800196a2: e8 b9 13 00 00       	call	0xffffffff8001aa60 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3>
ffffffff800196a7: 48 8d 43 08          	lea	rax, [rbx + 0x8]
ffffffff800196ab: f6 04 24 01          	test	byte ptr [rsp], 0x1
ffffffff800196af: 74 26                	je	0xffffffff800196d7 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0x77>
ffffffff800196b1: 49 8b 4f 20          	mov	rcx, qword ptr [r15 + 0x20]
ffffffff800196b5: 48 89 48 18          	mov	qword ptr [rax + 0x18], rcx
ffffffff800196b9: 49 8b 4f 18          	mov	rcx, qword ptr [r15 + 0x18]
ffffffff800196bd: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff800196c1: 49 8b 4f 08          	mov	rcx, qword ptr [r15 + 0x8]
ffffffff800196c5: 49 8b 57 10          	mov	rdx, qword ptr [r15 + 0x10]
ffffffff800196c9: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff800196cd: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff800196d0: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800196d5: eb 41                	jmp	0xffffffff80019718 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0xb8>
ffffffff800196d7: 49 8b 4f 38          	mov	rcx, qword ptr [r15 + 0x38]
ffffffff800196db: 48 89 48 30          	mov	qword ptr [rax + 0x30], rcx
ffffffff800196df: 49 8b 4f 30          	mov	rcx, qword ptr [r15 + 0x30]
ffffffff800196e3: 48 89 48 28          	mov	qword ptr [rax + 0x28], rcx
ffffffff800196e7: 49 8b 4f 28          	mov	rcx, qword ptr [r15 + 0x28]
ffffffff800196eb: 48 89 48 20          	mov	qword ptr [rax + 0x20], rcx
ffffffff800196ef: 49 8b 4f 20          	mov	rcx, qword ptr [r15 + 0x20]
ffffffff800196f3: 48 89 48 18          	mov	qword ptr [rax + 0x18], rcx
ffffffff800196f7: 49 8b 4f 18          	mov	rcx, qword ptr [r15 + 0x18]
ffffffff800196fb: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff800196ff: 49 8b 4f 08          	mov	rcx, qword ptr [r15 + 0x8]
ffffffff80019703: 49 8b 57 10          	mov	rdx, qword ptr [r15 + 0x10]
ffffffff80019707: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff8001970b: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff8001970e: 4c 03 64 24 40       	add	r12, qword ptr [rsp + 0x40]
ffffffff80019713: 4d 89 26             	mov	qword ptr [r14], r12
ffffffff80019716: 31 c0                	xor	eax, eax
ffffffff80019718: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001971b: 48 89 d8             	mov	rax, rbx
ffffffff8001971e: 48 83 c4 48          	add	rsp, 0x48
ffffffff80019722: 5b                   	pop	rbx
ffffffff80019723: 41 5c                	pop	r12
ffffffff80019725: 41 5e                	pop	r14
ffffffff80019727: 41 5f                	pop	r15
ffffffff80019729: c3                   	ret
ffffffff8001972a: cc                   	int3
ffffffff8001972b: cc                   	int3
ffffffff8001972c: cc                   	int3
ffffffff8001972d: cc                   	int3
ffffffff8001972e: cc                   	int3
ffffffff8001972f: cc                   	int3

ffffffff80019730 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE>:
ffffffff80019730: 48 89 f8             	mov	rax, rdi
ffffffff80019733: 4c 8b 11             	mov	r10, qword ptr [rcx]
ffffffff80019736: bf 01 00 00 00       	mov	edi, 0x1
ffffffff8001973b: 4c 29 d2             	sub	rdx, r10
ffffffff8001973e: 73 1c                	jae	0xffffffff8001975c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x2c>
ffffffff80019740: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff80019745: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001974a: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff80019750: 4c 89 0c 10          	mov	qword ptr [rax + rdx], r9
ffffffff80019754: 4c 89 14 08          	mov	qword ptr [rax + rcx], r10
ffffffff80019758: 48 89 38             	mov	qword ptr [rax], rdi
ffffffff8001975b: c3                   	ret
ffffffff8001975c: 55                   	push	rbp
ffffffff8001975d: 41 57                	push	r15
ffffffff8001975f: 41 56                	push	r14
ffffffff80019761: 41 55                	push	r13
ffffffff80019763: 41 54                	push	r12
ffffffff80019765: 53                   	push	rbx
ffffffff80019766: 48 83 ec 10          	sub	rsp, 0x10
ffffffff8001976a: 41 b9 04 00 00 00    	mov	r9d, 0x4
ffffffff80019770: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019774: 73 08                	jae	0xffffffff8001977e <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x4e>
ffffffff80019776: 49 89 d5             	mov	r13, rdx
ffffffff80019779: e9 8e 00 00 00       	jmp	0xffffffff8001980c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff8001977e: 42 8b 1c 16          	mov	ebx, dword ptr [rsi + r10]
ffffffff80019782: 41 89 db             	mov	r11d, ebx
ffffffff80019785: 41 0f cb             	bswap	r11d
ffffffff80019788: 45 84 c0             	test	r8b, r8b
ffffffff8001978b: 44 0f 44 db          	cmove	r11d, ebx
ffffffff8001978f: 4c 8d 6a fc          	lea	r13, [rdx - 0x4]
ffffffff80019793: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019797: 72 73                	jb	0xffffffff8001980c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80019799: 42 8b 6c 16 04       	mov	ebp, dword ptr [rsi + r10 + 0x4]
ffffffff8001979e: 89 eb                	mov	ebx, ebp
ffffffff800197a0: 0f cb                	bswap	ebx
ffffffff800197a2: 45 84 c0             	test	r8b, r8b
ffffffff800197a5: 0f 44 dd             	cmove	ebx, ebp
ffffffff800197a8: 4c 8d 6a f8          	lea	r13, [rdx - 0x8]
ffffffff800197ac: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800197b0: 72 54                	jb	0xffffffff80019806 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff800197b2: 4e 8b 7c 16 08       	mov	r15, qword ptr [rsi + r10 + 0x8]
ffffffff800197b7: 4d 89 fe             	mov	r14, r15
ffffffff800197ba: 49 0f ce             	bswap	r14
ffffffff800197bd: 45 84 c0             	test	r8b, r8b
ffffffff800197c0: 4d 0f 44 f7          	cmove	r14, r15
ffffffff800197c4: 4c 8d 6a f0          	lea	r13, [rdx - 0x10]
ffffffff800197c8: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800197cc: 72 38                	jb	0xffffffff80019806 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff800197ce: 4e 8b 64 16 10       	mov	r12, qword ptr [rsi + r10 + 0x10]
ffffffff800197d3: 4d 89 e7             	mov	r15, r12
ffffffff800197d6: 49 0f cf             	bswap	r15
ffffffff800197d9: 45 84 c0             	test	r8b, r8b
ffffffff800197dc: 4d 0f 44 fc          	cmove	r15, r12
ffffffff800197e0: 4c 8d 6a e8          	lea	r13, [rdx - 0x18]
ffffffff800197e4: 49 83 fd 08          	cmp	r13, 0x8
ffffffff800197e8: 72 1c                	jb	0xffffffff80019806 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff800197ea: 4e 8b 6c 16 18       	mov	r13, qword ptr [rsi + r10 + 0x18]
ffffffff800197ef: 4d 89 ec             	mov	r12, r13
ffffffff800197f2: 49 0f cc             	bswap	r12
ffffffff800197f5: 45 84 c0             	test	r8b, r8b
ffffffff800197f8: 4d 0f 44 e5          	cmove	r12, r13
ffffffff800197fc: 4c 8d 6a e0          	lea	r13, [rdx - 0x20]
ffffffff80019800: 49 83 fd 08          	cmp	r13, 0x8
ffffffff80019804: 73 35                	jae	0xffffffff8001983b <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x10b>
ffffffff80019806: 41 b9 08 00 00 00    	mov	r9d, 0x8
ffffffff8001980c: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff80019814: b9 18 00 00 00       	mov	ecx, 0x18
ffffffff80019819: ba 10 00 00 00       	mov	edx, 0x10
ffffffff8001981e: 4d 89 ea             	mov	r10, r13
ffffffff80019821: 48 83 c4 10          	add	rsp, 0x10
ffffffff80019825: 5b                   	pop	rbx
ffffffff80019826: 41 5c                	pop	r12
ffffffff80019828: 41 5d                	pop	r13
ffffffff8001982a: 41 5e                	pop	r14
ffffffff8001982c: 41 5f                	pop	r15
ffffffff8001982e: 5d                   	pop	rbp
ffffffff8001982f: 4c 89 0c 10          	mov	qword ptr [rax + rdx], r9
ffffffff80019833: 4c 89 14 08          	mov	qword ptr [rax + rcx], r10
ffffffff80019837: 48 89 38             	mov	qword ptr [rax], rdi
ffffffff8001983a: c3                   	ret
ffffffff8001983b: 4e 8b 6c 16 20       	mov	r13, qword ptr [rsi + r10 + 0x20]
ffffffff80019840: 4c 89 ed             	mov	rbp, r13
ffffffff80019843: 48 0f cd             	bswap	rbp
ffffffff80019846: 45 84 c0             	test	r8b, r8b
ffffffff80019849: 49 0f 44 ed          	cmove	rbp, r13
ffffffff8001984d: 4c 8d 6a d8          	lea	r13, [rdx - 0x28]
ffffffff80019851: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019855: 72 b5                	jb	0xffffffff8001980c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80019857: 48 89 6c 24 08       	mov	qword ptr [rsp + 0x8], rbp
ffffffff8001985c: 46 8b 6c 16 28       	mov	r13d, dword ptr [rsi + r10 + 0x28]
ffffffff80019861: 44 89 ed             	mov	ebp, r13d
ffffffff80019864: 0f cd                	bswap	ebp
ffffffff80019866: 45 84 c0             	test	r8b, r8b
ffffffff80019869: 41 0f 44 ed          	cmove	ebp, r13d
ffffffff8001986d: 89 6c 24 04          	mov	dword ptr [rsp + 0x4], ebp
ffffffff80019871: 4c 8d 6a d4          	lea	r13, [rdx - 0x2c]
ffffffff80019875: 49 83 fd 04          	cmp	r13, 0x4
ffffffff80019879: 72 91                	jb	0xffffffff8001980c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff8001987b: 46 8b 4c 16 2c       	mov	r9d, dword ptr [rsi + r10 + 0x2c]
ffffffff80019880: 44 89 cd             	mov	ebp, r9d
ffffffff80019883: 0f cd                	bswap	ebp
ffffffff80019885: 45 84 c0             	test	r8b, r8b
ffffffff80019888: 41 0f 44 e9          	cmove	ebp, r9d
ffffffff8001988c: 4c 8d 6a d0          	lea	r13, [rdx - 0x30]
ffffffff80019890: 49 83 fd 08          	cmp	r13, 0x8
ffffffff80019894: 0f 82 6c ff ff ff    	jb	0xffffffff80019806 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff8001989a: 48 83 c2 c8          	add	rdx, -0x38
ffffffff8001989e: 49 89 d5             	mov	r13, rdx
ffffffff800198a1: 41 b9 08 00 00 00    	mov	r9d, 0x8
ffffffff800198a7: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff800198ab: 0f 82 5b ff ff ff    	jb	0xffffffff8001980c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff800198b1: 4a 8b 54 16 30       	mov	rdx, qword ptr [rsi + r10 + 0x30]
ffffffff800198b6: 4a 8b 74 16 38       	mov	rsi, qword ptr [rsi + r10 + 0x38]
ffffffff800198bb: 49 89 d1             	mov	r9, rdx
ffffffff800198be: 49 0f c9             	bswap	r9
ffffffff800198c1: 45 84 c0             	test	r8b, r8b
ffffffff800198c4: 4c 0f 44 ca          	cmove	r9, rdx
ffffffff800198c8: 49 89 f0             	mov	r8, rsi
ffffffff800198cb: 49 0f c8             	bswap	r8
ffffffff800198ce: 4c 0f 44 c6          	cmove	r8, rsi
ffffffff800198d2: 48 c1 e3 20          	shl	rbx, 0x20
ffffffff800198d6: 44 89 da             	mov	edx, r11d
ffffffff800198d9: 48 09 da             	or	rdx, rbx
ffffffff800198dc: 49 83 c2 40          	add	r10, 0x40
ffffffff800198e0: 4c 89 11             	mov	qword ptr [rcx], r10
ffffffff800198e3: 48 89 50 08          	mov	qword ptr [rax + 0x8], rdx
ffffffff800198e7: 4c 89 70 10          	mov	qword ptr [rax + 0x10], r14
ffffffff800198eb: 4c 89 78 18          	mov	qword ptr [rax + 0x18], r15
ffffffff800198ef: 4c 89 60 20          	mov	qword ptr [rax + 0x20], r12
ffffffff800198f3: 48 8b 4c 24 08       	mov	rcx, qword ptr [rsp + 0x8]
ffffffff800198f8: 48 89 48 28          	mov	qword ptr [rax + 0x28], rcx
ffffffff800198fc: 8b 4c 24 04          	mov	ecx, dword ptr [rsp + 0x4]
ffffffff80019900: 89 48 30             	mov	dword ptr [rax + 0x30], ecx
ffffffff80019903: 89 68 34             	mov	dword ptr [rax + 0x34], ebp
ffffffff80019906: b9 40 00 00 00       	mov	ecx, 0x40
ffffffff8001990b: ba 38 00 00 00       	mov	edx, 0x38
ffffffff80019910: 31 ff                	xor	edi, edi
ffffffff80019912: 4d 89 c2             	mov	r10, r8
ffffffff80019915: e9 07 ff ff ff       	jmp	0xffffffff80019821 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xf1>
ffffffff8001991a: cc                   	int3
ffffffff8001991b: cc                   	int3
ffffffff8001991c: cc                   	int3
ffffffff8001991d: cc                   	int3
ffffffff8001991e: cc                   	int3
ffffffff8001991f: cc                   	int3

ffffffff80019920 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE>:
ffffffff80019920: 48 89 f8             	mov	rax, rdi
ffffffff80019923: 48 8b 39             	mov	rdi, qword ptr [rcx]
ffffffff80019926: 48 29 fa             	sub	rdx, rdi
ffffffff80019929: 73 14                	jae	0xffffffff8001993f <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x1f>
ffffffff8001992b: 48 c7 40 08 01 00 00 00      	mov	qword ptr [rax + 0x8], 0x1
ffffffff80019933: 48 89 78 10          	mov	qword ptr [rax + 0x10], rdi
ffffffff80019937: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001993c: 89 08                	mov	dword ptr [rax], ecx
ffffffff8001993e: c3                   	ret
ffffffff8001993f: 55                   	push	rbp
ffffffff80019940: 41 57                	push	r15
ffffffff80019942: 41 56                	push	r14
ffffffff80019944: 53                   	push	rbx
ffffffff80019945: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019949: 73 08                	jae	0xffffffff80019953 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x33>
ffffffff8001994b: 49 89 d7             	mov	r15, rdx
ffffffff8001994e: e9 b2 00 00 00       	jmp	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80019953: 44 8b 14 3e          	mov	r10d, dword ptr [rsi + rdi]
ffffffff80019957: 45 89 d1             	mov	r9d, r10d
ffffffff8001995a: 41 0f c9             	bswap	r9d
ffffffff8001995d: 45 84 c0             	test	r8b, r8b
ffffffff80019960: 45 0f 44 ca          	cmove	r9d, r10d
ffffffff80019964: 4c 8d 7a fc          	lea	r15, [rdx - 0x4]
ffffffff80019968: 49 83 ff 04          	cmp	r15, 0x4
ffffffff8001996c: 0f 82 93 00 00 00    	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80019972: 44 8b 54 3e 04       	mov	r10d, dword ptr [rsi + rdi + 0x4]
ffffffff80019977: 45 89 d3             	mov	r11d, r10d
ffffffff8001997a: 41 0f cb             	bswap	r11d
ffffffff8001997d: 45 84 c0             	test	r8b, r8b
ffffffff80019980: 45 0f 44 da          	cmove	r11d, r10d
ffffffff80019984: 4c 8d 7a f8          	lea	r15, [rdx - 0x8]
ffffffff80019988: 49 83 ff 04          	cmp	r15, 0x4
ffffffff8001998c: 72 77                	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff8001998e: 8b 5c 3e 08          	mov	ebx, dword ptr [rsi + rdi + 0x8]
ffffffff80019992: 41 89 da             	mov	r10d, ebx
ffffffff80019995: 41 0f ca             	bswap	r10d
ffffffff80019998: 45 84 c0             	test	r8b, r8b
ffffffff8001999b: 44 0f 44 d3          	cmove	r10d, ebx
ffffffff8001999f: 4c 8d 7a f4          	lea	r15, [rdx - 0xc]
ffffffff800199a3: 49 83 ff 04          	cmp	r15, 0x4
ffffffff800199a7: 72 5c                	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff800199a9: 8b 6c 3e 0c          	mov	ebp, dword ptr [rsi + rdi + 0xc]
ffffffff800199ad: 89 eb                	mov	ebx, ebp
ffffffff800199af: 0f cb                	bswap	ebx
ffffffff800199b1: 45 84 c0             	test	r8b, r8b
ffffffff800199b4: 0f 44 dd             	cmove	ebx, ebp
ffffffff800199b7: 4c 8d 7a f0          	lea	r15, [rdx - 0x10]
ffffffff800199bb: 49 83 ff 04          	cmp	r15, 0x4
ffffffff800199bf: 72 44                	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff800199c1: 44 8b 74 3e 10       	mov	r14d, dword ptr [rsi + rdi + 0x10]
ffffffff800199c6: 44 89 f5             	mov	ebp, r14d
ffffffff800199c9: 0f cd                	bswap	ebp
ffffffff800199cb: 45 84 c0             	test	r8b, r8b
ffffffff800199ce: 41 0f 44 ee          	cmove	ebp, r14d
ffffffff800199d2: 4c 8d 7a ec          	lea	r15, [rdx - 0x14]
ffffffff800199d6: 49 83 ff 04          	cmp	r15, 0x4
ffffffff800199da: 72 29                	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff800199dc: 44 8b 7c 3e 14       	mov	r15d, dword ptr [rsi + rdi + 0x14]
ffffffff800199e1: 45 89 fe             	mov	r14d, r15d
ffffffff800199e4: 41 0f ce             	bswap	r14d
ffffffff800199e7: 45 84 c0             	test	r8b, r8b
ffffffff800199ea: 45 0f 44 f7          	cmove	r14d, r15d
ffffffff800199ee: 4c 8d 7a e8          	lea	r15, [rdx - 0x18]
ffffffff800199f2: 49 83 ff 04          	cmp	r15, 0x4
ffffffff800199f6: 72 0d                	jb	0xffffffff80019a05 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff800199f8: 48 83 c2 e4          	add	rdx, -0x1c
ffffffff800199fc: 49 89 d7             	mov	r15, rdx
ffffffff800199ff: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019a03: 73 22                	jae	0xffffffff80019a27 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x107>
ffffffff80019a05: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff80019a0d: 48 c7 40 10 04 00 00 00      	mov	qword ptr [rax + 0x10], 0x4
ffffffff80019a15: 4c 89 78 18          	mov	qword ptr [rax + 0x18], r15
ffffffff80019a19: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80019a1e: 5b                   	pop	rbx
ffffffff80019a1f: 41 5e                	pop	r14
ffffffff80019a21: 41 5f                	pop	r15
ffffffff80019a23: 5d                   	pop	rbp
ffffffff80019a24: 89 08                	mov	dword ptr [rax], ecx
ffffffff80019a26: c3                   	ret
ffffffff80019a27: 8b 54 3e 18          	mov	edx, dword ptr [rsi + rdi + 0x18]
ffffffff80019a2b: 8b 74 3e 1c          	mov	esi, dword ptr [rsi + rdi + 0x1c]
ffffffff80019a2f: 41 89 d7             	mov	r15d, edx
ffffffff80019a32: 41 0f cf             	bswap	r15d
ffffffff80019a35: 45 84 c0             	test	r8b, r8b
ffffffff80019a38: 44 0f 44 fa          	cmove	r15d, edx
ffffffff80019a3c: 89 f2                	mov	edx, esi
ffffffff80019a3e: 0f ca                	bswap	edx
ffffffff80019a40: 0f 44 d6             	cmove	edx, esi
ffffffff80019a43: 49 c1 e3 20          	shl	r11, 0x20
ffffffff80019a47: 44 89 ce             	mov	esi, r9d
ffffffff80019a4a: 4c 09 de             	or	rsi, r11
ffffffff80019a4d: 49 c1 e6 20          	shl	r14, 0x20
ffffffff80019a51: 41 89 e8             	mov	r8d, ebp
ffffffff80019a54: 4d 09 f0             	or	r8, r14
ffffffff80019a57: 48 83 c7 20          	add	rdi, 0x20
ffffffff80019a5b: 48 89 39             	mov	qword ptr [rcx], rdi
ffffffff80019a5e: 48 89 70 04          	mov	qword ptr [rax + 0x4], rsi
ffffffff80019a62: 44 89 50 0c          	mov	dword ptr [rax + 0xc], r10d
ffffffff80019a66: 89 58 10             	mov	dword ptr [rax + 0x10], ebx
ffffffff80019a69: 4c 89 40 14          	mov	qword ptr [rax + 0x14], r8
ffffffff80019a6d: 44 89 78 1c          	mov	dword ptr [rax + 0x1c], r15d
ffffffff80019a71: 89 50 20             	mov	dword ptr [rax + 0x20], edx
ffffffff80019a74: 31 c9                	xor	ecx, ecx
ffffffff80019a76: eb a6                	jmp	0xffffffff80019a1e <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xfe>
ffffffff80019a78: cc                   	int3
ffffffff80019a79: cc                   	int3
ffffffff80019a7a: cc                   	int3
ffffffff80019a7b: cc                   	int3
ffffffff80019a7c: cc                   	int3
ffffffff80019a7d: cc                   	int3
ffffffff80019a7e: cc                   	int3
ffffffff80019a7f: cc                   	int3

ffffffff80019a80 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d>:
ffffffff80019a80: 48 89 f8             	mov	rax, rdi
ffffffff80019a83: 48 85 d2             	test	rdx, rdx
ffffffff80019a86: 74 5a                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019a88: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80019a8c: 74 54                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019a8e: 48 83 fa 02          	cmp	rdx, 0x2
ffffffff80019a92: 74 4e                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019a94: 48 83 fa 03          	cmp	rdx, 0x3
ffffffff80019a98: 74 48                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019a9a: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019a9e: 74 42                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019aa0: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff80019aa4: 74 3c                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019aa6: 48 83 fa 06          	cmp	rdx, 0x6
ffffffff80019aaa: 74 36                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019aac: 48 83 fa 07          	cmp	rdx, 0x7
ffffffff80019ab0: 74 30                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019ab2: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff80019ab6: 74 2a                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019ab8: 48 83 fa 09          	cmp	rdx, 0x9
ffffffff80019abc: 74 24                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019abe: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff80019ac2: 74 1e                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019ac4: 48 83 fa 0b          	cmp	rdx, 0xb
ffffffff80019ac8: 74 18                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019aca: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80019ace: 74 12                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019ad0: 48 83 fa 0d          	cmp	rdx, 0xd
ffffffff80019ad4: 74 0c                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019ad6: 48 83 fa 0e          	cmp	rdx, 0xe
ffffffff80019ada: 74 06                	je	0xffffffff80019ae2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80019adc: 48 83 fa 0f          	cmp	rdx, 0xf
ffffffff80019ae0: 75 2d                	jne	0xffffffff80019b0f <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x8f>
ffffffff80019ae2: c6 40 17 00          	mov	byte ptr [rax + 0x17], 0x0
ffffffff80019ae6: 66 c7 40 15 00 00    	mov	word ptr [rax + 0x15], 0x0
ffffffff80019aec: c7 40 11 00 00 00 00 	mov	dword ptr [rax + 0x11], 0x0
ffffffff80019af3: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80019afb: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff80019b03: c6 40 10 01          	mov	byte ptr [rax + 0x10], 0x1
ffffffff80019b07: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80019b0e: c3                   	ret
ffffffff80019b0f: 55                   	push	rbp
ffffffff80019b10: 41 57                	push	r15
ffffffff80019b12: 41 56                	push	r14
ffffffff80019b14: 41 55                	push	r13
ffffffff80019b16: 41 54                	push	r12
ffffffff80019b18: 53                   	push	rbx
ffffffff80019b19: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff80019b20: 48 89 c3             	mov	rbx, rax
ffffffff80019b23: 0f b6 06             	movzx	eax, byte ptr [rsi]
ffffffff80019b26: 88 44 24 0a          	mov	byte ptr [rsp + 0xa], al
ffffffff80019b2a: 0f b6 46 01          	movzx	eax, byte ptr [rsi + 0x1]
ffffffff80019b2e: 88 44 24 09          	mov	byte ptr [rsp + 0x9], al
ffffffff80019b32: 0f b6 46 02          	movzx	eax, byte ptr [rsi + 0x2]
ffffffff80019b36: 88 44 24 08          	mov	byte ptr [rsp + 0x8], al
ffffffff80019b3a: 0f b6 46 03          	movzx	eax, byte ptr [rsi + 0x3]
ffffffff80019b3e: 88 44 24 07          	mov	byte ptr [rsp + 0x7], al
ffffffff80019b42: 0f b6 46 04          	movzx	eax, byte ptr [rsi + 0x4]
ffffffff80019b46: 88 44 24 06          	mov	byte ptr [rsp + 0x6], al
ffffffff80019b4a: 0f b6 4e 05          	movzx	ecx, byte ptr [rsi + 0x5]
ffffffff80019b4e: 0f b6 c1             	movzx	eax, cl
ffffffff80019b51: 0f b6 6e 06          	movzx	ebp, byte ptr [rsi + 0x6]
ffffffff80019b55: 44 0f b6 76 07       	movzx	r14d, byte ptr [rsi + 0x7]
ffffffff80019b5a: 44 0f b6 7e 08       	movzx	r15d, byte ptr [rsi + 0x8]
ffffffff80019b5f: 44 0f b6 66 09       	movzx	r12d, byte ptr [rsi + 0x9]
ffffffff80019b64: 44 0f b6 6e 0a       	movzx	r13d, byte ptr [rsi + 0xa]
ffffffff80019b69: 0f b6 7e 0b          	movzx	edi, byte ptr [rsi + 0xb]
ffffffff80019b6d: 40 88 7c 24 05       	mov	byte ptr [rsp + 0x5], dil
ffffffff80019b72: 0f b6 7e 0c          	movzx	edi, byte ptr [rsi + 0xc]
ffffffff80019b76: 40 88 7c 24 04       	mov	byte ptr [rsp + 0x4], dil
ffffffff80019b7b: 0f b6 7e 0d          	movzx	edi, byte ptr [rsi + 0xd]
ffffffff80019b7f: 40 88 7c 24 03       	mov	byte ptr [rsp + 0x3], dil
ffffffff80019b84: 44 0f b6 56 0e       	movzx	r10d, byte ptr [rsi + 0xe]
ffffffff80019b89: 44 0f b6 5e 0f       	movzx	r11d, byte ptr [rsi + 0xf]
ffffffff80019b8e: 83 f8 01             	cmp	eax, 0x1
ffffffff80019b91: 74 09                	je	0xffffffff80019b9c <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x11c>
ffffffff80019b93: 83 f8 02             	cmp	eax, 0x2
ffffffff80019b96: 75 6d                	jne	0xffffffff80019c05 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x185>
ffffffff80019b98: b0 01                	mov	al, 0x1
ffffffff80019b9a: eb 02                	jmp	0xffffffff80019b9e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x11e>
ffffffff80019b9c: 31 c0                	xor	eax, eax
ffffffff80019b9e: 48 8d 7a f0          	lea	rdi, [rdx - 0x10]
ffffffff80019ba2: 48 83 ff 02          	cmp	rdi, 0x2
ffffffff80019ba6: 73 16                	jae	0xffffffff80019bbe <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x13e>
ffffffff80019ba8: 48 89 d8             	mov	rax, rbx
ffffffff80019bab: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff80019bb1: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff80019bb8: 48 89 7b 18          	mov	qword ptr [rbx + 0x18], rdi
ffffffff80019bbc: eb 34                	jmp	0xffffffff80019bf2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x172>
ffffffff80019bbe: 44 0f b7 46 10       	movzx	r8d, word ptr [rsi + 0x10]
ffffffff80019bc3: 44 89 c7             	mov	edi, r8d
ffffffff80019bc6: 66 c1 c7 08          	rol	di, 0x8
ffffffff80019bca: 84 c0                	test	al, al
ffffffff80019bcc: 41 0f 44 f8          	cmove	edi, r8d
ffffffff80019bd0: 4c 8d 42 ee          	lea	r8, [rdx - 0x12]
ffffffff80019bd4: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019bd8: 0f 83 ac 00 00 00    	jae	0xffffffff80019c8a <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x20a>
ffffffff80019bde: 48 89 d8             	mov	rax, rbx
ffffffff80019be1: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff80019be7: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff80019bee: 4c 89 43 18          	mov	qword ptr [rbx + 0x18], r8
ffffffff80019bf2: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff80019bfa: 66 c7 43 10 02 00    	mov	word ptr [rbx + 0x10], 0x2
ffffffff80019c00: e9 34 01 00 00       	jmp	0xffffffff80019d39 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff80019c05: 88 4c 24 0b          	mov	byte ptr [rsp + 0xb], cl
ffffffff80019c09: 48 8d 44 24 0b       	lea	rax, [rsp + 0xb]
ffffffff80019c0e: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff80019c13: 48 c7 44 24 48 90 dc 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe2370
ffffffff80019c1c: 48 c7 44 24 68 a8 84 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd7b58
ffffffff80019c25: 48 c7 44 24 70 01 00 00 00   	mov	qword ptr [rsp + 0x70], 0x1
ffffffff80019c2e: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff80019c3a: 48 8d 44 24 40       	lea	rax, [rsp + 0x40]
ffffffff80019c3f: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff80019c44: 48 c7 84 24 80 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x80], 0x1
ffffffff80019c50: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff80019c55: 48 8d 74 24 68       	lea	rsi, [rsp + 0x68]
ffffffff80019c5a: e8 51 3a 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80019c5f: 48 89 d8             	mov	rax, rbx
ffffffff80019c62: 48 c7 43 08 03 00 00 00      	mov	qword ptr [rbx + 0x8], 0x3
ffffffff80019c6a: 48 8b 4c 24 50       	mov	rcx, qword ptr [rsp + 0x50]
ffffffff80019c6f: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff80019c74: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff80019c78: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff80019c7c: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff80019c81: 48 89 4b 20          	mov	qword ptr [rbx + 0x20], rcx
ffffffff80019c85: e9 af 00 00 00       	jmp	0xffffffff80019d39 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff80019c8a: 44 0f b7 46 12       	movzx	r8d, word ptr [rsi + 0x12]
ffffffff80019c8f: 45 89 c1             	mov	r9d, r8d
ffffffff80019c92: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff80019c97: 84 c0                	test	al, al
ffffffff80019c99: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019c9d: 44 89 4c 24 24       	mov	dword ptr [rsp + 0x24], r9d
ffffffff80019ca2: 4c 8d 42 ec          	lea	r8, [rdx - 0x14]
ffffffff80019ca6: 49 83 f8 04          	cmp	r8, 0x4
ffffffff80019caa: 73 19                	jae	0xffffffff80019cc5 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x245>
ffffffff80019cac: 48 89 d8             	mov	rax, rbx
ffffffff80019caf: 4c 89 43 18          	mov	qword ptr [rbx + 0x18], r8
ffffffff80019cb3: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff80019cbb: 48 c7 43 10 04 00 00 00      	mov	qword ptr [rbx + 0x10], 0x4
ffffffff80019cc3: eb 74                	jmp	0xffffffff80019d39 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff80019cc5: 44 8b 46 14          	mov	r8d, dword ptr [rsi + 0x14]
ffffffff80019cc9: 45 89 c1             	mov	r9d, r8d
ffffffff80019ccc: 41 0f c9             	bswap	r9d
ffffffff80019ccf: 84 c0                	test	al, al
ffffffff80019cd1: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019cd5: 44 89 4c 24 20       	mov	dword ptr [rsp + 0x20], r9d
ffffffff80019cda: 4c 8d 42 e8          	lea	r8, [rdx - 0x18]
ffffffff80019cde: 49 83 f8 08          	cmp	r8, 0x8
ffffffff80019ce2: 72 3e                	jb	0xffffffff80019d22 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2a2>
ffffffff80019ce4: 4c 8b 46 18          	mov	r8, qword ptr [rsi + 0x18]
ffffffff80019ce8: 4d 89 c1             	mov	r9, r8
ffffffff80019ceb: 49 0f c9             	bswap	r9
ffffffff80019cee: 84 c0                	test	al, al
ffffffff80019cf0: 4d 0f 44 c8          	cmove	r9, r8
ffffffff80019cf4: 4c 89 4c 24 38       	mov	qword ptr [rsp + 0x38], r9
ffffffff80019cf9: 4c 8d 42 e0          	lea	r8, [rdx - 0x20]
ffffffff80019cfd: 49 83 f8 08          	cmp	r8, 0x8
ffffffff80019d01: 72 1f                	jb	0xffffffff80019d22 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2a2>
ffffffff80019d03: 4c 8b 46 20          	mov	r8, qword ptr [rsi + 0x20]
ffffffff80019d07: 4d 89 c1             	mov	r9, r8
ffffffff80019d0a: 49 0f c9             	bswap	r9
ffffffff80019d0d: 84 c0                	test	al, al
ffffffff80019d0f: 4d 0f 44 c8          	cmove	r9, r8
ffffffff80019d13: 4c 89 4c 24 30       	mov	qword ptr [rsp + 0x30], r9
ffffffff80019d18: 4c 8d 42 d8          	lea	r8, [rdx - 0x28]
ffffffff80019d1c: 49 83 f8 08          	cmp	r8, 0x8
ffffffff80019d20: 73 30                	jae	0xffffffff80019d52 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2d2>
ffffffff80019d22: 48 89 d8             	mov	rax, rbx
ffffffff80019d25: 4c 89 43 18          	mov	qword ptr [rbx + 0x18], r8
ffffffff80019d29: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff80019d31: 48 c7 43 10 08 00 00 00      	mov	qword ptr [rbx + 0x10], 0x8
ffffffff80019d39: 48 c7 03 01 00 00 00 	mov	qword ptr [rbx], 0x1
ffffffff80019d40: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff80019d47: 5b                   	pop	rbx
ffffffff80019d48: 41 5c                	pop	r12
ffffffff80019d4a: 41 5d                	pop	r13
ffffffff80019d4c: 41 5e                	pop	r14
ffffffff80019d4e: 41 5f                	pop	r15
ffffffff80019d50: 5d                   	pop	rbp
ffffffff80019d51: c3                   	ret
ffffffff80019d52: 4c 8b 46 28          	mov	r8, qword ptr [rsi + 0x28]
ffffffff80019d56: 4d 89 c1             	mov	r9, r8
ffffffff80019d59: 49 0f c9             	bswap	r9
ffffffff80019d5c: 84 c0                	test	al, al
ffffffff80019d5e: 4d 0f 44 c8          	cmove	r9, r8
ffffffff80019d62: 4c 89 4c 24 28       	mov	qword ptr [rsp + 0x28], r9
ffffffff80019d67: 4c 8d 42 d0          	lea	r8, [rdx - 0x30]
ffffffff80019d6b: 49 83 f8 04          	cmp	r8, 0x4
ffffffff80019d6f: 0f 82 37 ff ff ff    	jb	0xffffffff80019cac <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x22c>
ffffffff80019d75: 44 8b 46 30          	mov	r8d, dword ptr [rsi + 0x30]
ffffffff80019d79: 45 89 c1             	mov	r9d, r8d
ffffffff80019d7c: 41 0f c9             	bswap	r9d
ffffffff80019d7f: 84 c0                	test	al, al
ffffffff80019d81: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019d85: 44 89 4c 24 1c       	mov	dword ptr [rsp + 0x1c], r9d
ffffffff80019d8a: 4c 8d 42 cc          	lea	r8, [rdx - 0x34]
ffffffff80019d8e: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019d92: 0f 82 46 fe ff ff    	jb	0xffffffff80019bde <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80019d98: 44 0f b7 46 34       	movzx	r8d, word ptr [rsi + 0x34]
ffffffff80019d9d: 45 89 c1             	mov	r9d, r8d
ffffffff80019da0: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff80019da5: 84 c0                	test	al, al
ffffffff80019da7: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019dab: 44 89 4c 24 18       	mov	dword ptr [rsp + 0x18], r9d
ffffffff80019db0: 4c 8d 42 ca          	lea	r8, [rdx - 0x36]
ffffffff80019db4: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019db8: 0f 82 20 fe ff ff    	jb	0xffffffff80019bde <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80019dbe: 44 0f b7 46 36       	movzx	r8d, word ptr [rsi + 0x36]
ffffffff80019dc3: 45 89 c1             	mov	r9d, r8d
ffffffff80019dc6: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff80019dcb: 84 c0                	test	al, al
ffffffff80019dcd: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019dd1: 44 89 4c 24 14       	mov	dword ptr [rsp + 0x14], r9d
ffffffff80019dd6: 4c 8d 42 c8          	lea	r8, [rdx - 0x38]
ffffffff80019dda: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019dde: 0f 82 fa fd ff ff    	jb	0xffffffff80019bde <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80019de4: 44 0f b7 46 38       	movzx	r8d, word ptr [rsi + 0x38]
ffffffff80019de9: 45 89 c1             	mov	r9d, r8d
ffffffff80019dec: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff80019df1: 84 c0                	test	al, al
ffffffff80019df3: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019df7: 44 89 4c 24 10       	mov	dword ptr [rsp + 0x10], r9d
ffffffff80019dfc: 4c 8d 42 c6          	lea	r8, [rdx - 0x3a]
ffffffff80019e00: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019e04: 0f 82 d4 fd ff ff    	jb	0xffffffff80019bde <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80019e0a: 44 0f b7 46 3a       	movzx	r8d, word ptr [rsi + 0x3a]
ffffffff80019e0f: 45 89 c1             	mov	r9d, r8d
ffffffff80019e12: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff80019e17: 84 c0                	test	al, al
ffffffff80019e19: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff80019e1d: 4c 8d 42 c4          	lea	r8, [rdx - 0x3c]
ffffffff80019e21: 49 83 f8 02          	cmp	r8, 0x2
ffffffff80019e25: 0f 82 b3 fd ff ff    	jb	0xffffffff80019bde <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80019e2b: 48 83 c2 c2          	add	rdx, -0x3e
ffffffff80019e2f: 48 83 fa 02          	cmp	rdx, 0x2
ffffffff80019e33: 73 19                	jae	0xffffffff80019e4e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x3ce>
ffffffff80019e35: 48 89 d8             	mov	rax, rbx
ffffffff80019e38: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff80019e3e: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff80019e45: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff80019e49: e9 a4 fd ff ff       	jmp	0xffffffff80019bf2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x172>
ffffffff80019e4e: 0f b7 56 3c          	movzx	edx, word ptr [rsi + 0x3c]
ffffffff80019e52: 89 54 24 0c          	mov	dword ptr [rsp + 0xc], edx
ffffffff80019e56: 66 c1 c2 08          	rol	dx, 0x8
ffffffff80019e5a: 44 0f b7 46 3e       	movzx	r8d, word ptr [rsi + 0x3e]
ffffffff80019e5f: 44 89 c6             	mov	esi, r8d
ffffffff80019e62: 66 c1 c6 08          	rol	si, 0x8
ffffffff80019e66: 84 c0                	test	al, al
ffffffff80019e68: 0f 44 54 24 0c       	cmove	edx, dword ptr [rsp + 0xc]
ffffffff80019e6d: 41 0f 44 f0          	cmove	esi, r8d
ffffffff80019e71: 48 89 d8             	mov	rax, rbx
ffffffff80019e74: 44 0f b6 44 24 0a    	movzx	r8d, byte ptr [rsp + 0xa]
ffffffff80019e7a: 44 88 43 08          	mov	byte ptr [rbx + 0x8], r8b
ffffffff80019e7e: 44 0f b6 44 24 09    	movzx	r8d, byte ptr [rsp + 0x9]
ffffffff80019e84: 44 88 43 09          	mov	byte ptr [rbx + 0x9], r8b
ffffffff80019e88: 44 0f b6 44 24 08    	movzx	r8d, byte ptr [rsp + 0x8]
ffffffff80019e8e: 44 88 43 0a          	mov	byte ptr [rbx + 0xa], r8b
ffffffff80019e92: 44 0f b6 44 24 07    	movzx	r8d, byte ptr [rsp + 0x7]
ffffffff80019e98: 44 88 43 0b          	mov	byte ptr [rbx + 0xb], r8b
ffffffff80019e9c: 44 0f b6 44 24 06    	movzx	r8d, byte ptr [rsp + 0x6]
ffffffff80019ea2: 44 88 43 0c          	mov	byte ptr [rbx + 0xc], r8b
ffffffff80019ea6: 88 4b 0d             	mov	byte ptr [rbx + 0xd], cl
ffffffff80019ea9: 40 88 6b 0e          	mov	byte ptr [rbx + 0xe], bpl
ffffffff80019ead: 44 88 73 0f          	mov	byte ptr [rbx + 0xf], r14b
ffffffff80019eb1: 44 88 7b 10          	mov	byte ptr [rbx + 0x10], r15b
ffffffff80019eb5: 44 88 63 11          	mov	byte ptr [rbx + 0x11], r12b
ffffffff80019eb9: 44 88 6b 12          	mov	byte ptr [rbx + 0x12], r13b
ffffffff80019ebd: 0f b6 4c 24 05       	movzx	ecx, byte ptr [rsp + 0x5]
ffffffff80019ec2: 88 4b 13             	mov	byte ptr [rbx + 0x13], cl
ffffffff80019ec5: 0f b6 4c 24 04       	movzx	ecx, byte ptr [rsp + 0x4]
ffffffff80019eca: 88 4b 14             	mov	byte ptr [rbx + 0x14], cl
ffffffff80019ecd: 0f b6 4c 24 03       	movzx	ecx, byte ptr [rsp + 0x3]
ffffffff80019ed2: 88 4b 15             	mov	byte ptr [rbx + 0x15], cl
ffffffff80019ed5: 44 88 53 16          	mov	byte ptr [rbx + 0x16], r10b
ffffffff80019ed9: 44 88 5b 17          	mov	byte ptr [rbx + 0x17], r11b
ffffffff80019edd: 66 89 7b 18          	mov	word ptr [rbx + 0x18], di
ffffffff80019ee1: 8b 4c 24 24          	mov	ecx, dword ptr [rsp + 0x24]
ffffffff80019ee5: 66 89 4b 1a          	mov	word ptr [rbx + 0x1a], cx
ffffffff80019ee9: 8b 4c 24 20          	mov	ecx, dword ptr [rsp + 0x20]
ffffffff80019eed: 89 4b 1c             	mov	dword ptr [rbx + 0x1c], ecx
ffffffff80019ef0: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff80019ef5: 48 89 4b 20          	mov	qword ptr [rbx + 0x20], rcx
ffffffff80019ef9: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff80019efe: 48 89 4b 28          	mov	qword ptr [rbx + 0x28], rcx
ffffffff80019f02: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff80019f07: 48 89 4b 30          	mov	qword ptr [rbx + 0x30], rcx
ffffffff80019f0b: 8b 4c 24 1c          	mov	ecx, dword ptr [rsp + 0x1c]
ffffffff80019f0f: 89 4b 38             	mov	dword ptr [rbx + 0x38], ecx
ffffffff80019f12: 8b 4c 24 18          	mov	ecx, dword ptr [rsp + 0x18]
ffffffff80019f16: 66 89 4b 3c          	mov	word ptr [rbx + 0x3c], cx
ffffffff80019f1a: 8b 4c 24 14          	mov	ecx, dword ptr [rsp + 0x14]
ffffffff80019f1e: 66 89 4b 3e          	mov	word ptr [rbx + 0x3e], cx
ffffffff80019f22: 8b 4c 24 10          	mov	ecx, dword ptr [rsp + 0x10]
ffffffff80019f26: 66 89 4b 40          	mov	word ptr [rbx + 0x40], cx
ffffffff80019f2a: 66 44 89 4b 42       	mov	word ptr [rbx + 0x42], r9w
ffffffff80019f2f: 66 89 53 44          	mov	word ptr [rbx + 0x44], dx
ffffffff80019f33: 66 89 73 46          	mov	word ptr [rbx + 0x46], si
ffffffff80019f37: 48 c7 43 48 40 00 00 00      	mov	qword ptr [rbx + 0x48], 0x40
ffffffff80019f3f: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff80019f46: e9 f5 fd ff ff       	jmp	0xffffffff80019d40 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2c0>
ffffffff80019f4b: cc                   	int3
ffffffff80019f4c: cc                   	int3
ffffffff80019f4d: cc                   	int3
ffffffff80019f4e: cc                   	int3
ffffffff80019f4f: cc                   	int3

ffffffff80019f50 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b>:
ffffffff80019f50: 48 89 f8             	mov	rax, rdi
ffffffff80019f53: 48 85 d2             	test	rdx, rdx
ffffffff80019f56: 74 5a                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f58: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff80019f5c: 74 54                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f5e: 48 83 fa 02          	cmp	rdx, 0x2
ffffffff80019f62: 74 4e                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f64: 48 83 fa 03          	cmp	rdx, 0x3
ffffffff80019f68: 74 48                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f6a: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff80019f6e: 74 42                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f70: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff80019f74: 74 3c                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f76: 48 83 fa 06          	cmp	rdx, 0x6
ffffffff80019f7a: 74 36                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f7c: 48 83 fa 07          	cmp	rdx, 0x7
ffffffff80019f80: 74 30                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f82: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff80019f86: 74 2a                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f88: 48 83 fa 09          	cmp	rdx, 0x9
ffffffff80019f8c: 74 24                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f8e: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff80019f92: 74 1e                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f94: 48 83 fa 0b          	cmp	rdx, 0xb
ffffffff80019f98: 74 18                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019f9a: 48 83 fa 0c          	cmp	rdx, 0xc
ffffffff80019f9e: 74 12                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019fa0: 48 83 fa 0d          	cmp	rdx, 0xd
ffffffff80019fa4: 74 0c                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019fa6: 48 83 fa 0e          	cmp	rdx, 0xe
ffffffff80019faa: 74 06                	je	0xffffffff80019fb2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80019fac: 48 83 fa 0f          	cmp	rdx, 0xf
ffffffff80019fb0: 75 2d                	jne	0xffffffff80019fdf <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x8f>
ffffffff80019fb2: c6 40 17 00          	mov	byte ptr [rax + 0x17], 0x0
ffffffff80019fb6: 66 c7 40 15 00 00    	mov	word ptr [rax + 0x15], 0x0
ffffffff80019fbc: c7 40 11 00 00 00 00 	mov	dword ptr [rax + 0x11], 0x0
ffffffff80019fc3: 48 c7 40 18 00 00 00 00      	mov	qword ptr [rax + 0x18], 0x0
ffffffff80019fcb: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff80019fd3: c6 40 10 01          	mov	byte ptr [rax + 0x10], 0x1
ffffffff80019fd7: 48 c7 00 01 00 00 00 	mov	qword ptr [rax], 0x1
ffffffff80019fde: c3                   	ret
ffffffff80019fdf: 55                   	push	rbp
ffffffff80019fe0: 41 57                	push	r15
ffffffff80019fe2: 41 56                	push	r14
ffffffff80019fe4: 41 55                	push	r13
ffffffff80019fe6: 41 54                	push	r12
ffffffff80019fe8: 53                   	push	rbx
ffffffff80019fe9: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff80019ff0: 48 89 c3             	mov	rbx, rax
ffffffff80019ff3: 0f b6 06             	movzx	eax, byte ptr [rsi]
ffffffff80019ff6: 88 44 24 16          	mov	byte ptr [rsp + 0x16], al
ffffffff80019ffa: 0f b6 46 01          	movzx	eax, byte ptr [rsi + 0x1]
ffffffff80019ffe: 88 44 24 15          	mov	byte ptr [rsp + 0x15], al
ffffffff8001a002: 0f b6 46 02          	movzx	eax, byte ptr [rsi + 0x2]
ffffffff8001a006: 88 44 24 14          	mov	byte ptr [rsp + 0x14], al
ffffffff8001a00a: 0f b6 46 03          	movzx	eax, byte ptr [rsi + 0x3]
ffffffff8001a00e: 88 44 24 13          	mov	byte ptr [rsp + 0x13], al
ffffffff8001a012: 0f b6 46 04          	movzx	eax, byte ptr [rsi + 0x4]
ffffffff8001a016: 88 44 24 12          	mov	byte ptr [rsp + 0x12], al
ffffffff8001a01a: 0f b6 4e 05          	movzx	ecx, byte ptr [rsi + 0x5]
ffffffff8001a01e: 0f b6 c1             	movzx	eax, cl
ffffffff8001a021: 0f b6 6e 06          	movzx	ebp, byte ptr [rsi + 0x6]
ffffffff8001a025: 44 0f b6 76 07       	movzx	r14d, byte ptr [rsi + 0x7]
ffffffff8001a02a: 44 0f b6 7e 08       	movzx	r15d, byte ptr [rsi + 0x8]
ffffffff8001a02f: 44 0f b6 66 09       	movzx	r12d, byte ptr [rsi + 0x9]
ffffffff8001a034: 44 0f b6 6e 0a       	movzx	r13d, byte ptr [rsi + 0xa]
ffffffff8001a039: 0f b6 7e 0b          	movzx	edi, byte ptr [rsi + 0xb]
ffffffff8001a03d: 40 88 7c 24 11       	mov	byte ptr [rsp + 0x11], dil
ffffffff8001a042: 0f b6 7e 0c          	movzx	edi, byte ptr [rsi + 0xc]
ffffffff8001a046: 40 88 7c 24 10       	mov	byte ptr [rsp + 0x10], dil
ffffffff8001a04b: 0f b6 7e 0d          	movzx	edi, byte ptr [rsi + 0xd]
ffffffff8001a04f: 40 88 7c 24 0f       	mov	byte ptr [rsp + 0xf], dil
ffffffff8001a054: 44 0f b6 56 0e       	movzx	r10d, byte ptr [rsi + 0xe]
ffffffff8001a059: 44 0f b6 5e 0f       	movzx	r11d, byte ptr [rsi + 0xf]
ffffffff8001a05e: 83 f8 01             	cmp	eax, 0x1
ffffffff8001a061: 74 09                	je	0xffffffff8001a06c <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x11c>
ffffffff8001a063: 83 f8 02             	cmp	eax, 0x2
ffffffff8001a066: 75 6d                	jne	0xffffffff8001a0d5 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x185>
ffffffff8001a068: b0 01                	mov	al, 0x1
ffffffff8001a06a: eb 02                	jmp	0xffffffff8001a06e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x11e>
ffffffff8001a06c: 31 c0                	xor	eax, eax
ffffffff8001a06e: 48 8d 7a f0          	lea	rdi, [rdx - 0x10]
ffffffff8001a072: 48 83 ff 02          	cmp	rdi, 0x2
ffffffff8001a076: 73 16                	jae	0xffffffff8001a08e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x13e>
ffffffff8001a078: 48 89 d8             	mov	rax, rbx
ffffffff8001a07b: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff8001a081: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff8001a088: 48 89 7b 18          	mov	qword ptr [rbx + 0x18], rdi
ffffffff8001a08c: eb 34                	jmp	0xffffffff8001a0c2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x172>
ffffffff8001a08e: 44 0f b7 46 10       	movzx	r8d, word ptr [rsi + 0x10]
ffffffff8001a093: 44 89 c7             	mov	edi, r8d
ffffffff8001a096: 66 c1 c7 08          	rol	di, 0x8
ffffffff8001a09a: 84 c0                	test	al, al
ffffffff8001a09c: 41 0f 44 f8          	cmove	edi, r8d
ffffffff8001a0a0: 4c 8d 42 ee          	lea	r8, [rdx - 0x12]
ffffffff8001a0a4: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a0a8: 0f 83 ac 00 00 00    	jae	0xffffffff8001a15a <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x20a>
ffffffff8001a0ae: 48 89 d8             	mov	rax, rbx
ffffffff8001a0b1: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff8001a0b7: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff8001a0be: 4c 89 43 18          	mov	qword ptr [rbx + 0x18], r8
ffffffff8001a0c2: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff8001a0ca: 66 c7 43 10 02 00    	mov	word ptr [rbx + 0x10], 0x2
ffffffff8001a0d0: e9 3a 01 00 00       	jmp	0xffffffff8001a20f <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2bf>
ffffffff8001a0d5: 88 4c 24 17          	mov	byte ptr [rsp + 0x17], cl
ffffffff8001a0d9: 48 8d 44 24 17       	lea	rax, [rsp + 0x17]
ffffffff8001a0de: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001a0e3: 48 c7 44 24 48 90 dc 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe2370
ffffffff8001a0ec: 48 c7 44 24 68 e0 84 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd7b20
ffffffff8001a0f5: 48 c7 44 24 70 01 00 00 00   	mov	qword ptr [rsp + 0x70], 0x1
ffffffff8001a0fe: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff8001a10a: 48 8d 44 24 40       	lea	rax, [rsp + 0x40]
ffffffff8001a10f: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8001a114: 48 c7 84 24 80 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0x80], 0x1
ffffffff8001a120: 48 8d 7c 24 50       	lea	rdi, [rsp + 0x50]
ffffffff8001a125: 48 8d 74 24 68       	lea	rsi, [rsp + 0x68]
ffffffff8001a12a: e8 81 35 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001a12f: 48 89 d8             	mov	rax, rbx
ffffffff8001a132: 48 c7 43 08 03 00 00 00      	mov	qword ptr [rbx + 0x8], 0x3
ffffffff8001a13a: 48 8b 4c 24 50       	mov	rcx, qword ptr [rsp + 0x50]
ffffffff8001a13f: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff8001a144: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001a148: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001a14c: 48 8b 4c 24 60       	mov	rcx, qword ptr [rsp + 0x60]
ffffffff8001a151: 48 89 4b 20          	mov	qword ptr [rbx + 0x20], rcx
ffffffff8001a155: e9 b5 00 00 00       	jmp	0xffffffff8001a20f <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2bf>
ffffffff8001a15a: 44 0f b7 46 12       	movzx	r8d, word ptr [rsi + 0x12]
ffffffff8001a15f: 45 89 c1             	mov	r9d, r8d
ffffffff8001a162: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff8001a167: 84 c0                	test	al, al
ffffffff8001a169: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a16d: 44 89 4c 24 3c       	mov	dword ptr [rsp + 0x3c], r9d
ffffffff8001a172: 4c 8d 42 ec          	lea	r8, [rdx - 0x14]
ffffffff8001a176: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001a17a: 72 7c                	jb	0xffffffff8001a1f8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001a17c: 44 8b 46 14          	mov	r8d, dword ptr [rsi + 0x14]
ffffffff8001a180: 45 89 c1             	mov	r9d, r8d
ffffffff8001a183: 41 0f c9             	bswap	r9d
ffffffff8001a186: 84 c0                	test	al, al
ffffffff8001a188: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a18c: 44 89 4c 24 38       	mov	dword ptr [rsp + 0x38], r9d
ffffffff8001a191: 4c 8d 42 e8          	lea	r8, [rdx - 0x18]
ffffffff8001a195: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001a199: 72 5d                	jb	0xffffffff8001a1f8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001a19b: 44 8b 46 18          	mov	r8d, dword ptr [rsi + 0x18]
ffffffff8001a19f: 45 89 c1             	mov	r9d, r8d
ffffffff8001a1a2: 41 0f c9             	bswap	r9d
ffffffff8001a1a5: 84 c0                	test	al, al
ffffffff8001a1a7: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a1ab: 44 89 4c 24 34       	mov	dword ptr [rsp + 0x34], r9d
ffffffff8001a1b0: 4c 8d 42 e4          	lea	r8, [rdx - 0x1c]
ffffffff8001a1b4: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001a1b8: 72 3e                	jb	0xffffffff8001a1f8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001a1ba: 44 8b 46 1c          	mov	r8d, dword ptr [rsi + 0x1c]
ffffffff8001a1be: 45 89 c1             	mov	r9d, r8d
ffffffff8001a1c1: 41 0f c9             	bswap	r9d
ffffffff8001a1c4: 84 c0                	test	al, al
ffffffff8001a1c6: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a1ca: 44 89 4c 24 30       	mov	dword ptr [rsp + 0x30], r9d
ffffffff8001a1cf: 4c 8d 42 e0          	lea	r8, [rdx - 0x20]
ffffffff8001a1d3: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001a1d7: 72 1f                	jb	0xffffffff8001a1f8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001a1d9: 44 8b 46 20          	mov	r8d, dword ptr [rsi + 0x20]
ffffffff8001a1dd: 45 89 c1             	mov	r9d, r8d
ffffffff8001a1e0: 41 0f c9             	bswap	r9d
ffffffff8001a1e3: 84 c0                	test	al, al
ffffffff8001a1e5: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a1e9: 44 89 4c 24 2c       	mov	dword ptr [rsp + 0x2c], r9d
ffffffff8001a1ee: 4c 8d 42 dc          	lea	r8, [rdx - 0x24]
ffffffff8001a1f2: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001a1f6: 73 30                	jae	0xffffffff8001a228 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2d8>
ffffffff8001a1f8: 48 89 d8             	mov	rax, rbx
ffffffff8001a1fb: 4c 89 43 18          	mov	qword ptr [rbx + 0x18], r8
ffffffff8001a1ff: 48 c7 43 08 00 00 00 00      	mov	qword ptr [rbx + 0x8], 0x0
ffffffff8001a207: 48 c7 43 10 04 00 00 00      	mov	qword ptr [rbx + 0x10], 0x4
ffffffff8001a20f: 48 c7 03 01 00 00 00 	mov	qword ptr [rbx], 0x1
ffffffff8001a216: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8001a21d: 5b                   	pop	rbx
ffffffff8001a21e: 41 5c                	pop	r12
ffffffff8001a220: 41 5d                	pop	r13
ffffffff8001a222: 41 5e                	pop	r14
ffffffff8001a224: 41 5f                	pop	r15
ffffffff8001a226: 5d                   	pop	rbp
ffffffff8001a227: c3                   	ret
ffffffff8001a228: 44 8b 46 24          	mov	r8d, dword ptr [rsi + 0x24]
ffffffff8001a22c: 45 89 c1             	mov	r9d, r8d
ffffffff8001a22f: 41 0f c9             	bswap	r9d
ffffffff8001a232: 84 c0                	test	al, al
ffffffff8001a234: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a238: 44 89 4c 24 28       	mov	dword ptr [rsp + 0x28], r9d
ffffffff8001a23d: 4c 8d 42 d8          	lea	r8, [rdx - 0x28]
ffffffff8001a241: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a245: 0f 82 63 fe ff ff    	jb	0xffffffff8001a0ae <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001a24b: 44 0f b7 46 28       	movzx	r8d, word ptr [rsi + 0x28]
ffffffff8001a250: 45 89 c1             	mov	r9d, r8d
ffffffff8001a253: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff8001a258: 84 c0                	test	al, al
ffffffff8001a25a: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a25e: 44 89 4c 24 24       	mov	dword ptr [rsp + 0x24], r9d
ffffffff8001a263: 4c 8d 42 d6          	lea	r8, [rdx - 0x2a]
ffffffff8001a267: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a26b: 0f 82 3d fe ff ff    	jb	0xffffffff8001a0ae <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001a271: 44 0f b7 46 2a       	movzx	r8d, word ptr [rsi + 0x2a]
ffffffff8001a276: 45 89 c1             	mov	r9d, r8d
ffffffff8001a279: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff8001a27e: 84 c0                	test	al, al
ffffffff8001a280: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a284: 44 89 4c 24 20       	mov	dword ptr [rsp + 0x20], r9d
ffffffff8001a289: 4c 8d 42 d4          	lea	r8, [rdx - 0x2c]
ffffffff8001a28d: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a291: 0f 82 17 fe ff ff    	jb	0xffffffff8001a0ae <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001a297: 44 0f b7 46 2c       	movzx	r8d, word ptr [rsi + 0x2c]
ffffffff8001a29c: 45 89 c1             	mov	r9d, r8d
ffffffff8001a29f: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff8001a2a4: 84 c0                	test	al, al
ffffffff8001a2a6: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a2aa: 44 89 4c 24 1c       	mov	dword ptr [rsp + 0x1c], r9d
ffffffff8001a2af: 4c 8d 42 d2          	lea	r8, [rdx - 0x2e]
ffffffff8001a2b3: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a2b7: 0f 82 f1 fd ff ff    	jb	0xffffffff8001a0ae <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001a2bd: 44 0f b7 46 2e       	movzx	r8d, word ptr [rsi + 0x2e]
ffffffff8001a2c2: 45 89 c1             	mov	r9d, r8d
ffffffff8001a2c5: 66 41 c1 c1 08       	rol	r9w, 0x8
ffffffff8001a2ca: 84 c0                	test	al, al
ffffffff8001a2cc: 45 0f 44 c8          	cmove	r9d, r8d
ffffffff8001a2d0: 4c 8d 42 d0          	lea	r8, [rdx - 0x30]
ffffffff8001a2d4: 49 83 f8 02          	cmp	r8, 0x2
ffffffff8001a2d8: 0f 82 d0 fd ff ff    	jb	0xffffffff8001a0ae <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001a2de: 48 83 c2 ce          	add	rdx, -0x32
ffffffff8001a2e2: 48 83 fa 02          	cmp	rdx, 0x2
ffffffff8001a2e6: 73 19                	jae	0xffffffff8001a301 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x3b1>
ffffffff8001a2e8: 48 89 d8             	mov	rax, rbx
ffffffff8001a2eb: 66 c7 43 16 00 00    	mov	word ptr [rbx + 0x16], 0x0
ffffffff8001a2f1: c7 43 12 00 00 00 00 	mov	dword ptr [rbx + 0x12], 0x0
ffffffff8001a2f8: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001a2fc: e9 c1 fd ff ff       	jmp	0xffffffff8001a0c2 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x172>
ffffffff8001a301: 0f b7 56 30          	movzx	edx, word ptr [rsi + 0x30]
ffffffff8001a305: 89 54 24 18          	mov	dword ptr [rsp + 0x18], edx
ffffffff8001a309: 66 c1 c2 08          	rol	dx, 0x8
ffffffff8001a30d: 44 0f b7 46 32       	movzx	r8d, word ptr [rsi + 0x32]
ffffffff8001a312: 44 89 c6             	mov	esi, r8d
ffffffff8001a315: 66 c1 c6 08          	rol	si, 0x8
ffffffff8001a319: 84 c0                	test	al, al
ffffffff8001a31b: 0f 44 54 24 18       	cmove	edx, dword ptr [rsp + 0x18]
ffffffff8001a320: 41 0f 44 f0          	cmove	esi, r8d
ffffffff8001a324: 48 89 d8             	mov	rax, rbx
ffffffff8001a327: 44 0f b6 44 24 16    	movzx	r8d, byte ptr [rsp + 0x16]
ffffffff8001a32d: 44 88 43 08          	mov	byte ptr [rbx + 0x8], r8b
ffffffff8001a331: 44 0f b6 44 24 15    	movzx	r8d, byte ptr [rsp + 0x15]
ffffffff8001a337: 44 88 43 09          	mov	byte ptr [rbx + 0x9], r8b
ffffffff8001a33b: 44 0f b6 44 24 14    	movzx	r8d, byte ptr [rsp + 0x14]
ffffffff8001a341: 44 88 43 0a          	mov	byte ptr [rbx + 0xa], r8b
ffffffff8001a345: 44 0f b6 44 24 13    	movzx	r8d, byte ptr [rsp + 0x13]
ffffffff8001a34b: 44 88 43 0b          	mov	byte ptr [rbx + 0xb], r8b
ffffffff8001a34f: 44 0f b6 44 24 12    	movzx	r8d, byte ptr [rsp + 0x12]
ffffffff8001a355: 44 88 43 0c          	mov	byte ptr [rbx + 0xc], r8b
ffffffff8001a359: 88 4b 0d             	mov	byte ptr [rbx + 0xd], cl
ffffffff8001a35c: 40 88 6b 0e          	mov	byte ptr [rbx + 0xe], bpl
ffffffff8001a360: 44 88 73 0f          	mov	byte ptr [rbx + 0xf], r14b
ffffffff8001a364: 44 88 7b 10          	mov	byte ptr [rbx + 0x10], r15b
ffffffff8001a368: 44 88 63 11          	mov	byte ptr [rbx + 0x11], r12b
ffffffff8001a36c: 44 88 6b 12          	mov	byte ptr [rbx + 0x12], r13b
ffffffff8001a370: 0f b6 4c 24 11       	movzx	ecx, byte ptr [rsp + 0x11]
ffffffff8001a375: 88 4b 13             	mov	byte ptr [rbx + 0x13], cl
ffffffff8001a378: 0f b6 4c 24 10       	movzx	ecx, byte ptr [rsp + 0x10]
ffffffff8001a37d: 88 4b 14             	mov	byte ptr [rbx + 0x14], cl
ffffffff8001a380: 0f b6 4c 24 0f       	movzx	ecx, byte ptr [rsp + 0xf]
ffffffff8001a385: 88 4b 15             	mov	byte ptr [rbx + 0x15], cl
ffffffff8001a388: 44 88 53 16          	mov	byte ptr [rbx + 0x16], r10b
ffffffff8001a38c: 44 88 5b 17          	mov	byte ptr [rbx + 0x17], r11b
ffffffff8001a390: 66 89 7b 18          	mov	word ptr [rbx + 0x18], di
ffffffff8001a394: 8b 4c 24 3c          	mov	ecx, dword ptr [rsp + 0x3c]
ffffffff8001a398: 66 89 4b 1a          	mov	word ptr [rbx + 0x1a], cx
ffffffff8001a39c: 8b 4c 24 38          	mov	ecx, dword ptr [rsp + 0x38]
ffffffff8001a3a0: 89 4b 1c             	mov	dword ptr [rbx + 0x1c], ecx
ffffffff8001a3a3: 8b 4c 24 34          	mov	ecx, dword ptr [rsp + 0x34]
ffffffff8001a3a7: 89 4b 20             	mov	dword ptr [rbx + 0x20], ecx
ffffffff8001a3aa: 8b 4c 24 30          	mov	ecx, dword ptr [rsp + 0x30]
ffffffff8001a3ae: 89 4b 24             	mov	dword ptr [rbx + 0x24], ecx
ffffffff8001a3b1: 8b 4c 24 2c          	mov	ecx, dword ptr [rsp + 0x2c]
ffffffff8001a3b5: 89 4b 28             	mov	dword ptr [rbx + 0x28], ecx
ffffffff8001a3b8: 8b 4c 24 28          	mov	ecx, dword ptr [rsp + 0x28]
ffffffff8001a3bc: 89 4b 2c             	mov	dword ptr [rbx + 0x2c], ecx
ffffffff8001a3bf: 8b 4c 24 24          	mov	ecx, dword ptr [rsp + 0x24]
ffffffff8001a3c3: 66 89 4b 30          	mov	word ptr [rbx + 0x30], cx
ffffffff8001a3c7: 8b 4c 24 20          	mov	ecx, dword ptr [rsp + 0x20]
ffffffff8001a3cb: 66 89 4b 32          	mov	word ptr [rbx + 0x32], cx
ffffffff8001a3cf: 8b 4c 24 1c          	mov	ecx, dword ptr [rsp + 0x1c]
ffffffff8001a3d3: 66 89 4b 34          	mov	word ptr [rbx + 0x34], cx
ffffffff8001a3d7: 66 44 89 4b 36       	mov	word ptr [rbx + 0x36], r9w
ffffffff8001a3dc: 66 89 53 38          	mov	word ptr [rbx + 0x38], dx
ffffffff8001a3e0: 66 89 73 3a          	mov	word ptr [rbx + 0x3a], si
ffffffff8001a3e4: 48 c7 43 40 34 00 00 00      	mov	qword ptr [rbx + 0x40], 0x34
ffffffff8001a3ec: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff8001a3f3: e9 1e fe ff ff       	jmp	0xffffffff8001a216 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2c6>
ffffffff8001a3f8: cc                   	int3
ffffffff8001a3f9: cc                   	int3
ffffffff8001a3fa: cc                   	int3
ffffffff8001a3fb: cc                   	int3
ffffffff8001a3fc: cc                   	int3
ffffffff8001a3fd: cc                   	int3
ffffffff8001a3fe: cc                   	int3
ffffffff8001a3ff: cc                   	int3

ffffffff8001a400 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>:
ffffffff8001a400: 41 57                	push	r15
ffffffff8001a402: 41 56                	push	r14
ffffffff8001a404: 53                   	push	rbx
ffffffff8001a405: 48 89 d3             	mov	rbx, rdx
ffffffff8001a408: 49 89 f7             	mov	r15, rsi
ffffffff8001a40b: 49 89 fe             	mov	r14, rdi
ffffffff8001a40e: 48 83 79 08 00       	cmp	qword ptr [rcx + 0x8], 0x0
ffffffff8001a413: 74 19                	je	0xffffffff8001a42e <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x2e>
ffffffff8001a415: 48 8b 71 10          	mov	rsi, qword ptr [rcx + 0x10]
ffffffff8001a419: 48 85 f6             	test	rsi, rsi
ffffffff8001a41c: 74 10                	je	0xffffffff8001a42e <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x2e>
ffffffff8001a41e: 48 8b 39             	mov	rdi, qword ptr [rcx]
ffffffff8001a421: 4c 89 fa             	mov	rdx, r15
ffffffff8001a424: 48 89 d9             	mov	rcx, rbx
ffffffff8001a427: e8 84 eb fe ff       	call	0xffffffff80008fb0 <__rust_realloc>
ffffffff8001a42c: eb 1c                	jmp	0xffffffff8001a44a <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x4a>
ffffffff8001a42e: 48 85 db             	test	rbx, rbx
ffffffff8001a431: 74 14                	je	0xffffffff8001a447 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x47>
ffffffff8001a433: 0f b6 05 a7 0d 01 00 	movzx	eax, byte ptr [rip + 0x10da7] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001a43a: 48 89 df             	mov	rdi, rbx
ffffffff8001a43d: 4c 89 fe             	mov	rsi, r15
ffffffff8001a440: e8 cb ea fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001a445: eb 03                	jmp	0xffffffff8001a44a <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x4a>
ffffffff8001a447: 4c 89 f8             	mov	rax, r15
ffffffff8001a44a: 31 c9                	xor	ecx, ecx
ffffffff8001a44c: 48 85 c0             	test	rax, rax
ffffffff8001a44f: 4c 0f 45 f8          	cmovne	r15, rax
ffffffff8001a453: 0f 94 c1             	sete	cl
ffffffff8001a456: 4d 89 7e 08          	mov	qword ptr [r14 + 0x8], r15
ffffffff8001a45a: 49 89 5e 10          	mov	qword ptr [r14 + 0x10], rbx
ffffffff8001a45e: 49 89 0e             	mov	qword ptr [r14], rcx
ffffffff8001a461: 5b                   	pop	rbx
ffffffff8001a462: 41 5e                	pop	r14
ffffffff8001a464: 41 5f                	pop	r15
ffffffff8001a466: c3                   	ret
ffffffff8001a467: cc                   	int3
ffffffff8001a468: cc                   	int3
ffffffff8001a469: cc                   	int3
ffffffff8001a46a: cc                   	int3
ffffffff8001a46b: cc                   	int3
ffffffff8001a46c: cc                   	int3
ffffffff8001a46d: cc                   	int3
ffffffff8001a46e: cc                   	int3
ffffffff8001a46f: cc                   	int3

ffffffff8001a470 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42>:
ffffffff8001a470: 41 57                	push	r15
ffffffff8001a472: 41 56                	push	r14
ffffffff8001a474: 53                   	push	rbx
ffffffff8001a475: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001a479: 49 89 fe             	mov	r14, rdi
ffffffff8001a47c: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff8001a47f: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff8001a483: 48 8d 14 09          	lea	rdx, [rcx + rcx]
ffffffff8001a487: 48 39 d0             	cmp	rax, rdx
ffffffff8001a48a: 48 0f 47 d0          	cmova	rdx, rax
ffffffff8001a48e: 48 89 f3             	mov	rbx, rsi
ffffffff8001a491: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff8001a495: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001a49b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001a49f: 31 ff                	xor	edi, edi
ffffffff8001a4a1: ba 18 00 00 00       	mov	edx, 0x18
ffffffff8001a4a6: 4c 89 f8             	mov	rax, r15
ffffffff8001a4a9: 48 f7 e2             	mul	rdx
ffffffff8001a4ac: 70 69                	jo	0xffffffff8001a517 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xa7>
ffffffff8001a4ae: 48 ba f8 ff ff ff ff ff ff 7f	movabs	rdx, 0x7ffffffffffffff8
ffffffff8001a4b8: 48 39 d0             	cmp	rax, rdx
ffffffff8001a4bb: 77 6c                	ja	0xffffffff8001a529 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xb9>
ffffffff8001a4bd: 48 85 c9             	test	rcx, rcx
ffffffff8001a4c0: 75 04                	jne	0xffffffff8001a4c6 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0x56>
ffffffff8001a4c2: 31 c9                	xor	ecx, ecx
ffffffff8001a4c4: eb 1b                	jmp	0xffffffff8001a4e1 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0x71>
ffffffff8001a4c6: 49 8b 56 08          	mov	rdx, qword ptr [r14 + 0x8]
ffffffff8001a4ca: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8001a4ce: 48 8d 0c 49          	lea	rcx, [rcx + 2*rcx]
ffffffff8001a4d2: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff8001a4d7: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8001a4dc: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001a4e1: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8001a4e6: 48 89 e7             	mov	rdi, rsp
ffffffff8001a4e9: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001a4ee: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001a4f3: 48 89 c2             	mov	rdx, rax
ffffffff8001a4f6: e8 05 ff ff ff       	call	0xffffffff8001a400 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff8001a4fb: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001a4ff: 74 1e                	je	0xffffffff8001a51f <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xaf>
ffffffff8001a501: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001a506: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff8001a50a: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001a50d: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001a511: 5b                   	pop	rbx
ffffffff8001a512: 41 5e                	pop	r14
ffffffff8001a514: 41 5f                	pop	r15
ffffffff8001a516: c3                   	ret
ffffffff8001a517: 48 89 da             	mov	rdx, rbx
ffffffff8001a51a: e8 78 31 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a51f: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001a524: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001a529: 48 89 da             	mov	rdx, rbx
ffffffff8001a52c: e8 66 31 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a531: cc                   	int3
ffffffff8001a532: cc                   	int3
ffffffff8001a533: cc                   	int3
ffffffff8001a534: cc                   	int3
ffffffff8001a535: cc                   	int3
ffffffff8001a536: cc                   	int3
ffffffff8001a537: cc                   	int3
ffffffff8001a538: cc                   	int3
ffffffff8001a539: cc                   	int3
ffffffff8001a53a: cc                   	int3
ffffffff8001a53b: cc                   	int3
ffffffff8001a53c: cc                   	int3
ffffffff8001a53d: cc                   	int3
ffffffff8001a53e: cc                   	int3
ffffffff8001a53f: cc                   	int3

ffffffff8001a540 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>:
ffffffff8001a540: 41 57                	push	r15
ffffffff8001a542: 41 56                	push	r14
ffffffff8001a544: 53                   	push	rbx
ffffffff8001a545: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001a549: 49 89 fe             	mov	r14, rdi
ffffffff8001a54c: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001a54f: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff8001a553: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff8001a557: 48 39 d1             	cmp	rcx, rdx
ffffffff8001a55a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001a55e: 48 89 f3             	mov	rbx, rsi
ffffffff8001a561: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff8001a565: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001a56b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001a56f: 31 ff                	xor	edi, edi
ffffffff8001a571: 48 c1 ea 3c          	shr	rdx, 0x3c
ffffffff8001a575: 75 69                	jne	0xffffffff8001a5e0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xa0>
ffffffff8001a577: 4c 89 fa             	mov	rdx, r15
ffffffff8001a57a: 48 c1 e2 04          	shl	rdx, 0x4
ffffffff8001a57e: 48 b9 f8 ff ff ff ff ff ff 7f	movabs	rcx, 0x7ffffffffffffff8
ffffffff8001a588: 48 39 ca             	cmp	rdx, rcx
ffffffff8001a58b: 77 65                	ja	0xffffffff8001a5f2 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xb2>
ffffffff8001a58d: 48 85 c0             	test	rax, rax
ffffffff8001a590: 75 04                	jne	0xffffffff8001a596 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0x56>
ffffffff8001a592: 31 c0                	xor	eax, eax
ffffffff8001a594: eb 17                	jmp	0xffffffff8001a5ad <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0x6d>
ffffffff8001a596: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001a59a: 48 c1 e0 04          	shl	rax, 0x4
ffffffff8001a59e: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001a5a3: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001a5a8: b8 08 00 00 00       	mov	eax, 0x8
ffffffff8001a5ad: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001a5b2: 48 89 e7             	mov	rdi, rsp
ffffffff8001a5b5: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001a5ba: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001a5bf: e8 3c fe ff ff       	call	0xffffffff8001a400 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff8001a5c4: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001a5c8: 74 1e                	je	0xffffffff8001a5e8 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xa8>
ffffffff8001a5ca: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001a5cf: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff8001a5d3: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001a5d6: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001a5da: 5b                   	pop	rbx
ffffffff8001a5db: 41 5e                	pop	r14
ffffffff8001a5dd: 41 5f                	pop	r15
ffffffff8001a5df: c3                   	ret
ffffffff8001a5e0: 48 89 da             	mov	rdx, rbx
ffffffff8001a5e3: e8 af 30 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a5e8: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001a5ed: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001a5f2: 48 89 da             	mov	rdx, rbx
ffffffff8001a5f5: e8 9d 30 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a5fa: cc                   	int3
ffffffff8001a5fb: cc                   	int3
ffffffff8001a5fc: cc                   	int3
ffffffff8001a5fd: cc                   	int3
ffffffff8001a5fe: cc                   	int3
ffffffff8001a5ff: cc                   	int3

ffffffff8001a600 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>:
ffffffff8001a600: 41 57                	push	r15
ffffffff8001a602: 41 56                	push	r14
ffffffff8001a604: 53                   	push	rbx
ffffffff8001a605: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001a609: 49 89 fe             	mov	r14, rdi
ffffffff8001a60c: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff8001a60f: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff8001a613: 48 8d 14 09          	lea	rdx, [rcx + rcx]
ffffffff8001a617: 48 39 d0             	cmp	rax, rdx
ffffffff8001a61a: 48 0f 47 d0          	cmova	rdx, rax
ffffffff8001a61e: 48 89 f3             	mov	rbx, rsi
ffffffff8001a621: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff8001a625: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001a62b: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001a62f: 31 ff                	xor	edi, edi
ffffffff8001a631: ba 48 00 00 00       	mov	edx, 0x48
ffffffff8001a636: 4c 89 f8             	mov	rax, r15
ffffffff8001a639: 48 f7 e2             	mul	rdx
ffffffff8001a63c: 70 69                	jo	0xffffffff8001a6a7 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xa7>
ffffffff8001a63e: 48 ba f8 ff ff ff ff ff ff 7f	movabs	rdx, 0x7ffffffffffffff8
ffffffff8001a648: 48 39 d0             	cmp	rax, rdx
ffffffff8001a64b: 77 6c                	ja	0xffffffff8001a6b9 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xb9>
ffffffff8001a64d: 48 85 c9             	test	rcx, rcx
ffffffff8001a650: 75 04                	jne	0xffffffff8001a656 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0x56>
ffffffff8001a652: 31 c9                	xor	ecx, ecx
ffffffff8001a654: eb 1b                	jmp	0xffffffff8001a671 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0x71>
ffffffff8001a656: 49 8b 56 08          	mov	rdx, qword ptr [r14 + 0x8]
ffffffff8001a65a: 48 c1 e1 03          	shl	rcx, 0x3
ffffffff8001a65e: 48 8d 0c c9          	lea	rcx, [rcx + 8*rcx]
ffffffff8001a662: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff8001a667: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8001a66c: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001a671: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8001a676: 48 89 e7             	mov	rdi, rsp
ffffffff8001a679: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001a67e: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001a683: 48 89 c2             	mov	rdx, rax
ffffffff8001a686: e8 75 fd ff ff       	call	0xffffffff8001a400 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff8001a68b: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001a68f: 74 1e                	je	0xffffffff8001a6af <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xaf>
ffffffff8001a691: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001a696: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff8001a69a: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001a69d: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001a6a1: 5b                   	pop	rbx
ffffffff8001a6a2: 41 5e                	pop	r14
ffffffff8001a6a4: 41 5f                	pop	r15
ffffffff8001a6a6: c3                   	ret
ffffffff8001a6a7: 48 89 da             	mov	rdx, rbx
ffffffff8001a6aa: e8 e8 2f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a6af: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001a6b4: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001a6b9: 48 89 da             	mov	rdx, rbx
ffffffff8001a6bc: e8 d6 2f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a6c1: cc                   	int3
ffffffff8001a6c2: cc                   	int3
ffffffff8001a6c3: cc                   	int3
ffffffff8001a6c4: cc                   	int3
ffffffff8001a6c5: cc                   	int3
ffffffff8001a6c6: cc                   	int3
ffffffff8001a6c7: cc                   	int3
ffffffff8001a6c8: cc                   	int3
ffffffff8001a6c9: cc                   	int3
ffffffff8001a6ca: cc                   	int3
ffffffff8001a6cb: cc                   	int3
ffffffff8001a6cc: cc                   	int3
ffffffff8001a6cd: cc                   	int3
ffffffff8001a6ce: cc                   	int3
ffffffff8001a6cf: cc                   	int3

ffffffff8001a6d0 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>:
ffffffff8001a6d0: 41 57                	push	r15
ffffffff8001a6d2: 41 56                	push	r14
ffffffff8001a6d4: 53                   	push	rbx
ffffffff8001a6d5: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001a6d9: 49 89 fe             	mov	r14, rdi
ffffffff8001a6dc: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff8001a6df: 48 8d 41 01          	lea	rax, [rcx + 0x1]
ffffffff8001a6e3: 48 8d 14 09          	lea	rdx, [rcx + rcx]
ffffffff8001a6e7: 48 39 d0             	cmp	rax, rdx
ffffffff8001a6ea: 48 0f 47 d0          	cmova	rdx, rax
ffffffff8001a6ee: 48 89 f3             	mov	rbx, rsi
ffffffff8001a6f1: 48 83 fa 05          	cmp	rdx, 0x5
ffffffff8001a6f5: 41 bf 04 00 00 00    	mov	r15d, 0x4
ffffffff8001a6fb: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001a6ff: 31 ff                	xor	edi, edi
ffffffff8001a701: ba 38 00 00 00       	mov	edx, 0x38
ffffffff8001a706: 4c 89 f8             	mov	rax, r15
ffffffff8001a709: 48 f7 e2             	mul	rdx
ffffffff8001a70c: 70 65                	jo	0xffffffff8001a773 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xa3>
ffffffff8001a70e: 48 ba f8 ff ff ff ff ff ff 7f	movabs	rdx, 0x7ffffffffffffff8
ffffffff8001a718: 48 39 d0             	cmp	rax, rdx
ffffffff8001a71b: 77 68                	ja	0xffffffff8001a785 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xb5>
ffffffff8001a71d: 48 85 c9             	test	rcx, rcx
ffffffff8001a720: 75 04                	jne	0xffffffff8001a726 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0x56>
ffffffff8001a722: 31 c9                	xor	ecx, ecx
ffffffff8001a724: eb 17                	jmp	0xffffffff8001a73d <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0x6d>
ffffffff8001a726: 49 8b 56 08          	mov	rdx, qword ptr [r14 + 0x8]
ffffffff8001a72a: 48 6b c9 38          	imul	rcx, rcx, 0x38
ffffffff8001a72e: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff8001a733: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8001a738: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001a73d: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8001a742: 48 89 e7             	mov	rdi, rsp
ffffffff8001a745: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001a74a: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001a74f: 48 89 c2             	mov	rdx, rax
ffffffff8001a752: e8 a9 fc ff ff       	call	0xffffffff8001a400 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff8001a757: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001a75b: 74 1e                	je	0xffffffff8001a77b <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xab>
ffffffff8001a75d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001a762: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff8001a766: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001a769: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001a76d: 5b                   	pop	rbx
ffffffff8001a76e: 41 5e                	pop	r14
ffffffff8001a770: 41 5f                	pop	r15
ffffffff8001a772: c3                   	ret
ffffffff8001a773: 48 89 da             	mov	rdx, rbx
ffffffff8001a776: e8 1c 2f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a77b: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001a780: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001a785: 48 89 da             	mov	rdx, rbx
ffffffff8001a788: e8 0a 2f 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001a78d: cc                   	int3
ffffffff8001a78e: cc                   	int3
ffffffff8001a78f: cc                   	int3

ffffffff8001a790 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9>:
ffffffff8001a790: 55                   	push	rbp
ffffffff8001a791: 41 57                	push	r15
ffffffff8001a793: 41 56                	push	r14
ffffffff8001a795: 41 55                	push	r13
ffffffff8001a797: 41 54                	push	r12
ffffffff8001a799: 53                   	push	rbx
ffffffff8001a79a: 48 81 ec e8 00 00 00 	sub	rsp, 0xe8
ffffffff8001a7a1: 4d 89 c6             	mov	r14, r8
ffffffff8001a7a4: 49 89 d7             	mov	r15, rdx
ffffffff8001a7a7: 48 89 74 24 28       	mov	qword ptr [rsp + 0x28], rsi
ffffffff8001a7ac: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff8001a7b1: 45 85 c9             	test	r9d, r9d
ffffffff8001a7b4: b8 38 00 00 00       	mov	eax, 0x38
ffffffff8001a7b9: b9 20 00 00 00       	mov	ecx, 0x20
ffffffff8001a7be: 48 0f 45 c8          	cmovne	rcx, rax
ffffffff8001a7c2: 48 89 d0             	mov	rax, rdx
ffffffff8001a7c5: 48 c1 e8 20          	shr	rax, 0x20
ffffffff8001a7c9: 74 2d                	je	0xffffffff8001a7f8 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x68>
ffffffff8001a7cb: 4c 89 f8             	mov	rax, r15
ffffffff8001a7ce: 31 d2                	xor	edx, edx
ffffffff8001a7d0: 48 f7 f1             	div	rcx
ffffffff8001a7d3: 4c 39 f0             	cmp	rax, r14
ffffffff8001a7d6: 73 2c                	jae	0xffffffff8001a804 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x74>
ffffffff8001a7d8: 48 c7 07 06 00 00 00 	mov	qword ptr [rdi], 0x6
ffffffff8001a7df: 48 c7 47 08 90 85 02 80      	mov	qword ptr [rdi + 0x8], -0x7ffd7a70
ffffffff8001a7e7: 48 c7 47 10 0f 00 00 00      	mov	qword ptr [rdi + 0x10], 0xf
ffffffff8001a7ef: 4c 89 77 18          	mov	qword ptr [rdi + 0x18], r14
ffffffff8001a7f3: e9 3a 02 00 00       	jmp	0xffffffff8001aa32 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff8001a7f8: 44 89 f8             	mov	eax, r15d
ffffffff8001a7fb: 31 d2                	xor	edx, edx
ffffffff8001a7fd: f7 f1                	div	ecx
ffffffff8001a7ff: 4c 39 f0             	cmp	rax, r14
ffffffff8001a802: 72 d4                	jb	0xffffffff8001a7d8 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x48>
ffffffff8001a804: 48 89 7c 24 20       	mov	qword ptr [rsp + 0x20], rdi
ffffffff8001a809: 45 31 ed             	xor	r13d, r13d
ffffffff8001a80c: b9 38 00 00 00       	mov	ecx, 0x38
ffffffff8001a811: 4c 89 f0             	mov	rax, r14
ffffffff8001a814: 48 f7 e1             	mul	rcx
ffffffff8001a817: 48 89 c3             	mov	rbx, rax
ffffffff8001a81a: 0f 80 27 02 00 00    	jo	0xffffffff8001aa47 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff8001a820: 48 b8 f8 ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffff8
ffffffff8001a82a: 48 39 c3             	cmp	rbx, rax
ffffffff8001a82d: 0f 87 14 02 00 00    	ja	0xffffffff8001aa47 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff8001a833: 48 85 db             	test	rbx, rbx
ffffffff8001a836: 74 2e                	je	0xffffffff8001a866 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0xd6>
ffffffff8001a838: 0f b6 05 a2 09 01 00 	movzx	eax, byte ptr [rip + 0x109a2] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001a83f: 41 bd 08 00 00 00    	mov	r13d, 0x8
ffffffff8001a845: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001a84a: 48 89 df             	mov	rdi, rbx
ffffffff8001a84d: 44 89 cd             	mov	ebp, r9d
ffffffff8001a850: e8 bb e6 fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001a855: 48 85 c0             	test	rax, rax
ffffffff8001a858: 0f 84 e9 01 00 00    	je	0xffffffff8001aa47 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff8001a85e: 41 89 e9             	mov	r9d, ebp
ffffffff8001a861: 4c 89 f1             	mov	rcx, r14
ffffffff8001a864: eb 07                	jmp	0xffffffff8001a86d <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0xdd>
ffffffff8001a866: b8 08 00 00 00       	mov	eax, 0x8
ffffffff8001a86b: 31 c9                	xor	ecx, ecx
ffffffff8001a86d: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8001a872: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001a877: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8001a880: 4d 85 f6             	test	r14, r14
ffffffff8001a883: 0f 84 20 01 00 00    	je	0xffffffff8001a9a9 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x219>
ffffffff8001a889: 48 8d 9c 24 b0 00 00 00      	lea	rbx, [rsp + 0xb0]
ffffffff8001a891: 41 0f b6 e9          	movzx	ebp, r9b
ffffffff8001a895: 44 0f b6 ac 24 20 01 00 00   	movzx	r13d, byte ptr [rsp + 0x120]
ffffffff8001a89e: eb 5f                	jmp	0xffffffff8001a8ff <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x16f>
ffffffff8001a8a0: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001a8a5: 49 6b cc 38          	imul	rcx, r12, 0x38
ffffffff8001a8a9: 48 8b 54 24 68       	mov	rdx, qword ptr [rsp + 0x68]
ffffffff8001a8ae: 48 89 54 08 30       	mov	qword ptr [rax + rcx + 0x30], rdx
ffffffff8001a8b3: 48 8b 54 24 60       	mov	rdx, qword ptr [rsp + 0x60]
ffffffff8001a8b8: 48 89 54 08 28       	mov	qword ptr [rax + rcx + 0x28], rdx
ffffffff8001a8bd: 48 8b 54 24 58       	mov	rdx, qword ptr [rsp + 0x58]
ffffffff8001a8c2: 48 89 54 08 20       	mov	qword ptr [rax + rcx + 0x20], rdx
ffffffff8001a8c7: 48 8b 54 24 50       	mov	rdx, qword ptr [rsp + 0x50]
ffffffff8001a8cc: 48 89 54 08 18       	mov	qword ptr [rax + rcx + 0x18], rdx
ffffffff8001a8d1: 48 8b 54 24 48       	mov	rdx, qword ptr [rsp + 0x48]
ffffffff8001a8d6: 48 89 54 08 10       	mov	qword ptr [rax + rcx + 0x10], rdx
ffffffff8001a8db: 48 8b 54 24 38       	mov	rdx, qword ptr [rsp + 0x38]
ffffffff8001a8e0: 48 8b 74 24 40       	mov	rsi, qword ptr [rsp + 0x40]
ffffffff8001a8e5: 48 89 74 08 08       	mov	qword ptr [rax + rcx + 0x8], rsi
ffffffff8001a8ea: 48 89 14 08          	mov	qword ptr [rax + rcx], rdx
ffffffff8001a8ee: 49 ff c4             	inc	r12
ffffffff8001a8f1: 4c 89 64 24 18       	mov	qword ptr [rsp + 0x18], r12
ffffffff8001a8f6: 49 ff ce             	dec	r14
ffffffff8001a8f9: 0f 84 aa 00 00 00    	je	0xffffffff8001a9a9 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x219>
ffffffff8001a8ff: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 0xa8]
ffffffff8001a907: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001a90c: 4c 89 fa             	mov	rdx, r15
ffffffff8001a90f: 48 8d 4c 24 30       	lea	rcx, [rsp + 0x30]
ffffffff8001a914: 41 89 e8             	mov	r8d, ebp
ffffffff8001a917: 45 89 e9             	mov	r9d, r13d
ffffffff8001a91a: e8 41 ed ff ff       	call	0xffffffff80019660 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E>
ffffffff8001a91f: f6 84 24 a8 00 00 00 01      	test	byte ptr [rsp + 0xa8], 0x1
ffffffff8001a927: 0f 85 a5 00 00 00    	jne	0xffffffff8001a9d2 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x242>
ffffffff8001a92d: 48 8b 43 30          	mov	rax, qword ptr [rbx + 0x30]
ffffffff8001a931: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rax
ffffffff8001a939: 48 8b 4b 28          	mov	rcx, qword ptr [rbx + 0x28]
ffffffff8001a93d: 48 89 8c 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rcx
ffffffff8001a945: 48 8b 53 20          	mov	rdx, qword ptr [rbx + 0x20]
ffffffff8001a949: 48 89 94 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rdx
ffffffff8001a951: 48 8b 73 18          	mov	rsi, qword ptr [rbx + 0x18]
ffffffff8001a955: 48 8b 7b 10          	mov	rdi, qword ptr [rbx + 0x10]
ffffffff8001a959: 4c 8b 03             	mov	r8, qword ptr [rbx]
ffffffff8001a95c: 4c 8b 4b 08          	mov	r9, qword ptr [rbx + 0x8]
ffffffff8001a960: 4c 89 44 24 38       	mov	qword ptr [rsp + 0x38], r8
ffffffff8001a965: 4c 89 4c 24 40       	mov	qword ptr [rsp + 0x40], r9
ffffffff8001a96a: 48 89 7c 24 48       	mov	qword ptr [rsp + 0x48], rdi
ffffffff8001a96f: 48 89 74 24 50       	mov	qword ptr [rsp + 0x50], rsi
ffffffff8001a974: 48 89 54 24 58       	mov	qword ptr [rsp + 0x58], rdx
ffffffff8001a979: 48 89 4c 24 60       	mov	qword ptr [rsp + 0x60], rcx
ffffffff8001a97e: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8001a983: 4c 8b 64 24 18       	mov	r12, qword ptr [rsp + 0x18]
ffffffff8001a988: 4c 3b 64 24 08       	cmp	r12, qword ptr [rsp + 0x8]
ffffffff8001a98d: 0f 85 0d ff ff ff    	jne	0xffffffff8001a8a0 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x110>
ffffffff8001a993: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001a998: 48 c7 c6 78 85 02 80 	mov	rsi, -0x7ffd7a88
ffffffff8001a99f: e8 2c fd ff ff       	call	0xffffffff8001a6d0 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>
ffffffff8001a9a4: e9 f7 fe ff ff       	jmp	0xffffffff8001a8a0 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x110>
ffffffff8001a9a9: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001a9ae: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001a9b3: 48 89 47 18          	mov	qword ptr [rdi + 0x18], rax
ffffffff8001a9b7: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001a9bc: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff8001a9c1: 48 89 4f 10          	mov	qword ptr [rdi + 0x10], rcx
ffffffff8001a9c5: 48 89 47 08          	mov	qword ptr [rdi + 0x8], rax
ffffffff8001a9c9: 48 c7 07 07 00 00 00 	mov	qword ptr [rdi], 0x7
ffffffff8001a9d0: eb 60                	jmp	0xffffffff8001aa32 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff8001a9d2: 48 8b 43 18          	mov	rax, qword ptr [rbx + 0x18]
ffffffff8001a9d6: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rax
ffffffff8001a9de: 48 8b 4b 10          	mov	rcx, qword ptr [rbx + 0x10]
ffffffff8001a9e2: 48 89 8c 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rcx
ffffffff8001a9ea: 48 8b 13             	mov	rdx, qword ptr [rbx]
ffffffff8001a9ed: 48 8b 73 08          	mov	rsi, qword ptr [rbx + 0x8]
ffffffff8001a9f1: 48 89 74 24 78       	mov	qword ptr [rsp + 0x78], rsi
ffffffff8001a9f6: 48 89 54 24 70       	mov	qword ptr [rsp + 0x70], rdx
ffffffff8001a9fb: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001aa00: 48 89 47 18          	mov	qword ptr [rdi + 0x18], rax
ffffffff8001aa04: 48 89 4f 10          	mov	qword ptr [rdi + 0x10], rcx
ffffffff8001aa08: 48 89 77 08          	mov	qword ptr [rdi + 0x8], rsi
ffffffff8001aa0c: 48 89 17             	mov	qword ptr [rdi], rdx
ffffffff8001aa0f: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001aa14: 48 85 c0             	test	rax, rax
ffffffff8001aa17: 74 19                	je	0xffffffff8001aa32 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff8001aa19: 48 89 fb             	mov	rbx, rdi
ffffffff8001aa1c: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8001aa21: 48 6b f0 38          	imul	rsi, rax, 0x38
ffffffff8001aa25: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001aa2a: e8 31 e5 fe ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001aa2f: 48 89 df             	mov	rdi, rbx
ffffffff8001aa32: 48 89 f8             	mov	rax, rdi
ffffffff8001aa35: 48 81 c4 e8 00 00 00 	add	rsp, 0xe8
ffffffff8001aa3c: 5b                   	pop	rbx
ffffffff8001aa3d: 41 5c                	pop	r12
ffffffff8001aa3f: 41 5d                	pop	r13
ffffffff8001aa41: 41 5e                	pop	r14
ffffffff8001aa43: 41 5f                	pop	r15
ffffffff8001aa45: 5d                   	pop	rbp
ffffffff8001aa46: c3                   	ret
ffffffff8001aa47: 4c 89 ef             	mov	rdi, r13
ffffffff8001aa4a: 48 89 de             	mov	rsi, rbx
ffffffff8001aa4d: 48 c7 c2 60 85 02 80 	mov	rdx, -0x7ffd7aa0
ffffffff8001aa54: e8 3e 2c 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001aa59: cc                   	int3
ffffffff8001aa5a: cc                   	int3
ffffffff8001aa5b: cc                   	int3
ffffffff8001aa5c: cc                   	int3
ffffffff8001aa5d: cc                   	int3
ffffffff8001aa5e: cc                   	int3
ffffffff8001aa5f: cc                   	int3

ffffffff8001aa60 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3>:
ffffffff8001aa60: 53                   	push	rbx
ffffffff8001aa61: 48 83 ec 50          	sub	rsp, 0x50
ffffffff8001aa65: 48 89 fb             	mov	rbx, rdi
ffffffff8001aa68: 85 c9                	test	ecx, ecx
ffffffff8001aa6a: 74 42                	je	0xffffffff8001aaae <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x4e>
ffffffff8001aa6c: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001aa75: 45 0f b6 c0          	movzx	r8d, r8b
ffffffff8001aa79: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001aa7e: 48 8d 4c 24 08       	lea	rcx, [rsp + 0x8]
ffffffff8001aa83: e8 58 e8 ff ff       	call	0xffffffff800192e0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E>
ffffffff8001aa88: 8b 44 24 18          	mov	eax, dword ptr [rsp + 0x18]
ffffffff8001aa8c: 8b 7c 24 1c          	mov	edi, dword ptr [rsp + 0x1c]
ffffffff8001aa90: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8001aa95: 48 8b 54 24 28       	mov	rdx, qword ptr [rsp + 0x28]
ffffffff8001aa9a: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff8001aa9f: f6 44 24 10 01       	test	byte ptr [rsp + 0x10], 0x1
ffffffff8001aaa4: 74 56                	je	0xffffffff8001aafc <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x9c>
ffffffff8001aaa6: 89 43 08             	mov	dword ptr [rbx + 0x8], eax
ffffffff8001aaa9: 89 7b 0c             	mov	dword ptr [rbx + 0xc], edi
ffffffff8001aaac: eb 3b                	jmp	0xffffffff8001aae9 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x89>
ffffffff8001aaae: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001aab7: 45 0f b6 c0          	movzx	r8d, r8b
ffffffff8001aabb: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001aac0: 48 8d 4c 24 08       	lea	rcx, [rsp + 0x8]
ffffffff8001aac5: e8 56 ee ff ff       	call	0xffffffff80019920 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE>
ffffffff8001aaca: f6 44 24 10 01       	test	byte ptr [rsp + 0x10], 0x1
ffffffff8001aacf: 74 42                	je	0xffffffff8001ab13 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0xb3>
ffffffff8001aad1: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001aad6: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8001aadb: 48 8b 54 24 28       	mov	rdx, qword ptr [rsp + 0x28]
ffffffff8001aae0: 48 8b 74 24 30       	mov	rsi, qword ptr [rsp + 0x30]
ffffffff8001aae5: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001aae9: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001aaed: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001aaf1: 48 89 73 20          	mov	qword ptr [rbx + 0x20], rsi
ffffffff8001aaf5: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001aafa: eb 64                	jmp	0xffffffff8001ab60 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x100>
ffffffff8001aafc: 4c 8b 44 24 38       	mov	r8, qword ptr [rsp + 0x38]
ffffffff8001ab01: 4c 8b 4c 24 40       	mov	r9, qword ptr [rsp + 0x40]
ffffffff8001ab06: 4c 8b 54 24 48       	mov	r10, qword ptr [rsp + 0x48]
ffffffff8001ab0b: 41 bb 38 00 00 00    	mov	r11d, 0x38
ffffffff8001ab11: eb 29                	jmp	0xffffffff8001ab3c <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0xdc>
ffffffff8001ab13: 8b 44 24 14          	mov	eax, dword ptr [rsp + 0x14]
ffffffff8001ab17: 8b 4c 24 18          	mov	ecx, dword ptr [rsp + 0x18]
ffffffff8001ab1b: 8b 54 24 1c          	mov	edx, dword ptr [rsp + 0x1c]
ffffffff8001ab1f: 8b 74 24 20          	mov	esi, dword ptr [rsp + 0x20]
ffffffff8001ab23: 44 8b 44 24 24       	mov	r8d, dword ptr [rsp + 0x24]
ffffffff8001ab28: 44 8b 4c 24 28       	mov	r9d, dword ptr [rsp + 0x28]
ffffffff8001ab2d: 8b 7c 24 2c          	mov	edi, dword ptr [rsp + 0x2c]
ffffffff8001ab31: 44 8b 54 24 30       	mov	r10d, dword ptr [rsp + 0x30]
ffffffff8001ab36: 41 bb 20 00 00 00    	mov	r11d, 0x20
ffffffff8001ab3c: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001ab40: 48 89 53 10          	mov	qword ptr [rbx + 0x10], rdx
ffffffff8001ab44: 48 89 73 18          	mov	qword ptr [rbx + 0x18], rsi
ffffffff8001ab48: 4c 89 43 20          	mov	qword ptr [rbx + 0x20], r8
ffffffff8001ab4c: 4c 89 4b 28          	mov	qword ptr [rbx + 0x28], r9
ffffffff8001ab50: 4c 89 53 30          	mov	qword ptr [rbx + 0x30], r10
ffffffff8001ab54: 89 43 38             	mov	dword ptr [rbx + 0x38], eax
ffffffff8001ab57: 89 7b 3c             	mov	dword ptr [rbx + 0x3c], edi
ffffffff8001ab5a: 4c 89 5b 40          	mov	qword ptr [rbx + 0x40], r11
ffffffff8001ab5e: 31 c0                	xor	eax, eax
ffffffff8001ab60: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001ab63: 48 89 d8             	mov	rax, rbx
ffffffff8001ab66: 48 83 c4 50          	add	rsp, 0x50
ffffffff8001ab6a: 5b                   	pop	rbx
ffffffff8001ab6b: c3                   	ret
ffffffff8001ab6c: cc                   	int3
ffffffff8001ab6d: cc                   	int3
ffffffff8001ab6e: cc                   	int3
ffffffff8001ab6f: cc                   	int3

ffffffff8001ab70 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5>:
ffffffff8001ab70: 53                   	push	rbx
ffffffff8001ab71: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001ab75: 4d 89 c2             	mov	r10, r8
ffffffff8001ab78: 49 89 d0             	mov	r8, rdx
ffffffff8001ab7b: 48 89 fb             	mov	rbx, rdi
ffffffff8001ab7e: 48 89 0c 24          	mov	qword ptr [rsp], rcx
ffffffff8001ab82: 4c 89 54 24 08       	mov	qword ptr [rsp + 0x8], r10
ffffffff8001ab87: 44 89 c8             	mov	eax, r9d
ffffffff8001ab8a: 48 8d 14 c5 10 00 00 00      	lea	rdx, [8*rax + 0x10]
ffffffff8001ab92: 4c 89 d0             	mov	rax, r10
ffffffff8001ab95: 48 f7 e2             	mul	rdx
ffffffff8001ab98: 70 63                	jo	0xffffffff8001abfd <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x8d>
ffffffff8001ab9a: 49 29 c8             	sub	r8, rcx
ffffffff8001ab9d: 73 07                	jae	0xffffffff8001aba6 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x36>
ffffffff8001ab9f: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001aba4: eb 0a                	jmp	0xffffffff8001abb0 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x40>
ffffffff8001aba6: 49 39 c0             	cmp	r8, rax
ffffffff8001aba9: 73 21                	jae	0xffffffff8001abcc <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x5c>
ffffffff8001abab: 31 d2                	xor	edx, edx
ffffffff8001abad: 48 89 c1             	mov	rcx, rax
ffffffff8001abb0: 48 89 13             	mov	qword ptr [rbx], rdx
ffffffff8001abb3: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001abb7: 4c 89 43 10          	mov	qword ptr [rbx + 0x10], r8
ffffffff8001abbb: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001abbf: c6 43 28 02          	mov	byte ptr [rbx + 0x28], 0x2
ffffffff8001abc3: 48 89 d8             	mov	rax, rbx
ffffffff8001abc6: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001abca: 5b                   	pop	rbx
ffffffff8001abcb: c3                   	ret
ffffffff8001abcc: 0f b6 54 24 40       	movzx	edx, byte ptr [rsp + 0x40]
ffffffff8001abd1: 48 01 ce             	add	rsi, rcx
ffffffff8001abd4: 48 89 c7             	mov	rdi, rax
ffffffff8001abd7: 48 01 cf             	add	rdi, rcx
ffffffff8001abda: 48 89 33             	mov	qword ptr [rbx], rsi
ffffffff8001abdd: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001abe1: 4c 89 53 10          	mov	qword ptr [rbx + 0x10], r10
ffffffff8001abe5: 48 89 4b 18          	mov	qword ptr [rbx + 0x18], rcx
ffffffff8001abe9: 48 89 7b 20          	mov	qword ptr [rbx + 0x20], rdi
ffffffff8001abed: 44 88 4b 28          	mov	byte ptr [rbx + 0x28], r9b
ffffffff8001abf1: 88 53 29             	mov	byte ptr [rbx + 0x29], dl
ffffffff8001abf4: 48 89 d8             	mov	rax, rbx
ffffffff8001abf7: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001abfb: 5b                   	pop	rbx
ffffffff8001abfc: c3                   	ret
ffffffff8001abfd: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001ac02: 48 89 e6             	mov	rsi, rsp
ffffffff8001ac05: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff8001ac0a: e8 31 00 00 00       	call	0xffffffff8001ac40 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>
ffffffff8001ac0f: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001ac14: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8001ac19: 48 8b 54 24 28       	mov	rdx, qword ptr [rsp + 0x28]
ffffffff8001ac1e: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001ac22: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff8001ac27: 48 89 53 10          	mov	qword ptr [rbx + 0x10], rdx
ffffffff8001ac2b: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001ac2e: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001ac32: eb 8b                	jmp	0xffffffff8001abbf <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x4f>
ffffffff8001ac34: cc                   	int3
ffffffff8001ac35: cc                   	int3
ffffffff8001ac36: cc                   	int3
ffffffff8001ac37: cc                   	int3
ffffffff8001ac38: cc                   	int3
ffffffff8001ac39: cc                   	int3
ffffffff8001ac3a: cc                   	int3
ffffffff8001ac3b: cc                   	int3
ffffffff8001ac3c: cc                   	int3
ffffffff8001ac3d: cc                   	int3
ffffffff8001ac3e: cc                   	int3
ffffffff8001ac3f: cc                   	int3

ffffffff8001ac40 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>:
ffffffff8001ac40: 53                   	push	rbx
ffffffff8001ac41: 48 81 ec c0 00 00 00 	sub	rsp, 0xc0
ffffffff8001ac48: 48 89 fb             	mov	rbx, rdi
ffffffff8001ac4b: 48 89 34 24          	mov	qword ptr [rsp], rsi
ffffffff8001ac4f: 48 c7 44 24 08 70 de 01 80   	mov	qword ptr [rsp + 0x8], -0x7ffe2190
ffffffff8001ac58: 48 89 54 24 10       	mov	qword ptr [rsp + 0x10], rdx
ffffffff8001ac5d: 48 c7 44 24 18 10 04 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfbf0
ffffffff8001ac66: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff8001ac6f: 48 c7 44 24 60 02 00 00 00   	mov	qword ptr [rsp + 0x60], 0x2
ffffffff8001ac78: 48 c7 44 24 70 00 00 00 00   	mov	qword ptr [rsp + 0x70], 0x0
ffffffff8001ac81: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8001ac8b: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8001ac90: c6 84 24 80 00 00 00 03      	mov	byte ptr [rsp + 0x80], 0x3
ffffffff8001ac98: 48 c7 84 24 88 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x88], 0x2
ffffffff8001aca4: 48 c7 84 24 98 00 00 00 02 00 00 00  	mov	qword ptr [rsp + 0x98], 0x2
ffffffff8001acb0: 48 c7 84 24 a8 00 00 00 01 00 00 00  	mov	qword ptr [rsp + 0xa8], 0x1
ffffffff8001acbc: 48 c7 84 24 b0 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 0xb0], 0x20
ffffffff8001acc8: c6 84 24 b8 00 00 00 03      	mov	byte ptr [rsp + 0xb8], 0x3
ffffffff8001acd0: 48 c7 44 24 20 c0 85 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffd7a40
ffffffff8001acd9: 48 c7 44 24 28 03 00 00 00   	mov	qword ptr [rsp + 0x28], 0x3
ffffffff8001ace2: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff8001ace7: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001acec: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff8001acf5: 48 89 e0             	mov	rax, rsp
ffffffff8001acf8: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001acfd: 48 c7 44 24 38 02 00 00 00   	mov	qword ptr [rsp + 0x38], 0x2
ffffffff8001ad06: 48 83 c7 08          	add	rdi, 0x8
ffffffff8001ad0a: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff8001ad0f: e8 9c 29 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001ad14: 48 c7 03 03 00 00 00 	mov	qword ptr [rbx], 0x3
ffffffff8001ad1b: 48 81 c4 c0 00 00 00 	add	rsp, 0xc0
ffffffff8001ad22: 5b                   	pop	rbx
ffffffff8001ad23: c3                   	ret
ffffffff8001ad24: cc                   	int3
ffffffff8001ad25: cc                   	int3
ffffffff8001ad26: cc                   	int3
ffffffff8001ad27: cc                   	int3
ffffffff8001ad28: cc                   	int3
ffffffff8001ad29: cc                   	int3
ffffffff8001ad2a: cc                   	int3
ffffffff8001ad2b: cc                   	int3
ffffffff8001ad2c: cc                   	int3
ffffffff8001ad2d: cc                   	int3
ffffffff8001ad2e: cc                   	int3
ffffffff8001ad2f: cc                   	int3

ffffffff8001ad30 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98>:
ffffffff8001ad30: 55                   	push	rbp
ffffffff8001ad31: 41 57                	push	r15
ffffffff8001ad33: 41 56                	push	r14
ffffffff8001ad35: 41 55                	push	r13
ffffffff8001ad37: 41 54                	push	r12
ffffffff8001ad39: 53                   	push	rbx
ffffffff8001ad3a: 48 81 ec 78 01 00 00 	sub	rsp, 0x178
ffffffff8001ad41: 49 89 ce             	mov	r14, rcx
ffffffff8001ad44: 48 89 d0             	mov	rax, rdx
ffffffff8001ad47: 48 89 fb             	mov	rbx, rdi
ffffffff8001ad4a: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff8001ad50: 48 29 ca             	sub	rdx, rcx
ffffffff8001ad53: 73 05                	jae	0xffffffff8001ad5a <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2a>
ffffffff8001ad55: 4d 89 f4             	mov	r12, r14
ffffffff8001ad58: eb 6f                	jmp	0xffffffff8001adc9 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x99>
ffffffff8001ad5a: 44 89 cd             	mov	ebp, r9d
ffffffff8001ad5d: 4d 89 c7             	mov	r15, r8
ffffffff8001ad60: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001ad65: 48 89 b4 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rsi
ffffffff8001ad6d: 4c 01 f6             	add	rsi, r14
ffffffff8001ad70: 40 0f b6 cd          	movzx	ecx, bpl
ffffffff8001ad74: 44 0f b6 84 24 b0 01 00 00   	movzx	r8d, byte ptr [rsp + 0x1b0]
ffffffff8001ad7d: 48 8d bc 24 20 01 00 00      	lea	rdi, [rsp + 0x120]
ffffffff8001ad85: 89 4c 24 2c          	mov	dword ptr [rsp + 0x2c], ecx
ffffffff8001ad89: 44 89 44 24 28       	mov	dword ptr [rsp + 0x28], r8d
ffffffff8001ad8e: e8 3d 06 00 00       	call	0xffffffff8001b3d0 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>
ffffffff8001ad93: 8b 84 24 20 01 00 00 	mov	eax, dword ptr [rsp + 0x120]
ffffffff8001ad9a: 4c 8b ac 24 28 01 00 00      	mov	r13, qword ptr [rsp + 0x128]
ffffffff8001ada2: 4c 8b a4 24 30 01 00 00      	mov	r12, qword ptr [rsp + 0x130]
ffffffff8001adaa: 48 8b 8c 24 38 01 00 00      	mov	rcx, qword ptr [rsp + 0x138]
ffffffff8001adb2: 48 89 4c 24 68       	mov	qword ptr [rsp + 0x68], rcx
ffffffff8001adb7: 48 8b 8c 24 40 01 00 00      	mov	rcx, qword ptr [rsp + 0x140]
ffffffff8001adbf: 48 89 4c 24 70       	mov	qword ptr [rsp + 0x70], rcx
ffffffff8001adc4: 83 f8 01             	cmp	eax, 0x1
ffffffff8001adc7: 75 42                	jne	0xffffffff8001ae0b <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xdb>
ffffffff8001adc9: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8001adce: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff8001add3: 48 89 4c 24 38       	mov	qword ptr [rsp + 0x38], rcx
ffffffff8001add8: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001addd: 4c 89 2b             	mov	qword ptr [rbx], r13
ffffffff8001ade0: 4c 89 63 08          	mov	qword ptr [rbx + 0x8], r12
ffffffff8001ade4: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001ade9: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff8001adee: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001adf2: 48 89 4b 18          	mov	qword ptr [rbx + 0x18], rcx
ffffffff8001adf6: 48 89 d8             	mov	rax, rbx
ffffffff8001adf9: 48 81 c4 78 01 00 00 	add	rsp, 0x178
ffffffff8001ae00: 5b                   	pop	rbx
ffffffff8001ae01: 41 5c                	pop	r12
ffffffff8001ae03: 41 5d                	pop	r13
ffffffff8001ae05: 41 5e                	pop	r14
ffffffff8001ae07: 41 5f                	pop	r15
ffffffff8001ae09: 5d                   	pop	rbp
ffffffff8001ae0a: c3                   	ret
ffffffff8001ae0b: 48 8b 84 24 50 01 00 00      	mov	rax, qword ptr [rsp + 0x150]
ffffffff8001ae13: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff8001ae1b: 48 8b 84 24 58 01 00 00      	mov	rax, qword ptr [rsp + 0x158]
ffffffff8001ae23: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rax
ffffffff8001ae2b: 48 8b 84 24 60 01 00 00      	mov	rax, qword ptr [rsp + 0x160]
ffffffff8001ae33: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rax
ffffffff8001ae3b: 48 8b 84 24 68 01 00 00      	mov	rax, qword ptr [rsp + 0x168]
ffffffff8001ae43: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], rax
ffffffff8001ae4b: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8001ae50: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff8001ae55: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 0xd8], rax
ffffffff8001ae5d: 48 89 8c 24 e0 00 00 00      	mov	qword ptr [rsp + 0xe0], rcx
ffffffff8001ae65: 4c 03 b4 24 70 01 00 00      	add	r14, qword ptr [rsp + 0x170]
ffffffff8001ae6d: 48 8b b4 24 48 01 00 00      	mov	rsi, qword ptr [rsp + 0x148]
ffffffff8001ae75: 4d 85 ff             	test	r15, r15
ffffffff8001ae78: 4c 0f 44 fe          	cmove	r15, rsi
ffffffff8001ae7c: 40 84 ed             	test	bpl, bpl
ffffffff8001ae7f: b8 40 00 00 00       	mov	eax, 0x40
ffffffff8001ae84: b9 28 00 00 00       	mov	ecx, 0x28
ffffffff8001ae89: 48 0f 45 c8          	cmovne	rcx, rax
ffffffff8001ae8d: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001ae92: 48 89 c2             	mov	rdx, rax
ffffffff8001ae95: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8001ae99: 74 2a                	je	0xffffffff8001aec5 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x195>
ffffffff8001ae9b: 31 d2                	xor	edx, edx
ffffffff8001ae9d: 48 f7 f1             	div	rcx
ffffffff8001aea0: 49 39 c7             	cmp	r15, rax
ffffffff8001aea3: 76 29                	jbe	0xffffffff8001aece <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x19e>
ffffffff8001aea5: 48 c7 03 06 00 00 00 	mov	qword ptr [rbx], 0x6
ffffffff8001aeac: 48 c7 43 08 a8 86 02 80      	mov	qword ptr [rbx + 0x8], -0x7ffd7958
ffffffff8001aeb4: 48 c7 43 10 0f 00 00 00      	mov	qword ptr [rbx + 0x10], 0xf
ffffffff8001aebc: 4c 89 7b 18          	mov	qword ptr [rbx + 0x18], r15
ffffffff8001aec0: e9 31 ff ff ff       	jmp	0xffffffff8001adf6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff8001aec5: 31 d2                	xor	edx, edx
ffffffff8001aec7: f7 f1                	div	ecx
ffffffff8001aec9: 49 39 c7             	cmp	r15, rax
ffffffff8001aecc: 77 d7                	ja	0xffffffff8001aea5 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x175>
ffffffff8001aece: 48 89 b4 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], rsi
ffffffff8001aed6: 31 ff                	xor	edi, edi
ffffffff8001aed8: b9 48 00 00 00       	mov	ecx, 0x48
ffffffff8001aedd: 4c 89 f8             	mov	rax, r15
ffffffff8001aee0: 48 f7 e1             	mul	rcx
ffffffff8001aee3: 48 89 c5             	mov	rbp, rax
ffffffff8001aee6: 0f 80 8a 03 00 00    	jo	0xffffffff8001b276 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff8001aeec: 48 b8 f8 ff ff ff ff ff ff 7f	movabs	rax, 0x7ffffffffffffff8
ffffffff8001aef6: 48 39 c5             	cmp	rbp, rax
ffffffff8001aef9: 0f 87 77 03 00 00    	ja	0xffffffff8001b276 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff8001aeff: 48 85 ed             	test	rbp, rbp
ffffffff8001af02: 74 41                	je	0xffffffff8001af45 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x215>
ffffffff8001af04: 0f b6 05 d6 02 01 00 	movzx	eax, byte ptr [rip + 0x102d6] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001af0b: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001af10: 48 89 ef             	mov	rdi, rbp
ffffffff8001af13: e8 f8 df fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001af18: bf 08 00 00 00       	mov	edi, 0x8
ffffffff8001af1d: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff8001af22: 48 85 c0             	test	rax, rax
ffffffff8001af25: 0f 84 4b 03 00 00    	je	0xffffffff8001b276 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff8001af2b: 4c 89 7c 24 08       	mov	qword ptr [rsp + 0x8], r15
ffffffff8001af30: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001af35: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8001af3e: 4d 85 ff             	test	r15, r15
ffffffff8001af41: 75 38                	jne	0xffffffff8001af7b <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x24b>
ffffffff8001af43: eb 1b                	jmp	0xffffffff8001af60 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x230>
ffffffff8001af45: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001af4e: 48 c7 44 24 10 08 00 00 00   	mov	qword ptr [rsp + 0x10], 0x8
ffffffff8001af57: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8001af60: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001af65: 48 c7 c6 78 86 02 80 	mov	rsi, -0x7ffd7988
ffffffff8001af6c: e8 8f f6 ff ff       	call	0xffffffff8001a600 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>
ffffffff8001af71: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff8001af76: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001af7b: 4c 89 28             	mov	qword ptr [rax], r13
ffffffff8001af7e: 4c 89 60 08          	mov	qword ptr [rax + 0x8], r12
ffffffff8001af82: 48 8b 8c 24 d8 00 00 00      	mov	rcx, qword ptr [rsp + 0xd8]
ffffffff8001af8a: 48 8b 94 24 e0 00 00 00      	mov	rdx, qword ptr [rsp + 0xe0]
ffffffff8001af92: 48 89 48 10          	mov	qword ptr [rax + 0x10], rcx
ffffffff8001af96: 48 89 50 18          	mov	qword ptr [rax + 0x18], rdx
ffffffff8001af9a: 48 8b 8c 24 a0 00 00 00      	mov	rcx, qword ptr [rsp + 0xa0]
ffffffff8001afa2: 48 89 48 20          	mov	qword ptr [rax + 0x20], rcx
ffffffff8001afa6: 48 8b 8c 24 b8 00 00 00      	mov	rcx, qword ptr [rsp + 0xb8]
ffffffff8001afae: 48 8b 94 24 c0 00 00 00      	mov	rdx, qword ptr [rsp + 0xc0]
ffffffff8001afb6: 48 89 48 28          	mov	qword ptr [rax + 0x28], rcx
ffffffff8001afba: 48 89 50 30          	mov	qword ptr [rax + 0x30], rdx
ffffffff8001afbe: 48 8b 8c 24 c8 00 00 00      	mov	rcx, qword ptr [rsp + 0xc8]
ffffffff8001afc6: 48 89 48 38          	mov	qword ptr [rax + 0x38], rcx
ffffffff8001afca: 48 8b 8c 24 d0 00 00 00      	mov	rcx, qword ptr [rsp + 0xd0]
ffffffff8001afd2: 48 89 48 40          	mov	qword ptr [rax + 0x40], rcx
ffffffff8001afd6: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff8001afdf: 49 83 ff 02          	cmp	r15, 0x2
ffffffff8001afe3: 0f 82 f1 01 00 00    	jb	0xffffffff8001b1da <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4aa>
ffffffff8001afe9: 4c 8d a4 24 38 01 00 00      	lea	r12, [rsp + 0x138]
ffffffff8001aff1: 49 ff cf             	dec	r15
ffffffff8001aff4: 48 89 9c 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rbx
ffffffff8001affc: e9 9a 00 00 00       	jmp	0xffffffff8001b09b <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x36b>
ffffffff8001b001: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8001b010: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001b015: 48 8d 0c db          	lea	rcx, [rbx + 8*rbx]
ffffffff8001b019: 4c 89 2c c8          	mov	qword ptr [rax + 8*rcx], r13
ffffffff8001b01d: 48 89 6c c8 08       	mov	qword ptr [rax + 8*rcx + 0x8], rbp
ffffffff8001b022: 48 8b 94 24 e8 00 00 00      	mov	rdx, qword ptr [rsp + 0xe8]
ffffffff8001b02a: 48 8b b4 24 f0 00 00 00      	mov	rsi, qword ptr [rsp + 0xf0]
ffffffff8001b032: 48 89 54 c8 10       	mov	qword ptr [rax + 8*rcx + 0x10], rdx
ffffffff8001b037: 48 89 74 c8 18       	mov	qword ptr [rax + 8*rcx + 0x18], rsi
ffffffff8001b03c: 48 8b 94 24 f8 00 00 00      	mov	rdx, qword ptr [rsp + 0xf8]
ffffffff8001b044: 48 89 54 c8 20       	mov	qword ptr [rax + 8*rcx + 0x20], rdx
ffffffff8001b049: 48 8b 94 24 00 01 00 00      	mov	rdx, qword ptr [rsp + 0x100]
ffffffff8001b051: 48 89 54 c8 28       	mov	qword ptr [rax + 8*rcx + 0x28], rdx
ffffffff8001b056: 48 8b 94 24 08 01 00 00      	mov	rdx, qword ptr [rsp + 0x108]
ffffffff8001b05e: 48 89 54 c8 30       	mov	qword ptr [rax + 8*rcx + 0x30], rdx
ffffffff8001b063: 48 8b 94 24 10 01 00 00      	mov	rdx, qword ptr [rsp + 0x110]
ffffffff8001b06b: 48 89 54 c8 38       	mov	qword ptr [rax + 8*rcx + 0x38], rdx
ffffffff8001b070: 48 8b 94 24 18 01 00 00      	mov	rdx, qword ptr [rsp + 0x118]
ffffffff8001b078: 48 89 54 c8 40       	mov	qword ptr [rax + 8*rcx + 0x40], rdx
ffffffff8001b07d: 48 ff c3             	inc	rbx
ffffffff8001b080: 48 89 5c 24 18       	mov	qword ptr [rsp + 0x18], rbx
ffffffff8001b085: 49 ff cf             	dec	r15
ffffffff8001b088: 48 8b 9c 24 a8 00 00 00      	mov	rbx, qword ptr [rsp + 0xa8]
ffffffff8001b090: 48 8b 74 24 20       	mov	rsi, qword ptr [rsp + 0x20]
ffffffff8001b095: 0f 84 3f 01 00 00    	je	0xffffffff8001b1da <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4aa>
ffffffff8001b09b: 48 89 f2             	mov	rdx, rsi
ffffffff8001b09e: 4c 29 f2             	sub	rdx, r14
ffffffff8001b0a1: 0f 82 5a 01 00 00    	jb	0xffffffff8001b201 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4d1>
ffffffff8001b0a7: 48 8b 84 24 b0 00 00 00      	mov	rax, qword ptr [rsp + 0xb0]
ffffffff8001b0af: 4a 8d 34 30          	lea	rsi, [rax + r14]
ffffffff8001b0b3: 48 8d bc 24 20 01 00 00      	lea	rdi, [rsp + 0x120]
ffffffff8001b0bb: 8b 4c 24 2c          	mov	ecx, dword ptr [rsp + 0x2c]
ffffffff8001b0bf: 44 8b 44 24 28       	mov	r8d, dword ptr [rsp + 0x28]
ffffffff8001b0c4: e8 07 03 00 00       	call	0xffffffff8001b3d0 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>
ffffffff8001b0c9: 4c 8b ac 24 28 01 00 00      	mov	r13, qword ptr [rsp + 0x128]
ffffffff8001b0d1: 48 8b ac 24 30 01 00 00      	mov	rbp, qword ptr [rsp + 0x130]
ffffffff8001b0d9: 83 bc 24 20 01 00 00 01      	cmp	dword ptr [rsp + 0x120], 0x1
ffffffff8001b0e1: 0f 84 22 01 00 00    	je	0xffffffff8001b209 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4d9>
ffffffff8001b0e7: 49 8b 44 24 30       	mov	rax, qword ptr [r12 + 0x30]
ffffffff8001b0ec: 48 89 84 24 98 00 00 00      	mov	qword ptr [rsp + 0x98], rax
ffffffff8001b0f4: 49 8b 4c 24 28       	mov	rcx, qword ptr [r12 + 0x28]
ffffffff8001b0f9: 48 89 8c 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rcx
ffffffff8001b101: 49 8b 54 24 20       	mov	rdx, qword ptr [r12 + 0x20]
ffffffff8001b106: 48 89 94 24 88 00 00 00      	mov	qword ptr [rsp + 0x88], rdx
ffffffff8001b10e: 49 8b 74 24 18       	mov	rsi, qword ptr [r12 + 0x18]
ffffffff8001b113: 48 89 b4 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rsi
ffffffff8001b11b: 49 8b 7c 24 10       	mov	rdi, qword ptr [r12 + 0x10]
ffffffff8001b120: 48 89 7c 24 78       	mov	qword ptr [rsp + 0x78], rdi
ffffffff8001b125: 4d 8b 04 24          	mov	r8, qword ptr [r12]
ffffffff8001b129: 4d 8b 4c 24 08       	mov	r9, qword ptr [r12 + 0x8]
ffffffff8001b12e: 4c 03 b4 24 70 01 00 00      	add	r14, qword ptr [rsp + 0x170]
ffffffff8001b136: 4c 89 44 24 30       	mov	qword ptr [rsp + 0x30], r8
ffffffff8001b13b: 4c 89 4c 24 38       	mov	qword ptr [rsp + 0x38], r9
ffffffff8001b140: 48 89 7c 24 40       	mov	qword ptr [rsp + 0x40], rdi
ffffffff8001b145: 48 89 74 24 48       	mov	qword ptr [rsp + 0x48], rsi
ffffffff8001b14a: 48 89 54 24 50       	mov	qword ptr [rsp + 0x50], rdx
ffffffff8001b14f: 48 89 4c 24 58       	mov	qword ptr [rsp + 0x58], rcx
ffffffff8001b154: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8001b159: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8001b15e: 48 89 84 24 18 01 00 00      	mov	qword ptr [rsp + 0x118], rax
ffffffff8001b166: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff8001b16b: 48 89 84 24 10 01 00 00      	mov	qword ptr [rsp + 0x110], rax
ffffffff8001b173: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff8001b178: 48 89 84 24 08 01 00 00      	mov	qword ptr [rsp + 0x108], rax
ffffffff8001b180: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8001b185: 48 89 84 24 00 01 00 00      	mov	qword ptr [rsp + 0x100], rax
ffffffff8001b18d: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001b192: 48 89 84 24 f8 00 00 00      	mov	qword ptr [rsp + 0xf8], rax
ffffffff8001b19a: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001b19f: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff8001b1a4: 48 89 8c 24 f0 00 00 00      	mov	qword ptr [rsp + 0xf0], rcx
ffffffff8001b1ac: 48 89 84 24 e8 00 00 00      	mov	qword ptr [rsp + 0xe8], rax
ffffffff8001b1b4: 48 8b 5c 24 18       	mov	rbx, qword ptr [rsp + 0x18]
ffffffff8001b1b9: 48 3b 5c 24 08       	cmp	rbx, qword ptr [rsp + 0x8]
ffffffff8001b1be: 0f 85 4c fe ff ff    	jne	0xffffffff8001b010 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2e0>
ffffffff8001b1c4: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b1c9: 48 c7 c6 90 86 02 80 	mov	rsi, -0x7ffd7970
ffffffff8001b1d0: e8 2b f4 ff ff       	call	0xffffffff8001a600 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>
ffffffff8001b1d5: e9 36 fe ff ff       	jmp	0xffffffff8001b010 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2e0>
ffffffff8001b1da: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001b1df: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001b1e3: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001b1e8: 48 8b 4c 24 10       	mov	rcx, qword ptr [rsp + 0x10]
ffffffff8001b1ed: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001b1f1: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001b1f5: 48 c7 03 07 00 00 00 	mov	qword ptr [rbx], 0x7
ffffffff8001b1fc: e9 f5 fb ff ff       	jmp	0xffffffff8001adf6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff8001b201: 41 bd 01 00 00 00    	mov	r13d, 0x1
ffffffff8001b207: eb 16                	jmp	0xffffffff8001b21f <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4ef>
ffffffff8001b209: 49 8b 04 24          	mov	rax, qword ptr [r12]
ffffffff8001b20d: 49 8b 4c 24 08       	mov	rcx, qword ptr [r12 + 0x8]
ffffffff8001b212: 48 89 4c 24 70       	mov	qword ptr [rsp + 0x70], rcx
ffffffff8001b217: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8001b21c: 49 89 ee             	mov	r14, rbp
ffffffff8001b21f: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8001b224: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff8001b229: 48 89 4c 24 38       	mov	qword ptr [rsp + 0x38], rcx
ffffffff8001b22e: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001b233: 4c 89 2b             	mov	qword ptr [rbx], r13
ffffffff8001b236: 4c 89 73 08          	mov	qword ptr [rbx + 0x8], r14
ffffffff8001b23a: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001b23f: 48 8b 4c 24 38       	mov	rcx, qword ptr [rsp + 0x38]
ffffffff8001b244: 48 89 4b 18          	mov	qword ptr [rbx + 0x18], rcx
ffffffff8001b248: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001b24c: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001b251: 48 85 c0             	test	rax, rax
ffffffff8001b254: 0f 84 9c fb ff ff    	je	0xffffffff8001adf6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff8001b25a: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8001b25f: 48 c1 e0 03          	shl	rax, 0x3
ffffffff8001b263: 48 8d 34 c0          	lea	rsi, [rax + 8*rax]
ffffffff8001b267: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001b26c: e8 ef dc fe ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001b271: e9 80 fb ff ff       	jmp	0xffffffff8001adf6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff8001b276: 48 89 ee             	mov	rsi, rbp
ffffffff8001b279: 48 c7 c2 60 86 02 80 	mov	rdx, -0x7ffd79a0
ffffffff8001b280: e8 12 24 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001b285: cc                   	int3
ffffffff8001b286: cc                   	int3
ffffffff8001b287: cc                   	int3
ffffffff8001b288: cc                   	int3
ffffffff8001b289: cc                   	int3
ffffffff8001b28a: cc                   	int3
ffffffff8001b28b: cc                   	int3
ffffffff8001b28c: cc                   	int3
ffffffff8001b28d: cc                   	int3
ffffffff8001b28e: cc                   	int3
ffffffff8001b28f: cc                   	int3

ffffffff8001b290 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>:
ffffffff8001b290: 53                   	push	rbx
ffffffff8001b291: 48 81 ec 80 00 00 00 	sub	rsp, 0x80
ffffffff8001b298: 48 89 fb             	mov	rbx, rdi
ffffffff8001b29b: 83 7e 38 08          	cmp	dword ptr [rsi + 0x38], 0x8
ffffffff8001b29f: 0f 94 c0             	sete	al
ffffffff8001b2a2: 48 8b 4e 20          	mov	rcx, qword ptr [rsi + 0x20]
ffffffff8001b2a6: 48 85 c9             	test	rcx, rcx
ffffffff8001b2a9: 40 0f 94 c7          	sete	dil
ffffffff8001b2ad: 40 08 c7             	or	dil, al
ffffffff8001b2b0: 74 13                	je	0xffffffff8001b2c5 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0x35>
ffffffff8001b2b2: 48 c7 03 07 00 00 00 	mov	qword ptr [rbx], 0x7
ffffffff8001b2b9: 48 89 d8             	mov	rax, rbx
ffffffff8001b2bc: 48 81 c4 80 00 00 00 	add	rsp, 0x80
ffffffff8001b2c3: 5b                   	pop	rbx
ffffffff8001b2c4: c3                   	ret
ffffffff8001b2c5: 48 8d 46 20          	lea	rax, [rsi + 0x20]
ffffffff8001b2c9: 48 8b 7e 18          	mov	rdi, qword ptr [rsi + 0x18]
ffffffff8001b2cd: 48 01 cf             	add	rdi, rcx
ffffffff8001b2d0: 41 0f 92 c0          	setb	r8b
ffffffff8001b2d4: 0f 92 44 24 0e       	setb	byte ptr [rsp + 0xe]
ffffffff8001b2d9: 48 39 d7             	cmp	rdi, rdx
ffffffff8001b2dc: 0f 97 c2             	seta	dl
ffffffff8001b2df: 44 08 c2             	or	dl, r8b
ffffffff8001b2e2: 74 4c                	je	0xffffffff8001b330 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0xa0>
ffffffff8001b2e4: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff8001b2e9: 48 83 c6 18          	add	rsi, 0x18
ffffffff8001b2ed: 48 c7 44 24 18 10 04 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfbf0
ffffffff8001b2f6: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff8001b2fb: 48 c7 44 24 28 10 04 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdfbf0
ffffffff8001b304: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001b309: 48 c7 44 24 38 10 04 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdfbf0
ffffffff8001b312: 48 8d 44 24 0e       	lea	rax, [rsp + 0xe]
ffffffff8001b317: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001b31c: 48 c7 44 24 48 60 ef 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe10a0
ffffffff8001b325: 48 c7 44 24 50 18 87 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffd78e8
ffffffff8001b32e: eb 59                	jmp	0xffffffff8001b389 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0xf9>
ffffffff8001b330: 48 03 4e 10          	add	rcx, qword ptr [rsi + 0x10]
ffffffff8001b334: 0f 92 44 24 0f       	setb	byte ptr [rsp + 0xf]
ffffffff8001b339: 0f 83 73 ff ff ff    	jae	0xffffffff8001b2b2 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0x22>
ffffffff8001b33f: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff8001b344: 48 83 c6 10          	add	rsi, 0x10
ffffffff8001b348: 48 c7 44 24 18 10 04 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfbf0
ffffffff8001b351: 48 89 74 24 20       	mov	qword ptr [rsp + 0x20], rsi
ffffffff8001b356: 48 c7 44 24 28 10 04 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdfbf0
ffffffff8001b35f: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001b364: 48 c7 44 24 38 10 04 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdfbf0
ffffffff8001b36d: 48 8d 44 24 0f       	lea	rax, [rsp + 0xf]
ffffffff8001b372: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001b377: 48 c7 44 24 48 60 ef 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe10a0
ffffffff8001b380: 48 c7 44 24 50 c8 86 02 80   	mov	qword ptr [rsp + 0x50], -0x7ffd7938
ffffffff8001b389: 48 c7 44 24 58 04 00 00 00   	mov	qword ptr [rsp + 0x58], 0x4
ffffffff8001b392: 48 c7 44 24 70 00 00 00 00   	mov	qword ptr [rsp + 0x70], 0x0
ffffffff8001b39b: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8001b3a0: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8001b3a5: 48 c7 44 24 68 04 00 00 00   	mov	qword ptr [rsp + 0x68], 0x4
ffffffff8001b3ae: 48 8d 7b 08          	lea	rdi, [rbx + 0x8]
ffffffff8001b3b2: 48 8d 74 24 50       	lea	rsi, [rsp + 0x50]
ffffffff8001b3b7: e8 f4 22 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001b3bc: 48 c7 03 03 00 00 00 	mov	qword ptr [rbx], 0x3
ffffffff8001b3c3: 48 89 d8             	mov	rax, rbx
ffffffff8001b3c6: 48 81 c4 80 00 00 00 	add	rsp, 0x80
ffffffff8001b3cd: 5b                   	pop	rbx
ffffffff8001b3ce: c3                   	ret
ffffffff8001b3cf: cc                   	int3

ffffffff8001b3d0 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>:
ffffffff8001b3d0: 41 57                	push	r15
ffffffff8001b3d2: 41 56                	push	r14
ffffffff8001b3d4: 53                   	push	rbx
ffffffff8001b3d5: 48 83 ec 50          	sub	rsp, 0x50
ffffffff8001b3d9: 48 89 fb             	mov	rbx, rdi
ffffffff8001b3dc: 85 c9                	test	ecx, ecx
ffffffff8001b3de: 74 4b                	je	0xffffffff8001b42b <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x5b>
ffffffff8001b3e0: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8001b3e8: 45 0f b6 c0          	movzx	r8d, r8b
ffffffff8001b3ec: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b3f1: 48 89 e1             	mov	rcx, rsp
ffffffff8001b3f4: e8 37 e3 ff ff       	call	0xffffffff80019730 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE>
ffffffff8001b3f9: 8b 74 24 10          	mov	esi, dword ptr [rsp + 0x10]
ffffffff8001b3fd: 8b 44 24 14          	mov	eax, dword ptr [rsp + 0x14]
ffffffff8001b401: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8001b406: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff8001b40b: 48 8b 7c 24 28       	mov	rdi, qword ptr [rsp + 0x28]
ffffffff8001b410: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff8001b415: 74 62                	je	0xffffffff8001b479 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xa9>
ffffffff8001b417: 89 73 08             	mov	dword ptr [rbx + 0x8], esi
ffffffff8001b41a: 89 43 0c             	mov	dword ptr [rbx + 0xc], eax
ffffffff8001b41d: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001b421: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001b425: 48 89 7b 20          	mov	qword ptr [rbx + 0x20], rdi
ffffffff8001b429: eb 44                	jmp	0xffffffff8001b46f <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x9f>
ffffffff8001b42b: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8001b433: 45 0f b6 c0          	movzx	r8d, r8b
ffffffff8001b437: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b43c: 48 89 e1             	mov	rcx, rsp
ffffffff8001b43f: e8 6c e0 ff ff       	call	0xffffffff800194b0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE>
ffffffff8001b444: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff8001b449: 74 4f                	je	0xffffffff8001b49a <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xca>
ffffffff8001b44b: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001b450: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8001b455: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff8001b45a: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001b45f: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001b463: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001b467: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001b46b: 48 89 73 20          	mov	qword ptr [rbx + 0x20], rsi
ffffffff8001b46f: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001b474: e9 83 00 00 00       	jmp	0xffffffff8001b4fc <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x12c>
ffffffff8001b479: 4c 8b 54 24 30       	mov	r10, qword ptr [rsp + 0x30]
ffffffff8001b47e: 44 8b 44 24 38       	mov	r8d, dword ptr [rsp + 0x38]
ffffffff8001b483: 44 8b 4c 24 3c       	mov	r9d, dword ptr [rsp + 0x3c]
ffffffff8001b488: 4c 8b 5c 24 40       	mov	r11, qword ptr [rsp + 0x40]
ffffffff8001b48d: 4c 8b 7c 24 48       	mov	r15, qword ptr [rsp + 0x48]
ffffffff8001b492: 41 be 40 00 00 00    	mov	r14d, 0x40
ffffffff8001b498: eb 33                	jmp	0xffffffff8001b4cd <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xfd>
ffffffff8001b49a: 8b 74 24 0c          	mov	esi, dword ptr [rsp + 0xc]
ffffffff8001b49e: 8b 44 24 10          	mov	eax, dword ptr [rsp + 0x10]
ffffffff8001b4a2: 8b 4c 24 14          	mov	ecx, dword ptr [rsp + 0x14]
ffffffff8001b4a6: 8b 54 24 18          	mov	edx, dword ptr [rsp + 0x18]
ffffffff8001b4aa: 8b 7c 24 1c          	mov	edi, dword ptr [rsp + 0x1c]
ffffffff8001b4ae: 44 8b 54 24 20       	mov	r10d, dword ptr [rsp + 0x20]
ffffffff8001b4b3: 44 8b 44 24 24       	mov	r8d, dword ptr [rsp + 0x24]
ffffffff8001b4b8: 44 8b 4c 24 28       	mov	r9d, dword ptr [rsp + 0x28]
ffffffff8001b4bd: 44 8b 5c 24 2c       	mov	r11d, dword ptr [rsp + 0x2c]
ffffffff8001b4c2: 44 8b 7c 24 30       	mov	r15d, dword ptr [rsp + 0x30]
ffffffff8001b4c7: 41 be 28 00 00 00    	mov	r14d, 0x28
ffffffff8001b4cd: 89 f6                	mov	esi, esi
ffffffff8001b4cf: 48 89 73 08          	mov	qword ptr [rbx + 0x8], rsi
ffffffff8001b4d3: 48 89 4b 10          	mov	qword ptr [rbx + 0x10], rcx
ffffffff8001b4d7: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001b4db: 48 89 7b 20          	mov	qword ptr [rbx + 0x20], rdi
ffffffff8001b4df: 4c 89 53 28          	mov	qword ptr [rbx + 0x28], r10
ffffffff8001b4e3: 4c 89 5b 30          	mov	qword ptr [rbx + 0x30], r11
ffffffff8001b4e7: 4c 89 7b 38          	mov	qword ptr [rbx + 0x38], r15
ffffffff8001b4eb: 89 43 40             	mov	dword ptr [rbx + 0x40], eax
ffffffff8001b4ee: 44 89 43 44          	mov	dword ptr [rbx + 0x44], r8d
ffffffff8001b4f2: 44 89 4b 48          	mov	dword ptr [rbx + 0x48], r9d
ffffffff8001b4f6: 4c 89 73 50          	mov	qword ptr [rbx + 0x50], r14
ffffffff8001b4fa: 31 c0                	xor	eax, eax
ffffffff8001b4fc: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001b4ff: 48 89 d8             	mov	rax, rbx
ffffffff8001b502: 48 83 c4 50          	add	rsp, 0x50
ffffffff8001b506: 5b                   	pop	rbx
ffffffff8001b507: 41 5e                	pop	r14
ffffffff8001b509: 41 5f                	pop	r15
ffffffff8001b50b: c3                   	ret
ffffffff8001b50c: cc                   	int3
ffffffff8001b50d: cc                   	int3
ffffffff8001b50e: cc                   	int3
ffffffff8001b50f: cc                   	int3

ffffffff8001b510 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045>:
ffffffff8001b510: 55                   	push	rbp
ffffffff8001b511: 41 57                	push	r15
ffffffff8001b513: 41 56                	push	r14
ffffffff8001b515: 41 55                	push	r13
ffffffff8001b517: 41 54                	push	r12
ffffffff8001b519: 53                   	push	rbx
ffffffff8001b51a: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8001b51e: 48 89 f3             	mov	rbx, rsi
ffffffff8001b521: 0f b6 4f 58          	movzx	ecx, byte ptr [rdi + 0x58]
ffffffff8001b525: 80 f9 03             	cmp	cl, 0x3
ffffffff8001b528: 0f 84 27 01 00 00    	je	0xffffffff8001b655 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff8001b52e: 0f b6 47 28          	movzx	eax, byte ptr [rdi + 0x28]
ffffffff8001b532: 3c 02                	cmp	al, 0x2
ffffffff8001b534: 0f 84 90 00 00 00    	je	0xffffffff8001b5ca <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xba>
ffffffff8001b53a: 4c 8b 6f 20          	mov	r13, qword ptr [rdi + 0x20]
ffffffff8001b53e: 4c 2b 6f 18          	sub	r13, qword ptr [rdi + 0x18]
ffffffff8001b542: 0f 86 82 00 00 00    	jbe	0xffffffff8001b5ca <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xba>
ffffffff8001b548: 88 4c 24 38          	mov	byte ptr [rsp + 0x38], cl
ffffffff8001b54c: 4c 8b 7f 08          	mov	r15, qword ptr [rdi + 0x8]
ffffffff8001b550: 4c 8b 67 10          	mov	r12, qword ptr [rdi + 0x10]
ffffffff8001b554: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001b559: 48 89 4c 24 40       	mov	qword ptr [rsp + 0x40], rcx
ffffffff8001b55e: 4d 39 fc             	cmp	r12, r15
ffffffff8001b561: 0f 87 28 02 00 00    	ja	0xffffffff8001b78f <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x27f>
ffffffff8001b567: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff8001b56a: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8001b56e: 0f b7 4f 29          	movzx	ecx, word ptr [rdi + 0x29]
ffffffff8001b572: c1 e1 08             	shl	ecx, 0x8
ffffffff8001b575: 0f b6 e8             	movzx	ebp, al
ffffffff8001b578: 09 cd                	or	ebp, ecx
ffffffff8001b57a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001b580: 4c 89 fa             	mov	rdx, r15
ffffffff8001b583: 4c 29 e2             	sub	rdx, r12
ffffffff8001b586: 4b 8d 34 26          	lea	rsi, [r14 + r12]
ffffffff8001b58a: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b58f: 89 e9                	mov	ecx, ebp
ffffffff8001b591: e8 ea 0a 00 00       	call	0xffffffff8001c080 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff8001b596: 83 7c 24 08 02       	cmp	dword ptr [rsp + 0x8], 0x2
ffffffff8001b59b: 0f 84 73 01 00 00    	je	0xffffffff8001b714 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x204>
ffffffff8001b5a1: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b5a6: 48 39 d8             	cmp	rax, rbx
ffffffff8001b5a9: 48 0f 47 d8          	cmova	rbx, rax
ffffffff8001b5ad: 49 ff cd             	dec	r13
ffffffff8001b5b0: 74 0f                	je	0xffffffff8001b5c1 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xb1>
ffffffff8001b5b2: 4c 03 64 24 30       	add	r12, qword ptr [rsp + 0x30]
ffffffff8001b5b7: 4d 39 fc             	cmp	r12, r15
ffffffff8001b5ba: 76 c4                	jbe	0xffffffff8001b580 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x70>
ffffffff8001b5bc: e9 67 01 00 00       	jmp	0xffffffff8001b728 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x218>
ffffffff8001b5c1: 48 8b 3c 24          	mov	rdi, qword ptr [rsp]
ffffffff8001b5c5: 0f b6 4c 24 38       	movzx	ecx, byte ptr [rsp + 0x38]
ffffffff8001b5ca: 80 f9 02             	cmp	cl, 0x2
ffffffff8001b5cd: 0f 84 82 00 00 00    	je	0xffffffff8001b655 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff8001b5d3: 4c 8b 6f 50          	mov	r13, qword ptr [rdi + 0x50]
ffffffff8001b5d7: 4c 2b 6f 48          	sub	r13, qword ptr [rdi + 0x48]
ffffffff8001b5db: 76 78                	jbe	0xffffffff8001b655 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff8001b5dd: 4c 8b 7f 38          	mov	r15, qword ptr [rdi + 0x38]
ffffffff8001b5e1: 4c 8b 67 40          	mov	r12, qword ptr [rdi + 0x40]
ffffffff8001b5e5: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001b5ea: 4d 39 fc             	cmp	r12, r15
ffffffff8001b5ed: 0f 87 9e 01 00 00    	ja	0xffffffff8001b791 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x281>
ffffffff8001b5f3: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001b5f8: 4c 8b 77 30          	mov	r14, qword ptr [rdi + 0x30]
ffffffff8001b5fc: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8001b600: 0f b7 47 59          	movzx	eax, word ptr [rdi + 0x59]
ffffffff8001b604: c1 e0 08             	shl	eax, 0x8
ffffffff8001b607: 0f b6 e9             	movzx	ebp, cl
ffffffff8001b60a: 09 c5                	or	ebp, eax
ffffffff8001b60c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8001b610: 4c 89 fa             	mov	rdx, r15
ffffffff8001b613: 4c 29 e2             	sub	rdx, r12
ffffffff8001b616: 4b 8d 34 26          	lea	rsi, [r14 + r12]
ffffffff8001b61a: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b61f: 89 e9                	mov	ecx, ebp
ffffffff8001b621: e8 5a 0a 00 00       	call	0xffffffff8001c080 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff8001b626: 83 7c 24 08 02       	cmp	dword ptr [rsp + 0x8], 0x2
ffffffff8001b62b: 0f 84 03 01 00 00    	je	0xffffffff8001b734 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x224>
ffffffff8001b631: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b636: 48 39 d8             	cmp	rax, rbx
ffffffff8001b639: 48 0f 47 d8          	cmova	rbx, rax
ffffffff8001b63d: 49 ff cd             	dec	r13
ffffffff8001b640: 74 0f                	je	0xffffffff8001b651 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x141>
ffffffff8001b642: 4c 03 64 24 30       	add	r12, qword ptr [rsp + 0x30]
ffffffff8001b647: 4d 39 fc             	cmp	r12, r15
ffffffff8001b64a: 76 c4                	jbe	0xffffffff8001b610 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x100>
ffffffff8001b64c: e9 f7 00 00 00       	jmp	0xffffffff8001b748 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x238>
ffffffff8001b651: 48 8b 3c 24          	mov	rdi, qword ptr [rsp]
ffffffff8001b655: 80 bf 88 00 00 00 02 	cmp	byte ptr [rdi + 0x88], 0x2
ffffffff8001b65c: 0f 84 78 00 00 00    	je	0xffffffff8001b6da <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff8001b662: 4c 8b af 80 00 00 00 	mov	r13, qword ptr [rdi + 0x80]
ffffffff8001b669: 4c 2b 6f 78          	sub	r13, qword ptr [rdi + 0x78]
ffffffff8001b66d: 76 6b                	jbe	0xffffffff8001b6da <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff8001b66f: 4c 8b 67 68          	mov	r12, qword ptr [rdi + 0x68]
ffffffff8001b673: 4c 8b 7f 70          	mov	r15, qword ptr [rdi + 0x70]
ffffffff8001b677: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001b67c: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001b680: 4d 39 e7             	cmp	r15, r12
ffffffff8001b683: 0f 87 01 01 00 00    	ja	0xffffffff8001b78a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x27a>
ffffffff8001b689: 4c 8b 77 60          	mov	r14, qword ptr [rdi + 0x60]
ffffffff8001b68d: 0f b7 87 88 00 00 00 	movzx	eax, word ptr [rdi + 0x88]
ffffffff8001b694: 0f b6 af 8a 00 00 00 	movzx	ebp, byte ptr [rdi + 0x8a]
ffffffff8001b69b: c1 e5 10             	shl	ebp, 0x10
ffffffff8001b69e: 09 c5                	or	ebp, eax
ffffffff8001b6a0: 4c 89 e2             	mov	rdx, r12
ffffffff8001b6a3: 4c 29 fa             	sub	rdx, r15
ffffffff8001b6a6: 4b 8d 34 3e          	lea	rsi, [r14 + r15]
ffffffff8001b6aa: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b6af: 89 e9                	mov	ecx, ebp
ffffffff8001b6b1: e8 ca 09 00 00       	call	0xffffffff8001c080 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff8001b6b6: 83 7c 24 08 02       	cmp	dword ptr [rsp + 0x8], 0x2
ffffffff8001b6bb: 74 2f                	je	0xffffffff8001b6ec <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1dc>
ffffffff8001b6bd: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b6c2: 48 39 d8             	cmp	rax, rbx
ffffffff8001b6c5: 48 0f 47 d8          	cmova	rbx, rax
ffffffff8001b6c9: 49 ff cd             	dec	r13
ffffffff8001b6cc: 74 0c                	je	0xffffffff8001b6da <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff8001b6ce: 4c 03 7c 24 30       	add	r15, qword ptr [rsp + 0x30]
ffffffff8001b6d3: 4d 39 e7             	cmp	r15, r12
ffffffff8001b6d6: 76 c8                	jbe	0xffffffff8001b6a0 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x190>
ffffffff8001b6d8: eb 25                	jmp	0xffffffff8001b6ff <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ef>
ffffffff8001b6da: 48 89 d8             	mov	rax, rbx
ffffffff8001b6dd: 48 83 c4 48          	add	rsp, 0x48
ffffffff8001b6e1: 5b                   	pop	rbx
ffffffff8001b6e2: 41 5c                	pop	r12
ffffffff8001b6e4: 41 5d                	pop	r13
ffffffff8001b6e6: 41 5e                	pop	r14
ffffffff8001b6e8: 41 5f                	pop	r15
ffffffff8001b6ea: 5d                   	pop	rbp
ffffffff8001b6eb: c3                   	ret
ffffffff8001b6ec: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001b6f1: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001b6f5: 4c 8b 7c 24 18       	mov	r15, qword ptr [rsp + 0x18]
ffffffff8001b6fa: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b6ff: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff8001b704: 48 8b 14 24          	mov	rdx, qword ptr [rsp]
ffffffff8001b708: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff8001b70d: 4c 89 7c 24 10       	mov	qword ptr [rsp + 0x10], r15
ffffffff8001b712: eb 48                	jmp	0xffffffff8001b75c <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x24c>
ffffffff8001b714: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001b719: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001b71e: 4c 8b 64 24 18       	mov	r12, qword ptr [rsp + 0x18]
ffffffff8001b723: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b728: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff8001b72d: 48 8b 54 24 40       	mov	rdx, qword ptr [rsp + 0x40]
ffffffff8001b732: eb 1e                	jmp	0xffffffff8001b752 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x242>
ffffffff8001b734: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001b739: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001b73e: 4c 8b 64 24 18       	mov	r12, qword ptr [rsp + 0x18]
ffffffff8001b743: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001b748: 48 8b 4c 24 28       	mov	rcx, qword ptr [rsp + 0x28]
ffffffff8001b74d: 48 8b 54 24 38       	mov	rdx, qword ptr [rsp + 0x38]
ffffffff8001b752: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff8001b757: 4c 89 64 24 10       	mov	qword ptr [rsp + 0x10], r12
ffffffff8001b75c: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001b761: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff8001b766: 48 8d 54 24 08       	lea	rdx, [rsp + 0x8]
ffffffff8001b76b: be 2b 00 00 00       	mov	esi, 0x2b
ffffffff8001b770: 48 c7 c7 10 89 02 80 	mov	rdi, -0x7ffd76f0
ffffffff8001b777: 48 c7 c1 f0 88 02 80 	mov	rcx, -0x7ffd7710
ffffffff8001b77e: 49 c7 c0 a0 89 02 80 	mov	r8, -0x7ffd7660
ffffffff8001b785: e8 d6 53 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8001b78a: e9 75 ff ff ff       	jmp	0xffffffff8001b704 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1f4>
ffffffff8001b78f: eb 9c                	jmp	0xffffffff8001b72d <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x21d>
ffffffff8001b791: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001b796: eb b5                	jmp	0xffffffff8001b74d <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x23d>
ffffffff8001b798: cc                   	int3
ffffffff8001b799: cc                   	int3
ffffffff8001b79a: cc                   	int3
ffffffff8001b79b: cc                   	int3
ffffffff8001b79c: cc                   	int3
ffffffff8001b79d: cc                   	int3
ffffffff8001b79e: cc                   	int3
ffffffff8001b79f: cc                   	int3

ffffffff8001b7a0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff8001b7a0: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff8001b7a3: a8 10                	test	al, 0x10
ffffffff8001b7a5: 0f 85 c5 26 00 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001b7ab: a8 20                	test	al, 0x20
ffffffff8001b7ad: 0f 85 3d 27 00 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8001b7b3: e9 58 4c 00 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001b7b8: cc                   	int3
ffffffff8001b7b9: cc                   	int3
ffffffff8001b7ba: cc                   	int3
ffffffff8001b7bb: cc                   	int3
ffffffff8001b7bc: cc                   	int3
ffffffff8001b7bd: cc                   	int3
ffffffff8001b7be: cc                   	int3
ffffffff8001b7bf: cc                   	int3

ffffffff8001b7c0 <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676>:
ffffffff8001b7c0: 83 3f 03             	cmp	dword ptr [rdi], 0x3
ffffffff8001b7c3: 75 17                	jne	0xffffffff8001b7dc <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676+0x1c>
ffffffff8001b7c5: 48 8b 77 08          	mov	rsi, qword ptr [rdi + 0x8]
ffffffff8001b7c9: 48 85 f6             	test	rsi, rsi
ffffffff8001b7cc: 74 0e                	je	0xffffffff8001b7dc <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676+0x1c>
ffffffff8001b7ce: 48 8b 7f 10          	mov	rdi, qword ptr [rdi + 0x10]
ffffffff8001b7d2: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001b7d7: e9 84 d7 fe ff       	jmp	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001b7dc: c3                   	ret
ffffffff8001b7dd: cc                   	int3
ffffffff8001b7de: cc                   	int3
ffffffff8001b7df: cc                   	int3

ffffffff8001b7e0 <<goblin::error::Error as core::fmt::Debug>::fmt::ha73702cbb56a1a4b>:
ffffffff8001b7e0: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001b7e4: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001b7e7: 48 83 c0 fd          	add	rax, -0x3
ffffffff8001b7eb: 48 83 f8 04          	cmp	rax, 0x4
ffffffff8001b7ef: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001b7f4: 48 0f 42 c8          	cmovb	rcx, rax
ffffffff8001b7f8: ff 24 cd 58 87 02 80 	jmp	qword ptr [8*rcx - 0x7ffd78a8]
ffffffff8001b7ff: 48 83 c7 08          	add	rdi, 0x8
ffffffff8001b803: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001b808: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff8001b80d: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8001b812: 48 89 f7             	mov	rdi, rsi
ffffffff8001b815: 48 c7 c6 28 88 02 80 	mov	rsi, -0x7ffd77d8
ffffffff8001b81c: 49 c7 c0 08 88 02 80 	mov	r8, -0x7ffd77f8
ffffffff8001b823: e8 88 33 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001b828: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001b82c: c3                   	ret
ffffffff8001b82d: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001b832: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff8001b837: ba 06 00 00 00       	mov	edx, 0x6
ffffffff8001b83c: 48 89 f7             	mov	rdi, rsi
ffffffff8001b83f: 48 c7 c6 78 88 02 80 	mov	rsi, -0x7ffd7788
ffffffff8001b846: 49 c7 c0 58 88 02 80 	mov	r8, -0x7ffd77a8
ffffffff8001b84d: e8 5e 33 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001b852: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001b856: c3                   	ret
ffffffff8001b857: 48 8d 4f 18          	lea	rcx, [rdi + 0x18]
ffffffff8001b85b: 48 83 c7 08          	add	rdi, 0x8
ffffffff8001b85f: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001b864: 48 c7 04 24 a0 88 02 80      	mov	qword ptr [rsp], -0x7ffd7760
ffffffff8001b86c: 4c 8d 4c 24 10       	lea	r9, [rsp + 0x10]
ffffffff8001b871: ba 0e 00 00 00       	mov	edx, 0xe
ffffffff8001b876: 48 89 f7             	mov	rdi, rsi
ffffffff8001b879: 48 c7 c6 c0 88 02 80 	mov	rsi, -0x7ffd7740
ffffffff8001b880: 49 c7 c0 80 88 02 80 	mov	r8, -0x7ffd7780
ffffffff8001b887: e8 a4 34 00 00       	call	0xffffffff8001ed30 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>
ffffffff8001b88c: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001b890: c3                   	ret
ffffffff8001b891: 48 83 c7 08          	add	rdi, 0x8
ffffffff8001b895: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001b89a: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff8001b89f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001b8a4: 48 89 f7             	mov	rdi, rsi
ffffffff8001b8a7: 48 c7 c6 88 22 02 80 	mov	rsi, -0x7ffddd78
ffffffff8001b8ae: 49 c7 c0 38 88 02 80 	mov	r8, -0x7ffd77c8
ffffffff8001b8b5: e8 f6 32 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001b8ba: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001b8be: c3                   	ret
ffffffff8001b8bf: cc                   	int3

ffffffff8001b8c0 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744>:
ffffffff8001b8c0: 55                   	push	rbp
ffffffff8001b8c1: 41 56                	push	r14
ffffffff8001b8c3: 53                   	push	rbx
ffffffff8001b8c4: 48 81 ec 80 00 00 00 	sub	rsp, 0x80
ffffffff8001b8cb: 48 89 fb             	mov	rbx, rdi
ffffffff8001b8ce: 48 83 fa 0f          	cmp	rdx, 0xf
ffffffff8001b8d2: 77 51                	ja	0xffffffff8001b925 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x65>
ffffffff8001b8d4: 0f b6 05 06 f9 00 00 	movzx	eax, byte ptr [rip + 0xf906] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001b8db: bf 09 00 00 00       	mov	edi, 0x9
ffffffff8001b8e0: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001b8e5: e8 26 d6 fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001b8ea: 48 85 c0             	test	rax, rax
ffffffff8001b8ed: 0f 84 58 02 00 00    	je	0xffffffff8001bb4b <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x28b>
ffffffff8001b8f3: 48 b9 54 6f 6f 20 73 6d 61 6c	movabs	rcx, 0x6c616d73206f6f54
ffffffff8001b8fd: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff8001b900: c6 40 08 6c          	mov	byte ptr [rax + 0x8], 0x6c
ffffffff8001b904: 48 c7 43 08 03 00 00 00      	mov	qword ptr [rbx + 0x8], 0x3
ffffffff8001b90c: 48 c7 43 10 09 00 00 00      	mov	qword ptr [rbx + 0x10], 0x9
ffffffff8001b914: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001b918: 48 c7 43 20 09 00 00 00      	mov	qword ptr [rbx + 0x20], 0x9
ffffffff8001b920: e9 4f 01 00 00       	jmp	0xffffffff8001ba74 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff8001b925: 81 3e 7f 45 4c 46    	cmp	dword ptr [rsi], 0x464c457f
ffffffff8001b92b: 75 66                	jne	0xffffffff8001b993 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0xd3>
ffffffff8001b92d: 0f b6 46 04          	movzx	eax, byte ptr [rsi + 0x4]
ffffffff8001b931: 88 44 24 07          	mov	byte ptr [rsp + 0x7], al
ffffffff8001b935: 83 f8 01             	cmp	eax, 0x1
ffffffff8001b938: 74 6d                	je	0xffffffff8001b9a7 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0xe7>
ffffffff8001b93a: 83 f8 02             	cmp	eax, 0x2
ffffffff8001b93d: 0f 85 be 00 00 00    	jne	0xffffffff8001ba01 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x141>
ffffffff8001b943: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b948: 31 c9                	xor	ecx, ecx
ffffffff8001b94a: e8 31 e1 ff ff       	call	0xffffffff80019a80 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d>
ffffffff8001b94f: 4c 8b 44 24 10       	mov	r8, qword ptr [rsp + 0x10]
ffffffff8001b954: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff8001b959: 0f b7 4c 24 20       	movzx	ecx, word ptr [rsp + 0x20]
ffffffff8001b95e: 0f b7 44 24 22       	movzx	eax, word ptr [rsp + 0x22]
ffffffff8001b963: 8b 54 24 24          	mov	edx, dword ptr [rsp + 0x24]
ffffffff8001b967: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001b96c: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff8001b971: 0f 84 13 01 00 00    	je	0xffffffff8001ba8a <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1ca>
ffffffff8001b977: 4c 89 43 08          	mov	qword ptr [rbx + 0x8], r8
ffffffff8001b97b: 48 89 7b 10          	mov	qword ptr [rbx + 0x10], rdi
ffffffff8001b97f: 66 89 4b 18          	mov	word ptr [rbx + 0x18], cx
ffffffff8001b983: 66 89 43 1a          	mov	word ptr [rbx + 0x1a], ax
ffffffff8001b987: 89 53 1c             	mov	dword ptr [rbx + 0x1c], edx
ffffffff8001b98a: 48 89 73 20          	mov	qword ptr [rbx + 0x20], rsi
ffffffff8001b98e: e9 e1 00 00 00       	jmp	0xffffffff8001ba74 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff8001b993: 48 8b 06             	mov	rax, qword ptr [rsi]
ffffffff8001b996: 48 c7 43 08 04 00 00 00      	mov	qword ptr [rbx + 0x8], 0x4
ffffffff8001b99e: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001b9a2: e9 cd 00 00 00       	jmp	0xffffffff8001ba74 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff8001b9a7: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001b9ac: 31 c9                	xor	ecx, ecx
ffffffff8001b9ae: e8 9d e5 ff ff       	call	0xffffffff80019f50 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b>
ffffffff8001b9b3: 8b 44 24 24          	mov	eax, dword ptr [rsp + 0x24]
ffffffff8001b9b7: 8b 54 24 28          	mov	edx, dword ptr [rsp + 0x28]
ffffffff8001b9bb: 8b 4c 24 2c          	mov	ecx, dword ptr [rsp + 0x2c]
ffffffff8001b9bf: f6 44 24 08 01       	test	byte ptr [rsp + 0x8], 0x1
ffffffff8001b9c4: 0f 84 13 01 00 00    	je	0xffffffff8001badd <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x21d>
ffffffff8001b9ca: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001b9cf: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff8001b9d4: 49 89 f8             	mov	r8, rdi
ffffffff8001b9d7: 48 89 73 08          	mov	qword ptr [rbx + 0x8], rsi
ffffffff8001b9db: 89 7b 10             	mov	dword ptr [rbx + 0x10], edi
ffffffff8001b9de: 48 c1 ef 20          	shr	rdi, 0x20
ffffffff8001b9e2: 49 c1 e8 30          	shr	r8, 0x30
ffffffff8001b9e6: 8b 74 24 20          	mov	esi, dword ptr [rsp + 0x20]
ffffffff8001b9ea: 66 89 7b 14          	mov	word ptr [rbx + 0x14], di
ffffffff8001b9ee: 66 44 89 43 16       	mov	word ptr [rbx + 0x16], r8w
ffffffff8001b9f3: 89 73 18             	mov	dword ptr [rbx + 0x18], esi
ffffffff8001b9f6: 89 43 1c             	mov	dword ptr [rbx + 0x1c], eax
ffffffff8001b9f9: 89 53 20             	mov	dword ptr [rbx + 0x20], edx
ffffffff8001b9fc: 89 4b 24             	mov	dword ptr [rbx + 0x24], ecx
ffffffff8001b9ff: eb 73                	jmp	0xffffffff8001ba74 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff8001ba01: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001ba06: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8001ba0b: 48 c7 44 24 60 90 dc 01 80   	mov	qword ptr [rsp + 0x60], -0x7ffe2370
ffffffff8001ba14: 48 c7 44 24 08 e0 88 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd7720
ffffffff8001ba1d: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001ba26: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001ba2f: 48 8d 44 24 58       	lea	rax, [rsp + 0x58]
ffffffff8001ba34: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001ba39: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8001ba42: 48 8d 7c 24 68       	lea	rdi, [rsp + 0x68]
ffffffff8001ba47: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8001ba4c: e8 5f 1c 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001ba51: 48 c7 43 08 03 00 00 00      	mov	qword ptr [rbx + 0x8], 0x3
ffffffff8001ba59: 48 8b 44 24 68       	mov	rax, qword ptr [rsp + 0x68]
ffffffff8001ba5e: 48 8b 4c 24 70       	mov	rcx, qword ptr [rsp + 0x70]
ffffffff8001ba63: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001ba67: 48 89 4b 18          	mov	qword ptr [rbx + 0x18], rcx
ffffffff8001ba6b: 48 8b 44 24 78       	mov	rax, qword ptr [rsp + 0x78]
ffffffff8001ba70: 48 89 43 20          	mov	qword ptr [rbx + 0x20], rax
ffffffff8001ba74: 48 c7 03 01 00 00 00 	mov	qword ptr [rbx], 0x1
ffffffff8001ba7b: 48 89 d8             	mov	rax, rbx
ffffffff8001ba7e: 48 81 c4 80 00 00 00 	add	rsp, 0x80
ffffffff8001ba85: 5b                   	pop	rbx
ffffffff8001ba86: 41 5e                	pop	r14
ffffffff8001ba88: 5d                   	pop	rbp
ffffffff8001ba89: c3                   	ret
ffffffff8001ba8a: 4c 8b 4c 24 30       	mov	r9, qword ptr [rsp + 0x30]
ffffffff8001ba8f: 4c 8b 54 24 38       	mov	r10, qword ptr [rsp + 0x38]
ffffffff8001ba94: 44 8b 5c 24 40       	mov	r11d, dword ptr [rsp + 0x40]
ffffffff8001ba99: 4c 8b 74 24 44       	mov	r14, qword ptr [rsp + 0x44]
ffffffff8001ba9e: 8b 6c 24 4c          	mov	ebp, dword ptr [rsp + 0x4c]
ffffffff8001baa2: 4c 89 43 08          	mov	qword ptr [rbx + 0x8], r8
ffffffff8001baa6: 48 89 7b 10          	mov	qword ptr [rbx + 0x10], rdi
ffffffff8001baaa: 48 89 73 18          	mov	qword ptr [rbx + 0x18], rsi
ffffffff8001baae: 4c 89 4b 20          	mov	qword ptr [rbx + 0x20], r9
ffffffff8001bab2: 4c 89 53 28          	mov	qword ptr [rbx + 0x28], r10
ffffffff8001bab6: 89 53 30             	mov	dword ptr [rbx + 0x30], edx
ffffffff8001bab9: 44 89 5b 34          	mov	dword ptr [rbx + 0x34], r11d
ffffffff8001babd: 66 89 4b 38          	mov	word ptr [rbx + 0x38], cx
ffffffff8001bac1: 66 89 43 3a          	mov	word ptr [rbx + 0x3a], ax
ffffffff8001bac5: 4c 89 73 3c          	mov	qword ptr [rbx + 0x3c], r14
ffffffff8001bac9: 89 6b 44             	mov	dword ptr [rbx + 0x44], ebp
ffffffff8001bacc: 48 c7 43 48 40 00 00 00      	mov	qword ptr [rbx + 0x48], 0x40
ffffffff8001bad4: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff8001badb: eb 9e                	jmp	0xffffffff8001ba7b <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1bb>
ffffffff8001badd: 8b 74 24 10          	mov	esi, dword ptr [rsp + 0x10]
ffffffff8001bae1: 48 8b 7c 24 14       	mov	rdi, qword ptr [rsp + 0x14]
ffffffff8001bae6: 4c 8b 44 24 1c       	mov	r8, qword ptr [rsp + 0x1c]
ffffffff8001baeb: 4d 89 c1             	mov	r9, r8
ffffffff8001baee: 89 73 08             	mov	dword ptr [rbx + 0x8], esi
ffffffff8001baf1: 48 89 7b 0c          	mov	qword ptr [rbx + 0xc], rdi
ffffffff8001baf5: 44 89 43 14          	mov	dword ptr [rbx + 0x14], r8d
ffffffff8001baf9: 49 c1 e8 20          	shr	r8, 0x20
ffffffff8001bafd: 49 c1 e9 30          	shr	r9, 0x30
ffffffff8001bb01: 8b 74 24 30          	mov	esi, dword ptr [rsp + 0x30]
ffffffff8001bb05: 8b 7c 24 34          	mov	edi, dword ptr [rsp + 0x34]
ffffffff8001bb09: 4c 8b 54 24 38       	mov	r10, qword ptr [rsp + 0x38]
ffffffff8001bb0e: 44 8b 5c 24 40       	mov	r11d, dword ptr [rsp + 0x40]
ffffffff8001bb13: 48 89 53 18          	mov	qword ptr [rbx + 0x18], rdx
ffffffff8001bb17: 48 89 4b 20          	mov	qword ptr [rbx + 0x20], rcx
ffffffff8001bb1b: 48 89 73 28          	mov	qword ptr [rbx + 0x28], rsi
ffffffff8001bb1f: 89 43 30             	mov	dword ptr [rbx + 0x30], eax
ffffffff8001bb22: 89 7b 34             	mov	dword ptr [rbx + 0x34], edi
ffffffff8001bb25: 66 44 89 43 38       	mov	word ptr [rbx + 0x38], r8w
ffffffff8001bb2a: 66 44 89 4b 3a       	mov	word ptr [rbx + 0x3a], r9w
ffffffff8001bb2f: 4c 89 53 3c          	mov	qword ptr [rbx + 0x3c], r10
ffffffff8001bb33: 44 89 5b 44          	mov	dword ptr [rbx + 0x44], r11d
ffffffff8001bb37: 48 c7 43 48 34 00 00 00      	mov	qword ptr [rbx + 0x48], 0x34
ffffffff8001bb3f: 48 c7 03 00 00 00 00 	mov	qword ptr [rbx], 0x0
ffffffff8001bb46: e9 30 ff ff ff       	jmp	0xffffffff8001ba7b <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1bb>
ffffffff8001bb4b: bf 01 00 00 00       	mov	edi, 0x1
ffffffff8001bb50: be 09 00 00 00       	mov	esi, 0x9
ffffffff8001bb55: 48 c7 c2 f0 87 02 80 	mov	rdx, -0x7ffd7810
ffffffff8001bb5c: e8 36 1b 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001bb61: cc                   	int3
ffffffff8001bb62: cc                   	int3
ffffffff8001bb63: cc                   	int3
ffffffff8001bb64: cc                   	int3
ffffffff8001bb65: cc                   	int3
ffffffff8001bb66: cc                   	int3
ffffffff8001bb67: cc                   	int3
ffffffff8001bb68: cc                   	int3
ffffffff8001bb69: cc                   	int3
ffffffff8001bb6a: cc                   	int3
ffffffff8001bb6b: cc                   	int3
ffffffff8001bb6c: cc                   	int3
ffffffff8001bb6d: cc                   	int3
ffffffff8001bb6e: cc                   	int3
ffffffff8001bb6f: cc                   	int3

ffffffff8001bb70 <<&T as core::fmt::Debug>::fmt::h87bd255f019d4b5e>:
ffffffff8001bb70: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff8001bb73: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff8001bb76: a8 10                	test	al, 0x10
ffffffff8001bb78: 0f 85 f2 22 00 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001bb7e: a8 20                	test	al, 0x20
ffffffff8001bb80: 0f 85 6a 23 00 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8001bb86: e9 85 48 00 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001bb8b: cc                   	int3
ffffffff8001bb8c: cc                   	int3
ffffffff8001bb8d: cc                   	int3
ffffffff8001bb8e: cc                   	int3
ffffffff8001bb8f: cc                   	int3

ffffffff8001bb90 <<&T as core::fmt::Debug>::fmt::haa1b80f645ed0511>:
ffffffff8001bb90: 48 89 f2             	mov	rdx, rsi
ffffffff8001bb93: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001bb96: 48 8b 38             	mov	rdi, qword ptr [rax]
ffffffff8001bb99: 48 8b 70 08          	mov	rsi, qword ptr [rax + 0x8]
ffffffff8001bb9d: e9 ee 33 00 00       	jmp	0xffffffff8001ef90 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff8001bba2: cc                   	int3
ffffffff8001bba3: cc                   	int3
ffffffff8001bba4: cc                   	int3
ffffffff8001bba5: cc                   	int3
ffffffff8001bba6: cc                   	int3
ffffffff8001bba7: cc                   	int3
ffffffff8001bba8: cc                   	int3
ffffffff8001bba9: cc                   	int3
ffffffff8001bbaa: cc                   	int3
ffffffff8001bbab: cc                   	int3
ffffffff8001bbac: cc                   	int3
ffffffff8001bbad: cc                   	int3
ffffffff8001bbae: cc                   	int3
ffffffff8001bbaf: cc                   	int3

ffffffff8001bbb0 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7>:
ffffffff8001bbb0: 50                   	push	rax
ffffffff8001bbb1: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001bbb4: 48 8b 08             	mov	rcx, qword ptr [rax]
ffffffff8001bbb7: 48 85 c9             	test	rcx, rcx
ffffffff8001bbba: 74 2d                	je	0xffffffff8001bbe9 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0x39>
ffffffff8001bbbc: 83 f9 01             	cmp	ecx, 0x1
ffffffff8001bbbf: 75 68                	jne	0xffffffff8001bc29 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0x79>
ffffffff8001bbc1: 48 83 c0 08          	add	rax, 0x8
ffffffff8001bbc5: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001bbc9: 48 89 e1             	mov	rcx, rsp
ffffffff8001bbcc: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8001bbd1: 48 89 f7             	mov	rdi, rsi
ffffffff8001bbd4: 48 c7 c6 01 8a 02 80 	mov	rsi, -0x7ffd75ff
ffffffff8001bbdb: 49 c7 c0 d8 89 02 80 	mov	r8, -0x7ffd7628
ffffffff8001bbe2: e8 c9 2f 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001bbe7: 59                   	pop	rcx
ffffffff8001bbe8: c3                   	ret
ffffffff8001bbe9: 4c 8d 48 08          	lea	r9, [rax + 0x8]
ffffffff8001bbed: 48 83 c0 10          	add	rax, 0x10
ffffffff8001bbf1: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001bbf5: 48 83 ec 08          	sub	rsp, 0x8
ffffffff8001bbf9: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001bbfe: ba 06 00 00 00       	mov	edx, 0x6
ffffffff8001bc03: 41 b8 04 00 00 00    	mov	r8d, 0x4
ffffffff8001bc09: 48 89 f7             	mov	rdi, rsi
ffffffff8001bc0c: 48 c7 c6 f8 89 02 80 	mov	rsi, -0x7ffd7608
ffffffff8001bc13: 48 c7 c1 74 20 02 80 	mov	rcx, -0x7ffddf8c
ffffffff8001bc1a: 68 d8 89 02 80       	push	-0x7ffd7628
ffffffff8001bc1f: 50                   	push	rax
ffffffff8001bc20: 6a 03                	push	0x3
ffffffff8001bc22: 68 fe 89 02 80       	push	-0x7ffd7602
ffffffff8001bc27: eb 3e                	jmp	0xffffffff8001bc67 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0xb7>
ffffffff8001bc29: 4c 8d 48 08          	lea	r9, [rax + 0x8]
ffffffff8001bc2d: 48 83 c0 10          	add	rax, 0x10
ffffffff8001bc31: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001bc35: 48 83 ec 08          	sub	rsp, 0x8
ffffffff8001bc39: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001bc3e: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001bc43: 41 b8 04 00 00 00    	mov	r8d, 0x4
ffffffff8001bc49: 48 89 f7             	mov	rdi, rsi
ffffffff8001bc4c: 48 c7 c6 70 22 02 80 	mov	rsi, -0x7ffddd90
ffffffff8001bc53: 48 c7 c1 74 20 02 80 	mov	rcx, -0x7ffddf8c
ffffffff8001bc5a: 68 10 8a 02 80       	push	-0x7ffd75f0
ffffffff8001bc5f: 50                   	push	rax
ffffffff8001bc60: 6a 03                	push	0x3
ffffffff8001bc62: 68 30 8a 02 80       	push	-0x7ffd75d0
ffffffff8001bc67: 68 b8 89 02 80       	push	-0x7ffd7648
ffffffff8001bc6c: e8 1f 2e 00 00       	call	0xffffffff8001ea90 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff8001bc71: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001bc75: 59                   	pop	rcx
ffffffff8001bc76: c3                   	ret
ffffffff8001bc77: cc                   	int3
ffffffff8001bc78: cc                   	int3
ffffffff8001bc79: cc                   	int3
ffffffff8001bc7a: cc                   	int3
ffffffff8001bc7b: cc                   	int3
ffffffff8001bc7c: cc                   	int3
ffffffff8001bc7d: cc                   	int3
ffffffff8001bc7e: cc                   	int3
ffffffff8001bc7f: cc                   	int3

ffffffff8001bc80 <<&T as core::fmt::Debug>::fmt::hdc0b5eeb18b013ab>:
ffffffff8001bc80: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff8001bc83: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff8001bc86: a8 10                	test	al, 0x10
ffffffff8001bc88: 0f 85 e2 21 00 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001bc8e: a8 20                	test	al, 0x20
ffffffff8001bc90: 0f 85 5a 22 00 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8001bc96: e9 75 47 00 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001bc9b: cc                   	int3
ffffffff8001bc9c: cc                   	int3
ffffffff8001bc9d: cc                   	int3
ffffffff8001bc9e: cc                   	int3
ffffffff8001bc9f: cc                   	int3

ffffffff8001bca0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff8001bca0: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff8001bca3: a8 10                	test	al, 0x10
ffffffff8001bca5: 0f 85 c5 21 00 00    	jne	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001bcab: a8 20                	test	al, 0x20
ffffffff8001bcad: 0f 85 3d 22 00 00    	jne	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8001bcb3: e9 58 47 00 00       	jmp	0xffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001bcb8: cc                   	int3
ffffffff8001bcb9: cc                   	int3
ffffffff8001bcba: cc                   	int3
ffffffff8001bcbb: cc                   	int3
ffffffff8001bcbc: cc                   	int3
ffffffff8001bcbd: cc                   	int3
ffffffff8001bcbe: cc                   	int3
ffffffff8001bcbf: cc                   	int3

ffffffff8001bcc0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>:
ffffffff8001bcc0: 55                   	push	rbp
ffffffff8001bcc1: 41 57                	push	r15
ffffffff8001bcc3: 41 56                	push	r14
ffffffff8001bcc5: 41 55                	push	r13
ffffffff8001bcc7: 41 54                	push	r12
ffffffff8001bcc9: 53                   	push	rbx
ffffffff8001bcca: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff8001bcd1: 48 89 fb             	mov	rbx, rdi
ffffffff8001bcd4: 48 89 4c 24 50       	mov	qword ptr [rsp + 0x50], rcx
ffffffff8001bcd9: 4c 89 44 24 58       	mov	qword ptr [rsp + 0x58], r8
ffffffff8001bcde: 48 89 c8             	mov	rax, rcx
ffffffff8001bce1: 4c 01 c0             	add	rax, r8
ffffffff8001bce4: 40 0f 92 c7          	setb	dil
ffffffff8001bce8: 40 f6 d7             	not	dil
ffffffff8001bceb: 0f 92 44 24 0f       	setb	byte ptr [rsp + 0xf]
ffffffff8001bcf0: 48 39 d0             	cmp	rax, rdx
ffffffff8001bcf3: 0f 96 c0             	setbe	al
ffffffff8001bcf6: 40 84 c7             	test	dil, al
ffffffff8001bcf9: 0f 85 aa 00 00 00    	jne	0xffffffff8001bda9 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0xe9>
ffffffff8001bcff: 48 89 54 24 60       	mov	qword ptr [rsp + 0x60], rdx
ffffffff8001bd04: 48 8d 44 24 58       	lea	rax, [rsp + 0x58]
ffffffff8001bd09: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001bd0e: 48 c7 44 24 18 10 04 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfbf0
ffffffff8001bd17: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff8001bd1c: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001bd21: 48 c7 44 24 28 10 04 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdfbf0
ffffffff8001bd2a: 48 8d 44 24 60       	lea	rax, [rsp + 0x60]
ffffffff8001bd2f: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001bd34: 48 c7 44 24 38 10 04 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffdfbf0
ffffffff8001bd3d: 48 8d 44 24 0f       	lea	rax, [rsp + 0xf]
ffffffff8001bd42: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001bd47: 48 c7 44 24 48 60 ef 01 80   	mov	qword ptr [rsp + 0x48], -0x7ffe10a0
ffffffff8001bd50: 48 c7 44 24 68 f8 8a 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffd7508
ffffffff8001bd59: 48 c7 44 24 70 04 00 00 00   	mov	qword ptr [rsp + 0x70], 0x4
ffffffff8001bd62: 48 c7 84 24 88 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 0x88], 0x0
ffffffff8001bd6e: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8001bd73: 48 89 44 24 78       	mov	qword ptr [rsp + 0x78], rax
ffffffff8001bd78: 48 c7 84 24 80 00 00 00 04 00 00 00  	mov	qword ptr [rsp + 0x80], 0x4
ffffffff8001bd84: 48 8d 7b 10          	lea	rdi, [rbx + 0x10]
ffffffff8001bd88: 48 8d 74 24 68       	lea	rsi, [rsp + 0x68]
ffffffff8001bd8d: e8 1e 19 00 00       	call	0xffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001bd92: 48 c7 43 08 03 00 00 00      	mov	qword ptr [rbx + 0x8], 0x3
ffffffff8001bd9a: 48 b8 00 00 00 00 00 00 00 80	movabs	rax, -0x8000000000000000
ffffffff8001bda4: e9 aa 01 00 00       	jmp	0xffffffff8001bf53 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x293>
ffffffff8001bda9: 4d 89 c6             	mov	r14, r8
ffffffff8001bdac: 48 01 ce             	add	rsi, rcx
ffffffff8001bdaf: c6 44 24 28 00       	mov	byte ptr [rsp + 0x28], 0x0
ffffffff8001bdb4: 44 88 4c 24 29       	mov	byte ptr [rsp + 0x29], r9b
ffffffff8001bdb9: 48 89 74 24 38       	mov	qword ptr [rsp + 0x38], rsi
ffffffff8001bdbe: 4c 89 44 24 40       	mov	qword ptr [rsp + 0x40], r8
ffffffff8001bdc3: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 0x10], 0x0
ffffffff8001bdcc: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001bdd5: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001bdde: 4d 85 c0             	test	r8, r8
ffffffff8001bde1: 0f 84 31 01 00 00    	je	0xffffffff8001bf18 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x258>
ffffffff8001bde7: 4c 8d 7c 24 68       	lea	r15, [rsp + 0x68]
ffffffff8001bdec: 31 c0                	xor	eax, eax
ffffffff8001bdee: 31 ed                	xor	ebp, ebp
ffffffff8001bdf0: 49 29 ee             	sub	r14, rbp
ffffffff8001bdf3: 48 01 ee             	add	rsi, rbp
ffffffff8001bdf6: 84 c0                	test	al, al
ffffffff8001bdf8: 74 56                	je	0xffffffff8001be50 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x190>
ffffffff8001bdfa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001be00: 0f b6 c0             	movzx	eax, al
ffffffff8001be03: 83 f8 01             	cmp	eax, 0x1
ffffffff8001be06: 75 38                	jne	0xffffffff8001be40 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff8001be08: 4c 39 f2             	cmp	rdx, r14
ffffffff8001be0b: 0f 87 6b 01 00 00    	ja	0xffffffff8001bf7c <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2bc>
ffffffff8001be11: 48 85 d2             	test	rdx, rdx
ffffffff8001be14: 74 1f                	je	0xffffffff8001be35 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x175>
ffffffff8001be16: 31 c0                	xor	eax, eax
ffffffff8001be18: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8001be20: 49 39 c6             	cmp	r14, rax
ffffffff8001be23: 74 49                	je	0xffffffff8001be6e <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1ae>
ffffffff8001be25: 44 38 0c 06          	cmp	byte ptr [rsi + rax], r9b
ffffffff8001be29: 74 0e                	je	0xffffffff8001be39 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x179>
ffffffff8001be2b: 48 ff c0             	inc	rax
ffffffff8001be2e: 48 39 c2             	cmp	rdx, rax
ffffffff8001be31: 75 ed                	jne	0xffffffff8001be20 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x160>
ffffffff8001be33: eb 0b                	jmp	0xffffffff8001be40 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff8001be35: 31 d2                	xor	edx, edx
ffffffff8001be37: eb 47                	jmp	0xffffffff8001be80 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff8001be39: 48 89 c2             	mov	rdx, rax
ffffffff8001be3c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8001be40: 4c 39 f2             	cmp	rdx, r14
ffffffff8001be43: 76 3b                	jbe	0xffffffff8001be80 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff8001be45: e9 32 01 00 00       	jmp	0xffffffff8001bf7c <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2bc>
ffffffff8001be4a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001be50: 31 d2                	xor	edx, edx
ffffffff8001be52: 4d 85 f6             	test	r14, r14
ffffffff8001be55: 74 29                	je	0xffffffff8001be80 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff8001be57: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001be60: 44 38 0c 16          	cmp	byte ptr [rsi + rdx], r9b
ffffffff8001be64: 74 da                	je	0xffffffff8001be40 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff8001be66: 48 ff c2             	inc	rdx
ffffffff8001be69: 49 39 d6             	cmp	r14, rdx
ffffffff8001be6c: 75 f2                	jne	0xffffffff8001be60 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1a0>
ffffffff8001be6e: 4c 89 f2             	mov	rdx, r14
ffffffff8001be71: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8001be80: 4c 89 ff             	mov	rdi, r15
ffffffff8001be83: e8 98 4d 00 00       	call	0xffffffff80020c20 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff8001be88: 83 7c 24 68 01       	cmp	dword ptr [rsp + 0x68], 0x1
ffffffff8001be8d: 0f 84 d8 00 00 00    	je	0xffffffff8001bf6b <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2ab>
ffffffff8001be93: 4c 8b 64 24 70       	mov	r12, qword ptr [rsp + 0x70]
ffffffff8001be98: 4c 8b 74 24 78       	mov	r14, qword ptr [rsp + 0x78]
ffffffff8001be9d: 4c 8b 6c 24 20       	mov	r13, qword ptr [rsp + 0x20]
ffffffff8001bea2: 4c 3b 6c 24 10       	cmp	r13, qword ptr [rsp + 0x10]
ffffffff8001bea7: 75 11                	jne	0xffffffff8001beba <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1fa>
ffffffff8001bea9: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001beae: 48 c7 c6 98 8a 02 80 	mov	rsi, -0x7ffd7568
ffffffff8001beb5: e8 b6 e5 ff ff       	call	0xffffffff8001a470 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42>
ffffffff8001beba: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001bebf: 4a 8d 0c 6d 00 00 00 00      	lea	rcx, [2*r13]
ffffffff8001bec7: 4c 01 e9             	add	rcx, r13
ffffffff8001beca: 48 89 2c c8          	mov	qword ptr [rax + 8*rcx], rbp
ffffffff8001bece: 4c 89 64 c8 08       	mov	qword ptr [rax + 8*rcx + 0x8], r12
ffffffff8001bed3: 4c 89 74 c8 10       	mov	qword ptr [rax + 8*rcx + 0x10], r14
ffffffff8001bed8: 49 ff c5             	inc	r13
ffffffff8001bedb: 4c 89 6c 24 20       	mov	qword ptr [rsp + 0x20], r13
ffffffff8001bee0: 4c 01 f5             	add	rbp, r14
ffffffff8001bee3: 48 ff c5             	inc	rbp
ffffffff8001bee6: 4c 8b 74 24 40       	mov	r14, qword ptr [rsp + 0x40]
ffffffff8001beeb: 4c 39 f5             	cmp	rbp, r14
ffffffff8001beee: 73 28                	jae	0xffffffff8001bf18 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x258>
ffffffff8001bef0: 48 8b 74 24 38       	mov	rsi, qword ptr [rsp + 0x38]
ffffffff8001bef5: 0f b6 44 24 28       	movzx	eax, byte ptr [rsp + 0x28]
ffffffff8001befa: 44 0f b6 4c 24 29    	movzx	r9d, byte ptr [rsp + 0x29]
ffffffff8001bf00: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff8001bf05: 49 29 ee             	sub	r14, rbp
ffffffff8001bf08: 48 01 ee             	add	rsi, rbp
ffffffff8001bf0b: 84 c0                	test	al, al
ffffffff8001bf0d: 0f 85 ed fe ff ff    	jne	0xffffffff8001be00 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x140>
ffffffff8001bf13: e9 38 ff ff ff       	jmp	0xffffffff8001be50 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x190>
ffffffff8001bf18: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001bf1d: 48 89 43 30          	mov	qword ptr [rbx + 0x30], rax
ffffffff8001bf21: 48 8b 44 24 38       	mov	rax, qword ptr [rsp + 0x38]
ffffffff8001bf26: 48 89 43 28          	mov	qword ptr [rbx + 0x28], rax
ffffffff8001bf2a: 48 8b 44 24 30       	mov	rax, qword ptr [rsp + 0x30]
ffffffff8001bf2f: 48 89 43 20          	mov	qword ptr [rbx + 0x20], rax
ffffffff8001bf33: 48 8b 44 24 28       	mov	rax, qword ptr [rsp + 0x28]
ffffffff8001bf38: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001bf3c: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001bf41: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001bf45: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001bf4a: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8001bf4f: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001bf53: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001bf56: 48 89 d8             	mov	rax, rbx
ffffffff8001bf59: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8001bf60: 5b                   	pop	rbx
ffffffff8001bf61: 41 5c                	pop	r12
ffffffff8001bf63: 41 5d                	pop	r13
ffffffff8001bf65: 41 5e                	pop	r14
ffffffff8001bf67: 41 5f                	pop	r15
ffffffff8001bf69: 5d                   	pop	rbp
ffffffff8001bf6a: c3                   	ret
ffffffff8001bf6b: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001bf70: 48 c7 c0 74 84 02 80 	mov	rax, -0x7ffd7b8c
ffffffff8001bf77: 4c 89 f2             	mov	rdx, r14
ffffffff8001bf7a: eb 05                	jmp	0xffffffff8001bf81 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2c1>
ffffffff8001bf7c: 4c 89 f0             	mov	rax, r14
ffffffff8001bf7f: 31 c9                	xor	ecx, ecx
ffffffff8001bf81: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001bf85: 48 89 53 10          	mov	qword ptr [rbx + 0x10], rdx
ffffffff8001bf89: 48 89 43 18          	mov	qword ptr [rbx + 0x18], rax
ffffffff8001bf8d: 48 c7 43 20 0c 00 00 00      	mov	qword ptr [rbx + 0x20], 0xc
ffffffff8001bf95: 48 b8 00 00 00 00 00 00 00 80	movabs	rax, -0x8000000000000000
ffffffff8001bf9f: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001bfa2: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001bfa7: 48 85 c0             	test	rax, rax
ffffffff8001bfaa: 74 aa                	je	0xffffffff8001bf56 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x296>
ffffffff8001bfac: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff8001bfb1: 48 c1 e0 03          	shl	rax, 0x3
ffffffff8001bfb5: 48 8d 34 40          	lea	rsi, [rax + 2*rax]
ffffffff8001bfb9: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001bfbe: e8 9d cf fe ff       	call	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001bfc3: eb 91                	jmp	0xffffffff8001bf56 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x296>
ffffffff8001bfc5: cc                   	int3
ffffffff8001bfc6: cc                   	int3
ffffffff8001bfc7: cc                   	int3
ffffffff8001bfc8: cc                   	int3
ffffffff8001bfc9: cc                   	int3
ffffffff8001bfca: cc                   	int3
ffffffff8001bfcb: cc                   	int3
ffffffff8001bfcc: cc                   	int3
ffffffff8001bfcd: cc                   	int3
ffffffff8001bfce: cc                   	int3
ffffffff8001bfcf: cc                   	int3

ffffffff8001bfd0 <goblin::strtab::Strtab::get_at::h79549c4c464d6553>:
ffffffff8001bfd0: 48 8b 57 10          	mov	rdx, qword ptr [rdi + 0x10]
ffffffff8001bfd4: 31 c0                	xor	eax, eax
ffffffff8001bfd6: 48 85 d2             	test	rdx, rdx
ffffffff8001bfd9: 74 4f                	je	0xffffffff8001c02a <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x5a>
ffffffff8001bfdb: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff8001bfdf: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff8001bfe3: 74 2d                	je	0xffffffff8001c012 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x42>
ffffffff8001bfe5: 31 ff                	xor	edi, edi
ffffffff8001bfe7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001bff0: 49 89 d0             	mov	r8, rdx
ffffffff8001bff3: 49 d1 e8             	shr	r8
ffffffff8001bff6: 49 8d 04 38          	lea	rax, [r8 + rdi]
ffffffff8001bffa: 4c 8d 0c 40          	lea	r9, [rax + 2*rax]
ffffffff8001bffe: 4a 39 34 c9          	cmp	qword ptr [rcx + 8*r9], rsi
ffffffff8001c002: 48 0f 47 c7          	cmova	rax, rdi
ffffffff8001c006: 4c 29 c2             	sub	rdx, r8
ffffffff8001c009: 48 89 c7             	mov	rdi, rax
ffffffff8001c00c: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff8001c010: 77 de                	ja	0xffffffff8001bff0 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x20>
ffffffff8001c012: 48 8d 14 40          	lea	rdx, [rax + 2*rax]
ffffffff8001c016: 48 8b 3c d1          	mov	rdi, qword ptr [rcx + 8*rdx]
ffffffff8001c01a: 48 39 f7             	cmp	rdi, rsi
ffffffff8001c01d: 75 0c                	jne	0xffffffff8001c02b <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x5b>
ffffffff8001c01f: 48 8b 44 d1 08       	mov	rax, qword ptr [rcx + 8*rdx + 0x8]
ffffffff8001c024: 48 8b 54 d1 10       	mov	rdx, qword ptr [rcx + 8*rdx + 0x10]
ffffffff8001c029: c3                   	ret
ffffffff8001c02a: c3                   	ret
ffffffff8001c02b: 48 83 d0 00          	adc	rax, 0x0
ffffffff8001c02f: 74 2b                	je	0xffffffff8001c05c <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8c>
ffffffff8001c031: 48 8d 3c 40          	lea	rdi, [rax + 2*rax]
ffffffff8001c035: 48 8b 44 f9 f0       	mov	rax, qword ptr [rcx + 8*rdi - 0x10]
ffffffff8001c03a: 48 8b 54 f9 f8       	mov	rdx, qword ptr [rcx + 8*rdi - 0x8]
ffffffff8001c03f: 48 2b 74 f9 e8       	sub	rsi, qword ptr [rcx + 8*rdi - 0x18]
ffffffff8001c044: 75 07                	jne	0xffffffff8001c04d <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x7d>
ffffffff8001c046: 48 29 f2             	sub	rdx, rsi
ffffffff8001c049: 48 01 f0             	add	rax, rsi
ffffffff8001c04c: c3                   	ret
ffffffff8001c04d: 48 39 f2             	cmp	rdx, rsi
ffffffff8001c050: 76 08                	jbe	0xffffffff8001c05a <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8a>
ffffffff8001c052: 80 3c 30 c0          	cmp	byte ptr [rax + rsi], -0x40
ffffffff8001c056: 7d ee                	jge	0xffffffff8001c046 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x76>
ffffffff8001c058: eb 02                	jmp	0xffffffff8001c05c <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8c>
ffffffff8001c05a: 74 ea                	je	0xffffffff8001c046 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x76>
ffffffff8001c05c: 31 c0                	xor	eax, eax
ffffffff8001c05e: c3                   	ret
ffffffff8001c05f: cc                   	int3

ffffffff8001c060 <<&T as core::fmt::Debug>::fmt::h1009f963b9ab3bfa>:
ffffffff8001c060: 48 89 f2             	mov	rdx, rsi
ffffffff8001c063: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001c066: 48 8b 78 08          	mov	rdi, qword ptr [rax + 0x8]
ffffffff8001c06a: 48 8b 70 10          	mov	rsi, qword ptr [rax + 0x10]
ffffffff8001c06e: e9 1d 2f 00 00       	jmp	0xffffffff8001ef90 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff8001c073: cc                   	int3
ffffffff8001c074: cc                   	int3
ffffffff8001c075: cc                   	int3
ffffffff8001c076: cc                   	int3
ffffffff8001c077: cc                   	int3
ffffffff8001c078: cc                   	int3
ffffffff8001c079: cc                   	int3
ffffffff8001c07a: cc                   	int3
ffffffff8001c07b: cc                   	int3
ffffffff8001c07c: cc                   	int3
ffffffff8001c07d: cc                   	int3
ffffffff8001c07e: cc                   	int3
ffffffff8001c07f: cc                   	int3

ffffffff8001c080 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>:
ffffffff8001c080: 48 89 f8             	mov	rax, rdi
ffffffff8001c083: f7 c1 00 01 00 00    	test	ecx, 0x100
ffffffff8001c089: 75 17                	jne	0xffffffff8001c0a2 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x22>
ffffffff8001c08b: f6 c1 01             	test	cl, 0x1
ffffffff8001c08e: 74 29                	je	0xffffffff8001c0b9 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x39>
ffffffff8001c090: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff8001c094: 0f 83 87 00 00 00    	jae	0xffffffff8001c121 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xa1>
ffffffff8001c09a: 49 89 d0             	mov	r8, rdx
ffffffff8001c09d: e9 ac 00 00 00       	jmp	0xffffffff8001c14e <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xce>
ffffffff8001c0a2: f6 c1 01             	test	cl, 0x1
ffffffff8001c0a5: 74 42                	je	0xffffffff8001c0e9 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x69>
ffffffff8001c0a7: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff8001c0ab: 0f 83 c8 00 00 00    	jae	0xffffffff8001c179 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xf9>
ffffffff8001c0b1: 49 89 d0             	mov	r8, rdx
ffffffff8001c0b4: e9 ee 00 00 00       	jmp	0xffffffff8001c1a7 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x127>
ffffffff8001c0b9: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff8001c0bd: 72 0e                	jb	0xffffffff8001c0cd <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x4d>
ffffffff8001c0bf: 48 83 c2 fc          	add	rdx, -0x4
ffffffff8001c0c3: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff8001c0c7: 0f 83 fe 00 00 00    	jae	0xffffffff8001c1cb <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x14b>
ffffffff8001c0cd: 48 89 50 18          	mov	qword ptr [rax + 0x18], rdx
ffffffff8001c0d1: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff8001c0d9: 48 c7 40 10 04 00 00 00      	mov	qword ptr [rax + 0x10], 0x4
ffffffff8001c0e1: 48 c7 00 02 00 00 00 	mov	qword ptr [rax], 0x2
ffffffff8001c0e8: c3                   	ret
ffffffff8001c0e9: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff8001c0ed: 72 0e                	jb	0xffffffff8001c0fd <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x7d>
ffffffff8001c0ef: 48 83 c2 f8          	add	rdx, -0x8
ffffffff8001c0f3: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff8001c0f7: 0f 83 fd 00 00 00    	jae	0xffffffff8001c1fa <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x17a>
ffffffff8001c0fd: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff8001c105: 48 c7 40 10 08 00 00 00      	mov	qword ptr [rax + 0x10], 0x8
ffffffff8001c10d: 48 89 50 18          	mov	qword ptr [rax + 0x18], rdx
ffffffff8001c111: 48 c7 40 20 10 00 00 00      	mov	qword ptr [rax + 0x20], 0x10
ffffffff8001c119: 48 c7 00 02 00 00 00 	mov	qword ptr [rax], 0x2
ffffffff8001c120: c3                   	ret
ffffffff8001c121: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c127: 44 8b 06             	mov	r8d, dword ptr [rsi]
ffffffff8001c12a: 44 89 c7             	mov	edi, r8d
ffffffff8001c12d: 0f cf                	bswap	edi
ffffffff8001c12f: 41 0f 44 f8          	cmove	edi, r8d
ffffffff8001c133: 4c 8d 42 fc          	lea	r8, [rdx - 0x4]
ffffffff8001c137: 49 83 f8 04          	cmp	r8, 0x4
ffffffff8001c13b: 72 11                	jb	0xffffffff8001c14e <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xce>
ffffffff8001c13d: 48 83 c2 f8          	add	rdx, -0x8
ffffffff8001c141: 49 89 d0             	mov	r8, rdx
ffffffff8001c144: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff8001c148: 0f 83 de 00 00 00    	jae	0xffffffff8001c22c <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x1ac>
ffffffff8001c14e: c7 40 1c 00 00 00 00 	mov	dword ptr [rax + 0x1c], 0x0
ffffffff8001c155: 48 c7 40 20 0c 00 00 00      	mov	qword ptr [rax + 0x20], 0xc
ffffffff8001c15d: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff8001c165: 48 c7 40 10 04 00 00 00      	mov	qword ptr [rax + 0x10], 0x4
ffffffff8001c16d: 44 89 40 18          	mov	dword ptr [rax + 0x18], r8d
ffffffff8001c171: 48 c7 00 02 00 00 00 	mov	qword ptr [rax], 0x2
ffffffff8001c178: c3                   	ret
ffffffff8001c179: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c17f: 4c 8b 06             	mov	r8, qword ptr [rsi]
ffffffff8001c182: 4c 89 c7             	mov	rdi, r8
ffffffff8001c185: 48 0f cf             	bswap	rdi
ffffffff8001c188: 49 0f 44 f8          	cmove	rdi, r8
ffffffff8001c18c: 4c 8d 42 f8          	lea	r8, [rdx - 0x8]
ffffffff8001c190: 49 83 f8 08          	cmp	r8, 0x8
ffffffff8001c194: 72 11                	jb	0xffffffff8001c1a7 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x127>
ffffffff8001c196: 48 83 c2 f0          	add	rdx, -0x10
ffffffff8001c19a: 49 89 d0             	mov	r8, rdx
ffffffff8001c19d: 48 83 fa 08          	cmp	rdx, 0x8
ffffffff8001c1a1: 0f 83 b4 00 00 00    	jae	0xffffffff8001c25b <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x1db>
ffffffff8001c1a7: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 0x8], 0x0
ffffffff8001c1af: 48 c7 40 10 08 00 00 00      	mov	qword ptr [rax + 0x10], 0x8
ffffffff8001c1b7: 4c 89 40 18          	mov	qword ptr [rax + 0x18], r8
ffffffff8001c1bb: 48 c7 40 20 18 00 00 00      	mov	qword ptr [rax + 0x20], 0x18
ffffffff8001c1c3: 48 c7 00 02 00 00 00 	mov	qword ptr [rax], 0x2
ffffffff8001c1ca: c3                   	ret
ffffffff8001c1cb: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c1d1: 8b 0e                	mov	ecx, dword ptr [rsi]
ffffffff8001c1d3: 8b 56 04             	mov	edx, dword ptr [rsi + 0x4]
ffffffff8001c1d6: 89 cf                	mov	edi, ecx
ffffffff8001c1d8: 0f cf                	bswap	edi
ffffffff8001c1da: 0f 44 f9             	cmove	edi, ecx
ffffffff8001c1dd: 89 d6                	mov	esi, edx
ffffffff8001c1df: 0f ce                	bswap	esi
ffffffff8001c1e1: 0f 44 f2             	cmove	esi, edx
ffffffff8001c1e4: 40 0f b6 ce          	movzx	ecx, sil
ffffffff8001c1e8: 89 f2                	mov	edx, esi
ffffffff8001c1ea: c1 ea 08             	shr	edx, 0x8
ffffffff8001c1ed: be 08 00 00 00       	mov	esi, 0x8
ffffffff8001c1f2: 45 31 c9             	xor	r9d, r9d
ffffffff8001c1f5: e9 95 00 00 00       	jmp	0xffffffff8001c28f <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x20f>
ffffffff8001c1fa: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c200: 48 8b 0e             	mov	rcx, qword ptr [rsi]
ffffffff8001c203: 48 89 cf             	mov	rdi, rcx
ffffffff8001c206: 48 0f cf             	bswap	rdi
ffffffff8001c209: 48 8b 56 08          	mov	rdx, qword ptr [rsi + 0x8]
ffffffff8001c20d: 48 0f 44 f9          	cmove	rdi, rcx
ffffffff8001c211: 48 89 d1             	mov	rcx, rdx
ffffffff8001c214: 48 0f c9             	bswap	rcx
ffffffff8001c217: 48 0f 44 ca          	cmove	rcx, rdx
ffffffff8001c21b: 48 89 ca             	mov	rdx, rcx
ffffffff8001c21e: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8001c222: be 10 00 00 00       	mov	esi, 0x10
ffffffff8001c227: 45 31 c9             	xor	r9d, r9d
ffffffff8001c22a: eb 63                	jmp	0xffffffff8001c28f <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x20f>
ffffffff8001c22c: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c232: 8b 4e 04             	mov	ecx, dword ptr [rsi + 0x4]
ffffffff8001c235: 8b 56 08             	mov	edx, dword ptr [rsi + 0x8]
ffffffff8001c238: 89 ce                	mov	esi, ecx
ffffffff8001c23a: 0f ce                	bswap	esi
ffffffff8001c23c: 0f 44 f1             	cmove	esi, ecx
ffffffff8001c23f: 89 d1                	mov	ecx, edx
ffffffff8001c241: 0f c9                	bswap	ecx
ffffffff8001c243: 0f 44 ca             	cmove	ecx, edx
ffffffff8001c246: 89 ff                	mov	edi, edi
ffffffff8001c248: 4c 63 c1             	movsxd	r8, ecx
ffffffff8001c24b: 40 0f b6 ce          	movzx	ecx, sil
ffffffff8001c24f: 89 f2                	mov	edx, esi
ffffffff8001c251: c1 ea 08             	shr	edx, 0x8
ffffffff8001c254: be 0c 00 00 00       	mov	esi, 0xc
ffffffff8001c259: eb 2e                	jmp	0xffffffff8001c289 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x209>
ffffffff8001c25b: f7 c1 00 00 01 00    	test	ecx, 0x10000
ffffffff8001c261: 48 8b 56 08          	mov	rdx, qword ptr [rsi + 0x8]
ffffffff8001c265: 48 89 d1             	mov	rcx, rdx
ffffffff8001c268: 48 0f c9             	bswap	rcx
ffffffff8001c26b: 48 8b 76 10          	mov	rsi, qword ptr [rsi + 0x10]
ffffffff8001c26f: 48 0f 44 ca          	cmove	rcx, rdx
ffffffff8001c273: 49 89 f0             	mov	r8, rsi
ffffffff8001c276: 49 0f c8             	bswap	r8
ffffffff8001c279: 4c 0f 44 c6          	cmove	r8, rsi
ffffffff8001c27d: 48 89 ca             	mov	rdx, rcx
ffffffff8001c280: 48 c1 ea 20          	shr	rdx, 0x20
ffffffff8001c284: be 18 00 00 00       	mov	esi, 0x18
ffffffff8001c289: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff8001c28f: 4c 89 08             	mov	qword ptr [rax], r9
ffffffff8001c292: 4c 89 40 08          	mov	qword ptr [rax + 0x8], r8
ffffffff8001c296: 48 89 78 10          	mov	qword ptr [rax + 0x10], rdi
ffffffff8001c29a: 48 89 50 18          	mov	qword ptr [rax + 0x18], rdx
ffffffff8001c29e: 89 48 20             	mov	dword ptr [rax + 0x20], ecx
ffffffff8001c2a1: 48 89 70 28          	mov	qword ptr [rax + 0x28], rsi
ffffffff8001c2a5: c3                   	ret
ffffffff8001c2a6: cc                   	int3
ffffffff8001c2a7: cc                   	int3
ffffffff8001c2a8: cc                   	int3
ffffffff8001c2a9: cc                   	int3
ffffffff8001c2aa: cc                   	int3
ffffffff8001c2ab: cc                   	int3
ffffffff8001c2ac: cc                   	int3
ffffffff8001c2ad: cc                   	int3
ffffffff8001c2ae: cc                   	int3
ffffffff8001c2af: cc                   	int3

ffffffff8001c2b0 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>:
ffffffff8001c2b0: 41 57                	push	r15
ffffffff8001c2b2: 41 56                	push	r14
ffffffff8001c2b4: 41 54                	push	r12
ffffffff8001c2b6: 53                   	push	rbx
ffffffff8001c2b7: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001c2bb: 4c 8b 37             	mov	r14, qword ptr [rdi]
ffffffff8001c2be: 4c 8b 7f 08          	mov	r15, qword ptr [rdi + 0x8]
ffffffff8001c2c2: b0 01                	mov	al, 0x1
ffffffff8001c2c4: 4d 39 f7             	cmp	r15, r14
ffffffff8001c2c7: 0f 86 3c 02 00 00    	jbe	0xffffffff8001c509 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001c2cd: 4d 85 f6             	test	r14, r14
ffffffff8001c2d0: 0f 84 3f 02 00 00    	je	0xffffffff8001c515 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x265>
ffffffff8001c2d6: 49 83 fe f7          	cmp	r14, -0x9
ffffffff8001c2da: 0f 87 29 02 00 00    	ja	0xffffffff8001c509 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001c2e0: 49 83 c6 07          	add	r14, 0x7
ffffffff8001c2e4: 49 83 e6 f8          	and	r14, -0x8
ffffffff8001c2e8: 49 83 e7 f8          	and	r15, -0x8
ffffffff8001c2ec: 4c 89 f9             	mov	rcx, r15
ffffffff8001c2ef: 4c 29 f1             	sub	rcx, r14
ffffffff8001c2f2: 0f 86 11 02 00 00    	jbe	0xffffffff8001c509 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001c2f8: 48 8b 77 20          	mov	rsi, qword ptr [rdi + 0x20]
ffffffff8001c2fc: 48 85 f6             	test	rsi, rsi
ffffffff8001c2ff: 74 30                	je	0xffffffff8001c331 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x81>
ffffffff8001c301: 48 83 f9 1f          	cmp	rcx, 0x1f
ffffffff8001c305: 0f 86 fe 01 00 00    	jbe	0xffffffff8001c509 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001c30b: 49 c7 06 03 00 00 00 	mov	qword ptr [r14], 0x3
ffffffff8001c312: 49 8d 56 08          	lea	rdx, [r14 + 0x8]
ffffffff8001c316: 4c 89 f8             	mov	rax, r15
ffffffff8001c319: 48 29 d0             	sub	rax, rdx
ffffffff8001c31c: 48 3d 00 01 00 00    	cmp	rax, 0x100
ffffffff8001c322: 73 74                	jae	0xffffffff8001c398 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0xe8>
ffffffff8001c324: 48 8d 48 e8          	lea	rcx, [rax - 0x18]
ffffffff8001c328: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8001c32c: e9 c3 00 00 00       	jmp	0xffffffff8001c3f4 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x144>
ffffffff8001c331: 48 81 f9 0f 04 00 00 	cmp	rcx, 0x40f
ffffffff8001c338: 0f 86 cb 01 00 00    	jbe	0xffffffff8001c509 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001c33e: 49 c7 06 01 00 00 00 	mov	qword ptr [r14], 0x1
ffffffff8001c345: 49 8d 5e 08          	lea	rbx, [r14 + 0x8]
ffffffff8001c349: ba 00 04 00 00       	mov	edx, 0x400
ffffffff8001c34e: 49 89 fc             	mov	r12, rdi
ffffffff8001c351: 48 89 df             	mov	rdi, rbx
ffffffff8001c354: 31 f6                	xor	esi, esi
ffffffff8001c356: ff 15 e4 00 02 00    	call	qword ptr [rip + 0x200e4] # 0xffffffff8003c440
ffffffff8001c35c: 4c 89 e7             	mov	rdi, r12
ffffffff8001c35f: 49 8d 86 08 04 00 00 	lea	rax, [r14 + 0x408]
ffffffff8001c366: 49 89 5c 24 20       	mov	qword ptr [r12 + 0x20], rbx
ffffffff8001c36b: 49 8d b6 10 04 00 00 	lea	rsi, [r14 + 0x410]
ffffffff8001c372: 4c 89 fa             	mov	rdx, r15
ffffffff8001c375: 48 29 f2             	sub	rdx, rsi
ffffffff8001c378: 48 83 fa 17          	cmp	rdx, 0x17
ffffffff8001c37c: 76 2f                	jbe	0xffffffff8001c3ad <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0xfd>
ffffffff8001c37e: 48 81 fa 00 01 00 00 	cmp	rdx, 0x100
ffffffff8001c385: 0f 83 be 00 00 00    	jae	0xffffffff8001c449 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x199>
ffffffff8001c38b: 48 8d 4a e8          	lea	rcx, [rdx - 0x18]
ffffffff8001c38f: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8001c393: e9 f5 00 00 00       	jmp	0xffffffff8001c48d <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1dd>
ffffffff8001c398: 48 3d 00 02 00 00    	cmp	rax, 0x200
ffffffff8001c39e: 73 26                	jae	0xffffffff8001c3c6 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x116>
ffffffff8001c3a0: 48 89 c1             	mov	rcx, rax
ffffffff8001c3a3: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8001c3a7: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8001c3ab: eb 47                	jmp	0xffffffff8001c3f4 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x144>
ffffffff8001c3ad: 49 83 c7 f8          	add	r15, -0x8
ffffffff8001c3b1: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001c3b6: 49 39 c7             	cmp	r15, rax
ffffffff8001c3b9: 74 03                	je	0xffffffff8001c3be <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x10e>
ffffffff8001c3bb: 4c 89 38             	mov	qword ptr [rax], r15
ffffffff8001c3be: 4c 89 f8             	mov	rax, r15
ffffffff8001c3c1: e9 2c 01 00 00       	jmp	0xffffffff8001c4f2 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x242>
ffffffff8001c3c6: 4c 0f bd c0          	bsr	r8, rax
ffffffff8001c3ca: 49 83 f0 3f          	xor	r8, 0x3f
ffffffff8001c3ce: b1 3d                	mov	cl, 0x3d
ffffffff8001c3d0: 44 28 c1             	sub	cl, r8b
ffffffff8001c3d3: 49 89 c1             	mov	r9, rax
ffffffff8001c3d6: 49 d3 e9             	shr	r9, cl
ffffffff8001c3d9: 41 c1 e0 02          	shl	r8d, 0x2
ffffffff8001c3dd: 4d 29 c1             	sub	r9, r8
ffffffff8001c3e0: 49 81 c1 01 01 00 00 	add	r9, 0x101
ffffffff8001c3e7: 49 83 f9 7f          	cmp	r9, 0x7f
ffffffff8001c3eb: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8001c3f0: 49 0f 42 c9          	cmovb	rcx, r9
ffffffff8001c3f4: 4c 8d 04 ce          	lea	r8, [rsi + 8*rcx]
ffffffff8001c3f8: 48 8b 34 ce          	mov	rsi, qword ptr [rsi + 8*rcx]
ffffffff8001c3fc: 48 85 f6             	test	rsi, rsi
ffffffff8001c3ff: 74 14                	je	0xffffffff8001c415 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x165>
ffffffff8001c401: 49 89 76 08          	mov	qword ptr [r14 + 0x8], rsi
ffffffff8001c405: 4d 89 46 10          	mov	qword ptr [r14 + 0x10], r8
ffffffff8001c409: 49 89 10             	mov	qword ptr [r8], rdx
ffffffff8001c40c: 48 83 c6 08          	add	rsi, 0x8
ffffffff8001c410: 49 89 f0             	mov	r8, rsi
ffffffff8001c413: eb 24                	jmp	0xffffffff8001c439 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x189>
ffffffff8001c415: 31 f6                	xor	esi, esi
ffffffff8001c417: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8001c41b: 40 0f 93 c6          	setae	sil
ffffffff8001c41f: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff8001c425: 49 d3 e1             	shl	r9, cl
ffffffff8001c428: 4c 31 4c f7 10       	xor	qword ptr [rdi + 8*rsi + 0x10], r9
ffffffff8001c42d: 49 c7 46 08 00 00 00 00      	mov	qword ptr [r14 + 0x8], 0x0
ffffffff8001c435: 4d 89 46 10          	mov	qword ptr [r14 + 0x10], r8
ffffffff8001c439: 49 89 10             	mov	qword ptr [r8], rdx
ffffffff8001c43c: 49 89 46 18          	mov	qword ptr [r14 + 0x18], rax
ffffffff8001c440: 49 89 47 f8          	mov	qword ptr [r15 - 0x8], rax
ffffffff8001c444: e9 af 00 00 00       	jmp	0xffffffff8001c4f8 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x248>
ffffffff8001c449: 48 81 fa 00 02 00 00 	cmp	rdx, 0x200
ffffffff8001c450: 73 0d                	jae	0xffffffff8001c45f <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1af>
ffffffff8001c452: 48 89 d1             	mov	rcx, rdx
ffffffff8001c455: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8001c459: 48 83 c1 0d          	add	rcx, 0xd
ffffffff8001c45d: eb 2e                	jmp	0xffffffff8001c48d <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1dd>
ffffffff8001c45f: 4c 0f bd c2          	bsr	r8, rdx
ffffffff8001c463: 49 83 f0 3f          	xor	r8, 0x3f
ffffffff8001c467: b1 3d                	mov	cl, 0x3d
ffffffff8001c469: 44 28 c1             	sub	cl, r8b
ffffffff8001c46c: 49 89 d1             	mov	r9, rdx
ffffffff8001c46f: 49 d3 e9             	shr	r9, cl
ffffffff8001c472: 41 c1 e0 02          	shl	r8d, 0x2
ffffffff8001c476: 4d 29 c1             	sub	r9, r8
ffffffff8001c479: 49 81 c1 01 01 00 00 	add	r9, 0x101
ffffffff8001c480: 49 83 f9 7f          	cmp	r9, 0x7f
ffffffff8001c484: b9 7f 00 00 00       	mov	ecx, 0x7f
ffffffff8001c489: 49 0f 42 c9          	cmovb	rcx, r9
ffffffff8001c48d: 4c 8d 04 cb          	lea	r8, [rbx + 8*rcx]
ffffffff8001c491: 4c 8b 0c cb          	mov	r9, qword ptr [rbx + 8*rcx]
ffffffff8001c495: 4d 85 c9             	test	r9, r9
ffffffff8001c498: 74 1a                	je	0xffffffff8001c4b4 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x204>
ffffffff8001c49a: 4d 89 8e 10 04 00 00 	mov	qword ptr [r14 + 0x410], r9
ffffffff8001c4a1: 4d 89 86 18 04 00 00 	mov	qword ptr [r14 + 0x418], r8
ffffffff8001c4a8: 49 89 30             	mov	qword ptr [r8], rsi
ffffffff8001c4ab: 49 83 c1 08          	add	r9, 0x8
ffffffff8001c4af: 4d 89 c8             	mov	r8, r9
ffffffff8001c4b2: eb 2b                	jmp	0xffffffff8001c4df <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x22f>
ffffffff8001c4b4: 45 31 c9             	xor	r9d, r9d
ffffffff8001c4b7: 48 83 f9 40          	cmp	rcx, 0x40
ffffffff8001c4bb: 41 0f 93 c1          	setae	r9b
ffffffff8001c4bf: 41 ba 01 00 00 00    	mov	r10d, 0x1
ffffffff8001c4c5: 49 d3 e2             	shl	r10, cl
ffffffff8001c4c8: 4e 31 54 cf 10       	xor	qword ptr [rdi + 8*r9 + 0x10], r10
ffffffff8001c4cd: 49 c7 86 10 04 00 00 00 00 00 00     	mov	qword ptr [r14 + 0x410], 0x0
ffffffff8001c4d8: 4d 89 86 18 04 00 00 	mov	qword ptr [r14 + 0x418], r8
ffffffff8001c4df: 49 89 30             	mov	qword ptr [r8], rsi
ffffffff8001c4e2: 49 89 96 20 04 00 00 	mov	qword ptr [r14 + 0x420], rdx
ffffffff8001c4e9: 49 89 57 f8          	mov	qword ptr [r15 - 0x8], rdx
ffffffff8001c4ed: b9 03 00 00 00       	mov	ecx, 0x3
ffffffff8001c4f2: 49 01 ce             	add	r14, rcx
ffffffff8001c4f5: 4c 89 30             	mov	qword ptr [rax], r14
ffffffff8001c4f8: 48 c7 47 08 00 00 00 00      	mov	qword ptr [rdi + 0x8], 0x0
ffffffff8001c500: 48 c7 07 00 00 00 00 	mov	qword ptr [rdi], 0x0
ffffffff8001c507: 31 c0                	xor	eax, eax
ffffffff8001c509: 48 83 c4 38          	add	rsp, 0x38
ffffffff8001c50d: 5b                   	pop	rbx
ffffffff8001c50e: 41 5c                	pop	r12
ffffffff8001c510: 41 5e                	pop	r14
ffffffff8001c512: 41 5f                	pop	r15
ffffffff8001c514: c3                   	ret
ffffffff8001c515: 48 c7 44 24 08 b0 8b 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd7450
ffffffff8001c51e: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001c527: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001c530: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001c539: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001c542: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001c547: 48 c7 c6 c0 8b 02 80 	mov	rsi, -0x7ffd7440
ffffffff8001c54e: e8 1d 4b 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c553: cc                   	int3
ffffffff8001c554: cc                   	int3
ffffffff8001c555: cc                   	int3
ffffffff8001c556: cc                   	int3
ffffffff8001c557: cc                   	int3
ffffffff8001c558: cc                   	int3
ffffffff8001c559: cc                   	int3
ffffffff8001c55a: cc                   	int3
ffffffff8001c55b: cc                   	int3
ffffffff8001c55c: cc                   	int3
ffffffff8001c55d: cc                   	int3
ffffffff8001c55e: cc                   	int3
ffffffff8001c55f: cc                   	int3

ffffffff8001c560 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>:
ffffffff8001c560: 48 8d 47 07          	lea	rax, [rdi + 0x7]
ffffffff8001c564: 48 83 e0 f8          	and	rax, -0x8
ffffffff8001c568: c3                   	ret
ffffffff8001c569: cc                   	int3
ffffffff8001c56a: cc                   	int3
ffffffff8001c56b: cc                   	int3
ffffffff8001c56c: cc                   	int3
ffffffff8001c56d: cc                   	int3
ffffffff8001c56e: cc                   	int3
ffffffff8001c56f: cc                   	int3

ffffffff8001c570 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>:
ffffffff8001c570: 89 d0                	mov	eax, edx
ffffffff8001c572: 48 8d 04 46          	lea	rax, [rsi + 2*rax]
ffffffff8001c576: 48 ff c0             	inc	rax
ffffffff8001c579: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff8001c57c: c3                   	ret
ffffffff8001c57d: cc                   	int3
ffffffff8001c57e: cc                   	int3
ffffffff8001c57f: cc                   	int3

ffffffff8001c580 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>:
ffffffff8001c580: 48 89 f8             	mov	rax, rdi
ffffffff8001c583: 48 83 e0 f8          	and	rax, -0x8
ffffffff8001c587: c3                   	ret
ffffffff8001c588: cc                   	int3
ffffffff8001c589: cc                   	int3
ffffffff8001c58a: cc                   	int3
ffffffff8001c58b: cc                   	int3
ffffffff8001c58c: cc                   	int3
ffffffff8001c58d: cc                   	int3
ffffffff8001c58e: cc                   	int3
ffffffff8001c58f: cc                   	int3

ffffffff8001c590 <talc::talc::tag::Tag::set_above_free::hb00f2bbb4a63b30b>:
ffffffff8001c590: 48 83 07 02          	add	qword ptr [rdi], 0x2
ffffffff8001c594: c3                   	ret
ffffffff8001c595: cc                   	int3
ffffffff8001c596: cc                   	int3
ffffffff8001c597: cc                   	int3
ffffffff8001c598: cc                   	int3
ffffffff8001c599: cc                   	int3
ffffffff8001c59a: cc                   	int3
ffffffff8001c59b: cc                   	int3
ffffffff8001c59c: cc                   	int3
ffffffff8001c59d: cc                   	int3
ffffffff8001c59e: cc                   	int3
ffffffff8001c59f: cc                   	int3

ffffffff8001c5a0 <talc::talc::tag::Tag::clear_above_free::hac6cde6801e53680>:
ffffffff8001c5a0: 48 83 07 fe          	add	qword ptr [rdi], -0x2
ffffffff8001c5a4: c3                   	ret
ffffffff8001c5a5: cc                   	int3
ffffffff8001c5a6: cc                   	int3
ffffffff8001c5a7: cc                   	int3
ffffffff8001c5a8: cc                   	int3
ffffffff8001c5a9: cc                   	int3
ffffffff8001c5aa: cc                   	int3
ffffffff8001c5ab: cc                   	int3
ffffffff8001c5ac: cc                   	int3
ffffffff8001c5ad: cc                   	int3
ffffffff8001c5ae: cc                   	int3
ffffffff8001c5af: cc                   	int3

ffffffff8001c5b0 <<log::Level as core::fmt::Display>::fmt::h000ffdd7435d1788>:
ffffffff8001c5b0: 48 89 f0             	mov	rax, rsi
ffffffff8001c5b3: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff8001c5b6: 48 c1 e1 04          	shl	rcx, 0x4
ffffffff8001c5ba: 48 8b b1 20 8c 02 80 	mov	rsi, qword ptr [rcx - 0x7ffd73e0]
ffffffff8001c5c1: 48 8b 91 28 8c 02 80 	mov	rdx, qword ptr [rcx - 0x7ffd73d8]
ffffffff8001c5c8: 48 89 c7             	mov	rdi, rax
ffffffff8001c5cb: e9 e0 21 00 00       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>

ffffffff8001c5d0 <<log::NopLogger as log::Log>::enabled::h3974ef0408b93444>:
ffffffff8001c5d0: 31 c0                	xor	eax, eax
ffffffff8001c5d2: c3                   	ret
ffffffff8001c5d3: cc                   	int3
ffffffff8001c5d4: cc                   	int3
ffffffff8001c5d5: cc                   	int3
ffffffff8001c5d6: cc                   	int3
ffffffff8001c5d7: cc                   	int3
ffffffff8001c5d8: cc                   	int3
ffffffff8001c5d9: cc                   	int3
ffffffff8001c5da: cc                   	int3
ffffffff8001c5db: cc                   	int3
ffffffff8001c5dc: cc                   	int3
ffffffff8001c5dd: cc                   	int3
ffffffff8001c5de: cc                   	int3
ffffffff8001c5df: cc                   	int3

ffffffff8001c5e0 <<log::NopLogger as log::Log>::log::h259ff80bad1c011e>:
ffffffff8001c5e0: c3                   	ret
ffffffff8001c5e1: cc                   	int3
ffffffff8001c5e2: cc                   	int3
ffffffff8001c5e3: cc                   	int3
ffffffff8001c5e4: cc                   	int3
ffffffff8001c5e5: cc                   	int3
ffffffff8001c5e6: cc                   	int3
ffffffff8001c5e7: cc                   	int3
ffffffff8001c5e8: cc                   	int3
ffffffff8001c5e9: cc                   	int3
ffffffff8001c5ea: cc                   	int3
ffffffff8001c5eb: cc                   	int3
ffffffff8001c5ec: cc                   	int3
ffffffff8001c5ed: cc                   	int3
ffffffff8001c5ee: cc                   	int3
ffffffff8001c5ef: cc                   	int3

ffffffff8001c5f0 <<log::NopLogger as log::Log>::flush::h608f03e76d2b25da>:
ffffffff8001c5f0: c3                   	ret
ffffffff8001c5f1: cc                   	int3
ffffffff8001c5f2: cc                   	int3
ffffffff8001c5f3: cc                   	int3
ffffffff8001c5f4: cc                   	int3
ffffffff8001c5f5: cc                   	int3
ffffffff8001c5f6: cc                   	int3
ffffffff8001c5f7: cc                   	int3
ffffffff8001c5f8: cc                   	int3
ffffffff8001c5f9: cc                   	int3
ffffffff8001c5fa: cc                   	int3
ffffffff8001c5fb: cc                   	int3
ffffffff8001c5fc: cc                   	int3
ffffffff8001c5fd: cc                   	int3
ffffffff8001c5fe: cc                   	int3
ffffffff8001c5ff: cc                   	int3

ffffffff8001c600 <log::set_logger::h21c01bbeecbbb945>:
ffffffff8001c600: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001c605: 31 c0                	xor	eax, eax
ffffffff8001c607: f0                   	lock
ffffffff8001c608: 48 0f b1 0d 10 fe 01 00      	cmpxchg	qword ptr [rip + 0x1fe10], rcx # 0xffffffff8003c420 <log::STATE::h392333f3740010ba>
ffffffff8001c610: 48 89 c1             	mov	rcx, rax
ffffffff8001c613: 0f 94 c0             	sete	al
ffffffff8001c616: 75 1c                	jne	0xffffffff8001c634 <log::set_logger::h21c01bbeecbbb945+0x34>
ffffffff8001c618: 48 89 3d 71 ea 00 00 	mov	qword ptr [rip + 0xea71], rdi # 0xffffffff8002b090 <log::LOGGER::hdff3cf2907474344.0>
ffffffff8001c61f: 48 89 35 72 ea 00 00 	mov	qword ptr [rip + 0xea72], rsi # 0xffffffff8002b098 <log::LOGGER::hdff3cf2907474344.1>
ffffffff8001c626: 48 c7 05 ef fd 01 00 02 00 00 00     	mov	qword ptr [rip + 0x1fdef], 0x2 # 0xffffffff8003c420 <log::STATE::h392333f3740010ba>
ffffffff8001c631: 34 01                	xor	al, 0x1
ffffffff8001c633: c3                   	ret
ffffffff8001c634: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff8001c638: 75 22                	jne	0xffffffff8001c65c <log::set_logger::h21c01bbeecbbb945+0x5c>
ffffffff8001c63a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001c640: 48 8b 0d d9 fd 01 00 	mov	rcx, qword ptr [rip + 0x1fdd9] # 0xffffffff8003c420 <log::STATE::h392333f3740010ba>
ffffffff8001c647: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff8001c64b: 75 0f                	jne	0xffffffff8001c65c <log::set_logger::h21c01bbeecbbb945+0x5c>
ffffffff8001c64d: f3 90                	pause
ffffffff8001c64f: 48 8b 0d ca fd 01 00 	mov	rcx, qword ptr [rip + 0x1fdca] # 0xffffffff8003c420 <log::STATE::h392333f3740010ba>
ffffffff8001c656: 48 83 f9 01          	cmp	rcx, 0x1
ffffffff8001c65a: 74 f1                	je	0xffffffff8001c64d <log::set_logger::h21c01bbeecbbb945+0x4d>
ffffffff8001c65c: 34 01                	xor	al, 0x1
ffffffff8001c65e: c3                   	ret
ffffffff8001c65f: cc                   	int3

ffffffff8001c660 <log::__private_api::log_impl::hbf977b1a5812fb97>:
ffffffff8001c660: 55                   	push	rbp
ffffffff8001c661: 41 57                	push	r15
ffffffff8001c663: 41 56                	push	r14
ffffffff8001c665: 41 55                	push	r13
ffffffff8001c667: 41 54                	push	r12
ffffffff8001c669: 53                   	push	rbx
ffffffff8001c66a: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001c671: 48 85 c9             	test	rcx, rcx
ffffffff8001c674: 0f 85 db 00 00 00    	jne	0xffffffff8001c755 <log::__private_api::log_impl::hbf977b1a5812fb97+0xf5>
ffffffff8001c67a: 48 8b 02             	mov	rax, qword ptr [rdx]
ffffffff8001c67d: 48 8b 4a 08          	mov	rcx, qword ptr [rdx + 0x8]
ffffffff8001c681: 4c 8b 42 20          	mov	r8, qword ptr [rdx + 0x20]
ffffffff8001c685: 4c 8b 4a 18          	mov	r9, qword ptr [rdx + 0x18]
ffffffff8001c689: 48 8b 52 10          	mov	rdx, qword ptr [rdx + 0x10]
ffffffff8001c68d: 4c 8b 17             	mov	r10, qword ptr [rdi]
ffffffff8001c690: 4c 8b 5f 08          	mov	r11, qword ptr [rdi + 0x8]
ffffffff8001c694: 48 8b 5f 10          	mov	rbx, qword ptr [rdi + 0x10]
ffffffff8001c698: 4c 8b 77 18          	mov	r14, qword ptr [rdi + 0x18]
ffffffff8001c69c: 4c 8b 7f 20          	mov	r15, qword ptr [rdi + 0x20]
ffffffff8001c6a0: 48 8b 7f 28          	mov	rdi, qword ptr [rdi + 0x28]
ffffffff8001c6a4: 4d 8b 20             	mov	r12, qword ptr [r8]
ffffffff8001c6a7: 4d 8b 68 08          	mov	r13, qword ptr [r8 + 0x8]
ffffffff8001c6ab: 45 8b 40 10          	mov	r8d, dword ptr [r8 + 0x10]
ffffffff8001c6af: 48 8b 2d 6a fd 01 00 	mov	rbp, qword ptr [rip + 0x1fd6a] # 0xffffffff8003c420 <log::STATE::h392333f3740010ba>
ffffffff8001c6b6: 48 83 fd 02          	cmp	rbp, 0x2
ffffffff8001c6ba: 48 89 74 24 38       	mov	qword ptr [rsp + 0x38], rsi
ffffffff8001c6bf: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001c6c4: 48 89 4c 24 48       	mov	qword ptr [rsp + 0x48], rcx
ffffffff8001c6c9: 4c 89 54 24 58       	mov	qword ptr [rsp + 0x58], r10
ffffffff8001c6ce: 4c 89 5c 24 60       	mov	qword ptr [rsp + 0x60], r11
ffffffff8001c6d3: 48 89 5c 24 68       	mov	qword ptr [rsp + 0x68], rbx
ffffffff8001c6d8: 4c 89 74 24 70       	mov	qword ptr [rsp + 0x70], r14
ffffffff8001c6dd: 4c 89 7c 24 78       	mov	qword ptr [rsp + 0x78], r15
ffffffff8001c6e2: 48 89 bc 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rdi
ffffffff8001c6ea: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001c6f3: 48 89 54 24 10       	mov	qword ptr [rsp + 0x10], rdx
ffffffff8001c6f8: 4c 89 4c 24 18       	mov	qword ptr [rsp + 0x18], r9
ffffffff8001c6fd: 48 c7 c0 d8 8b 02 80 	mov	rax, -0x7ffd7428
ffffffff8001c704: 48 0f 44 05 8c e9 00 00      	cmove	rax, qword ptr [rip + 0xe98c] # 0xffffffff8002b098 <log::LOGGER::hdff3cf2907474344.1>
ffffffff8001c70c: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001c715: 4c 89 64 24 28       	mov	qword ptr [rsp + 0x28], r12
ffffffff8001c71a: 4c 89 6c 24 30       	mov	qword ptr [rsp + 0x30], r13
ffffffff8001c71f: c7 44 24 50 01 00 00 00      	mov	dword ptr [rsp + 0x50], 0x1
ffffffff8001c727: 44 89 44 24 54       	mov	dword ptr [rsp + 0x54], r8d
ffffffff8001c72c: 48 c7 c7 80 8c 02 80 	mov	rdi, -0x7ffd7380
ffffffff8001c733: 48 0f 44 3d 55 e9 00 00      	cmove	rdi, qword ptr [rip + 0xe955] # 0xffffffff8002b090 <log::LOGGER::hdff3cf2907474344.0>
ffffffff8001c73b: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8001c740: ff 50 20             	call	qword ptr [rax + 0x20]
ffffffff8001c743: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001c74a: 5b                   	pop	rbx
ffffffff8001c74b: 41 5c                	pop	r12
ffffffff8001c74d: 41 5d                	pop	r13
ffffffff8001c74f: 41 5e                	pop	r14
ffffffff8001c751: 41 5f                	pop	r15
ffffffff8001c753: 5d                   	pop	rbp
ffffffff8001c754: c3                   	ret
ffffffff8001c755: 48 c7 44 24 08 d0 8c 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd7330
ffffffff8001c75e: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001c767: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001c770: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001c779: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001c782: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001c787: 48 c7 c6 48 8d 02 80 	mov	rsi, -0x7ffd72b8
ffffffff8001c78e: e8 dd 48 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c793: cc                   	int3
ffffffff8001c794: cc                   	int3
ffffffff8001c795: cc                   	int3
ffffffff8001c796: cc                   	int3
ffffffff8001c797: cc                   	int3
ffffffff8001c798: cc                   	int3
ffffffff8001c799: cc                   	int3
ffffffff8001c79a: cc                   	int3
ffffffff8001c79b: cc                   	int3
ffffffff8001c79c: cc                   	int3
ffffffff8001c79d: cc                   	int3
ffffffff8001c79e: cc                   	int3
ffffffff8001c79f: cc                   	int3

ffffffff8001c7a0 <log::__private_api::loc::h7d13c00ac743e0a8>:
ffffffff8001c7a0: 48 89 f8             	mov	rax, rdi
ffffffff8001c7a3: c3                   	ret
ffffffff8001c7a4: cc                   	int3
ffffffff8001c7a5: cc                   	int3
ffffffff8001c7a6: cc                   	int3
ffffffff8001c7a7: cc                   	int3
ffffffff8001c7a8: cc                   	int3
ffffffff8001c7a9: cc                   	int3
ffffffff8001c7aa: cc                   	int3
ffffffff8001c7ab: cc                   	int3
ffffffff8001c7ac: cc                   	int3
ffffffff8001c7ad: cc                   	int3
ffffffff8001c7ae: cc                   	int3
ffffffff8001c7af: cc                   	int3

ffffffff8001c7b0 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>:
ffffffff8001c7b0: 55                   	push	rbp
ffffffff8001c7b1: 41 57                	push	r15
ffffffff8001c7b3: 41 56                	push	r14
ffffffff8001c7b5: 41 55                	push	r13
ffffffff8001c7b7: 41 54                	push	r12
ffffffff8001c7b9: 53                   	push	rbx
ffffffff8001c7ba: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8001c7be: 48 89 fb             	mov	rbx, rdi
ffffffff8001c7c1: 31 c0                	xor	eax, eax
ffffffff8001c7c3: 31 c9                	xor	ecx, ecx
ffffffff8001c7c5: 49 89 dd             	mov	r13, rbx
ffffffff8001c7c8: 0f a2                	cpuid
ffffffff8001c7ca: 4c 87 eb             	xchg	r13, rbx
ffffffff8001c7cd: 41 89 ce             	mov	r14d, ecx
ffffffff8001c7d0: 41 89 d7             	mov	r15d, edx
ffffffff8001c7d3: 89 c5                	mov	ebp, eax
ffffffff8001c7d5: 31 c9                	xor	ecx, ecx
ffffffff8001c7d7: b8 00 00 00 80       	mov	eax, 0x80000000
ffffffff8001c7dc: 48 89 de             	mov	rsi, rbx
ffffffff8001c7df: 0f a2                	cpuid
ffffffff8001c7e1: 48 87 f3             	xchg	rsi, rbx
ffffffff8001c7e4: 41 89 c4             	mov	r12d, eax
ffffffff8001c7e7: 44 89 6c 24 04       	mov	dword ptr [rsp + 0x4], r13d
ffffffff8001c7ec: 44 89 7c 24 08       	mov	dword ptr [rsp + 0x8], r15d
ffffffff8001c7f1: 44 89 74 24 0c       	mov	dword ptr [rsp + 0xc], r14d
ffffffff8001c7f6: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001c7fb: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff8001c800: ba 0c 00 00 00       	mov	edx, 0xc
ffffffff8001c805: e8 16 44 00 00       	call	0xffffffff80020c20 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff8001c80a: 0f b6 54 24 10       	movzx	edx, byte ptr [rsp + 0x10]
ffffffff8001c80f: 48 c7 c0 60 8d 02 80 	mov	rax, -0x7ffd72a0
ffffffff8001c816: 84 d2                	test	dl, dl
ffffffff8001c818: 75 05                	jne	0xffffffff8001c81f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0x6f>
ffffffff8001c81a: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001c81f: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001c824: f6 c2 01             	test	dl, 0x1
ffffffff8001c827: 75 66                	jne	0xffffffff8001c88f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff8001c829: 48 83 7c 24 20 0c    	cmp	qword ptr [rsp + 0x20], 0xc
ffffffff8001c82f: 75 5e                	jne	0xffffffff8001c88f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff8001c831: 48 b9 47 65 6e 75 69 6e 65 49	movabs	rcx, 0x49656e69756e6547
ffffffff8001c83b: 48 33 08             	xor	rcx, qword ptr [rax]
ffffffff8001c83e: 8b 50 08             	mov	edx, dword ptr [rax + 0x8]
ffffffff8001c841: 48 81 f2 6e 74 65 6c 	xor	rdx, 0x6c65746e
ffffffff8001c848: 48 09 ca             	or	rdx, rcx
ffffffff8001c84b: 74 40                	je	0xffffffff8001c88d <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdd>
ffffffff8001c84d: 48 ba 69 74 6e 65 68 74 75 41	movabs	rdx, 0x41757468656e7469
ffffffff8001c857: 48 8b 08             	mov	rcx, qword ptr [rax]
ffffffff8001c85a: 48 0f c9             	bswap	rcx
ffffffff8001c85d: 48 39 d1             	cmp	rcx, rdx
ffffffff8001c860: 75 14                	jne	0xffffffff8001c876 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xc6>
ffffffff8001c862: 8b 48 08             	mov	ecx, dword ptr [rax + 0x8]
ffffffff8001c865: 0f c9                	bswap	ecx
ffffffff8001c867: 31 c0                	xor	eax, eax
ffffffff8001c869: 81 f9 44 4d 41 63    	cmp	ecx, 0x63414d44
ffffffff8001c86f: 74 0f                	je	0xffffffff8001c880 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xd0>
ffffffff8001c871: ba 44 4d 41 63       	mov	edx, 0x63414d44
ffffffff8001c876: 31 c0                	xor	eax, eax
ffffffff8001c878: 48 39 d1             	cmp	rcx, rdx
ffffffff8001c87b: 19 c0                	sbb	eax, eax
ffffffff8001c87d: 83 c8 01             	or	eax, 0x1
ffffffff8001c880: 83 f8 01             	cmp	eax, 0x1
ffffffff8001c883: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001c888: 83 d9 00             	sbb	ecx, 0x0
ffffffff8001c88b: eb 02                	jmp	0xffffffff8001c88f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff8001c88d: 31 c9                	xor	ecx, ecx
ffffffff8001c88f: 89 0b                	mov	dword ptr [rbx], ecx
ffffffff8001c891: 44 89 6b 04          	mov	dword ptr [rbx + 0x4], r13d
ffffffff8001c895: 44 89 73 08          	mov	dword ptr [rbx + 0x8], r14d
ffffffff8001c899: 44 89 7b 0c          	mov	dword ptr [rbx + 0xc], r15d
ffffffff8001c89d: 89 6b 10             	mov	dword ptr [rbx + 0x10], ebp
ffffffff8001c8a0: 44 89 63 14          	mov	dword ptr [rbx + 0x14], r12d
ffffffff8001c8a4: 48 89 d8             	mov	rax, rbx
ffffffff8001c8a7: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001c8ab: 5b                   	pop	rbx
ffffffff8001c8ac: 41 5c                	pop	r12
ffffffff8001c8ae: 41 5d                	pop	r13
ffffffff8001c8b0: 41 5e                	pop	r14
ffffffff8001c8b2: 41 5f                	pop	r15
ffffffff8001c8b4: 5d                   	pop	rbp
ffffffff8001c8b5: c3                   	ret
ffffffff8001c8b6: cc                   	int3
ffffffff8001c8b7: cc                   	int3
ffffffff8001c8b8: cc                   	int3
ffffffff8001c8b9: cc                   	int3
ffffffff8001c8ba: cc                   	int3
ffffffff8001c8bb: cc                   	int3
ffffffff8001c8bc: cc                   	int3
ffffffff8001c8bd: cc                   	int3
ffffffff8001c8be: cc                   	int3
ffffffff8001c8bf: cc                   	int3

ffffffff8001c8c0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9>:
ffffffff8001c8c0: 50                   	push	rax
ffffffff8001c8c1: 40 80 fe 08          	cmp	sil, 0x8
ffffffff8001c8c5: 74 09                	je	0xffffffff8001c8d0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x10>
ffffffff8001c8c7: 40 0f b6 c6          	movzx	eax, sil
ffffffff8001c8cb: 83 f8 7f             	cmp	eax, 0x7f
ffffffff8001c8ce: 75 60                	jne	0xffffffff8001c930 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x70>
ffffffff8001c8d0: 0f b7 0f             	movzx	ecx, word ptr [rdi]
ffffffff8001c8d3: 89 ce                	mov	esi, ecx
ffffffff8001c8d5: 83 c6 05             	add	esi, 0x5
ffffffff8001c8d8: 89 f2                	mov	edx, esi
ffffffff8001c8da: ec                   	in	al, dx
ffffffff8001c8db: a8 20                	test	al, 0x20
ffffffff8001c8dd: 75 0a                	jne	0xffffffff8001c8e9 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x29>
ffffffff8001c8df: 90                   	nop
ffffffff8001c8e0: f3 90                	pause
ffffffff8001c8e2: 89 f2                	mov	edx, esi
ffffffff8001c8e4: ec                   	in	al, dx
ffffffff8001c8e5: a8 20                	test	al, 0x20
ffffffff8001c8e7: 74 f7                	je	0xffffffff8001c8e0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x20>
ffffffff8001c8e9: b0 08                	mov	al, 0x8
ffffffff8001c8eb: 89 ca                	mov	edx, ecx
ffffffff8001c8ed: ee                   	out	dx, al
ffffffff8001c8ee: 89 f2                	mov	edx, esi
ffffffff8001c8f0: ec                   	in	al, dx
ffffffff8001c8f1: a8 20                	test	al, 0x20
ffffffff8001c8f3: 75 14                	jne	0xffffffff8001c909 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x49>
ffffffff8001c8f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8001c900: f3 90                	pause
ffffffff8001c902: 89 f2                	mov	edx, esi
ffffffff8001c904: ec                   	in	al, dx
ffffffff8001c905: a8 20                	test	al, 0x20
ffffffff8001c907: 74 f7                	je	0xffffffff8001c900 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x40>
ffffffff8001c909: b0 20                	mov	al, 0x20
ffffffff8001c90b: 89 ca                	mov	edx, ecx
ffffffff8001c90d: ee                   	out	dx, al
ffffffff8001c90e: 89 f2                	mov	edx, esi
ffffffff8001c910: ec                   	in	al, dx
ffffffff8001c911: a8 20                	test	al, 0x20
ffffffff8001c913: 75 14                	jne	0xffffffff8001c929 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x69>
ffffffff8001c915: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8001c920: f3 90                	pause
ffffffff8001c922: 89 f2                	mov	edx, esi
ffffffff8001c924: ec                   	in	al, dx
ffffffff8001c925: a8 20                	test	al, 0x20
ffffffff8001c927: 74 f7                	je	0xffffffff8001c920 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x60>
ffffffff8001c929: b0 08                	mov	al, 0x8
ffffffff8001c92b: 89 ca                	mov	edx, ecx
ffffffff8001c92d: ee                   	out	dx, al
ffffffff8001c92e: 58                   	pop	rax
ffffffff8001c92f: c3                   	ret
ffffffff8001c930: 0f b7 0f             	movzx	ecx, word ptr [rdi]
ffffffff8001c933: 89 ca                	mov	edx, ecx
ffffffff8001c935: 83 c2 05             	add	edx, 0x5
ffffffff8001c938: ec                   	in	al, dx
ffffffff8001c939: a8 20                	test	al, 0x20
ffffffff8001c93b: 75 0a                	jne	0xffffffff8001c947 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x87>
ffffffff8001c93d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8001c940: f3 90                	pause
ffffffff8001c942: ec                   	in	al, dx
ffffffff8001c943: a8 20                	test	al, 0x20
ffffffff8001c945: 74 f9                	je	0xffffffff8001c940 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x80>
ffffffff8001c947: 89 f0                	mov	eax, esi
ffffffff8001c949: 89 ca                	mov	edx, ecx
ffffffff8001c94b: ee                   	out	dx, al
ffffffff8001c94c: 58                   	pop	rax
ffffffff8001c94d: c3                   	ret
ffffffff8001c94e: cc                   	int3
ffffffff8001c94f: cc                   	int3

ffffffff8001c950 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>:
ffffffff8001c950: 48 85 d2             	test	rdx, rdx
ffffffff8001c953: 74 3b                	je	0xffffffff8001c990 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10+0x40>
ffffffff8001c955: 41 57                	push	r15
ffffffff8001c957: 41 56                	push	r14
ffffffff8001c959: 41 54                	push	r12
ffffffff8001c95b: 53                   	push	rbx
ffffffff8001c95c: 50                   	push	rax
ffffffff8001c95d: 48 89 d3             	mov	rbx, rdx
ffffffff8001c960: 49 89 f6             	mov	r14, rsi
ffffffff8001c963: 49 89 ff             	mov	r15, rdi
ffffffff8001c966: 45 31 e4             	xor	r12d, r12d
ffffffff8001c969: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff8001c970: 43 0f b6 34 26       	movzx	esi, byte ptr [r14 + r12]
ffffffff8001c975: 4c 89 ff             	mov	rdi, r15
ffffffff8001c978: e8 43 ff ff ff       	call	0xffffffff8001c8c0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9>
ffffffff8001c97d: 49 ff c4             	inc	r12
ffffffff8001c980: 4c 39 e3             	cmp	rbx, r12
ffffffff8001c983: 75 eb                	jne	0xffffffff8001c970 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10+0x20>
ffffffff8001c985: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001c989: 5b                   	pop	rbx
ffffffff8001c98a: 41 5c                	pop	r12
ffffffff8001c98c: 41 5e                	pop	r14
ffffffff8001c98e: 41 5f                	pop	r15
ffffffff8001c990: 31 c0                	xor	eax, eax
ffffffff8001c992: c3                   	ret
ffffffff8001c993: cc                   	int3
ffffffff8001c994: cc                   	int3
ffffffff8001c995: cc                   	int3
ffffffff8001c996: cc                   	int3
ffffffff8001c997: cc                   	int3
ffffffff8001c998: cc                   	int3
ffffffff8001c999: cc                   	int3
ffffffff8001c99a: cc                   	int3
ffffffff8001c99b: cc                   	int3
ffffffff8001c99c: cc                   	int3
ffffffff8001c99d: cc                   	int3
ffffffff8001c99e: cc                   	int3
ffffffff8001c99f: cc                   	int3

ffffffff8001c9a0 <<x86_64::addr::VirtAddrNotValid as core::fmt::Debug>::fmt::hc6ba96ade9a547b2>:
ffffffff8001c9a0: 41 56                	push	r14
ffffffff8001c9a2: 53                   	push	rbx
ffffffff8001c9a3: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff8001c9aa: 48 89 fb             	mov	rbx, rdi
ffffffff8001c9ad: 4c 8d b4 24 80 00 00 00      	lea	r14, [rsp + 0x80]
ffffffff8001c9b5: b9 10 00 00 00       	mov	ecx, 0x10
ffffffff8001c9ba: 4c 89 f7             	mov	rdi, r14
ffffffff8001c9bd: 48 c7 c2 f0 36 02 80 	mov	rdx, -0x7ffdc910
ffffffff8001c9c4: e8 a7 21 00 00       	call	0xffffffff8001eb70 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff8001c9c9: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8001c9ce: 48 c7 44 24 10 70 de 01 80   	mov	qword ptr [rsp + 0x10], -0x7ffe2190
ffffffff8001c9d7: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff8001c9e0: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff8001c9e9: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff8001c9f2: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8001c9fc: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8001ca01: c6 44 24 78 03       	mov	byte ptr [rsp + 0x78], 0x3
ffffffff8001ca06: 48 c7 44 24 18 e0 36 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc920
ffffffff8001ca0f: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8001ca18: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff8001ca1d: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001ca22: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff8001ca2b: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001ca30: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001ca35: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001ca3e: 48 8d 74 24 18       	lea	rsi, [rsp + 0x18]
ffffffff8001ca43: 4c 89 f7             	mov	rdi, r14
ffffffff8001ca46: 48 c7 c2 78 8d 02 80 	mov	rdx, -0x7ffd7288
ffffffff8001ca4d: e8 ce 2e 00 00       	call	0xffffffff8001f920 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff8001ca52: 48 89 c7             	mov	rdi, rax
ffffffff8001ca55: e8 26 30 00 00       	call	0xffffffff8001fa80 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff8001ca5a: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8001ca61: 5b                   	pop	rbx
ffffffff8001ca62: 41 5e                	pop	r14
ffffffff8001ca64: c3                   	ret
ffffffff8001ca65: cc                   	int3
ffffffff8001ca66: cc                   	int3
ffffffff8001ca67: cc                   	int3
ffffffff8001ca68: cc                   	int3
ffffffff8001ca69: cc                   	int3
ffffffff8001ca6a: cc                   	int3
ffffffff8001ca6b: cc                   	int3
ffffffff8001ca6c: cc                   	int3
ffffffff8001ca6d: cc                   	int3
ffffffff8001ca6e: cc                   	int3
ffffffff8001ca6f: cc                   	int3

ffffffff8001ca70 <<x86_64::addr::VirtAddr as core::fmt::Debug>::fmt::h8c13b6d9c5354ccf>:
ffffffff8001ca70: 41 56                	push	r14
ffffffff8001ca72: 53                   	push	rbx
ffffffff8001ca73: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff8001ca7a: 48 89 fb             	mov	rbx, rdi
ffffffff8001ca7d: 4c 8d b4 24 80 00 00 00      	lea	r14, [rsp + 0x80]
ffffffff8001ca85: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001ca8a: 4c 89 f7             	mov	rdi, r14
ffffffff8001ca8d: 48 c7 c2 60 22 02 80 	mov	rdx, -0x7ffddda0
ffffffff8001ca94: e8 d7 20 00 00       	call	0xffffffff8001eb70 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff8001ca99: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8001ca9e: 48 c7 44 24 10 70 de 01 80   	mov	qword ptr [rsp + 0x10], -0x7ffe2190
ffffffff8001caa7: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff8001cab0: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff8001cab9: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff8001cac2: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8001cacc: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8001cad1: c6 44 24 78 03       	mov	byte ptr [rsp + 0x78], 0x3
ffffffff8001cad6: 48 c7 44 24 18 e0 36 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc920
ffffffff8001cadf: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8001cae8: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff8001caed: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001caf2: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff8001cafb: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001cb00: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001cb05: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001cb0e: 48 8d 74 24 18       	lea	rsi, [rsp + 0x18]
ffffffff8001cb13: 4c 89 f7             	mov	rdi, r14
ffffffff8001cb16: 48 c7 c2 78 8d 02 80 	mov	rdx, -0x7ffd7288
ffffffff8001cb1d: e8 fe 2d 00 00       	call	0xffffffff8001f920 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff8001cb22: 48 89 c7             	mov	rdi, rax
ffffffff8001cb25: e8 56 2f 00 00       	call	0xffffffff8001fa80 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff8001cb2a: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8001cb31: 5b                   	pop	rbx
ffffffff8001cb32: 41 5e                	pop	r14
ffffffff8001cb34: c3                   	ret
ffffffff8001cb35: cc                   	int3
ffffffff8001cb36: cc                   	int3
ffffffff8001cb37: cc                   	int3
ffffffff8001cb38: cc                   	int3
ffffffff8001cb39: cc                   	int3
ffffffff8001cb3a: cc                   	int3
ffffffff8001cb3b: cc                   	int3
ffffffff8001cb3c: cc                   	int3
ffffffff8001cb3d: cc                   	int3
ffffffff8001cb3e: cc                   	int3
ffffffff8001cb3f: cc                   	int3

ffffffff8001cb40 <<x86_64::addr::PhysAddr as core::fmt::Debug>::fmt::h1d2b386870f81baa>:
ffffffff8001cb40: 41 56                	push	r14
ffffffff8001cb42: 53                   	push	rbx
ffffffff8001cb43: 48 81 ec 98 00 00 00 	sub	rsp, 0x98
ffffffff8001cb4a: 48 89 fb             	mov	rbx, rdi
ffffffff8001cb4d: 4c 8d b4 24 80 00 00 00      	lea	r14, [rsp + 0x80]
ffffffff8001cb55: b9 08 00 00 00       	mov	ecx, 0x8
ffffffff8001cb5a: 4c 89 f7             	mov	rdi, r14
ffffffff8001cb5d: 48 c7 c2 a8 22 02 80 	mov	rdx, -0x7ffddd58
ffffffff8001cb64: e8 07 20 00 00       	call	0xffffffff8001eb70 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff8001cb69: 48 89 5c 24 08       	mov	qword ptr [rsp + 0x8], rbx
ffffffff8001cb6e: 48 c7 44 24 10 70 de 01 80   	mov	qword ptr [rsp + 0x10], -0x7ffe2190
ffffffff8001cb77: 48 c7 44 24 48 02 00 00 00   	mov	qword ptr [rsp + 0x48], 0x2
ffffffff8001cb80: 48 c7 44 24 58 02 00 00 00   	mov	qword ptr [rsp + 0x58], 0x2
ffffffff8001cb89: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff8001cb92: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8001cb9c: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8001cba1: c6 44 24 78 03       	mov	byte ptr [rsp + 0x78], 0x3
ffffffff8001cba6: 48 c7 44 24 18 e0 36 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc920
ffffffff8001cbaf: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8001cbb8: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff8001cbbd: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001cbc2: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff8001cbcb: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001cbd0: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001cbd5: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001cbde: 48 8d 74 24 18       	lea	rsi, [rsp + 0x18]
ffffffff8001cbe3: 4c 89 f7             	mov	rdi, r14
ffffffff8001cbe6: 48 c7 c2 78 8d 02 80 	mov	rdx, -0x7ffd7288
ffffffff8001cbed: e8 2e 2d 00 00       	call	0xffffffff8001f920 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff8001cbf2: 48 89 c7             	mov	rdi, rax
ffffffff8001cbf5: e8 86 2e 00 00       	call	0xffffffff8001fa80 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff8001cbfa: 48 81 c4 98 00 00 00 	add	rsp, 0x98
ffffffff8001cc01: 5b                   	pop	rbx
ffffffff8001cc02: 41 5e                	pop	r14
ffffffff8001cc04: c3                   	ret
ffffffff8001cc05: cc                   	int3
ffffffff8001cc06: cc                   	int3
ffffffff8001cc07: cc                   	int3
ffffffff8001cc08: cc                   	int3
ffffffff8001cc09: cc                   	int3
ffffffff8001cc0a: cc                   	int3
ffffffff8001cc0b: cc                   	int3
ffffffff8001cc0c: cc                   	int3
ffffffff8001cc0d: cc                   	int3
ffffffff8001cc0e: cc                   	int3
ffffffff8001cc0f: cc                   	int3

ffffffff8001cc10 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>:
ffffffff8001cc10: 48 03 37             	add	rsi, qword ptr [rdi]
ffffffff8001cc13: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8001cc1d: 48 01 f0             	add	rax, rsi
ffffffff8001cc20: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8001cc24: 75 04                	jne	0xffffffff8001cc2a <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744+0x1a>
ffffffff8001cc26: 48 89 f0             	mov	rax, rsi
ffffffff8001cc29: c3                   	ret
ffffffff8001cc2a: 50                   	push	rax
ffffffff8001cc2b: be 36 00 00 00       	mov	esi, 0x36
ffffffff8001cc30: 48 c7 c7 98 8d 02 80 	mov	rdi, -0x7ffd7268
ffffffff8001cc37: 48 c7 c2 30 8e 02 80 	mov	rdx, -0x7ffd71d0
ffffffff8001cc3e: e8 ad 44 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001cc43: cc                   	int3
ffffffff8001cc44: cc                   	int3
ffffffff8001cc45: cc                   	int3
ffffffff8001cc46: cc                   	int3
ffffffff8001cc47: cc                   	int3
ffffffff8001cc48: cc                   	int3
ffffffff8001cc49: cc                   	int3
ffffffff8001cc4a: cc                   	int3
ffffffff8001cc4b: cc                   	int3
ffffffff8001cc4c: cc                   	int3
ffffffff8001cc4d: cc                   	int3
ffffffff8001cc4e: cc                   	int3
ffffffff8001cc4f: cc                   	int3

ffffffff8001cc50 <bitflags::parser::to_writer::h4929b1a98347bcd2>:
ffffffff8001cc50: 55                   	push	rbp
ffffffff8001cc51: 41 57                	push	r15
ffffffff8001cc53: 41 56                	push	r14
ffffffff8001cc55: 41 55                	push	r13
ffffffff8001cc57: 41 54                	push	r12
ffffffff8001cc59: 53                   	push	rbx
ffffffff8001cc5a: 48 83 ec 58          	sub	rsp, 0x58
ffffffff8001cc5e: 4c 8b 27             	mov	r12, qword ptr [rdi]
ffffffff8001cc61: 4d 85 e4             	test	r12, r12
ffffffff8001cc64: 0f 84 17 04 00 00    	je	0xffffffff8001d081 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001cc6a: 48 89 f5             	mov	rbp, rsi
ffffffff8001cc6d: 41 f7 c4 00 00 20 00 	test	r12d, 0x200000
ffffffff8001cc74: 0f 85 ea 00 00 00    	jne	0xffffffff8001cd64 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x114>
ffffffff8001cc7a: 41 f7 c4 00 00 10 00 	test	r12d, 0x100000
ffffffff8001cc81: 0f 85 fa 00 00 00    	jne	0xffffffff8001cd81 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x131>
ffffffff8001cc87: ba 11 00 00 00       	mov	edx, 0x11
ffffffff8001cc8c: 41 f7 c4 00 00 08 00 	test	r12d, 0x80000
ffffffff8001cc93: 0f 85 05 01 00 00    	jne	0xffffffff8001cd9e <bitflags::parser::to_writer::h4929b1a98347bcd2+0x14e>
ffffffff8001cc99: 41 f7 c4 00 00 04 00 	test	r12d, 0x40000
ffffffff8001cca0: 0f 85 10 01 00 00    	jne	0xffffffff8001cdb6 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x166>
ffffffff8001cca6: 41 f7 c4 00 00 02 00 	test	r12d, 0x20000
ffffffff8001ccad: 0f 85 20 01 00 00    	jne	0xffffffff8001cdd3 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x183>
ffffffff8001ccb3: ba 0b 00 00 00       	mov	edx, 0xb
ffffffff8001ccb8: 41 f7 c4 00 00 01 00 	test	r12d, 0x10000
ffffffff8001ccbf: 0f 85 26 01 00 00    	jne	0xffffffff8001cdeb <bitflags::parser::to_writer::h4929b1a98347bcd2+0x19b>
ffffffff8001ccc5: 41 f7 c4 00 40 00 00 	test	r12d, 0x4000
ffffffff8001cccc: 0f 85 31 01 00 00    	jne	0xffffffff8001ce03 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1b3>
ffffffff8001ccd2: 41 f7 c4 00 20 00 00 	test	r12d, 0x2000
ffffffff8001ccd9: 0f 85 3c 01 00 00    	jne	0xffffffff8001ce1b <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1cb>
ffffffff8001ccdf: 41 f7 c4 00 10 00 00 	test	r12d, 0x1000
ffffffff8001cce6: 0f 85 4c 01 00 00    	jne	0xffffffff8001ce38 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1e8>
ffffffff8001ccec: 41 f7 c4 00 08 00 00 	test	r12d, 0x800
ffffffff8001ccf3: 0f 85 5c 01 00 00    	jne	0xffffffff8001ce55 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x205>
ffffffff8001ccf9: ba 0e 00 00 00       	mov	edx, 0xe
ffffffff8001ccfe: 41 f7 c4 00 04 00 00 	test	r12d, 0x400
ffffffff8001cd05: 0f 85 67 01 00 00    	jne	0xffffffff8001ce72 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x222>
ffffffff8001cd0b: 41 f7 c4 00 02 00 00 	test	r12d, 0x200
ffffffff8001cd12: 0f 85 72 01 00 00    	jne	0xffffffff8001ce8a <bitflags::parser::to_writer::h4929b1a98347bcd2+0x23a>
ffffffff8001cd18: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8001cd1d: 41 f7 c4 00 01 00 00 	test	r12d, 0x100
ffffffff8001cd24: 0f 85 78 01 00 00    	jne	0xffffffff8001cea2 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x252>
ffffffff8001cd2a: 45 84 e4             	test	r12b, r12b
ffffffff8001cd2d: 0f 88 84 01 00 00    	js	0xffffffff8001ceb7 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x267>
ffffffff8001cd33: 41 f6 c4 40          	test	r12b, 0x40
ffffffff8001cd37: 0f 85 8f 01 00 00    	jne	0xffffffff8001cecc <bitflags::parser::to_writer::h4929b1a98347bcd2+0x27c>
ffffffff8001cd3d: 41 f6 c4 10          	test	r12b, 0x10
ffffffff8001cd41: 0f 85 9a 01 00 00    	jne	0xffffffff8001cee1 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x291>
ffffffff8001cd47: 41 f6 c4 04          	test	r12b, 0x4
ffffffff8001cd4b: 0f 85 aa 01 00 00    	jne	0xffffffff8001cefb <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2ab>
ffffffff8001cd51: 41 f6 c4 01          	test	r12b, 0x1
ffffffff8001cd55: 0f 85 ba 01 00 00    	jne	0xffffffff8001cf15 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2c5>
ffffffff8001cd5b: 4c 89 24 24          	mov	qword ptr [rsp], r12
ffffffff8001cd5f: e9 a2 02 00 00       	jmp	0xffffffff8001d006 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x3b6>
ffffffff8001cd64: 49 c7 c5 ff ff df ff 	mov	r13, -0x200001
ffffffff8001cd6b: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001cd70: bb 01 00 00 00       	mov	ebx, 0x1
ffffffff8001cd75: 48 c7 c0 20 8f 02 80 	mov	rax, -0x7ffd70e0
ffffffff8001cd7c: e9 ac 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cd81: 49 c7 c5 ff ff ef ff 	mov	r13, -0x100001
ffffffff8001cd88: ba 19 00 00 00       	mov	edx, 0x19
ffffffff8001cd8d: bb 02 00 00 00       	mov	ebx, 0x2
ffffffff8001cd92: 48 c7 c0 38 8f 02 80 	mov	rax, -0x7ffd70c8
ffffffff8001cd99: e9 8f 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cd9e: 49 c7 c5 ff ff f7 ff 	mov	r13, -0x80001
ffffffff8001cda5: bb 03 00 00 00       	mov	ebx, 0x3
ffffffff8001cdaa: 48 c7 c0 50 8f 02 80 	mov	rax, -0x7ffd70b0
ffffffff8001cdb1: e9 77 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cdb6: 49 c7 c5 ff ff fb ff 	mov	r13, -0x40001
ffffffff8001cdbd: ba 0f 00 00 00       	mov	edx, 0xf
ffffffff8001cdc2: bb 04 00 00 00       	mov	ebx, 0x4
ffffffff8001cdc7: 48 c7 c0 68 8f 02 80 	mov	rax, -0x7ffd7098
ffffffff8001cdce: e9 5a 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cdd3: 49 c7 c5 ff ff fd ff 	mov	r13, -0x20001
ffffffff8001cdda: bb 05 00 00 00       	mov	ebx, 0x5
ffffffff8001cddf: 48 c7 c0 80 8f 02 80 	mov	rax, -0x7ffd7080
ffffffff8001cde6: e9 42 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cdeb: 49 c7 c5 ff ff fe ff 	mov	r13, -0x10001
ffffffff8001cdf2: bb 06 00 00 00       	mov	ebx, 0x6
ffffffff8001cdf7: 48 c7 c0 98 8f 02 80 	mov	rax, -0x7ffd7068
ffffffff8001cdfe: e9 2a 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce03: 49 c7 c5 ff bf ff ff 	mov	r13, -0x4001
ffffffff8001ce0a: bb 07 00 00 00       	mov	ebx, 0x7
ffffffff8001ce0f: 48 c7 c0 b0 8f 02 80 	mov	rax, -0x7ffd7050
ffffffff8001ce16: e9 12 01 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce1b: 49 c7 c5 ff df ff ff 	mov	r13, -0x2001
ffffffff8001ce22: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8001ce27: bb 08 00 00 00       	mov	ebx, 0x8
ffffffff8001ce2c: 48 c7 c0 c8 8f 02 80 	mov	rax, -0x7ffd7038
ffffffff8001ce33: e9 f5 00 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce38: 49 c7 c5 ff ef ff ff 	mov	r13, -0x1001
ffffffff8001ce3f: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001ce44: bb 09 00 00 00       	mov	ebx, 0x9
ffffffff8001ce49: 48 c7 c0 e0 8f 02 80 	mov	rax, -0x7ffd7020
ffffffff8001ce50: e9 d8 00 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce55: 49 c7 c5 ff f7 ff ff 	mov	r13, -0x801
ffffffff8001ce5c: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8001ce61: bb 0a 00 00 00       	mov	ebx, 0xa
ffffffff8001ce66: 48 c7 c0 f8 8f 02 80 	mov	rax, -0x7ffd7008
ffffffff8001ce6d: e9 bb 00 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce72: 49 c7 c5 ff fb ff ff 	mov	r13, -0x401
ffffffff8001ce79: bb 0b 00 00 00       	mov	ebx, 0xb
ffffffff8001ce7e: 48 c7 c0 10 90 02 80 	mov	rax, -0x7ffd6ff0
ffffffff8001ce85: e9 a3 00 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ce8a: 49 c7 c5 ff fd ff ff 	mov	r13, -0x201
ffffffff8001ce91: bb 0c 00 00 00       	mov	ebx, 0xc
ffffffff8001ce96: 48 c7 c0 28 90 02 80 	mov	rax, -0x7ffd6fd8
ffffffff8001ce9d: e9 8b 00 00 00       	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cea2: 49 c7 c5 ff fe ff ff 	mov	r13, -0x101
ffffffff8001cea9: bb 0d 00 00 00       	mov	ebx, 0xd
ffffffff8001ceae: 48 c7 c0 40 90 02 80 	mov	rax, -0x7ffd6fc0
ffffffff8001ceb5: eb 76                	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001ceb7: 49 c7 c5 7f ff ff ff 	mov	r13, -0x81
ffffffff8001cebe: bb 0e 00 00 00       	mov	ebx, 0xe
ffffffff8001cec3: 48 c7 c0 58 90 02 80 	mov	rax, -0x7ffd6fa8
ffffffff8001ceca: eb 61                	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cecc: 49 c7 c5 bf ff ff ff 	mov	r13, -0x41
ffffffff8001ced3: bb 0f 00 00 00       	mov	ebx, 0xf
ffffffff8001ced8: 48 c7 c0 70 90 02 80 	mov	rax, -0x7ffd6f90
ffffffff8001cedf: eb 4c                	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cee1: 49 c7 c5 ef ff ff ff 	mov	r13, -0x11
ffffffff8001cee8: ba 14 00 00 00       	mov	edx, 0x14
ffffffff8001ceed: bb 10 00 00 00       	mov	ebx, 0x10
ffffffff8001cef2: 48 c7 c0 88 90 02 80 	mov	rax, -0x7ffd6f78
ffffffff8001cef9: eb 32                	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cefb: 49 c7 c5 fb ff ff ff 	mov	r13, -0x5
ffffffff8001cf02: ba 0b 00 00 00       	mov	edx, 0xb
ffffffff8001cf07: bb 11 00 00 00       	mov	ebx, 0x11
ffffffff8001cf0c: 48 c7 c0 a0 90 02 80 	mov	rax, -0x7ffd6f60
ffffffff8001cf13: eb 18                	jmp	0xffffffff8001cf2d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001cf15: 49 c7 c5 fe ff ff ff 	mov	r13, -0x2
ffffffff8001cf1c: ba 0a 00 00 00       	mov	edx, 0xa
ffffffff8001cf21: bb 12 00 00 00       	mov	ebx, 0x12
ffffffff8001cf26: 48 c7 c0 b8 90 02 80 	mov	rax, -0x7ffd6f48
ffffffff8001cf2d: 48 8b 30             	mov	rsi, qword ptr [rax]
ffffffff8001cf30: 48 89 ef             	mov	rdi, rbp
ffffffff8001cf33: e8 f8 1a 00 00       	call	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001cf38: b1 01                	mov	cl, 0x1
ffffffff8001cf3a: 84 c0                	test	al, al
ffffffff8001cf3c: 0f 85 41 01 00 00    	jne	0xffffffff8001d083 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x433>
ffffffff8001cf42: 4d 21 e5             	and	r13, r12
ffffffff8001cf45: 49 f7 d4             	not	r12
ffffffff8001cf48: 48 83 fb 11          	cmp	rbx, 0x11
ffffffff8001cf4c: 0f 87 8f 00 00 00    	ja	0xffffffff8001cfe1 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x391>
ffffffff8001cf52: 4d 85 ed             	test	r13, r13
ffffffff8001cf55: 0f 84 26 01 00 00    	je	0xffffffff8001d081 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001cf5b: 48 8d 04 5b          	lea	rax, [rbx + 2*rbx]
ffffffff8001cf5f: 48 ff c3             	inc	rbx
ffffffff8001cf62: 48 8d 04 c5 30 8f 02 80      	lea	rax, [8*rax - 0x7ffd70d0]
ffffffff8001cf6a: eb 11                	jmp	0xffffffff8001cf7d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x32d>
ffffffff8001cf6c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8001cf70: 48 ff c3             	inc	rbx
ffffffff8001cf73: 48 83 c0 18          	add	rax, 0x18
ffffffff8001cf77: 48 83 fb 13          	cmp	rbx, 0x13
ffffffff8001cf7b: 74 64                	je	0xffffffff8001cfe1 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x391>
ffffffff8001cf7d: 4c 8b 70 f8          	mov	r14, qword ptr [rax - 0x8]
ffffffff8001cf81: 4d 85 f6             	test	r14, r14
ffffffff8001cf84: 74 ea                	je	0xffffffff8001cf70 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x320>
ffffffff8001cf86: 4c 8b 38             	mov	r15, qword ptr [rax]
ffffffff8001cf89: 4d 85 e7             	test	r15, r12
ffffffff8001cf8c: 0f 94 c1             	sete	cl
ffffffff8001cf8f: 4d 85 ef             	test	r15, r13
ffffffff8001cf92: 0f 95 c2             	setne	dl
ffffffff8001cf95: 84 ca                	test	dl, cl
ffffffff8001cf97: 74 d7                	je	0xffffffff8001cf70 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x320>
ffffffff8001cf99: 48 8b 40 f0          	mov	rax, qword ptr [rax - 0x10]
ffffffff8001cf9d: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8001cfa2: ba 03 00 00 00       	mov	edx, 0x3
ffffffff8001cfa7: 48 89 ef             	mov	rdi, rbp
ffffffff8001cfaa: 48 c7 c6 d2 90 02 80 	mov	rsi, -0x7ffd6f2e
ffffffff8001cfb1: e8 7a 1a 00 00       	call	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001cfb6: 84 c0                	test	al, al
ffffffff8001cfb8: 0f 85 bf 00 00 00    	jne	0xffffffff8001d07d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff8001cfbe: 49 f7 d7             	not	r15
ffffffff8001cfc1: 4d 21 fd             	and	r13, r15
ffffffff8001cfc4: 48 89 ef             	mov	rdi, rbp
ffffffff8001cfc7: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff8001cfcc: 4c 89 f2             	mov	rdx, r14
ffffffff8001cfcf: e8 5c 1a 00 00       	call	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001cfd4: 84 c0                	test	al, al
ffffffff8001cfd6: 0f 84 6c ff ff ff    	je	0xffffffff8001cf48 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2f8>
ffffffff8001cfdc: e9 9c 00 00 00       	jmp	0xffffffff8001d07d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff8001cfe1: 4c 89 2c 24          	mov	qword ptr [rsp], r13
ffffffff8001cfe5: 4d 85 ed             	test	r13, r13
ffffffff8001cfe8: 0f 84 93 00 00 00    	je	0xffffffff8001d081 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001cfee: ba 03 00 00 00       	mov	edx, 0x3
ffffffff8001cff3: 48 89 ef             	mov	rdi, rbp
ffffffff8001cff6: 48 c7 c6 d2 90 02 80 	mov	rsi, -0x7ffd6f2e
ffffffff8001cffd: e8 2e 1a 00 00       	call	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001d002: 84 c0                	test	al, al
ffffffff8001d004: 75 77                	jne	0xffffffff8001d07d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff8001d006: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001d00b: 48 89 ef             	mov	rdi, rbp
ffffffff8001d00e: 48 c7 c6 d0 90 02 80 	mov	rsi, -0x7ffd6f30
ffffffff8001d015: e8 16 1a 00 00       	call	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001d01a: 84 c0                	test	al, al
ffffffff8001d01c: 75 5f                	jne	0xffffffff8001d07d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff8001d01e: 48 89 e0             	mov	rax, rsp
ffffffff8001d021: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001d026: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8001d02b: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001d030: 48 c7 44 24 20 50 d1 01 80   	mov	qword ptr [rsp + 0x20], -0x7ffe2eb0
ffffffff8001d039: 48 c7 44 24 28 e0 36 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdc920
ffffffff8001d042: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001d04b: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 0x48], 0x0
ffffffff8001d054: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff8001d059: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001d05e: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff8001d067: 48 8b 7d 30          	mov	rdi, qword ptr [rbp + 0x30]
ffffffff8001d06b: 48 8b 75 38          	mov	rsi, qword ptr [rbp + 0x38]
ffffffff8001d06f: 48 8d 54 24 28       	lea	rdx, [rsp + 0x28]
ffffffff8001d074: e8 57 11 00 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001d079: 84 c0                	test	al, al
ffffffff8001d07b: 74 04                	je	0xffffffff8001d081 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001d07d: b1 01                	mov	cl, 0x1
ffffffff8001d07f: eb 02                	jmp	0xffffffff8001d083 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x433>
ffffffff8001d081: 31 c9                	xor	ecx, ecx
ffffffff8001d083: 89 c8                	mov	eax, ecx
ffffffff8001d085: 48 83 c4 58          	add	rsp, 0x58
ffffffff8001d089: 5b                   	pop	rbx
ffffffff8001d08a: 41 5c                	pop	r12
ffffffff8001d08c: 41 5d                	pop	r13
ffffffff8001d08e: 41 5e                	pop	r14
ffffffff8001d090: 41 5f                	pop	r15
ffffffff8001d092: 5d                   	pop	rbp
ffffffff8001d093: c3                   	ret
ffffffff8001d094: cc                   	int3
ffffffff8001d095: cc                   	int3
ffffffff8001d096: cc                   	int3
ffffffff8001d097: cc                   	int3
ffffffff8001d098: cc                   	int3
ffffffff8001d099: cc                   	int3
ffffffff8001d09a: cc                   	int3
ffffffff8001d09b: cc                   	int3
ffffffff8001d09c: cc                   	int3
ffffffff8001d09d: cc                   	int3
ffffffff8001d09e: cc                   	int3
ffffffff8001d09f: cc                   	int3

ffffffff8001d0a0 <<&T as core::fmt::Debug>::fmt::hdf0469a69a7d1d66>:
ffffffff8001d0a0: 48 83 ec 78          	sub	rsp, 0x78
ffffffff8001d0a4: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001d0a7: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff8001d0aa: 48 85 c0             	test	rax, rax
ffffffff8001d0ad: 74 14                	je	0xffffffff8001d0c3 <<&T as core::fmt::Debug>::fmt::hdf0469a69a7d1d66+0x23>
ffffffff8001d0af: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001d0b4: 48 8d 7c 24 40       	lea	rdi, [rsp + 0x40]
ffffffff8001d0b9: e8 92 fb ff ff       	call	0xffffffff8001cc50 <bitflags::parser::to_writer::h4929b1a98347bcd2>
ffffffff8001d0be: 48 83 c4 78          	add	rsp, 0x78
ffffffff8001d0c2: c3                   	ret
ffffffff8001d0c3: 48 c7 04 24 78 22 02 80      	mov	qword ptr [rsp], -0x7ffddd88
ffffffff8001d0cb: 48 c7 44 24 08 70 de 01 80   	mov	qword ptr [rsp + 0x8], -0x7ffe2190
ffffffff8001d0d4: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff8001d0dd: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff8001d0e6: 48 c7 44 24 60 00 00 00 00   	mov	qword ptr [rsp + 0x60], 0x0
ffffffff8001d0ef: 48 b8 20 00 00 00 04 00 00 00	movabs	rax, 0x400000020
ffffffff8001d0f9: 48 89 44 24 68       	mov	qword ptr [rsp + 0x68], rax
ffffffff8001d0fe: c6 44 24 70 03       	mov	byte ptr [rsp + 0x70], 0x3
ffffffff8001d103: 48 c7 44 24 10 e0 36 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdc920
ffffffff8001d10c: 48 c7 44 24 18 01 00 00 00   	mov	qword ptr [rsp + 0x18], 0x1
ffffffff8001d115: 48 8d 44 24 40       	lea	rax, [rsp + 0x40]
ffffffff8001d11a: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001d11f: 48 c7 44 24 38 01 00 00 00   	mov	qword ptr [rsp + 0x38], 0x1
ffffffff8001d128: 48 89 e0             	mov	rax, rsp
ffffffff8001d12b: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001d130: 48 c7 44 24 28 01 00 00 00   	mov	qword ptr [rsp + 0x28], 0x1
ffffffff8001d139: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8001d13d: 48 8b 76 38          	mov	rsi, qword ptr [rsi + 0x38]
ffffffff8001d141: 48 8d 54 24 10       	lea	rdx, [rsp + 0x10]
ffffffff8001d146: e8 85 10 00 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001d14b: 48 83 c4 78          	add	rsp, 0x78
ffffffff8001d14f: c3                   	ret

ffffffff8001d150 <<&T as core::fmt::LowerHex>::fmt::h8f025517e53b1cc7.llvm.2210142015394379644>:
ffffffff8001d150: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff8001d153: e9 18 0d 00 00       	jmp	0xffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001d158: cc                   	int3
ffffffff8001d159: cc                   	int3
ffffffff8001d15a: cc                   	int3
ffffffff8001d15b: cc                   	int3
ffffffff8001d15c: cc                   	int3
ffffffff8001d15d: cc                   	int3
ffffffff8001d15e: cc                   	int3
ffffffff8001d15f: cc                   	int3

ffffffff8001d160 <core::fmt::num::<impl core::fmt::Debug for u16>::fmt::h4b3d592efb52dc7f>:
ffffffff8001d160: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff8001d163: a8 10                	test	al, 0x10
ffffffff8001d165: 0f 85 05 0c 00 00    	jne	0xffffffff8001dd70 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374>
ffffffff8001d16b: a8 20                	test	al, 0x20
ffffffff8001d16d: 0f 85 7d 0c 00 00    	jne	0xffffffff8001ddf0 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107>
ffffffff8001d173: e9 98 30 00 00       	jmp	0xffffffff80020210 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002>
ffffffff8001d178: cc                   	int3
ffffffff8001d179: cc                   	int3
ffffffff8001d17a: cc                   	int3
ffffffff8001d17b: cc                   	int3
ffffffff8001d17c: cc                   	int3
ffffffff8001d17d: cc                   	int3
ffffffff8001d17e: cc                   	int3
ffffffff8001d17f: cc                   	int3

ffffffff8001d180 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1>:
ffffffff8001d180: 41 56                	push	r14
ffffffff8001d182: 53                   	push	rbx
ffffffff8001d183: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001d187: 48 89 fb             	mov	rbx, rdi
ffffffff8001d18a: 4c 8d 74 24 08       	lea	r14, [rsp + 0x8]
ffffffff8001d18f: b9 0f 00 00 00       	mov	ecx, 0xf
ffffffff8001d194: 4c 89 f7             	mov	rdi, r14
ffffffff8001d197: 48 c7 c2 f8 90 02 80 	mov	rdx, -0x7ffd6f08
ffffffff8001d19e: e8 ad 18 00 00       	call	0xffffffff8001ea50 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>
ffffffff8001d1a3: 0f b7 1b             	movzx	ebx, word ptr [rbx]
ffffffff8001d1a6: 89 d8                	mov	eax, ebx
ffffffff8001d1a8: c1 e8 03             	shr	eax, 0x3
ffffffff8001d1ab: 66 89 44 24 06       	mov	word ptr [rsp + 0x6], ax
ffffffff8001d1b0: 48 8d 4c 24 06       	lea	rcx, [rsp + 0x6]
ffffffff8001d1b5: ba 05 00 00 00       	mov	edx, 0x5
ffffffff8001d1ba: 4c 89 f7             	mov	rdi, r14
ffffffff8001d1bd: 48 c7 c6 28 91 02 80 	mov	rsi, -0x7ffd6ed8
ffffffff8001d1c4: 49 c7 c0 08 91 02 80 	mov	r8, -0x7ffd6ef8
ffffffff8001d1cb: e8 20 25 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d1d0: 83 e3 03             	and	ebx, 0x3
ffffffff8001d1d3: ff 24 dd d8 90 02 80 	jmp	qword ptr [8*rbx - 0x7ffd6f28]
ffffffff8001d1da: c6 44 24 06 00       	mov	byte ptr [rsp + 0x6], 0x0
ffffffff8001d1df: eb 13                	jmp	0xffffffff8001d1f4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff8001d1e1: c6 44 24 06 02       	mov	byte ptr [rsp + 0x6], 0x2
ffffffff8001d1e6: eb 0c                	jmp	0xffffffff8001d1f4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff8001d1e8: c6 44 24 06 03       	mov	byte ptr [rsp + 0x6], 0x3
ffffffff8001d1ed: eb 05                	jmp	0xffffffff8001d1f4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff8001d1ef: c6 44 24 06 01       	mov	byte ptr [rsp + 0x6], 0x1
ffffffff8001d1f4: 48 8d 5c 24 08       	lea	rbx, [rsp + 0x8]
ffffffff8001d1f9: 48 8d 4c 24 06       	lea	rcx, [rsp + 0x6]
ffffffff8001d1fe: ba 03 00 00 00       	mov	edx, 0x3
ffffffff8001d203: 48 89 df             	mov	rdi, rbx
ffffffff8001d206: 48 c7 c6 50 91 02 80 	mov	rsi, -0x7ffd6eb0
ffffffff8001d20d: 49 c7 c0 30 91 02 80 	mov	r8, -0x7ffd6ed0
ffffffff8001d214: e8 d7 24 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d219: 48 89 df             	mov	rdi, rbx
ffffffff8001d21c: e8 9f 26 00 00       	call	0xffffffff8001f8c0 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>
ffffffff8001d221: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001d225: 5b                   	pop	rbx
ffffffff8001d226: 41 5e                	pop	r14
ffffffff8001d228: c3                   	ret
ffffffff8001d229: cc                   	int3
ffffffff8001d22a: cc                   	int3
ffffffff8001d22b: cc                   	int3
ffffffff8001d22c: cc                   	int3
ffffffff8001d22d: cc                   	int3
ffffffff8001d22e: cc                   	int3
ffffffff8001d22f: cc                   	int3

ffffffff8001d230 <<x86_64::PrivilegeLevel as core::fmt::Debug>::fmt::h92e6f6907a5dfe2b>:
ffffffff8001d230: 48 89 f0             	mov	rax, rsi
ffffffff8001d233: 0f b6 0f             	movzx	ecx, byte ptr [rdi]
ffffffff8001d236: 48 8b 34 cd 68 91 02 80      	mov	rsi, qword ptr [8*rcx - 0x7ffd6e98]
ffffffff8001d23e: ba 05 00 00 00       	mov	edx, 0x5
ffffffff8001d243: 48 89 c7             	mov	rdi, rax
ffffffff8001d246: e9 e5 17 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001d24b: cc                   	int3
ffffffff8001d24c: cc                   	int3
ffffffff8001d24d: cc                   	int3
ffffffff8001d24e: cc                   	int3
ffffffff8001d24f: cc                   	int3

ffffffff8001d250 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd>:
ffffffff8001d250: 48 b8 00 00 00 00 00 80 00 00	movabs	rax, 0x800000000000
ffffffff8001d25a: 48 01 f0             	add	rax, rsi
ffffffff8001d25d: 48 c1 e8 30          	shr	rax, 0x30
ffffffff8001d261: 75 0d                	jne	0xffffffff8001d270 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd+0x20>
ffffffff8001d263: 66 c7 07 ff 0f       	mov	word ptr [rdi], 0xfff
ffffffff8001d268: 48 89 77 02          	mov	qword ptr [rdi + 0x2], rsi
ffffffff8001d26c: 48 89 f8             	mov	rax, rdi
ffffffff8001d26f: c3                   	ret
ffffffff8001d270: 50                   	push	rax
ffffffff8001d271: be 36 00 00 00       	mov	esi, 0x36
ffffffff8001d276: 48 c7 c7 88 91 02 80 	mov	rdi, -0x7ffd6e78
ffffffff8001d27d: 48 c7 c2 20 92 02 80 	mov	rdx, -0x7ffd6de0
ffffffff8001d284: e8 67 3e 00 00       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001d289: cc                   	int3
ffffffff8001d28a: cc                   	int3
ffffffff8001d28b: cc                   	int3
ffffffff8001d28c: cc                   	int3
ffffffff8001d28d: cc                   	int3
ffffffff8001d28e: cc                   	int3
ffffffff8001d28f: cc                   	int3

ffffffff8001d290 <<x86_64::structures::idt::InterruptStackFrameValue as core::fmt::Debug>::fmt::h547349f5b4b49a5c>:
ffffffff8001d290: 41 56                	push	r14
ffffffff8001d292: 53                   	push	rbx
ffffffff8001d293: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001d297: 49 89 fe             	mov	r14, rdi
ffffffff8001d29a: 48 8d 5c 24 08       	lea	rbx, [rsp + 0x8]
ffffffff8001d29f: b9 13 00 00 00       	mov	ecx, 0x13
ffffffff8001d2a4: 48 89 df             	mov	rdi, rbx
ffffffff8001d2a7: 48 c7 c2 58 92 02 80 	mov	rdx, -0x7ffd6da8
ffffffff8001d2ae: e8 9d 17 00 00       	call	0xffffffff8001ea50 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>
ffffffff8001d2b3: ba 13 00 00 00       	mov	edx, 0x13
ffffffff8001d2b8: 48 89 df             	mov	rdi, rbx
ffffffff8001d2bb: 48 c7 c6 90 92 02 80 	mov	rsi, -0x7ffd6d70
ffffffff8001d2c2: 4c 89 f1             	mov	rcx, r14
ffffffff8001d2c5: 49 c7 c0 70 92 02 80 	mov	r8, -0x7ffd6d90
ffffffff8001d2cc: e8 1f 24 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d2d1: 49 8d 4e 08          	lea	rcx, [r14 + 0x8]
ffffffff8001d2d5: ba 0c 00 00 00       	mov	edx, 0xc
ffffffff8001d2da: 48 89 df             	mov	rdi, rbx
ffffffff8001d2dd: 48 c7 c6 a3 92 02 80 	mov	rsi, -0x7ffd6d5d
ffffffff8001d2e4: 49 c7 c0 38 92 02 80 	mov	r8, -0x7ffd6dc8
ffffffff8001d2eb: e8 00 24 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d2f0: 49 8d 4e 10          	lea	rcx, [r14 + 0x10]
ffffffff8001d2f4: ba 09 00 00 00       	mov	edx, 0x9
ffffffff8001d2f9: 48 89 df             	mov	rdi, rbx
ffffffff8001d2fc: 48 c7 c6 d0 92 02 80 	mov	rsi, -0x7ffd6d30
ffffffff8001d303: 49 c7 c0 b0 92 02 80 	mov	r8, -0x7ffd6d50
ffffffff8001d30a: e8 e1 23 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d30f: 49 8d 4e 18          	lea	rcx, [r14 + 0x18]
ffffffff8001d313: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8001d318: 48 89 df             	mov	rdi, rbx
ffffffff8001d31b: 48 c7 c6 d9 92 02 80 	mov	rsi, -0x7ffd6d27
ffffffff8001d322: 49 c7 c0 70 92 02 80 	mov	r8, -0x7ffd6d90
ffffffff8001d329: e8 c2 23 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d32e: 49 83 c6 20          	add	r14, 0x20
ffffffff8001d332: ba 0d 00 00 00       	mov	edx, 0xd
ffffffff8001d337: 48 89 df             	mov	rdi, rbx
ffffffff8001d33a: 48 c7 c6 e6 92 02 80 	mov	rsi, -0x7ffd6d1a
ffffffff8001d341: 4c 89 f1             	mov	rcx, r14
ffffffff8001d344: 49 c7 c0 38 92 02 80 	mov	r8, -0x7ffd6dc8
ffffffff8001d34b: e8 a0 23 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001d350: 48 89 df             	mov	rdi, rbx
ffffffff8001d353: e8 68 25 00 00       	call	0xffffffff8001f8c0 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>
ffffffff8001d358: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001d35c: 5b                   	pop	rbx
ffffffff8001d35d: 41 5e                	pop	r14
ffffffff8001d35f: c3                   	ret

ffffffff8001d360 <<x86_64::registers::rflags::RFlags as core::fmt::Debug>::fmt::h670f25a697b2096b>:
ffffffff8001d360: 50                   	push	rax
ffffffff8001d361: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8001d365: 48 89 e1             	mov	rcx, rsp
ffffffff8001d368: ba 06 00 00 00       	mov	edx, 0x6
ffffffff8001d36d: 48 89 f7             	mov	rdi, rsi
ffffffff8001d370: 48 c7 c6 18 93 02 80 	mov	rsi, -0x7ffd6ce8
ffffffff8001d377: 49 c7 c0 f8 92 02 80 	mov	r8, -0x7ffd6d08
ffffffff8001d37e: e8 2d 18 00 00       	call	0xffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8001d383: 59                   	pop	rcx
ffffffff8001d384: c3                   	ret
ffffffff8001d385: cc                   	int3
ffffffff8001d386: cc                   	int3
ffffffff8001d387: cc                   	int3
ffffffff8001d388: cc                   	int3
ffffffff8001d389: cc                   	int3
ffffffff8001d38a: cc                   	int3
ffffffff8001d38b: cc                   	int3
ffffffff8001d38c: cc                   	int3
ffffffff8001d38d: cc                   	int3
ffffffff8001d38e: cc                   	int3
ffffffff8001d38f: cc                   	int3

ffffffff8001d390 <x86_64::structures::idt::_::<impl core::fmt::UpperHex for x86_64::structures::idt::PageFaultErrorCode>::fmt::h218f3e02babb5ee8>:
ffffffff8001d390: 50                   	push	rax
ffffffff8001d391: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001d394: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff8001d398: 48 89 e7             	mov	rdi, rsp
ffffffff8001d39b: e8 50 0b 00 00       	call	0xffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8001d3a0: 59                   	pop	rcx
ffffffff8001d3a1: c3                   	ret
ffffffff8001d3a2: cc                   	int3
ffffffff8001d3a3: cc                   	int3
ffffffff8001d3a4: cc                   	int3
ffffffff8001d3a5: cc                   	int3
ffffffff8001d3a6: cc                   	int3
ffffffff8001d3a7: cc                   	int3
ffffffff8001d3a8: cc                   	int3
ffffffff8001d3a9: cc                   	int3
ffffffff8001d3aa: cc                   	int3
ffffffff8001d3ab: cc                   	int3
ffffffff8001d3ac: cc                   	int3
ffffffff8001d3ad: cc                   	int3
ffffffff8001d3ae: cc                   	int3
ffffffff8001d3af: cc                   	int3

ffffffff8001d3b0 <limine::smp::GotoAddress::write::h253e0ab8f56c7fe5>:
ffffffff8001d3b0: 48 89 37             	mov	qword ptr [rdi], rsi
ffffffff8001d3b3: c3                   	ret
ffffffff8001d3b4: cc                   	int3
ffffffff8001d3b5: cc                   	int3
ffffffff8001d3b6: cc                   	int3
ffffffff8001d3b7: cc                   	int3
ffffffff8001d3b8: cc                   	int3
ffffffff8001d3b9: cc                   	int3
ffffffff8001d3ba: cc                   	int3
ffffffff8001d3bb: cc                   	int3
ffffffff8001d3bc: cc                   	int3
ffffffff8001d3bd: cc                   	int3
ffffffff8001d3be: cc                   	int3
ffffffff8001d3bf: cc                   	int3

ffffffff8001d3c0 <limine::request::EfiSystemTableRequest::get_response::h4a4b8b0bbd703f80>:
ffffffff8001d3c0: 48 8b 47 28          	mov	rax, qword ptr [rdi + 0x28]
ffffffff8001d3c4: c3                   	ret
ffffffff8001d3c5: cc                   	int3
ffffffff8001d3c6: cc                   	int3
ffffffff8001d3c7: cc                   	int3
ffffffff8001d3c8: cc                   	int3
ffffffff8001d3c9: cc                   	int3
ffffffff8001d3ca: cc                   	int3
ffffffff8001d3cb: cc                   	int3
ffffffff8001d3cc: cc                   	int3
ffffffff8001d3cd: cc                   	int3
ffffffff8001d3ce: cc                   	int3
ffffffff8001d3cf: cc                   	int3

ffffffff8001d3d0 <limine::request::SmpRequest::get_response::h21f02c6510d3c825>:
ffffffff8001d3d0: 48 8b 47 28          	mov	rax, qword ptr [rdi + 0x28]
ffffffff8001d3d4: c3                   	ret
ffffffff8001d3d5: cc                   	int3
ffffffff8001d3d6: cc                   	int3
ffffffff8001d3d7: cc                   	int3
ffffffff8001d3d8: cc                   	int3
ffffffff8001d3d9: cc                   	int3
ffffffff8001d3da: cc                   	int3
ffffffff8001d3db: cc                   	int3
ffffffff8001d3dc: cc                   	int3
ffffffff8001d3dd: cc                   	int3
ffffffff8001d3de: cc                   	int3
ffffffff8001d3df: cc                   	int3

ffffffff8001d3e0 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>:
ffffffff8001d3e0: 48 8b 47 28          	mov	rax, qword ptr [rdi + 0x28]
ffffffff8001d3e4: c3                   	ret
ffffffff8001d3e5: cc                   	int3
ffffffff8001d3e6: cc                   	int3
ffffffff8001d3e7: cc                   	int3
ffffffff8001d3e8: cc                   	int3
ffffffff8001d3e9: cc                   	int3
ffffffff8001d3ea: cc                   	int3
ffffffff8001d3eb: cc                   	int3
ffffffff8001d3ec: cc                   	int3
ffffffff8001d3ed: cc                   	int3
ffffffff8001d3ee: cc                   	int3
ffffffff8001d3ef: cc                   	int3

ffffffff8001d3f0 <limine::BaseRevision::is_supported::h4d97ddcac02f0bb0>:
ffffffff8001d3f0: 48 83 7f 10 00       	cmp	qword ptr [rdi + 0x10], 0x0
ffffffff8001d3f5: 0f 94 c0             	sete	al
ffffffff8001d3f8: c3                   	ret
ffffffff8001d3f9: cc                   	int3
ffffffff8001d3fa: cc                   	int3
ffffffff8001d3fb: cc                   	int3
ffffffff8001d3fc: cc                   	int3
ffffffff8001d3fd: cc                   	int3
ffffffff8001d3fe: cc                   	int3
ffffffff8001d3ff: cc                   	int3

ffffffff8001d400 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb>:
ffffffff8001d400: 48 8b 37             	mov	rsi, qword ptr [rdi]
ffffffff8001d403: 48 85 f6             	test	rsi, rsi
ffffffff8001d406: 74 0e                	je	0xffffffff8001d416 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb+0x16>
ffffffff8001d408: 48 8b 7f 08          	mov	rdi, qword ptr [rdi + 0x8]
ffffffff8001d40c: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001d411: e9 4a bb fe ff       	jmp	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001d416: c3                   	ret
ffffffff8001d417: cc                   	int3
ffffffff8001d418: cc                   	int3
ffffffff8001d419: cc                   	int3
ffffffff8001d41a: cc                   	int3
ffffffff8001d41b: cc                   	int3
ffffffff8001d41c: cc                   	int3
ffffffff8001d41d: cc                   	int3
ffffffff8001d41e: cc                   	int3
ffffffff8001d41f: cc                   	int3

ffffffff8001d420 <<core::fmt::Error as core::fmt::Debug>::fmt::hca9d617326e586b8>:
ffffffff8001d420: 48 89 f7             	mov	rdi, rsi
ffffffff8001d423: ba 05 00 00 00       	mov	edx, 0x5
ffffffff8001d428: 48 c7 c6 1e 93 02 80 	mov	rsi, -0x7ffd6ce2
ffffffff8001d42f: e9 fc 15 00 00       	jmp	0xffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001d434: cc                   	int3
ffffffff8001d435: cc                   	int3
ffffffff8001d436: cc                   	int3
ffffffff8001d437: cc                   	int3
ffffffff8001d438: cc                   	int3
ffffffff8001d439: cc                   	int3
ffffffff8001d43a: cc                   	int3
ffffffff8001d43b: cc                   	int3
ffffffff8001d43c: cc                   	int3
ffffffff8001d43d: cc                   	int3
ffffffff8001d43e: cc                   	int3
ffffffff8001d43f: cc                   	int3

ffffffff8001d440 <alloc::raw_vec::capacity_overflow::ha70ea8db05fe5aa9.llvm.16187557440381842777>:
ffffffff8001d440: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001d444: 48 89 fe             	mov	rsi, rdi
ffffffff8001d447: 48 c7 44 24 08 70 93 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd6c90
ffffffff8001d450: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001d459: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001d462: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001d46b: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001d474: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001d479: e8 f2 3b 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001d47e: cc                   	int3
ffffffff8001d47f: cc                   	int3

ffffffff8001d480 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>:
ffffffff8001d480: 41 57                	push	r15
ffffffff8001d482: 41 56                	push	r14
ffffffff8001d484: 53                   	push	rbx
ffffffff8001d485: 48 83 ec 30          	sub	rsp, 0x30
ffffffff8001d489: 48 89 f3             	mov	rbx, rsi
ffffffff8001d48c: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001d48f: 48 8d 48 01          	lea	rcx, [rax + 0x1]
ffffffff8001d493: 48 8d 14 00          	lea	rdx, [rax + rax]
ffffffff8001d497: 48 39 d1             	cmp	rcx, rdx
ffffffff8001d49a: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff8001d49e: 48 83 fa 09          	cmp	rdx, 0x9
ffffffff8001d4a2: 41 bf 08 00 00 00    	mov	r15d, 0x8
ffffffff8001d4a8: 4c 0f 43 fa          	cmovae	r15, rdx
ffffffff8001d4ac: 4d 85 ff             	test	r15, r15
ffffffff8001d4af: 78 55                	js	0xffffffff8001d506 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x86>
ffffffff8001d4b1: 49 89 fe             	mov	r14, rdi
ffffffff8001d4b4: 48 85 c0             	test	rax, rax
ffffffff8001d4b7: 75 04                	jne	0xffffffff8001d4bd <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x3d>
ffffffff8001d4b9: 31 c0                	xor	eax, eax
ffffffff8001d4bb: eb 13                	jmp	0xffffffff8001d4d0 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x50>
ffffffff8001d4bd: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001d4c1: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001d4c6: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001d4cb: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001d4d0: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001d4d5: 48 89 e7             	mov	rdi, rsp
ffffffff8001d4d8: 48 8d 4c 24 18       	lea	rcx, [rsp + 0x18]
ffffffff8001d4dd: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001d4e2: 4c 89 fa             	mov	rdx, r15
ffffffff8001d4e5: e8 46 01 00 00       	call	0xffffffff8001d630 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>
ffffffff8001d4ea: 83 3c 24 01          	cmp	dword ptr [rsp], 0x1
ffffffff8001d4ee: 74 20                	je	0xffffffff8001d510 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x90>
ffffffff8001d4f0: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001d4f5: 49 89 46 08          	mov	qword ptr [r14 + 0x8], rax
ffffffff8001d4f9: 4d 89 3e             	mov	qword ptr [r14], r15
ffffffff8001d4fc: 48 83 c4 30          	add	rsp, 0x30
ffffffff8001d500: 5b                   	pop	rbx
ffffffff8001d501: 41 5e                	pop	r14
ffffffff8001d503: 41 5f                	pop	r15
ffffffff8001d505: c3                   	ret
ffffffff8001d506: 31 ff                	xor	edi, edi
ffffffff8001d508: 48 89 da             	mov	rdx, rbx
ffffffff8001d50b: e8 87 01 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001d510: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001d515: 48 8b 74 24 10       	mov	rsi, qword ptr [rsp + 0x10]
ffffffff8001d51a: 48 89 da             	mov	rdx, rbx
ffffffff8001d51d: e8 75 01 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001d522: cc                   	int3
ffffffff8001d523: cc                   	int3
ffffffff8001d524: cc                   	int3
ffffffff8001d525: cc                   	int3
ffffffff8001d526: cc                   	int3
ffffffff8001d527: cc                   	int3
ffffffff8001d528: cc                   	int3
ffffffff8001d529: cc                   	int3
ffffffff8001d52a: cc                   	int3
ffffffff8001d52b: cc                   	int3
ffffffff8001d52c: cc                   	int3
ffffffff8001d52d: cc                   	int3
ffffffff8001d52e: cc                   	int3
ffffffff8001d52f: cc                   	int3

ffffffff8001d530 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>:
ffffffff8001d530: 41 56                	push	r14
ffffffff8001d532: 53                   	push	rbx
ffffffff8001d533: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001d537: 4d 85 c0             	test	r8, r8
ffffffff8001d53a: 0f 84 bf 00 00 00    	je	0xffffffff8001d5ff <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xcf>
ffffffff8001d540: 48 01 d6             	add	rsi, rdx
ffffffff8001d543: 0f 82 b6 00 00 00    	jb	0xffffffff8001d5ff <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xcf>
ffffffff8001d549: 48 89 fb             	mov	rbx, rdi
ffffffff8001d54c: 4c 8b 0f             	mov	r9, qword ptr [rdi]
ffffffff8001d54f: 4b 8d 04 09          	lea	rax, [r9 + r9]
ffffffff8001d553: 48 39 c6             	cmp	rsi, rax
ffffffff8001d556: 48 0f 47 c6          	cmova	rax, rsi
ffffffff8001d55a: 31 d2                	xor	edx, edx
ffffffff8001d55c: 49 81 f8 01 04 00 00 	cmp	r8, 0x401
ffffffff8001d563: 0f 92 c2             	setb	dl
ffffffff8001d566: 49 83 f8 01          	cmp	r8, 0x1
ffffffff8001d56a: 48 8d 54 52 01       	lea	rdx, [rdx + 2*rdx + 0x1]
ffffffff8001d56f: 41 be 08 00 00 00    	mov	r14d, 0x8
ffffffff8001d575: 4c 0f 45 f2          	cmovne	r14, rdx
ffffffff8001d579: 4c 39 f0             	cmp	rax, r14
ffffffff8001d57c: 4c 0f 47 f0          	cmova	r14, rax
ffffffff8001d580: 4a 8d 14 01          	lea	rdx, [rcx + r8]
ffffffff8001d584: 48 ff ca             	dec	rdx
ffffffff8001d587: 48 89 c8             	mov	rax, rcx
ffffffff8001d58a: 48 f7 d8             	neg	rax
ffffffff8001d58d: 48 21 d0             	and	rax, rdx
ffffffff8001d590: 31 ff                	xor	edi, edi
ffffffff8001d592: 49 f7 e6             	mul	r14
ffffffff8001d595: 70 6a                	jo	0xffffffff8001d601 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xd1>
ffffffff8001d597: 48 ba 00 00 00 00 00 00 00 80	movabs	rdx, -0x8000000000000000
ffffffff8001d5a1: 48 29 ca             	sub	rdx, rcx
ffffffff8001d5a4: 48 39 d0             	cmp	rax, rdx
ffffffff8001d5a7: 77 6e                	ja	0xffffffff8001d617 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xe7>
ffffffff8001d5a9: 4d 85 c9             	test	r9, r9
ffffffff8001d5ac: 75 04                	jne	0xffffffff8001d5b2 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0x82>
ffffffff8001d5ae: 31 d2                	xor	edx, edx
ffffffff8001d5b0: eb 15                	jmp	0xffffffff8001d5c7 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0x97>
ffffffff8001d5b2: 48 8b 53 08          	mov	rdx, qword ptr [rbx + 0x8]
ffffffff8001d5b6: 4d 0f af c8          	imul	r9, r8
ffffffff8001d5ba: 48 89 54 24 20       	mov	qword ptr [rsp + 0x20], rdx
ffffffff8001d5bf: 4c 89 4c 24 30       	mov	qword ptr [rsp + 0x30], r9
ffffffff8001d5c4: 48 89 ca             	mov	rdx, rcx
ffffffff8001d5c7: 48 89 54 24 28       	mov	qword ptr [rsp + 0x28], rdx
ffffffff8001d5cc: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001d5d1: 4c 8d 44 24 20       	lea	r8, [rsp + 0x20]
ffffffff8001d5d6: 48 89 ce             	mov	rsi, rcx
ffffffff8001d5d9: 48 89 c2             	mov	rdx, rax
ffffffff8001d5dc: 4c 89 c1             	mov	rcx, r8
ffffffff8001d5df: e8 4c 00 00 00       	call	0xffffffff8001d630 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>
ffffffff8001d5e4: 83 7c 24 08 01       	cmp	dword ptr [rsp + 0x8], 0x1
ffffffff8001d5e9: 74 22                	je	0xffffffff8001d60d <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xdd>
ffffffff8001d5eb: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001d5f0: 48 89 43 08          	mov	qword ptr [rbx + 0x8], rax
ffffffff8001d5f4: 4c 89 33             	mov	qword ptr [rbx], r14
ffffffff8001d5f7: 48 83 c4 38          	add	rsp, 0x38
ffffffff8001d5fb: 5b                   	pop	rbx
ffffffff8001d5fc: 41 5e                	pop	r14
ffffffff8001d5fe: c3                   	ret
ffffffff8001d5ff: 31 ff                	xor	edi, edi
ffffffff8001d601: 48 c7 c2 f8 93 02 80 	mov	rdx, -0x7ffd6c08
ffffffff8001d608: e8 8a 00 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001d60d: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8001d612: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff8001d617: 48 c7 c2 f8 93 02 80 	mov	rdx, -0x7ffd6c08
ffffffff8001d61e: e8 74 00 00 00       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001d623: cc                   	int3
ffffffff8001d624: cc                   	int3
ffffffff8001d625: cc                   	int3
ffffffff8001d626: cc                   	int3
ffffffff8001d627: cc                   	int3
ffffffff8001d628: cc                   	int3
ffffffff8001d629: cc                   	int3
ffffffff8001d62a: cc                   	int3
ffffffff8001d62b: cc                   	int3
ffffffff8001d62c: cc                   	int3
ffffffff8001d62d: cc                   	int3
ffffffff8001d62e: cc                   	int3
ffffffff8001d62f: cc                   	int3

ffffffff8001d630 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>:
ffffffff8001d630: 41 57                	push	r15
ffffffff8001d632: 41 56                	push	r14
ffffffff8001d634: 53                   	push	rbx
ffffffff8001d635: 48 89 d3             	mov	rbx, rdx
ffffffff8001d638: 49 89 f7             	mov	r15, rsi
ffffffff8001d63b: 49 89 fe             	mov	r14, rdi
ffffffff8001d63e: 48 83 79 08 00       	cmp	qword ptr [rcx + 0x8], 0x0
ffffffff8001d643: 74 19                	je	0xffffffff8001d65e <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x2e>
ffffffff8001d645: 48 8b 71 10          	mov	rsi, qword ptr [rcx + 0x10]
ffffffff8001d649: 48 85 f6             	test	rsi, rsi
ffffffff8001d64c: 74 10                	je	0xffffffff8001d65e <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x2e>
ffffffff8001d64e: 48 8b 39             	mov	rdi, qword ptr [rcx]
ffffffff8001d651: 4c 89 fa             	mov	rdx, r15
ffffffff8001d654: 48 89 d9             	mov	rcx, rbx
ffffffff8001d657: e8 54 b9 fe ff       	call	0xffffffff80008fb0 <__rust_realloc>
ffffffff8001d65c: eb 1c                	jmp	0xffffffff8001d67a <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x4a>
ffffffff8001d65e: 48 85 db             	test	rbx, rbx
ffffffff8001d661: 74 14                	je	0xffffffff8001d677 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x47>
ffffffff8001d663: 0f b6 05 77 db 00 00 	movzx	eax, byte ptr [rip + 0xdb77] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001d66a: 48 89 df             	mov	rdi, rbx
ffffffff8001d66d: 4c 89 fe             	mov	rsi, r15
ffffffff8001d670: e8 9b b8 fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001d675: eb 03                	jmp	0xffffffff8001d67a <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x4a>
ffffffff8001d677: 4c 89 f8             	mov	rax, r15
ffffffff8001d67a: 31 c9                	xor	ecx, ecx
ffffffff8001d67c: 48 85 c0             	test	rax, rax
ffffffff8001d67f: 4c 0f 45 f8          	cmovne	r15, rax
ffffffff8001d683: 0f 94 c1             	sete	cl
ffffffff8001d686: 4d 89 7e 08          	mov	qword ptr [r14 + 0x8], r15
ffffffff8001d68a: 49 89 5e 10          	mov	qword ptr [r14 + 0x10], rbx
ffffffff8001d68e: 49 89 0e             	mov	qword ptr [r14], rcx
ffffffff8001d691: 5b                   	pop	rbx
ffffffff8001d692: 41 5e                	pop	r14
ffffffff8001d694: 41 5f                	pop	r15
ffffffff8001d696: c3                   	ret

ffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>:
ffffffff8001d697: 50                   	push	rax
ffffffff8001d698: 48 85 ff             	test	rdi, rdi
ffffffff8001d69b: 75 08                	jne	0xffffffff8001d6a5 <alloc::raw_vec::handle_error::hfb597936acd3049c+0xe>
ffffffff8001d69d: 48 89 d7             	mov	rdi, rdx
ffffffff8001d6a0: e8 9b fd ff ff       	call	0xffffffff8001d440 <alloc::raw_vec::capacity_overflow::ha70ea8db05fe5aa9.llvm.16187557440381842777>
ffffffff8001d6a5: e8 08 05 00 00       	call	0xffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8001d6aa: cc                   	int3
ffffffff8001d6ab: cc                   	int3
ffffffff8001d6ac: cc                   	int3
ffffffff8001d6ad: cc                   	int3
ffffffff8001d6ae: cc                   	int3
ffffffff8001d6af: cc                   	int3

ffffffff8001d6b0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>:
ffffffff8001d6b0: 41 57                	push	r15
ffffffff8001d6b2: 41 56                	push	r14
ffffffff8001d6b4: 41 54                	push	r12
ffffffff8001d6b6: 53                   	push	rbx
ffffffff8001d6b7: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8001d6bb: 49 89 f6             	mov	r14, rsi
ffffffff8001d6be: 48 89 fb             	mov	rbx, rdi
ffffffff8001d6c1: 48 8b 56 08          	mov	rdx, qword ptr [rsi + 0x8]
ffffffff8001d6c5: 48 85 d2             	test	rdx, rdx
ffffffff8001d6c8: 0f 84 c0 00 00 00    	je	0xffffffff8001d78e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff8001d6ce: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8001d6d1: 89 d1                	mov	ecx, edx
ffffffff8001d6d3: 83 e1 03             	and	ecx, 0x3
ffffffff8001d6d6: 48 83 fa 04          	cmp	rdx, 0x4
ffffffff8001d6da: 73 07                	jae	0xffffffff8001d6e3 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x33>
ffffffff8001d6dc: 45 31 ff             	xor	r15d, r15d
ffffffff8001d6df: 31 f6                	xor	esi, esi
ffffffff8001d6e1: eb 29                	jmp	0xffffffff8001d70c <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x5c>
ffffffff8001d6e3: 48 83 e2 fc          	and	rdx, -0x4
ffffffff8001d6e7: 48 8d 78 38          	lea	rdi, [rax + 0x38]
ffffffff8001d6eb: 45 31 ff             	xor	r15d, r15d
ffffffff8001d6ee: 31 f6                	xor	esi, esi
ffffffff8001d6f0: 4c 03 7f d0          	add	r15, qword ptr [rdi - 0x30]
ffffffff8001d6f4: 4c 03 7f e0          	add	r15, qword ptr [rdi - 0x20]
ffffffff8001d6f8: 4c 03 7f f0          	add	r15, qword ptr [rdi - 0x10]
ffffffff8001d6fc: 4c 03 3f             	add	r15, qword ptr [rdi]
ffffffff8001d6ff: 48 83 c6 04          	add	rsi, 0x4
ffffffff8001d703: 48 83 c7 40          	add	rdi, 0x40
ffffffff8001d707: 48 39 f2             	cmp	rdx, rsi
ffffffff8001d70a: 75 e4                	jne	0xffffffff8001d6f0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x40>
ffffffff8001d70c: 48 85 c9             	test	rcx, rcx
ffffffff8001d70f: 74 2c                	je	0xffffffff8001d73d <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x8d>
ffffffff8001d711: 48 c1 e6 04          	shl	rsi, 0x4
ffffffff8001d715: 48 8d 14 06          	lea	rdx, [rsi + rax]
ffffffff8001d719: 48 83 c2 08          	add	rdx, 0x8
ffffffff8001d71d: c1 e1 04             	shl	ecx, 0x4
ffffffff8001d720: 31 f6                	xor	esi, esi
ffffffff8001d722: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8001d730: 4c 03 3c 32          	add	r15, qword ptr [rdx + rsi]
ffffffff8001d734: 48 83 c6 10          	add	rsi, 0x10
ffffffff8001d738: 48 39 f1             	cmp	rcx, rsi
ffffffff8001d73b: 75 f3                	jne	0xffffffff8001d730 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x80>
ffffffff8001d73d: 49 83 7e 18 00       	cmp	qword ptr [r14 + 0x18], 0x0
ffffffff8001d742: 74 1b                	je	0xffffffff8001d75f <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xaf>
ffffffff8001d744: 48 83 78 08 00       	cmp	qword ptr [rax + 0x8], 0x0
ffffffff8001d749: 0f 94 c0             	sete	al
ffffffff8001d74c: 49 83 ff 10          	cmp	r15, 0x10
ffffffff8001d750: 0f 92 c1             	setb	cl
ffffffff8001d753: 4d 85 ff             	test	r15, r15
ffffffff8001d756: 78 36                	js	0xffffffff8001d78e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff8001d758: 20 c1                	and	cl, al
ffffffff8001d75a: 75 32                	jne	0xffffffff8001d78e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff8001d75c: 4d 01 ff             	add	r15, r15
ffffffff8001d75f: 4d 85 ff             	test	r15, r15
ffffffff8001d762: 0f 88 a6 00 00 00    	js	0xffffffff8001d80e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x15e>
ffffffff8001d768: 74 24                	je	0xffffffff8001d78e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff8001d76a: 0f b6 05 70 da 00 00 	movzx	eax, byte ptr [rip + 0xda70] # 0xffffffff8002b1e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8001d771: 41 bc 01 00 00 00    	mov	r12d, 0x1
ffffffff8001d777: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001d77c: 4c 89 ff             	mov	rdi, r15
ffffffff8001d77f: e8 8c b7 fe ff       	call	0xffffffff80008f10 <__rust_alloc>
ffffffff8001d784: 48 85 c0             	test	rax, rax
ffffffff8001d787: 75 0d                	jne	0xffffffff8001d796 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xe6>
ffffffff8001d789: e9 83 00 00 00       	jmp	0xffffffff8001d811 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x161>
ffffffff8001d78e: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8001d793: 45 31 ff             	xor	r15d, r15d
ffffffff8001d796: 4c 89 7c 24 10       	mov	qword ptr [rsp + 0x10], r15
ffffffff8001d79b: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001d7a0: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001d7a9: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001d7ae: 48 c7 c6 28 93 02 80 	mov	rsi, -0x7ffd6cd8
ffffffff8001d7b5: 4c 89 f2             	mov	rdx, r14
ffffffff8001d7b8: e8 13 0a 00 00       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001d7bd: 84 c0                	test	al, al
ffffffff8001d7bf: 75 29                	jne	0xffffffff8001d7ea <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x13a>
ffffffff8001d7c1: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001d7c6: 48 89 43 10          	mov	qword ptr [rbx + 0x10], rax
ffffffff8001d7ca: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001d7cf: 48 8b 4c 24 18       	mov	rcx, qword ptr [rsp + 0x18]
ffffffff8001d7d4: 48 89 4b 08          	mov	qword ptr [rbx + 0x8], rcx
ffffffff8001d7d8: 48 89 03             	mov	qword ptr [rbx], rax
ffffffff8001d7db: 48 89 d8             	mov	rax, rbx
ffffffff8001d7de: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001d7e2: 5b                   	pop	rbx
ffffffff8001d7e3: 41 5c                	pop	r12
ffffffff8001d7e5: 41 5e                	pop	r14
ffffffff8001d7e7: 41 5f                	pop	r15
ffffffff8001d7e9: c3                   	ret
ffffffff8001d7ea: 48 8d 54 24 0f       	lea	rdx, [rsp + 0xf]
ffffffff8001d7ef: be 56 00 00 00       	mov	esi, 0x56
ffffffff8001d7f4: 48 c7 c7 c0 94 02 80 	mov	rdi, -0x7ffd6b40
ffffffff8001d7fb: 48 c7 c1 a0 94 02 80 	mov	rcx, -0x7ffd6b60
ffffffff8001d802: 49 c7 c0 88 95 02 80 	mov	r8, -0x7ffd6a78
ffffffff8001d809: e8 52 33 00 00       	call	0xffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8001d80e: 45 31 e4             	xor	r12d, r12d
ffffffff8001d811: 4c 89 e7             	mov	rdi, r12
ffffffff8001d814: 4c 89 fe             	mov	rsi, r15
ffffffff8001d817: 48 c7 c2 88 94 02 80 	mov	rdx, -0x7ffd6b78
ffffffff8001d81e: e8 74 fe ff ff       	call	0xffffffff8001d697 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001d823: cc                   	int3
ffffffff8001d824: cc                   	int3
ffffffff8001d825: cc                   	int3
ffffffff8001d826: cc                   	int3
ffffffff8001d827: cc                   	int3
ffffffff8001d828: cc                   	int3
ffffffff8001d829: cc                   	int3
ffffffff8001d82a: cc                   	int3
ffffffff8001d82b: cc                   	int3
ffffffff8001d82c: cc                   	int3
ffffffff8001d82d: cc                   	int3
ffffffff8001d82e: cc                   	int3
ffffffff8001d82f: cc                   	int3

ffffffff8001d830 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd>:
ffffffff8001d830: 41 57                	push	r15
ffffffff8001d832: 41 56                	push	r14
ffffffff8001d834: 41 54                	push	r12
ffffffff8001d836: 53                   	push	rbx
ffffffff8001d837: 50                   	push	rax
ffffffff8001d838: 48 89 d3             	mov	rbx, rdx
ffffffff8001d83b: 49 89 fe             	mov	r14, rdi
ffffffff8001d83e: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001d841: 4c 8b 7f 10          	mov	r15, qword ptr [rdi + 0x10]
ffffffff8001d845: 4c 29 f8             	sub	rax, r15
ffffffff8001d848: 48 39 d0             	cmp	rax, rdx
ffffffff8001d84b: 72 25                	jb	0xffffffff8001d872 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x42>
ffffffff8001d84d: 49 8b 7e 08          	mov	rdi, qword ptr [r14 + 0x8]
ffffffff8001d851: 4c 01 ff             	add	rdi, r15
ffffffff8001d854: 48 89 da             	mov	rdx, rbx
ffffffff8001d857: ff 15 d3 eb 01 00    	call	qword ptr [rip + 0x1ebd3] # 0xffffffff8003c430
ffffffff8001d85d: 49 01 df             	add	r15, rbx
ffffffff8001d860: 4d 89 7e 10          	mov	qword ptr [r14 + 0x10], r15
ffffffff8001d864: 31 c0                	xor	eax, eax
ffffffff8001d866: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001d86a: 5b                   	pop	rbx
ffffffff8001d86b: 41 5c                	pop	r12
ffffffff8001d86d: 41 5e                	pop	r14
ffffffff8001d86f: 41 5f                	pop	r15
ffffffff8001d871: c3                   	ret
ffffffff8001d872: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001d877: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8001d87d: 4c 89 f7             	mov	rdi, r14
ffffffff8001d880: 49 89 f4             	mov	r12, rsi
ffffffff8001d883: 4c 89 fe             	mov	rsi, r15
ffffffff8001d886: 48 89 da             	mov	rdx, rbx
ffffffff8001d889: e8 a2 fc ff ff       	call	0xffffffff8001d530 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff8001d88e: 4c 89 e6             	mov	rsi, r12
ffffffff8001d891: 4d 8b 7e 10          	mov	r15, qword ptr [r14 + 0x10]
ffffffff8001d895: eb b6                	jmp	0xffffffff8001d84d <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x1d>
ffffffff8001d897: cc                   	int3
ffffffff8001d898: cc                   	int3
ffffffff8001d899: cc                   	int3
ffffffff8001d89a: cc                   	int3
ffffffff8001d89b: cc                   	int3
ffffffff8001d89c: cc                   	int3
ffffffff8001d89d: cc                   	int3
ffffffff8001d89e: cc                   	int3
ffffffff8001d89f: cc                   	int3

ffffffff8001d8a0 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb>:
ffffffff8001d8a0: 55                   	push	rbp
ffffffff8001d8a1: 41 57                	push	r15
ffffffff8001d8a3: 41 56                	push	r14
ffffffff8001d8a5: 53                   	push	rbx
ffffffff8001d8a6: 50                   	push	rax
ffffffff8001d8a7: 48 89 fb             	mov	rbx, rdi
ffffffff8001d8aa: 81 fe 80 00 00 00    	cmp	esi, 0x80
ffffffff8001d8b0: 73 30                	jae	0xffffffff8001d8e2 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x42>
ffffffff8001d8b2: 4c 8b 73 10          	mov	r14, qword ptr [rbx + 0x10]
ffffffff8001d8b6: 4c 3b 33             	cmp	r14, qword ptr [rbx]
ffffffff8001d8b9: 75 13                	jne	0xffffffff8001d8ce <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x2e>
ffffffff8001d8bb: 48 89 df             	mov	rdi, rbx
ffffffff8001d8be: 89 f5                	mov	ebp, esi
ffffffff8001d8c0: 48 c7 c6 a0 95 02 80 	mov	rsi, -0x7ffd6a60
ffffffff8001d8c7: e8 b4 fb ff ff       	call	0xffffffff8001d480 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>
ffffffff8001d8cc: 89 ee                	mov	esi, ebp
ffffffff8001d8ce: 48 8b 43 08          	mov	rax, qword ptr [rbx + 0x8]
ffffffff8001d8d2: 42 88 34 30          	mov	byte ptr [rax + r14], sil
ffffffff8001d8d6: 49 ff c6             	inc	r14
ffffffff8001d8d9: 4c 89 73 10          	mov	qword ptr [rbx + 0x10], r14
ffffffff8001d8dd: e9 c4 00 00 00       	jmp	0xffffffff8001d9a6 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x106>
ffffffff8001d8e2: c7 44 24 04 00 00 00 00      	mov	dword ptr [rsp + 0x4], 0x0
ffffffff8001d8ea: 81 fe 00 08 00 00    	cmp	esi, 0x800
ffffffff8001d8f0: 73 19                	jae	0xffffffff8001d90b <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x6b>
ffffffff8001d8f2: 48 8d 44 24 05       	lea	rax, [rsp + 0x5]
ffffffff8001d8f7: 89 f1                	mov	ecx, esi
ffffffff8001d8f9: c1 e9 06             	shr	ecx, 0x6
ffffffff8001d8fc: 80 c9 c0             	or	cl, -0x40
ffffffff8001d8ff: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001d903: 41 be 02 00 00 00    	mov	r14d, 0x2
ffffffff8001d909: eb 65                	jmp	0xffffffff8001d970 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff8001d90b: 81 fe 00 00 01 00    	cmp	esi, 0x10000
ffffffff8001d911: 73 28                	jae	0xffffffff8001d93b <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x9b>
ffffffff8001d913: 48 8d 44 24 06       	lea	rax, [rsp + 0x6]
ffffffff8001d918: 89 f1                	mov	ecx, esi
ffffffff8001d91a: c1 e9 0c             	shr	ecx, 0xc
ffffffff8001d91d: 80 c9 e0             	or	cl, -0x20
ffffffff8001d920: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001d924: 89 f1                	mov	ecx, esi
ffffffff8001d926: c1 e9 06             	shr	ecx, 0x6
ffffffff8001d929: 80 e1 3f             	and	cl, 0x3f
ffffffff8001d92c: 80 c9 80             	or	cl, -0x80
ffffffff8001d92f: 88 4c 24 05          	mov	byte ptr [rsp + 0x5], cl
ffffffff8001d933: 41 be 03 00 00 00    	mov	r14d, 0x3
ffffffff8001d939: eb 35                	jmp	0xffffffff8001d970 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff8001d93b: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001d940: 89 f1                	mov	ecx, esi
ffffffff8001d942: c1 e9 12             	shr	ecx, 0x12
ffffffff8001d945: 80 c9 f0             	or	cl, -0x10
ffffffff8001d948: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001d94c: 89 f1                	mov	ecx, esi
ffffffff8001d94e: c1 e9 0c             	shr	ecx, 0xc
ffffffff8001d951: 80 e1 3f             	and	cl, 0x3f
ffffffff8001d954: 80 c9 80             	or	cl, -0x80
ffffffff8001d957: 88 4c 24 05          	mov	byte ptr [rsp + 0x5], cl
ffffffff8001d95b: 89 f1                	mov	ecx, esi
ffffffff8001d95d: c1 e9 06             	shr	ecx, 0x6
ffffffff8001d960: 80 e1 3f             	and	cl, 0x3f
ffffffff8001d963: 80 c9 80             	or	cl, -0x80
ffffffff8001d966: 88 4c 24 06          	mov	byte ptr [rsp + 0x6], cl
ffffffff8001d96a: 41 be 04 00 00 00    	mov	r14d, 0x4
ffffffff8001d970: 40 80 e6 3f          	and	sil, 0x3f
ffffffff8001d974: 40 80 ce 80          	or	sil, -0x80
ffffffff8001d978: 40 88 30             	mov	byte ptr [rax], sil
ffffffff8001d97b: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff8001d97e: 4c 8b 7b 10          	mov	r15, qword ptr [rbx + 0x10]
ffffffff8001d982: 4c 29 f8             	sub	rax, r15
ffffffff8001d985: 4c 39 f0             	cmp	rax, r14
ffffffff8001d988: 72 29                	jb	0xffffffff8001d9b3 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x113>
ffffffff8001d98a: 48 8b 7b 08          	mov	rdi, qword ptr [rbx + 0x8]
ffffffff8001d98e: 4c 01 ff             	add	rdi, r15
ffffffff8001d991: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff8001d996: 4c 89 f2             	mov	rdx, r14
ffffffff8001d999: ff 15 91 ea 01 00    	call	qword ptr [rip + 0x1ea91] # 0xffffffff8003c430
ffffffff8001d99f: 4d 01 f7             	add	r15, r14
ffffffff8001d9a2: 4c 89 7b 10          	mov	qword ptr [rbx + 0x10], r15
ffffffff8001d9a6: 31 c0                	xor	eax, eax
ffffffff8001d9a8: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001d9ac: 5b                   	pop	rbx
ffffffff8001d9ad: 41 5e                	pop	r14
ffffffff8001d9af: 41 5f                	pop	r15
ffffffff8001d9b1: 5d                   	pop	rbp
ffffffff8001d9b2: c3                   	ret
ffffffff8001d9b3: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001d9b8: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8001d9be: 48 89 df             	mov	rdi, rbx
ffffffff8001d9c1: 4c 89 fe             	mov	rsi, r15
ffffffff8001d9c4: 4c 89 f2             	mov	rdx, r14
ffffffff8001d9c7: e8 64 fb ff ff       	call	0xffffffff8001d530 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff8001d9cc: 4c 8b 7b 10          	mov	r15, qword ptr [rbx + 0x10]
ffffffff8001d9d0: eb b8                	jmp	0xffffffff8001d98a <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xea>
ffffffff8001d9d2: cc                   	int3
ffffffff8001d9d3: cc                   	int3
ffffffff8001d9d4: cc                   	int3
ffffffff8001d9d5: cc                   	int3
ffffffff8001d9d6: cc                   	int3
ffffffff8001d9d7: cc                   	int3
ffffffff8001d9d8: cc                   	int3
ffffffff8001d9d9: cc                   	int3
ffffffff8001d9da: cc                   	int3
ffffffff8001d9db: cc                   	int3
ffffffff8001d9dc: cc                   	int3
ffffffff8001d9dd: cc                   	int3
ffffffff8001d9de: cc                   	int3
ffffffff8001d9df: cc                   	int3

ffffffff8001d9e0 <core::fmt::Write::write_fmt::hee4adfe1aba0cc4c>:
ffffffff8001d9e0: 48 89 f2             	mov	rdx, rsi
ffffffff8001d9e3: 48 c7 c6 b8 95 02 80 	mov	rsi, -0x7ffd6a48
ffffffff8001d9ea: e9 e1 07 00 00       	jmp	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001d9ef: cc                   	int3

ffffffff8001d9f0 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb>:
ffffffff8001d9f0: 48 8b 37             	mov	rsi, qword ptr [rdi]
ffffffff8001d9f3: 48 85 f6             	test	rsi, rsi
ffffffff8001d9f6: 74 0e                	je	0xffffffff8001da06 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb+0x16>
ffffffff8001d9f8: 48 8b 7f 08          	mov	rdi, qword ptr [rdi + 0x8]
ffffffff8001d9fc: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001da01: e9 5a b5 fe ff       	jmp	0xffffffff80008f60 <__rust_dealloc>
ffffffff8001da06: c3                   	ret
ffffffff8001da07: cc                   	int3
ffffffff8001da08: cc                   	int3
ffffffff8001da09: cc                   	int3
ffffffff8001da0a: cc                   	int3
ffffffff8001da0b: cc                   	int3
ffffffff8001da0c: cc                   	int3
ffffffff8001da0d: cc                   	int3
ffffffff8001da0e: cc                   	int3
ffffffff8001da0f: cc                   	int3

ffffffff8001da10 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd>:
ffffffff8001da10: 41 57                	push	r15
ffffffff8001da12: 41 56                	push	r14
ffffffff8001da14: 41 54                	push	r12
ffffffff8001da16: 53                   	push	rbx
ffffffff8001da17: 50                   	push	rax
ffffffff8001da18: 48 89 d3             	mov	rbx, rdx
ffffffff8001da1b: 49 89 fe             	mov	r14, rdi
ffffffff8001da1e: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001da21: 4c 8b 7f 10          	mov	r15, qword ptr [rdi + 0x10]
ffffffff8001da25: 4c 29 f8             	sub	rax, r15
ffffffff8001da28: 48 39 d0             	cmp	rax, rdx
ffffffff8001da2b: 72 25                	jb	0xffffffff8001da52 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x42>
ffffffff8001da2d: 49 8b 7e 08          	mov	rdi, qword ptr [r14 + 0x8]
ffffffff8001da31: 4c 01 ff             	add	rdi, r15
ffffffff8001da34: 48 89 da             	mov	rdx, rbx
ffffffff8001da37: ff 15 f3 e9 01 00    	call	qword ptr [rip + 0x1e9f3] # 0xffffffff8003c430
ffffffff8001da3d: 49 01 df             	add	r15, rbx
ffffffff8001da40: 4d 89 7e 10          	mov	qword ptr [r14 + 0x10], r15
ffffffff8001da44: 31 c0                	xor	eax, eax
ffffffff8001da46: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001da4a: 5b                   	pop	rbx
ffffffff8001da4b: 41 5c                	pop	r12
ffffffff8001da4d: 41 5e                	pop	r14
ffffffff8001da4f: 41 5f                	pop	r15
ffffffff8001da51: c3                   	ret
ffffffff8001da52: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001da57: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8001da5d: 4c 89 f7             	mov	rdi, r14
ffffffff8001da60: 49 89 f4             	mov	r12, rsi
ffffffff8001da63: 4c 89 fe             	mov	rsi, r15
ffffffff8001da66: 48 89 da             	mov	rdx, rbx
ffffffff8001da69: e8 c2 fa ff ff       	call	0xffffffff8001d530 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff8001da6e: 4c 89 e6             	mov	rsi, r12
ffffffff8001da71: 4d 8b 7e 10          	mov	r15, qword ptr [r14 + 0x10]
ffffffff8001da75: eb b6                	jmp	0xffffffff8001da2d <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x1d>
ffffffff8001da77: cc                   	int3
ffffffff8001da78: cc                   	int3
ffffffff8001da79: cc                   	int3
ffffffff8001da7a: cc                   	int3
ffffffff8001da7b: cc                   	int3
ffffffff8001da7c: cc                   	int3
ffffffff8001da7d: cc                   	int3
ffffffff8001da7e: cc                   	int3
ffffffff8001da7f: cc                   	int3

ffffffff8001da80 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb>:
ffffffff8001da80: 55                   	push	rbp
ffffffff8001da81: 41 57                	push	r15
ffffffff8001da83: 41 56                	push	r14
ffffffff8001da85: 53                   	push	rbx
ffffffff8001da86: 50                   	push	rax
ffffffff8001da87: 48 89 fb             	mov	rbx, rdi
ffffffff8001da8a: 81 fe 80 00 00 00    	cmp	esi, 0x80
ffffffff8001da90: 73 30                	jae	0xffffffff8001dac2 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x42>
ffffffff8001da92: 4c 8b 73 10          	mov	r14, qword ptr [rbx + 0x10]
ffffffff8001da96: 4c 3b 33             	cmp	r14, qword ptr [rbx]
ffffffff8001da99: 75 13                	jne	0xffffffff8001daae <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x2e>
ffffffff8001da9b: 48 89 df             	mov	rdi, rbx
ffffffff8001da9e: 89 f5                	mov	ebp, esi
ffffffff8001daa0: 48 c7 c6 60 96 02 80 	mov	rsi, -0x7ffd69a0
ffffffff8001daa7: e8 d4 f9 ff ff       	call	0xffffffff8001d480 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>
ffffffff8001daac: 89 ee                	mov	esi, ebp
ffffffff8001daae: 48 8b 43 08          	mov	rax, qword ptr [rbx + 0x8]
ffffffff8001dab2: 42 88 34 30          	mov	byte ptr [rax + r14], sil
ffffffff8001dab6: 49 ff c6             	inc	r14
ffffffff8001dab9: 4c 89 73 10          	mov	qword ptr [rbx + 0x10], r14
ffffffff8001dabd: e9 c4 00 00 00       	jmp	0xffffffff8001db86 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x106>
ffffffff8001dac2: c7 44 24 04 00 00 00 00      	mov	dword ptr [rsp + 0x4], 0x0
ffffffff8001daca: 81 fe 00 08 00 00    	cmp	esi, 0x800
ffffffff8001dad0: 73 19                	jae	0xffffffff8001daeb <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x6b>
ffffffff8001dad2: 48 8d 44 24 05       	lea	rax, [rsp + 0x5]
ffffffff8001dad7: 89 f1                	mov	ecx, esi
ffffffff8001dad9: c1 e9 06             	shr	ecx, 0x6
ffffffff8001dadc: 80 c9 c0             	or	cl, -0x40
ffffffff8001dadf: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001dae3: 41 be 02 00 00 00    	mov	r14d, 0x2
ffffffff8001dae9: eb 65                	jmp	0xffffffff8001db50 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff8001daeb: 81 fe 00 00 01 00    	cmp	esi, 0x10000
ffffffff8001daf1: 73 28                	jae	0xffffffff8001db1b <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x9b>
ffffffff8001daf3: 48 8d 44 24 06       	lea	rax, [rsp + 0x6]
ffffffff8001daf8: 89 f1                	mov	ecx, esi
ffffffff8001dafa: c1 e9 0c             	shr	ecx, 0xc
ffffffff8001dafd: 80 c9 e0             	or	cl, -0x20
ffffffff8001db00: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001db04: 89 f1                	mov	ecx, esi
ffffffff8001db06: c1 e9 06             	shr	ecx, 0x6
ffffffff8001db09: 80 e1 3f             	and	cl, 0x3f
ffffffff8001db0c: 80 c9 80             	or	cl, -0x80
ffffffff8001db0f: 88 4c 24 05          	mov	byte ptr [rsp + 0x5], cl
ffffffff8001db13: 41 be 03 00 00 00    	mov	r14d, 0x3
ffffffff8001db19: eb 35                	jmp	0xffffffff8001db50 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff8001db1b: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001db20: 89 f1                	mov	ecx, esi
ffffffff8001db22: c1 e9 12             	shr	ecx, 0x12
ffffffff8001db25: 80 c9 f0             	or	cl, -0x10
ffffffff8001db28: 88 4c 24 04          	mov	byte ptr [rsp + 0x4], cl
ffffffff8001db2c: 89 f1                	mov	ecx, esi
ffffffff8001db2e: c1 e9 0c             	shr	ecx, 0xc
ffffffff8001db31: 80 e1 3f             	and	cl, 0x3f
ffffffff8001db34: 80 c9 80             	or	cl, -0x80
ffffffff8001db37: 88 4c 24 05          	mov	byte ptr [rsp + 0x5], cl
ffffffff8001db3b: 89 f1                	mov	ecx, esi
ffffffff8001db3d: c1 e9 06             	shr	ecx, 0x6
ffffffff8001db40: 80 e1 3f             	and	cl, 0x3f
ffffffff8001db43: 80 c9 80             	or	cl, -0x80
ffffffff8001db46: 88 4c 24 06          	mov	byte ptr [rsp + 0x6], cl
ffffffff8001db4a: 41 be 04 00 00 00    	mov	r14d, 0x4
ffffffff8001db50: 40 80 e6 3f          	and	sil, 0x3f
ffffffff8001db54: 40 80 ce 80          	or	sil, -0x80
ffffffff8001db58: 40 88 30             	mov	byte ptr [rax], sil
ffffffff8001db5b: 48 8b 03             	mov	rax, qword ptr [rbx]
ffffffff8001db5e: 4c 8b 7b 10          	mov	r15, qword ptr [rbx + 0x10]
ffffffff8001db62: 4c 29 f8             	sub	rax, r15
ffffffff8001db65: 4c 39 f0             	cmp	rax, r14
ffffffff8001db68: 72 29                	jb	0xffffffff8001db93 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x113>
ffffffff8001db6a: 48 8b 7b 08          	mov	rdi, qword ptr [rbx + 0x8]
ffffffff8001db6e: 4c 01 ff             	add	rdi, r15
ffffffff8001db71: 48 8d 74 24 04       	lea	rsi, [rsp + 0x4]
ffffffff8001db76: 4c 89 f2             	mov	rdx, r14
ffffffff8001db79: ff 15 b1 e8 01 00    	call	qword ptr [rip + 0x1e8b1] # 0xffffffff8003c430
ffffffff8001db7f: 4d 01 f7             	add	r15, r14
ffffffff8001db82: 4c 89 7b 10          	mov	qword ptr [rbx + 0x10], r15
ffffffff8001db86: 31 c0                	xor	eax, eax
ffffffff8001db88: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001db8c: 5b                   	pop	rbx
ffffffff8001db8d: 41 5e                	pop	r14
ffffffff8001db8f: 41 5f                	pop	r15
ffffffff8001db91: 5d                   	pop	rbp
ffffffff8001db92: c3                   	ret
ffffffff8001db93: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001db98: 41 b8 01 00 00 00    	mov	r8d, 0x1
ffffffff8001db9e: 48 89 df             	mov	rdi, rbx
ffffffff8001dba1: 4c 89 fe             	mov	rsi, r15
ffffffff8001dba4: 4c 89 f2             	mov	rdx, r14
ffffffff8001dba7: e8 84 f9 ff ff       	call	0xffffffff8001d530 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff8001dbac: 4c 8b 7b 10          	mov	r15, qword ptr [rbx + 0x10]
ffffffff8001dbb0: eb b8                	jmp	0xffffffff8001db6a <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xea>

ffffffff8001dbb2 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>:
ffffffff8001dbb2: 50                   	push	rax
ffffffff8001dbb3: 48 89 f8             	mov	rax, rdi
ffffffff8001dbb6: 48 89 f7             	mov	rdi, rsi
ffffffff8001dbb9: 48 89 c6             	mov	rsi, rax
ffffffff8001dbbc: e8 5f 25 fe ff       	call	0xffffffff80000120 <__rust_alloc_error_handler>
ffffffff8001dbc1: cc                   	int3
ffffffff8001dbc2: cc                   	int3
ffffffff8001dbc3: cc                   	int3
ffffffff8001dbc4: cc                   	int3
ffffffff8001dbc5: cc                   	int3
ffffffff8001dbc6: cc                   	int3
ffffffff8001dbc7: cc                   	int3
ffffffff8001dbc8: cc                   	int3
ffffffff8001dbc9: cc                   	int3
ffffffff8001dbca: cc                   	int3
ffffffff8001dbcb: cc                   	int3
ffffffff8001dbcc: cc                   	int3
ffffffff8001dbcd: cc                   	int3
ffffffff8001dbce: cc                   	int3
ffffffff8001dbcf: cc                   	int3

ffffffff8001dbd0 <__rdl_oom>:
ffffffff8001dbd0: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8001dbd4: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff8001dbd8: 80 3d 01 d6 00 00 00 	cmp	byte ptr [rip + 0xd601], 0x0 # 0xffffffff8002b1e0 <__rust_alloc_error_handler_should_panic>
ffffffff8001dbdf: 75 52                	jne	0xffffffff8001dc33 <__rdl_oom+0x63>
ffffffff8001dbe1: 48 89 e0             	mov	rax, rsp
ffffffff8001dbe4: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8001dbe9: 48 c7 44 24 10 10 04 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdfbf0
ffffffff8001dbf2: 48 c7 44 24 18 a0 96 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffd6960
ffffffff8001dbfb: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8001dc04: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8001dc0d: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001dc12: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001dc17: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001dc20: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8001dc25: 31 f6                	xor	esi, esi
ffffffff8001dc27: 48 c7 c2 38 97 02 80 	mov	rdx, -0x7ffd68c8
ffffffff8001dc2e: e8 5d 34 00 00       	call	0xffffffff80021090 <core::panicking::panic_nounwind_fmt::hfff70d18e33a2d27>
ffffffff8001dc33: 48 89 e0             	mov	rax, rsp
ffffffff8001dc36: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8001dc3b: 48 c7 44 24 10 10 04 02 80   	mov	qword ptr [rsp + 0x10], -0x7ffdfbf0
ffffffff8001dc44: 48 c7 44 24 18 a0 96 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffd6960
ffffffff8001dc4d: 48 c7 44 24 20 02 00 00 00   	mov	qword ptr [rsp + 0x20], 0x2
ffffffff8001dc56: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8001dc5f: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001dc64: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001dc69: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff8001dc72: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8001dc77: 48 c7 c6 50 97 02 80 	mov	rsi, -0x7ffd68b0
ffffffff8001dc7e: e8 ed 33 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001dc83: cc                   	int3
ffffffff8001dc84: cc                   	int3
ffffffff8001dc85: cc                   	int3
ffffffff8001dc86: cc                   	int3
ffffffff8001dc87: cc                   	int3
ffffffff8001dc88: cc                   	int3
ffffffff8001dc89: cc                   	int3
ffffffff8001dc8a: cc                   	int3
ffffffff8001dc8b: cc                   	int3
ffffffff8001dc8c: cc                   	int3
ffffffff8001dc8d: cc                   	int3
ffffffff8001dc8e: cc                   	int3
ffffffff8001dc8f: cc                   	int3

ffffffff8001dc90 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18>:
ffffffff8001dc90: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001dc97: 0f b6 07             	movzx	eax, byte ptr [rdi]
ffffffff8001dc9a: 45 31 c9             	xor	r9d, r9d
ffffffff8001dc9d: 89 c1                	mov	ecx, eax
ffffffff8001dc9f: 90                   	nop
ffffffff8001dca0: c0 e9 04             	shr	cl, 0x4
ffffffff8001dca3: 89 c2                	mov	edx, eax
ffffffff8001dca5: 80 e2 0f             	and	dl, 0xf
ffffffff8001dca8: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001dcab: 44 8d 42 57          	lea	r8d, [rdx + 0x57]
ffffffff8001dcaf: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001dcb2: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001dcb6: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001dcba: 0f 42 fa             	cmovb	edi, edx
ffffffff8001dcbd: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001dcc5: 49 ff c9             	dec	r9
ffffffff8001dcc8: 3c 0f                	cmp	al, 0xf
ffffffff8001dcca: 89 c8                	mov	eax, ecx
ffffffff8001dccc: 77 d2                	ja	0xffffffff8001dca0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18+0x10>
ffffffff8001dcce: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001dcd2: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001dcd9: 49 f7 d9             	neg	r9
ffffffff8001dcdc: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001dce1: 48 89 f7             	mov	rdi, rsi
ffffffff8001dce4: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001dce9: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001dcf0: e8 fb 06 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001dcf5: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001dcfc: c3                   	ret
ffffffff8001dcfd: cc                   	int3
ffffffff8001dcfe: cc                   	int3
ffffffff8001dcff: cc                   	int3

ffffffff8001dd00 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2>:
ffffffff8001dd00: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001dd07: 0f b6 07             	movzx	eax, byte ptr [rdi]
ffffffff8001dd0a: 45 31 c9             	xor	r9d, r9d
ffffffff8001dd0d: 89 c1                	mov	ecx, eax
ffffffff8001dd0f: 90                   	nop
ffffffff8001dd10: c0 e9 04             	shr	cl, 0x4
ffffffff8001dd13: 89 c2                	mov	edx, eax
ffffffff8001dd15: 80 e2 0f             	and	dl, 0xf
ffffffff8001dd18: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001dd1b: 44 8d 42 37          	lea	r8d, [rdx + 0x37]
ffffffff8001dd1f: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001dd22: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001dd26: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001dd2a: 0f 42 fa             	cmovb	edi, edx
ffffffff8001dd2d: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001dd35: 49 ff c9             	dec	r9
ffffffff8001dd38: 3c 0f                	cmp	al, 0xf
ffffffff8001dd3a: 89 c8                	mov	eax, ecx
ffffffff8001dd3c: 77 d2                	ja	0xffffffff8001dd10 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2+0x10>
ffffffff8001dd3e: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001dd42: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001dd49: 49 f7 d9             	neg	r9
ffffffff8001dd4c: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001dd51: 48 89 f7             	mov	rdi, rsi
ffffffff8001dd54: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001dd59: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001dd60: e8 8b 06 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001dd65: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001dd6c: c3                   	ret
ffffffff8001dd6d: cc                   	int3
ffffffff8001dd6e: cc                   	int3
ffffffff8001dd6f: cc                   	int3

ffffffff8001dd70 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374>:
ffffffff8001dd70: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001dd77: 0f b7 07             	movzx	eax, word ptr [rdi]
ffffffff8001dd7a: 45 31 c9             	xor	r9d, r9d
ffffffff8001dd7d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8001dd80: 0f b7 c8             	movzx	ecx, ax
ffffffff8001dd83: 89 c8                	mov	eax, ecx
ffffffff8001dd85: c1 e8 04             	shr	eax, 0x4
ffffffff8001dd88: 89 ca                	mov	edx, ecx
ffffffff8001dd8a: 80 e2 0f             	and	dl, 0xf
ffffffff8001dd8d: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001dd90: 44 8d 42 57          	lea	r8d, [rdx + 0x57]
ffffffff8001dd94: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001dd97: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001dd9b: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001dd9f: 0f 42 fa             	cmovb	edi, edx
ffffffff8001dda2: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001ddaa: 49 ff c9             	dec	r9
ffffffff8001ddad: 66 83 f9 0f          	cmp	cx, 0xf
ffffffff8001ddb1: 77 cd                	ja	0xffffffff8001dd80 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374+0x10>
ffffffff8001ddb3: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001ddb7: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001ddbe: 49 f7 d9             	neg	r9
ffffffff8001ddc1: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001ddc6: 48 89 f7             	mov	rdi, rsi
ffffffff8001ddc9: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001ddce: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001ddd5: e8 16 06 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001ddda: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001dde1: c3                   	ret
ffffffff8001dde2: cc                   	int3
ffffffff8001dde3: cc                   	int3
ffffffff8001dde4: cc                   	int3
ffffffff8001dde5: cc                   	int3
ffffffff8001dde6: cc                   	int3
ffffffff8001dde7: cc                   	int3
ffffffff8001dde8: cc                   	int3
ffffffff8001dde9: cc                   	int3
ffffffff8001ddea: cc                   	int3
ffffffff8001ddeb: cc                   	int3
ffffffff8001ddec: cc                   	int3
ffffffff8001dded: cc                   	int3
ffffffff8001ddee: cc                   	int3
ffffffff8001ddef: cc                   	int3

ffffffff8001ddf0 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107>:
ffffffff8001ddf0: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001ddf7: 0f b7 07             	movzx	eax, word ptr [rdi]
ffffffff8001ddfa: 45 31 c9             	xor	r9d, r9d
ffffffff8001ddfd: 0f 1f 00             	nop	dword ptr [rax]
ffffffff8001de00: 0f b7 c8             	movzx	ecx, ax
ffffffff8001de03: 89 c8                	mov	eax, ecx
ffffffff8001de05: c1 e8 04             	shr	eax, 0x4
ffffffff8001de08: 89 ca                	mov	edx, ecx
ffffffff8001de0a: 80 e2 0f             	and	dl, 0xf
ffffffff8001de0d: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001de10: 44 8d 42 37          	lea	r8d, [rdx + 0x37]
ffffffff8001de14: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001de17: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001de1b: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001de1f: 0f 42 fa             	cmovb	edi, edx
ffffffff8001de22: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001de2a: 49 ff c9             	dec	r9
ffffffff8001de2d: 66 83 f9 0f          	cmp	cx, 0xf
ffffffff8001de31: 77 cd                	ja	0xffffffff8001de00 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107+0x10>
ffffffff8001de33: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001de37: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001de3e: 49 f7 d9             	neg	r9
ffffffff8001de41: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001de46: 48 89 f7             	mov	rdi, rsi
ffffffff8001de49: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001de4e: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001de55: e8 96 05 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001de5a: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001de61: c3                   	ret
ffffffff8001de62: cc                   	int3
ffffffff8001de63: cc                   	int3
ffffffff8001de64: cc                   	int3
ffffffff8001de65: cc                   	int3
ffffffff8001de66: cc                   	int3
ffffffff8001de67: cc                   	int3
ffffffff8001de68: cc                   	int3
ffffffff8001de69: cc                   	int3
ffffffff8001de6a: cc                   	int3
ffffffff8001de6b: cc                   	int3
ffffffff8001de6c: cc                   	int3
ffffffff8001de6d: cc                   	int3
ffffffff8001de6e: cc                   	int3
ffffffff8001de6f: cc                   	int3

ffffffff8001de70 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>:
ffffffff8001de70: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001de77: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001de7a: 45 31 c9             	xor	r9d, r9d
ffffffff8001de7d: 48 89 c1             	mov	rcx, rax
ffffffff8001de80: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8001de84: 89 c2                	mov	edx, eax
ffffffff8001de86: 80 e2 0f             	and	dl, 0xf
ffffffff8001de89: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001de8c: 44 8d 42 57          	lea	r8d, [rdx + 0x57]
ffffffff8001de90: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001de93: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001de97: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001de9b: 0f 42 fa             	cmovb	edi, edx
ffffffff8001de9e: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001dea6: 49 ff c9             	dec	r9
ffffffff8001dea9: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff8001dead: 48 89 c8             	mov	rax, rcx
ffffffff8001deb0: 77 ce                	ja	0xffffffff8001de80 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3+0x10>
ffffffff8001deb2: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001deb6: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001debd: 49 f7 d9             	neg	r9
ffffffff8001dec0: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001dec5: 48 89 f7             	mov	rdi, rsi
ffffffff8001dec8: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001decd: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001ded4: e8 17 05 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001ded9: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001dee0: c3                   	ret
ffffffff8001dee1: cc                   	int3
ffffffff8001dee2: cc                   	int3
ffffffff8001dee3: cc                   	int3
ffffffff8001dee4: cc                   	int3
ffffffff8001dee5: cc                   	int3
ffffffff8001dee6: cc                   	int3
ffffffff8001dee7: cc                   	int3
ffffffff8001dee8: cc                   	int3
ffffffff8001dee9: cc                   	int3
ffffffff8001deea: cc                   	int3
ffffffff8001deeb: cc                   	int3
ffffffff8001deec: cc                   	int3
ffffffff8001deed: cc                   	int3
ffffffff8001deee: cc                   	int3
ffffffff8001deef: cc                   	int3

ffffffff8001def0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>:
ffffffff8001def0: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8001def7: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001defa: 45 31 c9             	xor	r9d, r9d
ffffffff8001defd: 48 89 c1             	mov	rcx, rax
ffffffff8001df00: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff8001df04: 89 c2                	mov	edx, eax
ffffffff8001df06: 80 e2 0f             	and	dl, 0xf
ffffffff8001df09: 8d 7a 30             	lea	edi, [rdx + 0x30]
ffffffff8001df0c: 44 8d 42 37          	lea	r8d, [rdx + 0x37]
ffffffff8001df10: 80 fa 0a             	cmp	dl, 0xa
ffffffff8001df13: 40 0f b6 d7          	movzx	edx, dil
ffffffff8001df17: 41 0f b6 f8          	movzx	edi, r8b
ffffffff8001df1b: 0f 42 fa             	cmovb	edi, edx
ffffffff8001df1e: 42 88 bc 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], dil
ffffffff8001df26: 49 ff c9             	dec	r9
ffffffff8001df29: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff8001df2d: 48 89 c8             	mov	rax, rcx
ffffffff8001df30: 77 ce                	ja	0xffffffff8001df00 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35+0x10>
ffffffff8001df32: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff8001df36: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8001df3d: 49 f7 d9             	neg	r9
ffffffff8001df40: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001df45: 48 89 f7             	mov	rdi, rsi
ffffffff8001df48: be 01 00 00 00       	mov	esi, 0x1
ffffffff8001df4d: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff8001df54: e8 97 04 00 00       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001df59: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff8001df60: c3                   	ret
ffffffff8001df61: cc                   	int3
ffffffff8001df62: cc                   	int3
ffffffff8001df63: cc                   	int3
ffffffff8001df64: cc                   	int3
ffffffff8001df65: cc                   	int3
ffffffff8001df66: cc                   	int3
ffffffff8001df67: cc                   	int3
ffffffff8001df68: cc                   	int3
ffffffff8001df69: cc                   	int3
ffffffff8001df6a: cc                   	int3
ffffffff8001df6b: cc                   	int3
ffffffff8001df6c: cc                   	int3
ffffffff8001df6d: cc                   	int3
ffffffff8001df6e: cc                   	int3
ffffffff8001df6f: cc                   	int3

ffffffff8001df70 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>:
ffffffff8001df70: 41 56                	push	r14
ffffffff8001df72: 53                   	push	rbx
ffffffff8001df73: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001df77: 89 f3                	mov	ebx, esi
ffffffff8001df79: 83 fe 27             	cmp	esi, 0x27
ffffffff8001df7c: 77 13                	ja	0xffffffff8001df91 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x21>
ffffffff8001df7e: 89 d8                	mov	eax, ebx
ffffffff8001df80: ff 24 c5 38 98 02 80 	jmp	qword ptr [8*rax - 0x7ffd67c8]
ffffffff8001df87: 66 c7 07 5c 30       	mov	word ptr [rdi], 0x305c
ffffffff8001df8c: e9 09 02 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001df91: 83 fb 5c             	cmp	ebx, 0x5c
ffffffff8001df94: 75 0a                	jne	0xffffffff8001dfa0 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x30>
ffffffff8001df96: 66 c7 07 5c 5c       	mov	word ptr [rdi], 0x5c5c
ffffffff8001df9b: e9 fa 01 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001dfa0: 81 fb 00 03 00 00    	cmp	ebx, 0x300
ffffffff8001dfa6: 0f 93 c0             	setae	al
ffffffff8001dfa9: 84 d0                	test	al, dl
ffffffff8001dfab: 0f 84 0a 01 00 00    	je	0xffffffff8001e0bb <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff8001dfb1: 49 89 fe             	mov	r14, rdi
ffffffff8001dfb4: 89 df                	mov	edi, ebx
ffffffff8001dfb6: e8 45 2f 00 00       	call	0xffffffff80020f00 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb>
ffffffff8001dfbb: 4c 89 f7             	mov	rdi, r14
ffffffff8001dfbe: 84 c0                	test	al, al
ffffffff8001dfc0: 0f 84 f5 00 00 00    	je	0xffffffff8001e0bb <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff8001dfc6: 89 d8                	mov	eax, ebx
ffffffff8001dfc8: 83 c8 01             	or	eax, 0x1
ffffffff8001dfcb: 0f bd c0             	bsr	eax, eax
ffffffff8001dfce: 83 f0 1c             	xor	eax, 0x1c
ffffffff8001dfd1: c1 e8 02             	shr	eax, 0x2
ffffffff8001dfd4: 48 8d 48 fe          	lea	rcx, [rax - 0x2]
ffffffff8001dfd8: c6 44 24 06 00       	mov	byte ptr [rsp + 0x6], 0x0
ffffffff8001dfdd: 66 c7 44 24 04 00 00 	mov	word ptr [rsp + 0x4], 0x0
ffffffff8001dfe4: 89 da                	mov	edx, ebx
ffffffff8001dfe6: c1 ea 14             	shr	edx, 0x14
ffffffff8001dfe9: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001dff0: 88 54 24 07          	mov	byte ptr [rsp + 0x7], dl
ffffffff8001dff4: 89 da                	mov	edx, ebx
ffffffff8001dff6: c1 ea 10             	shr	edx, 0x10
ffffffff8001dff9: 83 e2 0f             	and	edx, 0xf
ffffffff8001dffc: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e003: 88 54 24 08          	mov	byte ptr [rsp + 0x8], dl
ffffffff8001e007: 89 da                	mov	edx, ebx
ffffffff8001e009: c1 ea 0c             	shr	edx, 0xc
ffffffff8001e00c: 83 e2 0f             	and	edx, 0xf
ffffffff8001e00f: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e016: 88 54 24 09          	mov	byte ptr [rsp + 0x9], dl
ffffffff8001e01a: 89 da                	mov	edx, ebx
ffffffff8001e01c: c1 ea 08             	shr	edx, 0x8
ffffffff8001e01f: 83 e2 0f             	and	edx, 0xf
ffffffff8001e022: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e029: 88 54 24 0a          	mov	byte ptr [rsp + 0xa], dl
ffffffff8001e02d: 89 da                	mov	edx, ebx
ffffffff8001e02f: c1 ea 04             	shr	edx, 0x4
ffffffff8001e032: 83 e2 0f             	and	edx, 0xf
ffffffff8001e035: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e03c: 88 54 24 0b          	mov	byte ptr [rsp + 0xb], dl
ffffffff8001e040: 83 e3 0f             	and	ebx, 0xf
ffffffff8001e043: 0f b6 93 00 37 02 80 	movzx	edx, byte ptr [rbx - 0x7ffdc900]
ffffffff8001e04a: 88 54 24 0c          	mov	byte ptr [rsp + 0xc], dl
ffffffff8001e04e: c6 44 24 0d 7d       	mov	byte ptr [rsp + 0xd], 0x7d
ffffffff8001e053: 66 c7 44 04 02 5c 75 	mov	word ptr [rsp + rax + 0x2], 0x755c
ffffffff8001e05a: c6 44 04 04 7b       	mov	byte ptr [rsp + rax + 0x4], 0x7b
ffffffff8001e05f: 0f b7 44 24 0c       	movzx	eax, word ptr [rsp + 0xc]
ffffffff8001e064: 66 89 47 08          	mov	word ptr [rdi + 0x8], ax
ffffffff8001e068: 48 8b 44 24 04       	mov	rax, qword ptr [rsp + 0x4]
ffffffff8001e06d: 48 89 07             	mov	qword ptr [rdi], rax
ffffffff8001e070: 88 4f 0a             	mov	byte ptr [rdi + 0xa], cl
ffffffff8001e073: c6 47 0b 0a          	mov	byte ptr [rdi + 0xb], 0xa
ffffffff8001e077: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001e07b: 5b                   	pop	rbx
ffffffff8001e07c: 41 5e                	pop	r14
ffffffff8001e07e: c3                   	ret
ffffffff8001e07f: 66 c7 07 5c 6e       	mov	word ptr [rdi], 0x6e5c
ffffffff8001e084: e9 11 01 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001e089: f7 c2 00 01 00 00    	test	edx, 0x100
ffffffff8001e08f: 74 2a                	je	0xffffffff8001e0bb <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff8001e091: 66 c7 07 5c 27       	mov	word ptr [rdi], 0x275c
ffffffff8001e096: e9 ff 00 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001e09b: 66 c7 07 5c 72       	mov	word ptr [rdi], 0x725c
ffffffff8001e0a0: e9 f5 00 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001e0a5: 66 c7 07 5c 74       	mov	word ptr [rdi], 0x745c
ffffffff8001e0aa: e9 eb 00 00 00       	jmp	0xffffffff8001e19a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001e0af: f7 c2 00 00 01 00    	test	edx, 0x10000
ffffffff8001e0b5: 0f 85 da 00 00 00    	jne	0xffffffff8001e195 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x225>
ffffffff8001e0bb: 49 89 fe             	mov	r14, rdi
ffffffff8001e0be: 89 df                	mov	edi, ebx
ffffffff8001e0c0: e8 7b 1b 00 00       	call	0xffffffff8001fc40 <core::unicode::printable::is_printable::hdd600e6e9a348a8e>
ffffffff8001e0c5: 84 c0                	test	al, al
ffffffff8001e0c7: 74 10                	je	0xffffffff8001e0d9 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x169>
ffffffff8001e0c9: 41 c6 06 80          	mov	byte ptr [r14], -0x80
ffffffff8001e0cd: 41 89 5e 04          	mov	dword ptr [r14 + 0x4], ebx
ffffffff8001e0d1: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001e0d5: 5b                   	pop	rbx
ffffffff8001e0d6: 41 5e                	pop	r14
ffffffff8001e0d8: c3                   	ret
ffffffff8001e0d9: 89 d8                	mov	eax, ebx
ffffffff8001e0db: 83 c8 01             	or	eax, 0x1
ffffffff8001e0de: 0f bd c0             	bsr	eax, eax
ffffffff8001e0e1: 83 f0 1c             	xor	eax, 0x1c
ffffffff8001e0e4: c1 e8 02             	shr	eax, 0x2
ffffffff8001e0e7: 48 8d 48 fe          	lea	rcx, [rax - 0x2]
ffffffff8001e0eb: c6 44 24 10 00       	mov	byte ptr [rsp + 0x10], 0x0
ffffffff8001e0f0: 66 c7 44 24 0e 00 00 	mov	word ptr [rsp + 0xe], 0x0
ffffffff8001e0f7: 89 da                	mov	edx, ebx
ffffffff8001e0f9: c1 ea 14             	shr	edx, 0x14
ffffffff8001e0fc: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e103: 88 54 24 11          	mov	byte ptr [rsp + 0x11], dl
ffffffff8001e107: 89 da                	mov	edx, ebx
ffffffff8001e109: c1 ea 10             	shr	edx, 0x10
ffffffff8001e10c: 83 e2 0f             	and	edx, 0xf
ffffffff8001e10f: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e116: 88 54 24 12          	mov	byte ptr [rsp + 0x12], dl
ffffffff8001e11a: 89 da                	mov	edx, ebx
ffffffff8001e11c: c1 ea 0c             	shr	edx, 0xc
ffffffff8001e11f: 83 e2 0f             	and	edx, 0xf
ffffffff8001e122: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e129: 88 54 24 13          	mov	byte ptr [rsp + 0x13], dl
ffffffff8001e12d: 89 da                	mov	edx, ebx
ffffffff8001e12f: c1 ea 08             	shr	edx, 0x8
ffffffff8001e132: 83 e2 0f             	and	edx, 0xf
ffffffff8001e135: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e13c: 88 54 24 14          	mov	byte ptr [rsp + 0x14], dl
ffffffff8001e140: 89 da                	mov	edx, ebx
ffffffff8001e142: c1 ea 04             	shr	edx, 0x4
ffffffff8001e145: 83 e2 0f             	and	edx, 0xf
ffffffff8001e148: 0f b6 92 00 37 02 80 	movzx	edx, byte ptr [rdx - 0x7ffdc900]
ffffffff8001e14f: 88 54 24 15          	mov	byte ptr [rsp + 0x15], dl
ffffffff8001e153: 83 e3 0f             	and	ebx, 0xf
ffffffff8001e156: 0f b6 93 00 37 02 80 	movzx	edx, byte ptr [rbx - 0x7ffdc900]
ffffffff8001e15d: 88 54 24 16          	mov	byte ptr [rsp + 0x16], dl
ffffffff8001e161: c6 44 24 17 7d       	mov	byte ptr [rsp + 0x17], 0x7d
ffffffff8001e166: 66 c7 44 04 0c 5c 75 	mov	word ptr [rsp + rax + 0xc], 0x755c
ffffffff8001e16d: c6 44 04 0e 7b       	mov	byte ptr [rsp + rax + 0xe], 0x7b
ffffffff8001e172: 0f b7 44 24 16       	movzx	eax, word ptr [rsp + 0x16]
ffffffff8001e177: 66 41 89 46 08       	mov	word ptr [r14 + 0x8], ax
ffffffff8001e17c: 48 8b 44 24 0e       	mov	rax, qword ptr [rsp + 0xe]
ffffffff8001e181: 49 89 06             	mov	qword ptr [r14], rax
ffffffff8001e184: 41 88 4e 0a          	mov	byte ptr [r14 + 0xa], cl
ffffffff8001e188: 41 c6 46 0b 0a       	mov	byte ptr [r14 + 0xb], 0xa
ffffffff8001e18d: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001e191: 5b                   	pop	rbx
ffffffff8001e192: 41 5e                	pop	r14
ffffffff8001e194: c3                   	ret
ffffffff8001e195: 66 c7 07 5c 22       	mov	word ptr [rdi], 0x225c
ffffffff8001e19a: 48 c7 47 02 00 00 00 00      	mov	qword ptr [rdi + 0x2], 0x0
ffffffff8001e1a2: 66 c7 47 0a 00 02    	mov	word ptr [rdi + 0xa], 0x200
ffffffff8001e1a8: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001e1ac: 5b                   	pop	rbx
ffffffff8001e1ad: 41 5e                	pop	r14
ffffffff8001e1af: c3                   	ret

ffffffff8001e1b0 <<core::fmt::Arguments as core::fmt::Debug>::fmt::hbf2870b6b8eb2548>:
ffffffff8001e1b0: 48 89 fa             	mov	rdx, rdi
ffffffff8001e1b3: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8001e1b7: 48 8b 76 38          	mov	rsi, qword ptr [rsi + 0x38]
ffffffff8001e1bb: e9 10 00 00 00       	jmp	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>

ffffffff8001e1c0 <<core::fmt::Arguments as core::fmt::Display>::fmt::h748934159bb7ee61>:
ffffffff8001e1c0: 48 89 fa             	mov	rdx, rdi
ffffffff8001e1c3: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8001e1c7: 48 8b 76 38          	mov	rsi, qword ptr [rsi + 0x38]
ffffffff8001e1cb: e9 00 00 00 00       	jmp	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>

ffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>:
ffffffff8001e1d0: 55                   	push	rbp
ffffffff8001e1d1: 41 57                	push	r15
ffffffff8001e1d3: 41 56                	push	r14
ffffffff8001e1d5: 41 55                	push	r13
ffffffff8001e1d7: 41 54                	push	r12
ffffffff8001e1d9: 53                   	push	rbx
ffffffff8001e1da: 48 83 ec 48          	sub	rsp, 0x48
ffffffff8001e1de: 48 c7 44 24 08 00 00 00 00   	mov	qword ptr [rsp + 0x8], 0x0
ffffffff8001e1e7: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 0x18], 0x0
ffffffff8001e1f0: 48 c7 44 24 28 20 00 00 00   	mov	qword ptr [rsp + 0x28], 0x20
ffffffff8001e1f9: c6 44 24 30 03       	mov	byte ptr [rsp + 0x30], 0x3
ffffffff8001e1fe: 48 89 7c 24 38       	mov	qword ptr [rsp + 0x38], rdi
ffffffff8001e203: 48 89 74 24 40       	mov	qword ptr [rsp + 0x40], rsi
ffffffff8001e208: 4c 8b 62 20          	mov	r12, qword ptr [rdx + 0x20]
ffffffff8001e20c: 4d 85 e4             	test	r12, r12
ffffffff8001e20f: 48 89 14 24          	mov	qword ptr [rsp], rdx
ffffffff8001e213: 0f 84 0e 01 00 00    	je	0xffffffff8001e327 <core::fmt::write::h1a05140646fc4354+0x157>
ffffffff8001e219: 48 8b 42 28          	mov	rax, qword ptr [rdx + 0x28]
ffffffff8001e21d: 48 85 c0             	test	rax, rax
ffffffff8001e220: 0f 84 70 01 00 00    	je	0xffffffff8001e396 <core::fmt::write::h1a05140646fc4354+0x1c6>
ffffffff8001e226: 4c 8b 2a             	mov	r13, qword ptr [rdx]
ffffffff8001e229: 48 8b 6a 10          	mov	rbp, qword ptr [rdx + 0x10]
ffffffff8001e22d: 49 83 c5 08          	add	r13, 0x8
ffffffff8001e231: 4c 6b f0 38          	imul	r14, rax, 0x38
ffffffff8001e235: 31 db                	xor	ebx, ebx
ffffffff8001e237: 45 31 ff             	xor	r15d, r15d
ffffffff8001e23a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001e240: 49 8b 55 00          	mov	rdx, qword ptr [r13]
ffffffff8001e244: 48 85 d2             	test	rdx, rdx
ffffffff8001e247: 74 19                	je	0xffffffff8001e262 <core::fmt::write::h1a05140646fc4354+0x92>
ffffffff8001e249: 48 8b 7c 24 38       	mov	rdi, qword ptr [rsp + 0x38]
ffffffff8001e24e: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001e253: 49 8b 75 f8          	mov	rsi, qword ptr [r13 - 0x8]
ffffffff8001e257: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001e25a: 84 c0                	test	al, al
ffffffff8001e25c: 0f 85 66 01 00 00    	jne	0xffffffff8001e3c8 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff8001e262: 41 8b 44 1c 28       	mov	eax, dword ptr [r12 + rbx + 0x28]
ffffffff8001e267: 89 44 24 28          	mov	dword ptr [rsp + 0x28], eax
ffffffff8001e26b: 41 0f b6 44 1c 30    	movzx	eax, byte ptr [r12 + rbx + 0x30]
ffffffff8001e271: 88 44 24 30          	mov	byte ptr [rsp + 0x30], al
ffffffff8001e275: 41 8b 44 1c 2c       	mov	eax, dword ptr [r12 + rbx + 0x2c]
ffffffff8001e27a: 89 44 24 2c          	mov	dword ptr [rsp + 0x2c], eax
ffffffff8001e27e: 49 8b 4c 1c 10       	mov	rcx, qword ptr [r12 + rbx + 0x10]
ffffffff8001e283: 49 8b 44 1c 18       	mov	rax, qword ptr [r12 + rbx + 0x18]
ffffffff8001e288: 48 85 c9             	test	rcx, rcx
ffffffff8001e28b: 74 1c                	je	0xffffffff8001e2a9 <core::fmt::write::h1a05140646fc4354+0xd9>
ffffffff8001e28d: 83 f9 01             	cmp	ecx, 0x1
ffffffff8001e290: 75 0c                	jne	0xffffffff8001e29e <core::fmt::write::h1a05140646fc4354+0xce>
ffffffff8001e292: 48 c1 e0 04          	shl	rax, 0x4
ffffffff8001e296: 48 83 7c 05 00 00    	cmp	qword ptr [rbp + rax], 0x0
ffffffff8001e29c: 74 04                	je	0xffffffff8001e2a2 <core::fmt::write::h1a05140646fc4354+0xd2>
ffffffff8001e29e: 31 c9                	xor	ecx, ecx
ffffffff8001e2a0: eb 0c                	jmp	0xffffffff8001e2ae <core::fmt::write::h1a05140646fc4354+0xde>
ffffffff8001e2a2: 48 01 e8             	add	rax, rbp
ffffffff8001e2a5: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff8001e2a9: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001e2ae: 48 89 4c 24 08       	mov	qword ptr [rsp + 0x8], rcx
ffffffff8001e2b3: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001e2b8: 49 8b 0c 1c          	mov	rcx, qword ptr [r12 + rbx]
ffffffff8001e2bc: 48 83 f9 02          	cmp	rcx, 0x2
ffffffff8001e2c0: 74 16                	je	0xffffffff8001e2d8 <core::fmt::write::h1a05140646fc4354+0x108>
ffffffff8001e2c2: 49 8b 44 1c 08       	mov	rax, qword ptr [r12 + rbx + 0x8]
ffffffff8001e2c7: 83 f9 01             	cmp	ecx, 0x1
ffffffff8001e2ca: 75 17                	jne	0xffffffff8001e2e3 <core::fmt::write::h1a05140646fc4354+0x113>
ffffffff8001e2cc: 48 c1 e0 04          	shl	rax, 0x4
ffffffff8001e2d0: 48 83 7c 05 00 00    	cmp	qword ptr [rbp + rax], 0x0
ffffffff8001e2d6: 74 04                	je	0xffffffff8001e2dc <core::fmt::write::h1a05140646fc4354+0x10c>
ffffffff8001e2d8: 31 c9                	xor	ecx, ecx
ffffffff8001e2da: eb 0c                	jmp	0xffffffff8001e2e8 <core::fmt::write::h1a05140646fc4354+0x118>
ffffffff8001e2dc: 48 01 e8             	add	rax, rbp
ffffffff8001e2df: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff8001e2e3: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001e2e8: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001e2ed: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001e2f2: 49 8b 44 1c 20       	mov	rax, qword ptr [r12 + rbx + 0x20]
ffffffff8001e2f7: 48 c1 e0 04          	shl	rax, 0x4
ffffffff8001e2fb: 48 8b 7c 05 00       	mov	rdi, qword ptr [rbp + rax]
ffffffff8001e300: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8001e305: ff 54 05 08          	call	qword ptr [rbp + rax + 0x8]
ffffffff8001e309: 84 c0                	test	al, al
ffffffff8001e30b: 0f 85 b7 00 00 00    	jne	0xffffffff8001e3c8 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff8001e311: 49 83 c5 10          	add	r13, 0x10
ffffffff8001e315: 48 83 c3 38          	add	rbx, 0x38
ffffffff8001e319: 49 ff c7             	inc	r15
ffffffff8001e31c: 49 39 de             	cmp	r14, rbx
ffffffff8001e31f: 0f 85 1b ff ff ff    	jne	0xffffffff8001e240 <core::fmt::write::h1a05140646fc4354+0x70>
ffffffff8001e325: eb 72                	jmp	0xffffffff8001e399 <core::fmt::write::h1a05140646fc4354+0x1c9>
ffffffff8001e327: 48 8b 5a 18          	mov	rbx, qword ptr [rdx + 0x18]
ffffffff8001e32b: 48 85 db             	test	rbx, rbx
ffffffff8001e32e: 0f 84 98 00 00 00    	je	0xffffffff8001e3cc <core::fmt::write::h1a05140646fc4354+0x1fc>
ffffffff8001e334: 4c 8b 62 10          	mov	r12, qword ptr [rdx + 0x10]
ffffffff8001e338: 48 c1 e3 04          	shl	rbx, 0x4
ffffffff8001e33c: 4c 01 e3             	add	rbx, r12
ffffffff8001e33f: 4c 8b 2a             	mov	r13, qword ptr [rdx]
ffffffff8001e342: 31 ed                	xor	ebp, ebp
ffffffff8001e344: 45 31 ff             	xor	r15d, r15d
ffffffff8001e347: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001e350: 49 8b 54 2d 08       	mov	rdx, qword ptr [r13 + rbp + 0x8]
ffffffff8001e355: 48 85 d2             	test	rdx, rdx
ffffffff8001e358: 74 16                	je	0xffffffff8001e370 <core::fmt::write::h1a05140646fc4354+0x1a0>
ffffffff8001e35a: 48 8b 7c 24 38       	mov	rdi, qword ptr [rsp + 0x38]
ffffffff8001e35f: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001e364: 49 8b 74 2d 00       	mov	rsi, qword ptr [r13 + rbp]
ffffffff8001e369: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001e36c: 84 c0                	test	al, al
ffffffff8001e36e: 75 58                	jne	0xffffffff8001e3c8 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff8001e370: 4d 8d 34 2c          	lea	r14, [r12 + rbp]
ffffffff8001e374: 49 8b 3e             	mov	rdi, qword ptr [r14]
ffffffff8001e377: 48 8d 74 24 08       	lea	rsi, [rsp + 0x8]
ffffffff8001e37c: 41 ff 56 08          	call	qword ptr [r14 + 0x8]
ffffffff8001e380: 84 c0                	test	al, al
ffffffff8001e382: 75 44                	jne	0xffffffff8001e3c8 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff8001e384: 48 83 c5 10          	add	rbp, 0x10
ffffffff8001e388: 49 83 c6 10          	add	r14, 0x10
ffffffff8001e38c: 49 ff c7             	inc	r15
ffffffff8001e38f: 49 39 de             	cmp	r14, rbx
ffffffff8001e392: 75 bc                	jne	0xffffffff8001e350 <core::fmt::write::h1a05140646fc4354+0x180>
ffffffff8001e394: eb 03                	jmp	0xffffffff8001e399 <core::fmt::write::h1a05140646fc4354+0x1c9>
ffffffff8001e396: 45 31 ff             	xor	r15d, r15d
ffffffff8001e399: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff8001e39d: 4c 3b 78 08          	cmp	r15, qword ptr [rax + 0x8]
ffffffff8001e3a1: 73 36                	jae	0xffffffff8001e3d9 <core::fmt::write::h1a05140646fc4354+0x209>
ffffffff8001e3a3: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff8001e3a7: 48 8b 00             	mov	rax, qword ptr [rax]
ffffffff8001e3aa: 49 c1 e7 04          	shl	r15, 0x4
ffffffff8001e3ae: 48 8b 7c 24 38       	mov	rdi, qword ptr [rsp + 0x38]
ffffffff8001e3b3: 48 8b 4c 24 40       	mov	rcx, qword ptr [rsp + 0x40]
ffffffff8001e3b8: 4a 8b 34 38          	mov	rsi, qword ptr [rax + r15]
ffffffff8001e3bc: 4a 8b 54 38 08       	mov	rdx, qword ptr [rax + r15 + 0x8]
ffffffff8001e3c1: ff 51 18             	call	qword ptr [rcx + 0x18]
ffffffff8001e3c4: 84 c0                	test	al, al
ffffffff8001e3c6: 74 11                	je	0xffffffff8001e3d9 <core::fmt::write::h1a05140646fc4354+0x209>
ffffffff8001e3c8: b0 01                	mov	al, 0x1
ffffffff8001e3ca: eb 0f                	jmp	0xffffffff8001e3db <core::fmt::write::h1a05140646fc4354+0x20b>
ffffffff8001e3cc: 45 31 ff             	xor	r15d, r15d
ffffffff8001e3cf: 48 8b 04 24          	mov	rax, qword ptr [rsp]
ffffffff8001e3d3: 4c 3b 78 08          	cmp	r15, qword ptr [rax + 0x8]
ffffffff8001e3d7: 72 ca                	jb	0xffffffff8001e3a3 <core::fmt::write::h1a05140646fc4354+0x1d3>
ffffffff8001e3d9: 31 c0                	xor	eax, eax
ffffffff8001e3db: 48 83 c4 48          	add	rsp, 0x48
ffffffff8001e3df: 5b                   	pop	rbx
ffffffff8001e3e0: 41 5c                	pop	r12
ffffffff8001e3e2: 41 5d                	pop	r13
ffffffff8001e3e4: 41 5e                	pop	r14
ffffffff8001e3e6: 41 5f                	pop	r15
ffffffff8001e3e8: 5d                   	pop	rbp
ffffffff8001e3e9: c3                   	ret
ffffffff8001e3ea: cc                   	int3
ffffffff8001e3eb: cc                   	int3
ffffffff8001e3ec: cc                   	int3
ffffffff8001e3ed: cc                   	int3
ffffffff8001e3ee: cc                   	int3
ffffffff8001e3ef: cc                   	int3

ffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>:
ffffffff8001e3f0: 55                   	push	rbp
ffffffff8001e3f1: 41 57                	push	r15
ffffffff8001e3f3: 41 56                	push	r14
ffffffff8001e3f5: 41 55                	push	r13
ffffffff8001e3f7: 41 54                	push	r12
ffffffff8001e3f9: 53                   	push	rbx
ffffffff8001e3fa: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8001e3fe: 4d 89 cd             	mov	r13, r9
ffffffff8001e401: 4c 89 c5             	mov	rbp, r8
ffffffff8001e404: 49 89 ca             	mov	r10, rcx
ffffffff8001e407: 49 89 d4             	mov	r12, rdx
ffffffff8001e40a: 85 f6                	test	esi, esi
ffffffff8001e40c: 74 48                	je	0xffffffff8001e456 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x66>
ffffffff8001e40e: 8b 5f 24             	mov	ebx, dword ptr [rdi + 0x24]
ffffffff8001e411: 41 89 de             	mov	r14d, ebx
ffffffff8001e414: 41 83 e6 01          	and	r14d, 0x1
ffffffff8001e418: b8 00 00 11 00       	mov	eax, 0x110000
ffffffff8001e41d: ba 2b 00 00 00       	mov	edx, 0x2b
ffffffff8001e422: 0f 44 d0             	cmove	edx, eax
ffffffff8001e425: 4d 01 ee             	add	r14, r13
ffffffff8001e428: f6 c3 04             	test	bl, 0x4
ffffffff8001e42b: 74 3a                	je	0xffffffff8001e467 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x77>
ffffffff8001e42d: 49 83 fa 20          	cmp	r10, 0x20
ffffffff8001e431: 73 73                	jae	0xffffffff8001e4a6 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xb6>
ffffffff8001e433: 4d 85 d2             	test	r10, r10
ffffffff8001e436: 0f 84 a3 00 00 00    	je	0xffffffff8001e4df <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xef>
ffffffff8001e43c: 44 89 d1             	mov	ecx, r10d
ffffffff8001e43f: 83 e1 03             	and	ecx, 0x3
ffffffff8001e442: 49 83 fa 04          	cmp	r10, 0x4
ffffffff8001e446: 0f 83 97 00 00 00    	jae	0xffffffff8001e4e3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xf3>
ffffffff8001e44c: 31 c0                	xor	eax, eax
ffffffff8001e44e: 45 31 db             	xor	r11d, r11d
ffffffff8001e451: e9 de 00 00 00       	jmp	0xffffffff8001e534 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x144>
ffffffff8001e456: 4d 8d 75 01          	lea	r14, [r13 + 0x1]
ffffffff8001e45a: 8b 5f 24             	mov	ebx, dword ptr [rdi + 0x24]
ffffffff8001e45d: ba 2d 00 00 00       	mov	edx, 0x2d
ffffffff8001e462: f6 c3 04             	test	bl, 0x4
ffffffff8001e465: 75 c6                	jne	0xffffffff8001e42d <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x3d>
ffffffff8001e467: 45 31 e4             	xor	r12d, r12d
ffffffff8001e46a: f6 07 01             	test	byte ptr [rdi], 0x1
ffffffff8001e46d: 0f 85 f0 00 00 00    	jne	0xffffffff8001e563 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x173>
ffffffff8001e473: 48 8b 5f 30          	mov	rbx, qword ptr [rdi + 0x30]
ffffffff8001e477: 4c 8b 77 38          	mov	r14, qword ptr [rdi + 0x38]
ffffffff8001e47b: 48 89 df             	mov	rdi, rbx
ffffffff8001e47e: 4c 89 f6             	mov	rsi, r14
ffffffff8001e481: 4c 89 e1             	mov	rcx, r12
ffffffff8001e484: 4d 89 d0             	mov	r8, r10
ffffffff8001e487: e8 c4 02 00 00       	call	0xffffffff8001e750 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff8001e48c: 41 b7 01             	mov	r15b, 0x1
ffffffff8001e48f: 84 c0                	test	al, al
ffffffff8001e491: 0f 85 9c 02 00 00    	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e497: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001e49b: 48 89 df             	mov	rdi, rbx
ffffffff8001e49e: 48 89 ee             	mov	rsi, rbp
ffffffff8001e4a1: e9 3c 01 00 00       	jmp	0xffffffff8001e5e2 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x1f2>
ffffffff8001e4a6: 48 89 6c 24 18       	mov	qword ptr [rsp + 0x18], rbp
ffffffff8001e4ab: 4c 89 d5             	mov	rbp, r10
ffffffff8001e4ae: 48 89 5c 24 10       	mov	qword ptr [rsp + 0x10], rbx
ffffffff8001e4b3: 4c 89 eb             	mov	rbx, r13
ffffffff8001e4b6: 41 89 d5             	mov	r13d, edx
ffffffff8001e4b9: 49 89 ff             	mov	r15, rdi
ffffffff8001e4bc: 4c 89 e7             	mov	rdi, r12
ffffffff8001e4bf: 4c 89 d6             	mov	rsi, r10
ffffffff8001e4c2: e8 19 19 00 00       	call	0xffffffff8001fde0 <core::str::count::do_count_chars::h06cfda6302d02fdc>
ffffffff8001e4c7: 4c 89 ff             	mov	rdi, r15
ffffffff8001e4ca: 44 89 ea             	mov	edx, r13d
ffffffff8001e4cd: 49 89 dd             	mov	r13, rbx
ffffffff8001e4d0: 48 8b 5c 24 10       	mov	rbx, qword ptr [rsp + 0x10]
ffffffff8001e4d5: 49 89 ea             	mov	r10, rbp
ffffffff8001e4d8: 48 8b 6c 24 18       	mov	rbp, qword ptr [rsp + 0x18]
ffffffff8001e4dd: eb 78                	jmp	0xffffffff8001e557 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff8001e4df: 31 c0                	xor	eax, eax
ffffffff8001e4e1: eb 74                	jmp	0xffffffff8001e557 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff8001e4e3: 44 89 d6             	mov	esi, r10d
ffffffff8001e4e6: 83 e6 1c             	and	esi, 0x1c
ffffffff8001e4e9: 31 c0                	xor	eax, eax
ffffffff8001e4eb: 45 31 db             	xor	r11d, r11d
ffffffff8001e4ee: 66 90                	nop
ffffffff8001e4f0: 45 31 c0             	xor	r8d, r8d
ffffffff8001e4f3: 43 80 3c 1c c0       	cmp	byte ptr [r12 + r11], -0x40
ffffffff8001e4f8: 41 0f 9d c0          	setge	r8b
ffffffff8001e4fc: 49 01 c0             	add	r8, rax
ffffffff8001e4ff: 31 c0                	xor	eax, eax
ffffffff8001e501: 43 80 7c 1c 01 c0    	cmp	byte ptr [r12 + r11 + 0x1], -0x40
ffffffff8001e507: 0f 9d c0             	setge	al
ffffffff8001e50a: 45 31 c9             	xor	r9d, r9d
ffffffff8001e50d: 43 80 7c 1c 02 c0    	cmp	byte ptr [r12 + r11 + 0x2], -0x40
ffffffff8001e513: 41 0f 9d c1          	setge	r9b
ffffffff8001e517: 49 01 c1             	add	r9, rax
ffffffff8001e51a: 4d 01 c1             	add	r9, r8
ffffffff8001e51d: 31 c0                	xor	eax, eax
ffffffff8001e51f: 43 80 7c 1c 03 c0    	cmp	byte ptr [r12 + r11 + 0x3], -0x40
ffffffff8001e525: 0f 9d c0             	setge	al
ffffffff8001e528: 4c 01 c8             	add	rax, r9
ffffffff8001e52b: 49 83 c3 04          	add	r11, 0x4
ffffffff8001e52f: 4c 39 de             	cmp	rsi, r11
ffffffff8001e532: 75 bc                	jne	0xffffffff8001e4f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x100>
ffffffff8001e534: 48 85 c9             	test	rcx, rcx
ffffffff8001e537: 74 1e                	je	0xffffffff8001e557 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff8001e539: 4d 01 e3             	add	r11, r12
ffffffff8001e53c: 31 f6                	xor	esi, esi
ffffffff8001e53e: 66 90                	nop
ffffffff8001e540: 45 31 c0             	xor	r8d, r8d
ffffffff8001e543: 41 80 3c 33 c0       	cmp	byte ptr [r11 + rsi], -0x40
ffffffff8001e548: 41 0f 9d c0          	setge	r8b
ffffffff8001e54c: 4c 01 c0             	add	rax, r8
ffffffff8001e54f: 48 ff c6             	inc	rsi
ffffffff8001e552: 48 39 f1             	cmp	rcx, rsi
ffffffff8001e555: 75 e9                	jne	0xffffffff8001e540 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x150>
ffffffff8001e557: 49 01 c6             	add	r14, rax
ffffffff8001e55a: f6 07 01             	test	byte ptr [rdi], 0x1
ffffffff8001e55d: 0f 84 10 ff ff ff    	je	0xffffffff8001e473 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x83>
ffffffff8001e563: 48 89 6c 24 18       	mov	qword ptr [rsp + 0x18], rbp
ffffffff8001e568: 48 8b 6f 08          	mov	rbp, qword ptr [rdi + 0x8]
ffffffff8001e56c: 4c 29 f5             	sub	rbp, r14
ffffffff8001e56f: 76 41                	jbe	0xffffffff8001e5b2 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x1c2>
ffffffff8001e571: f6 c3 08             	test	bl, 0x8
ffffffff8001e574: 75 7f                	jne	0xffffffff8001e5f5 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x205>
ffffffff8001e576: 89 54 24 0c          	mov	dword ptr [rsp + 0xc], edx
ffffffff8001e57a: 4c 89 54 24 10       	mov	qword ptr [rsp + 0x10], r10
ffffffff8001e57f: 8b 47 28             	mov	eax, dword ptr [rdi + 0x28]
ffffffff8001e582: 3c 03                	cmp	al, 0x3
ffffffff8001e584: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001e589: 0f 45 c8             	cmovne	ecx, eax
ffffffff8001e58c: 44 0f b6 f9          	movzx	r15d, cl
ffffffff8001e590: 45 84 ff             	test	r15b, r15b
ffffffff8001e593: 4c 89 6c 24 20       	mov	qword ptr [rsp + 0x20], r13
ffffffff8001e598: 0f 84 cb 00 00 00    	je	0xffffffff8001e669 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x279>
ffffffff8001e59e: 41 83 ff 01          	cmp	r15d, 0x1
ffffffff8001e5a2: 0f 85 b5 00 00 00    	jne	0xffffffff8001e65d <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x26d>
ffffffff8001e5a8: 49 89 ef             	mov	r15, rbp
ffffffff8001e5ab: 31 ed                	xor	ebp, ebp
ffffffff8001e5ad: e9 b7 00 00 00       	jmp	0xffffffff8001e669 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x279>
ffffffff8001e5b2: 48 8b 5f 30          	mov	rbx, qword ptr [rdi + 0x30]
ffffffff8001e5b6: 4c 8b 77 38          	mov	r14, qword ptr [rdi + 0x38]
ffffffff8001e5ba: 48 89 df             	mov	rdi, rbx
ffffffff8001e5bd: 4c 89 f6             	mov	rsi, r14
ffffffff8001e5c0: 4c 89 e1             	mov	rcx, r12
ffffffff8001e5c3: 4d 89 d0             	mov	r8, r10
ffffffff8001e5c6: e8 85 01 00 00       	call	0xffffffff8001e750 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff8001e5cb: 41 b7 01             	mov	r15b, 0x1
ffffffff8001e5ce: 84 c0                	test	al, al
ffffffff8001e5d0: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff8001e5d5: 0f 85 58 01 00 00    	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e5db: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001e5df: 48 89 df             	mov	rdi, rbx
ffffffff8001e5e2: 4c 89 ea             	mov	rdx, r13
ffffffff8001e5e5: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001e5e9: 5b                   	pop	rbx
ffffffff8001e5ea: 41 5c                	pop	r12
ffffffff8001e5ec: 41 5d                	pop	r13
ffffffff8001e5ee: 41 5e                	pop	r14
ffffffff8001e5f0: 41 5f                	pop	r15
ffffffff8001e5f2: 5d                   	pop	rbp
ffffffff8001e5f3: ff e0                	jmp	rax
ffffffff8001e5f5: 8b 47 20             	mov	eax, dword ptr [rdi + 0x20]
ffffffff8001e5f8: 89 44 24 0c          	mov	dword ptr [rsp + 0xc], eax
ffffffff8001e5fc: c7 47 20 30 00 00 00 	mov	dword ptr [rdi + 0x20], 0x30
ffffffff8001e603: 0f b6 47 28          	movzx	eax, byte ptr [rdi + 0x28]
ffffffff8001e607: 88 44 24 0b          	mov	byte ptr [rsp + 0xb], al
ffffffff8001e60b: c6 47 28 01          	mov	byte ptr [rdi + 0x28], 0x1
ffffffff8001e60f: 4c 8b 77 30          	mov	r14, qword ptr [rdi + 0x30]
ffffffff8001e613: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8001e618: 48 8b 5f 38          	mov	rbx, qword ptr [rdi + 0x38]
ffffffff8001e61c: 4c 89 f7             	mov	rdi, r14
ffffffff8001e61f: 48 89 de             	mov	rsi, rbx
ffffffff8001e622: 4c 89 e1             	mov	rcx, r12
ffffffff8001e625: 4d 89 d0             	mov	r8, r10
ffffffff8001e628: e8 23 01 00 00       	call	0xffffffff8001e750 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff8001e62d: 41 b7 01             	mov	r15b, 0x1
ffffffff8001e630: 84 c0                	test	al, al
ffffffff8001e632: 0f 85 fb 00 00 00    	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e638: 48 ff c5             	inc	rbp
ffffffff8001e63b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001e640: 48 ff cd             	dec	rbp
ffffffff8001e643: 0f 84 b3 00 00 00    	je	0xffffffff8001e6fc <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x30c>
ffffffff8001e649: 4c 89 f7             	mov	rdi, r14
ffffffff8001e64c: be 30 00 00 00       	mov	esi, 0x30
ffffffff8001e651: ff 53 20             	call	qword ptr [rbx + 0x20]
ffffffff8001e654: 84 c0                	test	al, al
ffffffff8001e656: 74 e8                	je	0xffffffff8001e640 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x250>
ffffffff8001e658: e9 d6 00 00 00       	jmp	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e65d: 49 89 ef             	mov	r15, rbp
ffffffff8001e660: 49 d1 ef             	shr	r15
ffffffff8001e663: 48 ff c5             	inc	rbp
ffffffff8001e666: 48 d1 ed             	shr	rbp
ffffffff8001e669: 4c 8b 6f 30          	mov	r13, qword ptr [rdi + 0x30]
ffffffff8001e66d: 4c 8b 77 38          	mov	r14, qword ptr [rdi + 0x38]
ffffffff8001e671: 8b 5f 20             	mov	ebx, dword ptr [rdi + 0x20]
ffffffff8001e674: 49 ff c7             	inc	r15
ffffffff8001e677: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001e680: 4c 89 ef             	mov	rdi, r13
ffffffff8001e683: 49 ff cf             	dec	r15
ffffffff8001e686: 74 12                	je	0xffffffff8001e69a <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x2aa>
ffffffff8001e688: 89 de                	mov	esi, ebx
ffffffff8001e68a: 41 ff 56 20          	call	qword ptr [r14 + 0x20]
ffffffff8001e68e: 84 c0                	test	al, al
ffffffff8001e690: 74 ee                	je	0xffffffff8001e680 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x290>
ffffffff8001e692: 41 b7 01             	mov	r15b, 0x1
ffffffff8001e695: e9 99 00 00 00       	jmp	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e69a: 4c 89 f6             	mov	rsi, r14
ffffffff8001e69d: 8b 54 24 0c          	mov	edx, dword ptr [rsp + 0xc]
ffffffff8001e6a1: 4c 89 e1             	mov	rcx, r12
ffffffff8001e6a4: 4c 8b 44 24 10       	mov	r8, qword ptr [rsp + 0x10]
ffffffff8001e6a9: e8 a2 00 00 00       	call	0xffffffff8001e750 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff8001e6ae: 41 b7 01             	mov	r15b, 0x1
ffffffff8001e6b1: 84 c0                	test	al, al
ffffffff8001e6b3: 0f 85 7a 00 00 00    	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e6b9: 4c 89 ef             	mov	rdi, r13
ffffffff8001e6bc: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff8001e6c1: 48 8b 54 24 20       	mov	rdx, qword ptr [rsp + 0x20]
ffffffff8001e6c6: 41 ff 56 18          	call	qword ptr [r14 + 0x18]
ffffffff8001e6ca: 84 c0                	test	al, al
ffffffff8001e6cc: 75 65                	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e6ce: 49 89 ec             	mov	r12, rbp
ffffffff8001e6d1: 49 f7 dc             	neg	r12
ffffffff8001e6d4: 49 c7 c7 ff ff ff ff 	mov	r15, -0x1
ffffffff8001e6db: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001e6e0: 4b 8d 04 3c          	lea	rax, [r12 + r15]
ffffffff8001e6e4: 48 83 f8 ff          	cmp	rax, -0x1
ffffffff8001e6e8: 74 3f                	je	0xffffffff8001e729 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x339>
ffffffff8001e6ea: 4c 89 ef             	mov	rdi, r13
ffffffff8001e6ed: 89 de                	mov	esi, ebx
ffffffff8001e6ef: 41 ff 56 20          	call	qword ptr [r14 + 0x20]
ffffffff8001e6f3: 49 ff c7             	inc	r15
ffffffff8001e6f6: 84 c0                	test	al, al
ffffffff8001e6f8: 74 e6                	je	0xffffffff8001e6e0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x2f0>
ffffffff8001e6fa: eb 30                	jmp	0xffffffff8001e72c <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x33c>
ffffffff8001e6fc: 4c 89 f7             	mov	rdi, r14
ffffffff8001e6ff: 48 8b 74 24 18       	mov	rsi, qword ptr [rsp + 0x18]
ffffffff8001e704: 4c 89 ea             	mov	rdx, r13
ffffffff8001e707: ff 53 18             	call	qword ptr [rbx + 0x18]
ffffffff8001e70a: 84 c0                	test	al, al
ffffffff8001e70c: 75 25                	jne	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e70e: 4c 8b 6c 24 10       	mov	r13, qword ptr [rsp + 0x10]
ffffffff8001e713: 8b 44 24 0c          	mov	eax, dword ptr [rsp + 0xc]
ffffffff8001e717: 41 89 45 20          	mov	dword ptr [r13 + 0x20], eax
ffffffff8001e71b: 0f b6 44 24 0b       	movzx	eax, byte ptr [rsp + 0xb]
ffffffff8001e720: 41 88 45 28          	mov	byte ptr [r13 + 0x28], al
ffffffff8001e724: 45 31 ff             	xor	r15d, r15d
ffffffff8001e727: eb 0a                	jmp	0xffffffff8001e733 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff8001e729: 49 89 ef             	mov	r15, rbp
ffffffff8001e72c: 49 39 ef             	cmp	r15, rbp
ffffffff8001e72f: 41 0f 92 c7          	setb	r15b
ffffffff8001e733: 44 89 f8             	mov	eax, r15d
ffffffff8001e736: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001e73a: 5b                   	pop	rbx
ffffffff8001e73b: 41 5c                	pop	r12
ffffffff8001e73d: 41 5d                	pop	r13
ffffffff8001e73f: 41 5e                	pop	r14
ffffffff8001e741: 41 5f                	pop	r15
ffffffff8001e743: 5d                   	pop	rbp
ffffffff8001e744: c3                   	ret
ffffffff8001e745: cc                   	int3
ffffffff8001e746: cc                   	int3
ffffffff8001e747: cc                   	int3
ffffffff8001e748: cc                   	int3
ffffffff8001e749: cc                   	int3
ffffffff8001e74a: cc                   	int3
ffffffff8001e74b: cc                   	int3
ffffffff8001e74c: cc                   	int3
ffffffff8001e74d: cc                   	int3
ffffffff8001e74e: cc                   	int3
ffffffff8001e74f: cc                   	int3

ffffffff8001e750 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>:
ffffffff8001e750: 41 57                	push	r15
ffffffff8001e752: 41 56                	push	r14
ffffffff8001e754: 41 54                	push	r12
ffffffff8001e756: 53                   	push	rbx
ffffffff8001e757: 50                   	push	rax
ffffffff8001e758: 4c 89 c3             	mov	rbx, r8
ffffffff8001e75b: 49 89 ce             	mov	r14, rcx
ffffffff8001e75e: 49 89 f7             	mov	r15, rsi
ffffffff8001e761: 81 fa 00 00 11 00    	cmp	edx, 0x110000
ffffffff8001e767: 74 14                	je	0xffffffff8001e77d <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x2d>
ffffffff8001e769: 49 89 fc             	mov	r12, rdi
ffffffff8001e76c: 89 d6                	mov	esi, edx
ffffffff8001e76e: 41 ff 57 20          	call	qword ptr [r15 + 0x20]
ffffffff8001e772: 4c 89 e7             	mov	rdi, r12
ffffffff8001e775: 89 c1                	mov	ecx, eax
ffffffff8001e777: b0 01                	mov	al, 0x1
ffffffff8001e779: 84 c9                	test	cl, cl
ffffffff8001e77b: 75 1e                	jne	0xffffffff8001e79b <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x4b>
ffffffff8001e77d: 4d 85 f6             	test	r14, r14
ffffffff8001e780: 74 17                	je	0xffffffff8001e799 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x49>
ffffffff8001e782: 49 8b 47 18          	mov	rax, qword ptr [r15 + 0x18]
ffffffff8001e786: 4c 89 f6             	mov	rsi, r14
ffffffff8001e789: 48 89 da             	mov	rdx, rbx
ffffffff8001e78c: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001e790: 5b                   	pop	rbx
ffffffff8001e791: 41 5c                	pop	r12
ffffffff8001e793: 41 5e                	pop	r14
ffffffff8001e795: 41 5f                	pop	r15
ffffffff8001e797: ff e0                	jmp	rax
ffffffff8001e799: 31 c0                	xor	eax, eax
ffffffff8001e79b: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001e79f: 5b                   	pop	rbx
ffffffff8001e7a0: 41 5c                	pop	r12
ffffffff8001e7a2: 41 5e                	pop	r14
ffffffff8001e7a4: 41 5f                	pop	r15
ffffffff8001e7a6: c3                   	ret
ffffffff8001e7a7: cc                   	int3
ffffffff8001e7a8: cc                   	int3
ffffffff8001e7a9: cc                   	int3
ffffffff8001e7aa: cc                   	int3
ffffffff8001e7ab: cc                   	int3
ffffffff8001e7ac: cc                   	int3
ffffffff8001e7ad: cc                   	int3
ffffffff8001e7ae: cc                   	int3
ffffffff8001e7af: cc                   	int3

ffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>:
ffffffff8001e7b0: 55                   	push	rbp
ffffffff8001e7b1: 41 57                	push	r15
ffffffff8001e7b3: 41 56                	push	r14
ffffffff8001e7b5: 41 55                	push	r13
ffffffff8001e7b7: 41 54                	push	r12
ffffffff8001e7b9: 53                   	push	rbx
ffffffff8001e7ba: 50                   	push	rax
ffffffff8001e7bb: 48 89 d3             	mov	rbx, rdx
ffffffff8001e7be: 49 89 f6             	mov	r14, rsi
ffffffff8001e7c1: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001e7c4: 48 8b 4f 10          	mov	rcx, qword ptr [rdi + 0x10]
ffffffff8001e7c8: 48 89 c2             	mov	rdx, rax
ffffffff8001e7cb: 48 09 ca             	or	rdx, rcx
ffffffff8001e7ce: 0f 84 8d 01 00 00    	je	0xffffffff8001e961 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff8001e7d4: f6 c1 01             	test	cl, 0x1
ffffffff8001e7d7: 0f 84 9c 00 00 00    	je	0xffffffff8001e879 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff8001e7dd: 48 8b 77 18          	mov	rsi, qword ptr [rdi + 0x18]
ffffffff8001e7e1: 49 8d 14 1e          	lea	rdx, [r14 + rbx]
ffffffff8001e7e5: 31 c9                	xor	ecx, ecx
ffffffff8001e7e7: 48 85 f6             	test	rsi, rsi
ffffffff8001e7ea: 74 55                	je	0xffffffff8001e841 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x91>
ffffffff8001e7ec: 4d 89 f0             	mov	r8, r14
ffffffff8001e7ef: eb 24                	jmp	0xffffffff8001e815 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x65>
ffffffff8001e7f1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nop	word ptr cs:[rax + rax]
ffffffff8001e800: 4d 8d 48 01          	lea	r9, [r8 + 0x1]
ffffffff8001e804: 4d 89 ca             	mov	r10, r9
ffffffff8001e807: 4d 29 c2             	sub	r10, r8
ffffffff8001e80a: 4c 01 d1             	add	rcx, r10
ffffffff8001e80d: 4d 89 c8             	mov	r8, r9
ffffffff8001e810: 48 ff ce             	dec	rsi
ffffffff8001e813: 74 2f                	je	0xffffffff8001e844 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x94>
ffffffff8001e815: 49 39 d0             	cmp	r8, rdx
ffffffff8001e818: 74 5f                	je	0xffffffff8001e879 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff8001e81a: 45 0f b6 08          	movzx	r9d, byte ptr [r8]
ffffffff8001e81e: 45 84 c9             	test	r9b, r9b
ffffffff8001e821: 79 dd                	jns	0xffffffff8001e800 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x50>
ffffffff8001e823: 41 80 f9 e0          	cmp	r9b, -0x20
ffffffff8001e827: 72 0c                	jb	0xffffffff8001e835 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x85>
ffffffff8001e829: 41 80 f9 f0          	cmp	r9b, -0x10
ffffffff8001e82d: 72 0c                	jb	0xffffffff8001e83b <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x8b>
ffffffff8001e82f: 4d 8d 48 04          	lea	r9, [r8 + 0x4]
ffffffff8001e833: eb cf                	jmp	0xffffffff8001e804 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff8001e835: 4d 8d 48 02          	lea	r9, [r8 + 0x2]
ffffffff8001e839: eb c9                	jmp	0xffffffff8001e804 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff8001e83b: 4d 8d 48 03          	lea	r9, [r8 + 0x3]
ffffffff8001e83f: eb c3                	jmp	0xffffffff8001e804 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff8001e841: 4d 89 f1             	mov	r9, r14
ffffffff8001e844: 49 39 d1             	cmp	r9, rdx
ffffffff8001e847: 74 30                	je	0xffffffff8001e879 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff8001e849: 41 0f b6 11          	movzx	edx, byte ptr [r9]
ffffffff8001e84d: 84 d2                	test	dl, dl
ffffffff8001e84f: 79 03                	jns	0xffffffff8001e854 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xa4>
ffffffff8001e851: 80 fa e0             	cmp	dl, -0x20
ffffffff8001e854: 48 85 c9             	test	rcx, rcx
ffffffff8001e857: 74 12                	je	0xffffffff8001e86b <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbb>
ffffffff8001e859: 48 39 d9             	cmp	rcx, rbx
ffffffff8001e85c: 73 0b                	jae	0xffffffff8001e869 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xb9>
ffffffff8001e85e: 41 80 3c 0e c0       	cmp	byte ptr [r14 + rcx], -0x40
ffffffff8001e863: 7d 06                	jge	0xffffffff8001e86b <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbb>
ffffffff8001e865: 31 d2                	xor	edx, edx
ffffffff8001e867: eb 05                	jmp	0xffffffff8001e86e <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbe>
ffffffff8001e869: 75 fa                	jne	0xffffffff8001e865 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xb5>
ffffffff8001e86b: 4c 89 f2             	mov	rdx, r14
ffffffff8001e86e: 48 85 d2             	test	rdx, rdx
ffffffff8001e871: 48 0f 45 d9          	cmovne	rbx, rcx
ffffffff8001e875: 4c 0f 45 f2          	cmovne	r14, rdx
ffffffff8001e879: 48 85 c0             	test	rax, rax
ffffffff8001e87c: 0f 84 df 00 00 00    	je	0xffffffff8001e961 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff8001e882: 4c 8b 6f 08          	mov	r13, qword ptr [rdi + 0x8]
ffffffff8001e886: 48 83 fb 20          	cmp	rbx, 0x20
ffffffff8001e88a: 73 16                	jae	0xffffffff8001e8a2 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xf2>
ffffffff8001e88c: 48 85 db             	test	rbx, rbx
ffffffff8001e88f: 74 27                	je	0xffffffff8001e8b8 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x108>
ffffffff8001e891: 89 d9                	mov	ecx, ebx
ffffffff8001e893: 83 e1 03             	and	ecx, 0x3
ffffffff8001e896: 48 83 fb 04          	cmp	rbx, 0x4
ffffffff8001e89a: 73 20                	jae	0xffffffff8001e8bc <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x10c>
ffffffff8001e89c: 31 c0                	xor	eax, eax
ffffffff8001e89e: 31 d2                	xor	edx, edx
ffffffff8001e8a0: eb 72                	jmp	0xffffffff8001e914 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x164>
ffffffff8001e8a2: 49 89 ff             	mov	r15, rdi
ffffffff8001e8a5: 4c 89 f7             	mov	rdi, r14
ffffffff8001e8a8: 48 89 de             	mov	rsi, rbx
ffffffff8001e8ab: e8 30 15 00 00       	call	0xffffffff8001fde0 <core::str::count::do_count_chars::h06cfda6302d02fdc>
ffffffff8001e8b0: 4c 89 ff             	mov	rdi, r15
ffffffff8001e8b3: e9 7e 00 00 00       	jmp	0xffffffff8001e936 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff8001e8b8: 31 c0                	xor	eax, eax
ffffffff8001e8ba: eb 7a                	jmp	0xffffffff8001e936 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff8001e8bc: 89 de                	mov	esi, ebx
ffffffff8001e8be: 83 e6 1c             	and	esi, 0x1c
ffffffff8001e8c1: 31 c0                	xor	eax, eax
ffffffff8001e8c3: 31 d2                	xor	edx, edx
ffffffff8001e8c5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8001e8d0: 45 31 c0             	xor	r8d, r8d
ffffffff8001e8d3: 41 80 3c 16 c0       	cmp	byte ptr [r14 + rdx], -0x40
ffffffff8001e8d8: 41 0f 9d c0          	setge	r8b
ffffffff8001e8dc: 49 01 c0             	add	r8, rax
ffffffff8001e8df: 31 c0                	xor	eax, eax
ffffffff8001e8e1: 41 80 7c 16 01 c0    	cmp	byte ptr [r14 + rdx + 0x1], -0x40
ffffffff8001e8e7: 0f 9d c0             	setge	al
ffffffff8001e8ea: 45 31 c9             	xor	r9d, r9d
ffffffff8001e8ed: 41 80 7c 16 02 c0    	cmp	byte ptr [r14 + rdx + 0x2], -0x40
ffffffff8001e8f3: 41 0f 9d c1          	setge	r9b
ffffffff8001e8f7: 49 01 c1             	add	r9, rax
ffffffff8001e8fa: 4d 01 c1             	add	r9, r8
ffffffff8001e8fd: 31 c0                	xor	eax, eax
ffffffff8001e8ff: 41 80 7c 16 03 c0    	cmp	byte ptr [r14 + rdx + 0x3], -0x40
ffffffff8001e905: 0f 9d c0             	setge	al
ffffffff8001e908: 4c 01 c8             	add	rax, r9
ffffffff8001e90b: 48 83 c2 04          	add	rdx, 0x4
ffffffff8001e90f: 48 39 d6             	cmp	rsi, rdx
ffffffff8001e912: 75 bc                	jne	0xffffffff8001e8d0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x120>
ffffffff8001e914: 48 85 c9             	test	rcx, rcx
ffffffff8001e917: 74 1d                	je	0xffffffff8001e936 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff8001e919: 4c 01 f2             	add	rdx, r14
ffffffff8001e91c: 31 f6                	xor	esi, esi
ffffffff8001e91e: 66 90                	nop
ffffffff8001e920: 45 31 c0             	xor	r8d, r8d
ffffffff8001e923: 80 3c 32 c0          	cmp	byte ptr [rdx + rsi], -0x40
ffffffff8001e927: 41 0f 9d c0          	setge	r8b
ffffffff8001e92b: 4c 01 c0             	add	rax, r8
ffffffff8001e92e: 48 ff c6             	inc	rsi
ffffffff8001e931: 48 39 f1             	cmp	rcx, rsi
ffffffff8001e934: 75 ea                	jne	0xffffffff8001e920 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x170>
ffffffff8001e936: 49 29 c5             	sub	r13, rax
ffffffff8001e939: 76 26                	jbe	0xffffffff8001e961 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff8001e93b: 8b 47 28             	mov	eax, dword ptr [rdi + 0x28]
ffffffff8001e93e: 31 c9                	xor	ecx, ecx
ffffffff8001e940: 3c 03                	cmp	al, 0x3
ffffffff8001e942: 0f 45 c8             	cmovne	ecx, eax
ffffffff8001e945: 44 0f b6 e1          	movzx	r12d, cl
ffffffff8001e949: 45 84 e4             	test	r12b, r12b
ffffffff8001e94c: 74 44                	je	0xffffffff8001e992 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1e2>
ffffffff8001e94e: 41 83 fc 01          	cmp	r12d, 0x1
ffffffff8001e952: 75 32                	jne	0xffffffff8001e986 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1d6>
ffffffff8001e954: 4d 89 ec             	mov	r12, r13
ffffffff8001e957: 48 c7 04 24 00 00 00 00      	mov	qword ptr [rsp], 0x0
ffffffff8001e95f: eb 35                	jmp	0xffffffff8001e996 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1e6>
ffffffff8001e961: 48 8b 47 30          	mov	rax, qword ptr [rdi + 0x30]
ffffffff8001e965: 48 8b 4f 38          	mov	rcx, qword ptr [rdi + 0x38]
ffffffff8001e969: 48 8b 49 18          	mov	rcx, qword ptr [rcx + 0x18]
ffffffff8001e96d: 48 89 c7             	mov	rdi, rax
ffffffff8001e970: 4c 89 f6             	mov	rsi, r14
ffffffff8001e973: 48 89 da             	mov	rdx, rbx
ffffffff8001e976: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001e97a: 5b                   	pop	rbx
ffffffff8001e97b: 41 5c                	pop	r12
ffffffff8001e97d: 41 5d                	pop	r13
ffffffff8001e97f: 41 5e                	pop	r14
ffffffff8001e981: 41 5f                	pop	r15
ffffffff8001e983: 5d                   	pop	rbp
ffffffff8001e984: ff e1                	jmp	rcx
ffffffff8001e986: 4d 89 ec             	mov	r12, r13
ffffffff8001e989: 49 d1 ec             	shr	r12
ffffffff8001e98c: 49 ff c5             	inc	r13
ffffffff8001e98f: 49 d1 ed             	shr	r13
ffffffff8001e992: 4c 89 2c 24          	mov	qword ptr [rsp], r13
ffffffff8001e996: 4c 8b 7f 30          	mov	r15, qword ptr [rdi + 0x30]
ffffffff8001e99a: 4c 8b 6f 38          	mov	r13, qword ptr [rdi + 0x38]
ffffffff8001e99e: 8b 6f 20             	mov	ebp, dword ptr [rdi + 0x20]
ffffffff8001e9a1: 49 ff c4             	inc	r12
ffffffff8001e9a4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8001e9b0: 4c 89 ff             	mov	rdi, r15
ffffffff8001e9b3: 49 ff cc             	dec	r12
ffffffff8001e9b6: 74 0e                	je	0xffffffff8001e9c6 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x216>
ffffffff8001e9b8: 89 ee                	mov	esi, ebp
ffffffff8001e9ba: 41 ff 55 20          	call	qword ptr [r13 + 0x20]
ffffffff8001e9be: 84 c0                	test	al, al
ffffffff8001e9c0: 74 ee                	je	0xffffffff8001e9b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x200>
ffffffff8001e9c2: b0 01                	mov	al, 0x1
ffffffff8001e9c4: eb 51                	jmp	0xffffffff8001ea17 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x267>
ffffffff8001e9c6: 4c 89 f6             	mov	rsi, r14
ffffffff8001e9c9: 48 89 da             	mov	rdx, rbx
ffffffff8001e9cc: 41 ff 55 18          	call	qword ptr [r13 + 0x18]
ffffffff8001e9d0: 89 c1                	mov	ecx, eax
ffffffff8001e9d2: b0 01                	mov	al, 0x1
ffffffff8001e9d4: 84 c9                	test	cl, cl
ffffffff8001e9d6: 75 3f                	jne	0xffffffff8001ea17 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x267>
ffffffff8001e9d8: 4c 8b 34 24          	mov	r14, qword ptr [rsp]
ffffffff8001e9dc: 49 f7 de             	neg	r14
ffffffff8001e9df: 48 c7 c3 ff ff ff ff 	mov	rbx, -0x1
ffffffff8001e9e6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff8001e9f0: 49 8d 04 1e          	lea	rax, [r14 + rbx]
ffffffff8001e9f4: 48 83 f8 ff          	cmp	rax, -0x1
ffffffff8001e9f8: 74 12                	je	0xffffffff8001ea0c <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x25c>
ffffffff8001e9fa: 4c 89 ff             	mov	rdi, r15
ffffffff8001e9fd: 89 ee                	mov	esi, ebp
ffffffff8001e9ff: 41 ff 55 20          	call	qword ptr [r13 + 0x20]
ffffffff8001ea03: 48 ff c3             	inc	rbx
ffffffff8001ea06: 84 c0                	test	al, al
ffffffff8001ea08: 74 e6                	je	0xffffffff8001e9f0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x240>
ffffffff8001ea0a: eb 04                	jmp	0xffffffff8001ea10 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x260>
ffffffff8001ea0c: 48 8b 1c 24          	mov	rbx, qword ptr [rsp]
ffffffff8001ea10: 48 3b 1c 24          	cmp	rbx, qword ptr [rsp]
ffffffff8001ea14: 0f 92 c0             	setb	al
ffffffff8001ea17: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001ea1b: 5b                   	pop	rbx
ffffffff8001ea1c: 41 5c                	pop	r12
ffffffff8001ea1e: 41 5d                	pop	r13
ffffffff8001ea20: 41 5e                	pop	r14
ffffffff8001ea22: 41 5f                	pop	r15
ffffffff8001ea24: 5d                   	pop	rbp
ffffffff8001ea25: c3                   	ret
ffffffff8001ea26: cc                   	int3
ffffffff8001ea27: cc                   	int3
ffffffff8001ea28: cc                   	int3
ffffffff8001ea29: cc                   	int3
ffffffff8001ea2a: cc                   	int3
ffffffff8001ea2b: cc                   	int3
ffffffff8001ea2c: cc                   	int3
ffffffff8001ea2d: cc                   	int3
ffffffff8001ea2e: cc                   	int3
ffffffff8001ea2f: cc                   	int3

ffffffff8001ea30 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>:
ffffffff8001ea30: 48 8b 47 30          	mov	rax, qword ptr [rdi + 0x30]
ffffffff8001ea34: 48 8b 4f 38          	mov	rcx, qword ptr [rdi + 0x38]
ffffffff8001ea38: 48 8b 49 18          	mov	rcx, qword ptr [rcx + 0x18]
ffffffff8001ea3c: 48 89 c7             	mov	rdi, rax
ffffffff8001ea3f: ff e1                	jmp	rcx
ffffffff8001ea41: cc                   	int3
ffffffff8001ea42: cc                   	int3
ffffffff8001ea43: cc                   	int3
ffffffff8001ea44: cc                   	int3
ffffffff8001ea45: cc                   	int3
ffffffff8001ea46: cc                   	int3
ffffffff8001ea47: cc                   	int3
ffffffff8001ea48: cc                   	int3
ffffffff8001ea49: cc                   	int3
ffffffff8001ea4a: cc                   	int3
ffffffff8001ea4b: cc                   	int3
ffffffff8001ea4c: cc                   	int3
ffffffff8001ea4d: cc                   	int3
ffffffff8001ea4e: cc                   	int3
ffffffff8001ea4f: cc                   	int3

ffffffff8001ea50 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>:
ffffffff8001ea50: 41 56                	push	r14
ffffffff8001ea52: 53                   	push	rbx
ffffffff8001ea53: 50                   	push	rax
ffffffff8001ea54: 48 89 f3             	mov	rbx, rsi
ffffffff8001ea57: 49 89 fe             	mov	r14, rdi
ffffffff8001ea5a: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8001ea5e: 48 8b 46 38          	mov	rax, qword ptr [rsi + 0x38]
ffffffff8001ea62: 48 89 d6             	mov	rsi, rdx
ffffffff8001ea65: 48 89 ca             	mov	rdx, rcx
ffffffff8001ea68: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ea6b: 49 89 1e             	mov	qword ptr [r14], rbx
ffffffff8001ea6e: 41 88 46 08          	mov	byte ptr [r14 + 0x8], al
ffffffff8001ea72: 41 c6 46 09 00       	mov	byte ptr [r14 + 0x9], 0x0
ffffffff8001ea77: 4c 89 f0             	mov	rax, r14
ffffffff8001ea7a: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001ea7e: 5b                   	pop	rbx
ffffffff8001ea7f: 41 5e                	pop	r14
ffffffff8001ea81: c3                   	ret
ffffffff8001ea82: cc                   	int3
ffffffff8001ea83: cc                   	int3
ffffffff8001ea84: cc                   	int3
ffffffff8001ea85: cc                   	int3
ffffffff8001ea86: cc                   	int3
ffffffff8001ea87: cc                   	int3
ffffffff8001ea88: cc                   	int3
ffffffff8001ea89: cc                   	int3
ffffffff8001ea8a: cc                   	int3
ffffffff8001ea8b: cc                   	int3
ffffffff8001ea8c: cc                   	int3
ffffffff8001ea8d: cc                   	int3
ffffffff8001ea8e: cc                   	int3
ffffffff8001ea8f: cc                   	int3

ffffffff8001ea90 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>:
ffffffff8001ea90: 55                   	push	rbp
ffffffff8001ea91: 41 57                	push	r15
ffffffff8001ea93: 41 56                	push	r14
ffffffff8001ea95: 41 55                	push	r13
ffffffff8001ea97: 41 54                	push	r12
ffffffff8001ea99: 53                   	push	rbx
ffffffff8001ea9a: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001ea9e: 4c 89 cb             	mov	rbx, r9
ffffffff8001eaa1: 4d 89 c6             	mov	r14, r8
ffffffff8001eaa4: 49 89 cf             	mov	r15, rcx
ffffffff8001eaa7: 49 89 fc             	mov	r12, rdi
ffffffff8001eaaa: 48 8b 6c 24 60       	mov	rbp, qword ptr [rsp + 0x60]
ffffffff8001eaaf: 4c 8b 6c 24 50       	mov	r13, qword ptr [rsp + 0x50]
ffffffff8001eab4: 48 8b 7f 30          	mov	rdi, qword ptr [rdi + 0x30]
ffffffff8001eab8: 49 8b 44 24 38       	mov	rax, qword ptr [r12 + 0x38]
ffffffff8001eabd: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001eac0: 4c 89 64 24 08       	mov	qword ptr [rsp + 0x8], r12
ffffffff8001eac5: 88 44 24 10          	mov	byte ptr [rsp + 0x10], al
ffffffff8001eac9: c6 44 24 11 00       	mov	byte ptr [rsp + 0x11], 0x0
ffffffff8001eace: 4c 8d 64 24 08       	lea	r12, [rsp + 0x8]
ffffffff8001ead3: 4c 89 e7             	mov	rdi, r12
ffffffff8001ead6: 4c 89 fe             	mov	rsi, r15
ffffffff8001ead9: 4c 89 f2             	mov	rdx, r14
ffffffff8001eadc: 48 89 d9             	mov	rcx, rbx
ffffffff8001eadf: 4d 89 e8             	mov	r8, r13
ffffffff8001eae2: e8 09 0c 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001eae7: 4c 89 e7             	mov	rdi, r12
ffffffff8001eaea: 48 8b 74 24 58       	mov	rsi, qword ptr [rsp + 0x58]
ffffffff8001eaef: 48 89 ea             	mov	rdx, rbp
ffffffff8001eaf2: 48 8b 4c 24 68       	mov	rcx, qword ptr [rsp + 0x68]
ffffffff8001eaf7: 4c 8b 44 24 70       	mov	r8, qword ptr [rsp + 0x70]
ffffffff8001eafc: e8 ef 0b 00 00       	call	0xffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff8001eb01: 0f b6 4c 24 10       	movzx	ecx, byte ptr [rsp + 0x10]
ffffffff8001eb06: 0f b6 44 24 11       	movzx	eax, byte ptr [rsp + 0x11]
ffffffff8001eb0b: 89 c2                	mov	edx, eax
ffffffff8001eb0d: f6 d2                	not	dl
ffffffff8001eb0f: 08 ca                	or	dl, cl
ffffffff8001eb11: f6 c2 01             	test	dl, 0x1
ffffffff8001eb14: 74 04                	je	0xffffffff8001eb1a <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0x8a>
ffffffff8001eb16: 08 c8                	or	al, cl
ffffffff8001eb18: eb 38                	jmp	0xffffffff8001eb52 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xc2>
ffffffff8001eb1a: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001eb1f: f6 40 24 04          	test	byte ptr [rax + 0x24], 0x4
ffffffff8001eb23: 75 16                	jne	0xffffffff8001eb3b <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xab>
ffffffff8001eb25: 48 8b 78 30          	mov	rdi, qword ptr [rax + 0x30]
ffffffff8001eb29: 48 8b 40 38          	mov	rax, qword ptr [rax + 0x38]
ffffffff8001eb2d: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001eb32: 48 c7 c6 5d 9a 02 80 	mov	rsi, -0x7ffd65a3
ffffffff8001eb39: eb 14                	jmp	0xffffffff8001eb4f <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xbf>
ffffffff8001eb3b: 48 8b 78 30          	mov	rdi, qword ptr [rax + 0x30]
ffffffff8001eb3f: 48 8b 40 38          	mov	rax, qword ptr [rax + 0x38]
ffffffff8001eb43: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001eb48: 48 c7 c6 5c 9a 02 80 	mov	rsi, -0x7ffd65a4
ffffffff8001eb4f: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001eb52: 24 01                	and	al, 0x1
ffffffff8001eb54: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001eb58: 5b                   	pop	rbx
ffffffff8001eb59: 41 5c                	pop	r12
ffffffff8001eb5b: 41 5d                	pop	r13
ffffffff8001eb5d: 41 5e                	pop	r14
ffffffff8001eb5f: 41 5f                	pop	r15
ffffffff8001eb61: 5d                   	pop	rbp
ffffffff8001eb62: c3                   	ret
ffffffff8001eb63: cc                   	int3
ffffffff8001eb64: cc                   	int3
ffffffff8001eb65: cc                   	int3
ffffffff8001eb66: cc                   	int3
ffffffff8001eb67: cc                   	int3
ffffffff8001eb68: cc                   	int3
ffffffff8001eb69: cc                   	int3
ffffffff8001eb6a: cc                   	int3
ffffffff8001eb6b: cc                   	int3
ffffffff8001eb6c: cc                   	int3
ffffffff8001eb6d: cc                   	int3
ffffffff8001eb6e: cc                   	int3
ffffffff8001eb6f: cc                   	int3

ffffffff8001eb70 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>:
ffffffff8001eb70: 41 57                	push	r15
ffffffff8001eb72: 41 56                	push	r14
ffffffff8001eb74: 53                   	push	rbx
ffffffff8001eb75: 48 89 cb             	mov	rbx, rcx
ffffffff8001eb78: 49 89 f6             	mov	r14, rsi
ffffffff8001eb7b: 49 89 ff             	mov	r15, rdi
ffffffff8001eb7e: 48 8b 7e 30          	mov	rdi, qword ptr [rsi + 0x30]
ffffffff8001eb82: 48 8b 46 38          	mov	rax, qword ptr [rsi + 0x38]
ffffffff8001eb86: 48 89 d6             	mov	rsi, rdx
ffffffff8001eb89: 48 89 ca             	mov	rdx, rcx
ffffffff8001eb8c: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001eb8f: 48 85 db             	test	rbx, rbx
ffffffff8001eb92: 4d 89 77 08          	mov	qword ptr [r15 + 0x8], r14
ffffffff8001eb96: 41 88 47 10          	mov	byte ptr [r15 + 0x10], al
ffffffff8001eb9a: 49 c7 07 00 00 00 00 	mov	qword ptr [r15], 0x0
ffffffff8001eba1: 41 0f 94 47 11       	sete	byte ptr [r15 + 0x11]
ffffffff8001eba6: 4c 89 f8             	mov	rax, r15
ffffffff8001eba9: 5b                   	pop	rbx
ffffffff8001ebaa: 41 5e                	pop	r14
ffffffff8001ebac: 41 5f                	pop	r15
ffffffff8001ebae: c3                   	ret
ffffffff8001ebaf: cc                   	int3

ffffffff8001ebb0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>:
ffffffff8001ebb0: 55                   	push	rbp
ffffffff8001ebb1: 41 57                	push	r15
ffffffff8001ebb3: 41 56                	push	r14
ffffffff8001ebb5: 41 55                	push	r13
ffffffff8001ebb7: 41 54                	push	r12
ffffffff8001ebb9: 53                   	push	rbx
ffffffff8001ebba: 48 83 ec 78          	sub	rsp, 0x78
ffffffff8001ebbe: 4c 89 44 24 18       	mov	qword ptr [rsp + 0x18], r8
ffffffff8001ebc3: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8001ebc8: 49 89 d7             	mov	r15, rdx
ffffffff8001ebcb: 49 89 fe             	mov	r14, rdi
ffffffff8001ebce: 48 8b 6f 30          	mov	rbp, qword ptr [rdi + 0x30]
ffffffff8001ebd2: 4c 8b 67 38          	mov	r12, qword ptr [rdi + 0x38]
ffffffff8001ebd6: 4d 8b 6c 24 18       	mov	r13, qword ptr [r12 + 0x18]
ffffffff8001ebdb: 48 89 ef             	mov	rdi, rbp
ffffffff8001ebde: 41 ff d5             	call	r13
ffffffff8001ebe1: b3 01                	mov	bl, 0x1
ffffffff8001ebe3: 84 c0                	test	al, al
ffffffff8001ebe5: 74 11                	je	0xffffffff8001ebf8 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x48>
ffffffff8001ebe7: 89 d8                	mov	eax, ebx
ffffffff8001ebe9: 48 83 c4 78          	add	rsp, 0x78
ffffffff8001ebed: 5b                   	pop	rbx
ffffffff8001ebee: 41 5c                	pop	r12
ffffffff8001ebf0: 41 5d                	pop	r13
ffffffff8001ebf2: 41 5e                	pop	r14
ffffffff8001ebf4: 41 5f                	pop	r15
ffffffff8001ebf6: 5d                   	pop	rbp
ffffffff8001ebf7: c3                   	ret
ffffffff8001ebf8: 41 f6 46 24 04       	test	byte ptr [r14 + 0x24], 0x4
ffffffff8001ebfd: 75 2f                	jne	0xffffffff8001ec2e <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x7e>
ffffffff8001ebff: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001ec04: 48 89 ef             	mov	rdi, rbp
ffffffff8001ec07: 48 c7 c6 5f 9a 02 80 	mov	rsi, -0x7ffd65a1
ffffffff8001ec0e: 41 ff d5             	call	r13
ffffffff8001ec11: 84 c0                	test	al, al
ffffffff8001ec13: 75 d2                	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ec15: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8001ec1a: 4c 89 f6             	mov	rsi, r14
ffffffff8001ec1d: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001ec22: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ec25: 84 c0                	test	al, al
ffffffff8001ec27: 75 be                	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ec29: e9 b2 00 00 00       	jmp	0xffffffff8001ece0 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x130>
ffffffff8001ec2e: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001ec33: 48 89 ef             	mov	rdi, rbp
ffffffff8001ec36: 48 c7 c6 60 9a 02 80 	mov	rsi, -0x7ffd65a0
ffffffff8001ec3d: 41 ff d5             	call	r13
ffffffff8001ec40: 84 c0                	test	al, al
ffffffff8001ec42: 75 a3                	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ec44: c6 44 24 0f 01       	mov	byte ptr [rsp + 0xf], 0x1
ffffffff8001ec49: 48 89 6c 24 60       	mov	qword ptr [rsp + 0x60], rbp
ffffffff8001ec4e: 4c 89 64 24 68       	mov	qword ptr [rsp + 0x68], r12
ffffffff8001ec53: 48 8d 44 24 0f       	lea	rax, [rsp + 0xf]
ffffffff8001ec58: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8001ec5d: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8001ec60: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001ec64: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001ec69: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff8001ec6e: 49 8b 46 10          	mov	rax, qword ptr [r14 + 0x10]
ffffffff8001ec72: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001ec77: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001ec7b: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001ec80: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8001ec84: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001ec89: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff8001ec8d: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8001ec92: 48 8d 44 24 60       	lea	rax, [rsp + 0x60]
ffffffff8001ec97: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8001ec9c: 48 c7 44 24 58 20 9a 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffd65e0
ffffffff8001eca5: 48 8d 74 24 20       	lea	rsi, [rsp + 0x20]
ffffffff8001ecaa: 48 8b 7c 24 10       	mov	rdi, qword ptr [rsp + 0x10]
ffffffff8001ecaf: 48 8b 44 24 18       	mov	rax, qword ptr [rsp + 0x18]
ffffffff8001ecb4: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ecb7: 84 c0                	test	al, al
ffffffff8001ecb9: 0f 85 28 ff ff ff    	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ecbf: 48 8b 7c 24 50       	mov	rdi, qword ptr [rsp + 0x50]
ffffffff8001ecc4: 48 8b 44 24 58       	mov	rax, qword ptr [rsp + 0x58]
ffffffff8001ecc9: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001ecce: 48 c7 c6 5a 9a 02 80 	mov	rsi, -0x7ffd65a6
ffffffff8001ecd5: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ecd8: 84 c0                	test	al, al
ffffffff8001ecda: 0f 85 07 ff ff ff    	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ece0: 4d 85 ff             	test	r15, r15
ffffffff8001ece3: 75 26                	jne	0xffffffff8001ed0b <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x15b>
ffffffff8001ece5: 41 f6 46 24 04       	test	byte ptr [r14 + 0x24], 0x4
ffffffff8001ecea: 75 1f                	jne	0xffffffff8001ed0b <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x15b>
ffffffff8001ecec: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001ecf0: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8001ecf4: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001ecf9: 48 c7 c6 63 9a 02 80 	mov	rsi, -0x7ffd659d
ffffffff8001ed00: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ed03: 84 c0                	test	al, al
ffffffff8001ed05: 0f 85 dc fe ff ff    	jne	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ed0b: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001ed0f: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8001ed13: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001ed18: 48 c7 c6 62 9a 02 80 	mov	rsi, -0x7ffd659e
ffffffff8001ed1f: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ed22: 89 c3                	mov	ebx, eax
ffffffff8001ed24: e9 be fe ff ff       	jmp	0xffffffff8001ebe7 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001ed29: cc                   	int3
ffffffff8001ed2a: cc                   	int3
ffffffff8001ed2b: cc                   	int3
ffffffff8001ed2c: cc                   	int3
ffffffff8001ed2d: cc                   	int3
ffffffff8001ed2e: cc                   	int3
ffffffff8001ed2f: cc                   	int3

ffffffff8001ed30 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>:
ffffffff8001ed30: 55                   	push	rbp
ffffffff8001ed31: 41 57                	push	r15
ffffffff8001ed33: 41 56                	push	r14
ffffffff8001ed35: 41 55                	push	r13
ffffffff8001ed37: 41 54                	push	r12
ffffffff8001ed39: 53                   	push	rbx
ffffffff8001ed3a: 48 83 ec 68          	sub	rsp, 0x68
ffffffff8001ed3e: 4c 89 4c 24 08       	mov	qword ptr [rsp + 0x8], r9
ffffffff8001ed43: 4d 89 c4             	mov	r12, r8
ffffffff8001ed46: 49 89 cd             	mov	r13, rcx
ffffffff8001ed49: 49 89 fe             	mov	r14, rdi
ffffffff8001ed4c: 48 8b 6f 30          	mov	rbp, qword ptr [rdi + 0x30]
ffffffff8001ed50: 48 8b 47 38          	mov	rax, qword ptr [rdi + 0x38]
ffffffff8001ed54: 4c 8b 78 18          	mov	r15, qword ptr [rax + 0x18]
ffffffff8001ed58: 48 89 ef             	mov	rdi, rbp
ffffffff8001ed5b: 41 ff d7             	call	r15
ffffffff8001ed5e: b3 01                	mov	bl, 0x1
ffffffff8001ed60: 84 c0                	test	al, al
ffffffff8001ed62: 74 11                	je	0xffffffff8001ed75 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x45>
ffffffff8001ed64: 89 d8                	mov	eax, ebx
ffffffff8001ed66: 48 83 c4 68          	add	rsp, 0x68
ffffffff8001ed6a: 5b                   	pop	rbx
ffffffff8001ed6b: 41 5c                	pop	r12
ffffffff8001ed6d: 41 5d                	pop	r13
ffffffff8001ed6f: 41 5e                	pop	r14
ffffffff8001ed71: 41 5f                	pop	r15
ffffffff8001ed73: 5d                   	pop	rbp
ffffffff8001ed74: c3                   	ret
ffffffff8001ed75: 41 f6 46 24 04       	test	byte ptr [r14 + 0x24], 0x4
ffffffff8001ed7a: 75 2a                	jne	0xffffffff8001eda6 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x76>
ffffffff8001ed7c: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001ed81: 48 89 ef             	mov	rdi, rbp
ffffffff8001ed84: 48 c7 c6 5f 9a 02 80 	mov	rsi, -0x7ffd65a1
ffffffff8001ed8b: 41 ff d7             	call	r15
ffffffff8001ed8e: 84 c0                	test	al, al
ffffffff8001ed90: 75 d2                	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ed92: 4c 89 ef             	mov	rdi, r13
ffffffff8001ed95: 4c 89 f6             	mov	rsi, r14
ffffffff8001ed98: 41 ff 54 24 18       	call	qword ptr [r12 + 0x18]
ffffffff8001ed9d: 84 c0                	test	al, al
ffffffff8001ed9f: 75 c3                	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001eda1: e9 b5 00 00 00       	jmp	0xffffffff8001ee5b <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x12b>
ffffffff8001eda6: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001edab: 48 89 ef             	mov	rdi, rbp
ffffffff8001edae: 48 c7 c6 60 9a 02 80 	mov	rsi, -0x7ffd65a0
ffffffff8001edb5: 41 ff d7             	call	r15
ffffffff8001edb8: 84 c0                	test	al, al
ffffffff8001edba: 75 a8                	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001edbc: c6 44 24 07 01       	mov	byte ptr [rsp + 0x7], 0x1
ffffffff8001edc1: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8001edc5: 49 8b 4e 38          	mov	rcx, qword ptr [r14 + 0x38]
ffffffff8001edc9: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8001edce: 48 89 4c 24 58       	mov	qword ptr [rsp + 0x58], rcx
ffffffff8001edd3: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001edd8: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8001eddd: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8001ede0: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001ede4: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001ede9: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001edee: 49 8b 46 10          	mov	rax, qword ptr [r14 + 0x10]
ffffffff8001edf2: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001edf7: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001edfb: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001ee00: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8001ee04: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001ee09: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff8001ee0d: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001ee12: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff8001ee17: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001ee1c: 48 c7 44 24 48 20 9a 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffd65e0
ffffffff8001ee25: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff8001ee2a: 4c 89 ef             	mov	rdi, r13
ffffffff8001ee2d: 41 ff 54 24 18       	call	qword ptr [r12 + 0x18]
ffffffff8001ee32: 84 c0                	test	al, al
ffffffff8001ee34: 0f 85 2a ff ff ff    	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ee3a: 48 8b 7c 24 40       	mov	rdi, qword ptr [rsp + 0x40]
ffffffff8001ee3f: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8001ee44: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001ee49: 48 c7 c6 5a 9a 02 80 	mov	rsi, -0x7ffd65a6
ffffffff8001ee50: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ee53: 84 c0                	test	al, al
ffffffff8001ee55: 0f 85 09 ff ff ff    	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ee5b: 4c 8b a4 24 a0 00 00 00      	mov	r12, qword ptr [rsp + 0xa0]
ffffffff8001ee63: 41 f6 46 24 04       	test	byte ptr [r14 + 0x24], 0x4
ffffffff8001ee68: 75 31                	jne	0xffffffff8001ee9b <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x16b>
ffffffff8001ee6a: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001ee6e: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8001ee72: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001ee77: 48 c7 c6 53 9a 02 80 	mov	rsi, -0x7ffd65ad
ffffffff8001ee7e: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ee81: 84 c0                	test	al, al
ffffffff8001ee83: 0f 85 db fe ff ff    	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ee89: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001ee8e: 4c 89 f6             	mov	rsi, r14
ffffffff8001ee91: 41 ff 54 24 18       	call	qword ptr [r12 + 0x18]
ffffffff8001ee96: e9 99 00 00 00       	jmp	0xffffffff8001ef34 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x204>
ffffffff8001ee9b: c6 44 24 07 01       	mov	byte ptr [rsp + 0x7], 0x1
ffffffff8001eea0: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8001eea4: 49 8b 4e 38          	mov	rcx, qword ptr [r14 + 0x38]
ffffffff8001eea8: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8001eead: 48 89 4c 24 58       	mov	qword ptr [rsp + 0x58], rcx
ffffffff8001eeb2: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001eeb7: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff8001eebc: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8001eebf: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001eec3: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001eec8: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001eecd: 49 8b 46 10          	mov	rax, qword ptr [r14 + 0x10]
ffffffff8001eed1: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001eed6: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001eeda: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001eedf: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8001eee3: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001eee8: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff8001eeec: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001eef1: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff8001eef6: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001eefb: 48 c7 44 24 48 20 9a 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffd65e0
ffffffff8001ef04: 48 8d 74 24 10       	lea	rsi, [rsp + 0x10]
ffffffff8001ef09: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001ef0e: 41 ff 54 24 18       	call	qword ptr [r12 + 0x18]
ffffffff8001ef13: 84 c0                	test	al, al
ffffffff8001ef15: 0f 85 49 fe ff ff    	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ef1b: 48 8b 7c 24 40       	mov	rdi, qword ptr [rsp + 0x40]
ffffffff8001ef20: 48 8b 44 24 48       	mov	rax, qword ptr [rsp + 0x48]
ffffffff8001ef25: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001ef2a: 48 c7 c6 5a 9a 02 80 	mov	rsi, -0x7ffd65a6
ffffffff8001ef31: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ef34: 84 c0                	test	al, al
ffffffff8001ef36: 0f 85 28 fe ff ff    	jne	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ef3c: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001ef40: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8001ef44: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001ef49: 48 c7 c6 62 9a 02 80 	mov	rsi, -0x7ffd659e
ffffffff8001ef50: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001ef53: 89 c3                	mov	ebx, eax
ffffffff8001ef55: e9 0a fe ff ff       	jmp	0xffffffff8001ed64 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001ef5a: cc                   	int3
ffffffff8001ef5b: cc                   	int3
ffffffff8001ef5c: cc                   	int3
ffffffff8001ef5d: cc                   	int3
ffffffff8001ef5e: cc                   	int3
ffffffff8001ef5f: cc                   	int3

ffffffff8001ef60 <<bool as core::fmt::Display>::fmt::h198794c47a13c7a1>:
ffffffff8001ef60: 80 3f 00             	cmp	byte ptr [rdi], 0x0
ffffffff8001ef63: 74 14                	je	0xffffffff8001ef79 <<bool as core::fmt::Display>::fmt::h198794c47a13c7a1+0x19>
ffffffff8001ef65: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8001ef6a: 48 89 f7             	mov	rdi, rsi
ffffffff8001ef6d: 48 c7 c6 5c 20 02 80 	mov	rsi, -0x7ffddfa4
ffffffff8001ef74: e9 37 f8 ff ff       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001ef79: ba 05 00 00 00       	mov	edx, 0x5
ffffffff8001ef7e: 48 89 f7             	mov	rdi, rsi
ffffffff8001ef81: 48 c7 c6 eb 99 02 80 	mov	rsi, -0x7ffd6615
ffffffff8001ef88: e9 23 f8 ff ff       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001ef8d: cc                   	int3
ffffffff8001ef8e: cc                   	int3
ffffffff8001ef8f: cc                   	int3

ffffffff8001ef90 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>:
ffffffff8001ef90: 55                   	push	rbp
ffffffff8001ef91: 41 57                	push	r15
ffffffff8001ef93: 41 56                	push	r14
ffffffff8001ef95: 41 55                	push	r13
ffffffff8001ef97: 41 54                	push	r12
ffffffff8001ef99: 53                   	push	rbx
ffffffff8001ef9a: 48 83 ec 58          	sub	rsp, 0x58
ffffffff8001ef9e: 49 89 f7             	mov	r15, rsi
ffffffff8001efa1: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff8001efa6: 48 8b 5a 30          	mov	rbx, qword ptr [rdx + 0x30]
ffffffff8001efaa: 4c 8b 62 38          	mov	r12, qword ptr [rdx + 0x38]
ffffffff8001efae: 4d 8b 74 24 20       	mov	r14, qword ptr [r12 + 0x20]
ffffffff8001efb3: 48 89 df             	mov	rdi, rbx
ffffffff8001efb6: be 22 00 00 00       	mov	esi, 0x22
ffffffff8001efbb: 41 ff d6             	call	r14
ffffffff8001efbe: 40 b5 01             	mov	bpl, 0x1
ffffffff8001efc1: 84 c0                	test	al, al
ffffffff8001efc3: 0f 85 0c 03 00 00    	jne	0xffffffff8001f2d5 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001efc9: 4c 89 64 24 40       	mov	qword ptr [rsp + 0x40], r12
ffffffff8001efce: 4d 85 ff             	test	r15, r15
ffffffff8001efd1: 0f 84 ae 02 00 00    	je	0xffffffff8001f285 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2f5>
ffffffff8001efd7: 4c 89 74 24 38       	mov	qword ptr [rsp + 0x38], r14
ffffffff8001efdc: 4c 89 f8             	mov	rax, r15
ffffffff8001efdf: 48 f7 d8             	neg	rax
ffffffff8001efe2: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8001efe7: 45 31 e4             	xor	r12d, r12d
ffffffff8001efea: 31 ed                	xor	ebp, ebp
ffffffff8001efec: 4c 8b 74 24 08       	mov	r14, qword ptr [rsp + 0x8]
ffffffff8001eff1: 4c 89 7c 24 28       	mov	qword ptr [rsp + 0x28], r15
ffffffff8001eff6: 4c 89 f8             	mov	rax, r15
ffffffff8001eff9: eb 16                	jmp	0xffffffff8001f011 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x81>
ffffffff8001effb: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001f000: 48 01 cd             	add	rbp, rcx
ffffffff8001f003: 48 8b 44 24 50       	mov	rax, qword ptr [rsp + 0x50]
ffffffff8001f008: 4c 29 f0             	sub	rax, r14
ffffffff8001f00b: 0f 84 d5 02 00 00    	je	0xffffffff8001f2e6 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x356>
ffffffff8001f011: 49 8d 34 06          	lea	rsi, [r14 + rax]
ffffffff8001f015: 45 31 ff             	xor	r15d, r15d
ffffffff8001f018: 0f 1f 84 00 00 00 00 00      	nop	dword ptr [rax + rax]
ffffffff8001f020: 43 0f b6 0c 3e       	movzx	ecx, byte ptr [r14 + r15]
ffffffff8001f025: 8d 51 81             	lea	edx, [rcx - 0x7f]
ffffffff8001f028: 80 fa a1             	cmp	dl, -0x5f
ffffffff8001f02b: 72 23                	jb	0xffffffff8001f050 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001f02d: 83 f9 22             	cmp	ecx, 0x22
ffffffff8001f030: 74 1e                	je	0xffffffff8001f050 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001f032: 83 f9 5c             	cmp	ecx, 0x5c
ffffffff8001f035: 74 19                	je	0xffffffff8001f050 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001f037: 49 ff c7             	inc	r15
ffffffff8001f03a: 4c 39 f8             	cmp	rax, r15
ffffffff8001f03d: 75 e1                	jne	0xffffffff8001f020 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x90>
ffffffff8001f03f: e9 0d 02 00 00       	jmp	0xffffffff8001f251 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2c1>
ffffffff8001f044: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8001f050: 48 89 74 24 50       	mov	qword ptr [rsp + 0x50], rsi
ffffffff8001f055: 47 0f b6 2c 3e       	movzx	r13d, byte ptr [r14 + r15]
ffffffff8001f05a: 45 84 ed             	test	r13b, r13b
ffffffff8001f05d: 78 11                	js	0xffffffff8001f070 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xe0>
ffffffff8001f05f: 4d 01 fe             	add	r14, r15
ffffffff8001f062: 49 ff c6             	inc	r14
ffffffff8001f065: eb 79                	jmp	0xffffffff8001f0e0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001f067: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001f070: 44 89 e8             	mov	eax, r13d
ffffffff8001f073: 83 e0 1f             	and	eax, 0x1f
ffffffff8001f076: 43 0f b6 54 3e 01    	movzx	edx, byte ptr [r14 + r15 + 0x1]
ffffffff8001f07c: 83 e2 3f             	and	edx, 0x3f
ffffffff8001f07f: 41 80 fd df          	cmp	r13b, -0x21
ffffffff8001f083: 76 36                	jbe	0xffffffff8001f0bb <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x12b>
ffffffff8001f085: 43 0f b6 4c 3e 02    	movzx	ecx, byte ptr [r14 + r15 + 0x2]
ffffffff8001f08b: c1 e2 06             	shl	edx, 0x6
ffffffff8001f08e: 83 e1 3f             	and	ecx, 0x3f
ffffffff8001f091: 09 d1                	or	ecx, edx
ffffffff8001f093: 41 80 fd f0          	cmp	r13b, -0x10
ffffffff8001f097: 72 33                	jb	0xffffffff8001f0cc <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x13c>
ffffffff8001f099: 47 0f b6 6c 3e 03    	movzx	r13d, byte ptr [r14 + r15 + 0x3]
ffffffff8001f09f: 4d 01 fe             	add	r14, r15
ffffffff8001f0a2: 49 83 c6 04          	add	r14, 0x4
ffffffff8001f0a6: 83 e0 07             	and	eax, 0x7
ffffffff8001f0a9: c1 e0 12             	shl	eax, 0x12
ffffffff8001f0ac: c1 e1 06             	shl	ecx, 0x6
ffffffff8001f0af: 41 83 e5 3f          	and	r13d, 0x3f
ffffffff8001f0b3: 41 09 cd             	or	r13d, ecx
ffffffff8001f0b6: 41 09 c5             	or	r13d, eax
ffffffff8001f0b9: eb 25                	jmp	0xffffffff8001f0e0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001f0bb: 4d 01 fe             	add	r14, r15
ffffffff8001f0be: 49 83 c6 02          	add	r14, 0x2
ffffffff8001f0c2: c1 e0 06             	shl	eax, 0x6
ffffffff8001f0c5: 09 d0                	or	eax, edx
ffffffff8001f0c7: 41 89 c5             	mov	r13d, eax
ffffffff8001f0ca: eb 14                	jmp	0xffffffff8001f0e0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001f0cc: 4d 01 fe             	add	r14, r15
ffffffff8001f0cf: 49 83 c6 03          	add	r14, 0x3
ffffffff8001f0d3: c1 e0 0c             	shl	eax, 0xc
ffffffff8001f0d6: 09 c1                	or	ecx, eax
ffffffff8001f0d8: 41 89 cd             	mov	r13d, ecx
ffffffff8001f0db: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001f0e0: 48 89 6c 24 30       	mov	qword ptr [rsp + 0x30], rbp
ffffffff8001f0e5: 4c 01 fd             	add	rbp, r15
ffffffff8001f0e8: 48 8d 7c 24 14       	lea	rdi, [rsp + 0x14]
ffffffff8001f0ed: 44 89 ee             	mov	esi, r13d
ffffffff8001f0f0: ba 01 00 01 00       	mov	edx, 0x10001
ffffffff8001f0f5: e8 76 ee ff ff       	call	0xffffffff8001df70 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>
ffffffff8001f0fa: 31 c0                	xor	eax, eax
ffffffff8001f0fc: 3a 44 24 14          	cmp	al, byte ptr [rsp + 0x14]
ffffffff8001f100: 0f 80 12 01 00 00    	jo	0xffffffff8001f218 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x288>
ffffffff8001f106: 0f b6 44 24 1f       	movzx	eax, byte ptr [rsp + 0x1f]
ffffffff8001f10b: 2a 44 24 1e          	sub	al, byte ptr [rsp + 0x1e]
ffffffff8001f10f: 3c 01                	cmp	al, 0x1
ffffffff8001f111: 0f 84 01 01 00 00    	je	0xffffffff8001f218 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x288>
ffffffff8001f117: 48 89 5c 24 20       	mov	qword ptr [rsp + 0x20], rbx
ffffffff8001f11c: 49 39 ec             	cmp	r12, rbp
ffffffff8001f11f: 0f 87 ea 01 00 00    	ja	0xffffffff8001f30f <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001f125: 4d 85 e4             	test	r12, r12
ffffffff8001f128: 74 1e                	je	0xffffffff8001f148 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b8>
ffffffff8001f12a: 4c 3b 64 24 28       	cmp	r12, qword ptr [rsp + 0x28]
ffffffff8001f12f: 73 11                	jae	0xffffffff8001f142 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b2>
ffffffff8001f131: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f136: 42 80 3c 20 bf       	cmp	byte ptr [rax + r12], -0x41
ffffffff8001f13b: 7f 0b                	jg	0xffffffff8001f148 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b8>
ffffffff8001f13d: e9 cd 01 00 00       	jmp	0xffffffff8001f30f <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001f142: 0f 85 c7 01 00 00    	jne	0xffffffff8001f30f <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001f148: 48 85 ed             	test	rbp, rbp
ffffffff8001f14b: 74 2e                	je	0xffffffff8001f17b <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1eb>
ffffffff8001f14d: 48 3b 6c 24 28       	cmp	rbp, qword ptr [rsp + 0x28]
ffffffff8001f152: 73 19                	jae	0xffffffff8001f16d <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1dd>
ffffffff8001f154: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f159: 48 8b 4c 24 30       	mov	rcx, qword ptr [rsp + 0x30]
ffffffff8001f15e: 48 01 c8             	add	rax, rcx
ffffffff8001f161: 41 80 3c 07 bf       	cmp	byte ptr [r15 + rax], -0x41
ffffffff8001f166: 7f 13                	jg	0xffffffff8001f17b <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1eb>
ffffffff8001f168: e9 a2 01 00 00       	jmp	0xffffffff8001f30f <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001f16d: 48 89 e8             	mov	rax, rbp
ffffffff8001f170: 48 03 44 24 48       	add	rax, qword ptr [rsp + 0x48]
ffffffff8001f175: 0f 85 94 01 00 00    	jne	0xffffffff8001f30f <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001f17b: 48 8b 54 24 30       	mov	rdx, qword ptr [rsp + 0x30]
ffffffff8001f180: 4c 29 e2             	sub	rdx, r12
ffffffff8001f183: 4c 01 fa             	add	rdx, r15
ffffffff8001f186: 4c 03 64 24 08       	add	r12, qword ptr [rsp + 0x8]
ffffffff8001f18b: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001f190: 48 8b 58 18          	mov	rbx, qword ptr [rax + 0x18]
ffffffff8001f194: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001f199: 4c 89 e6             	mov	rsi, r12
ffffffff8001f19c: ff d3                	call	rbx
ffffffff8001f19e: 84 c0                	test	al, al
ffffffff8001f1a0: 0f 85 4d 01 00 00    	jne	0xffffffff8001f2f3 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x363>
ffffffff8001f1a6: 31 c0                	xor	eax, eax
ffffffff8001f1a8: 3a 44 24 14          	cmp	al, byte ptr [rsp + 0x14]
ffffffff8001f1ac: 71 0f                	jno	0xffffffff8001f1bd <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x22d>
ffffffff8001f1ae: 8b 74 24 18          	mov	esi, dword ptr [rsp + 0x18]
ffffffff8001f1b2: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001f1b7: ff 54 24 38          	call	qword ptr [rsp + 0x38]
ffffffff8001f1bb: eb 1c                	jmp	0xffffffff8001f1d9 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x249>
ffffffff8001f1bd: 0f b6 44 24 1e       	movzx	eax, byte ptr [rsp + 0x1e]
ffffffff8001f1c2: 0f b6 54 24 1f       	movzx	edx, byte ptr [rsp + 0x1f]
ffffffff8001f1c7: 48 29 c2             	sub	rdx, rax
ffffffff8001f1ca: 48 8d 34 04          	lea	rsi, [rsp + rax]
ffffffff8001f1ce: 48 83 c6 14          	add	rsi, 0x14
ffffffff8001f1d2: 48 8b 7c 24 20       	mov	rdi, qword ptr [rsp + 0x20]
ffffffff8001f1d7: ff d3                	call	rbx
ffffffff8001f1d9: 84 c0                	test	al, al
ffffffff8001f1db: 0f 85 12 01 00 00    	jne	0xffffffff8001f2f3 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x363>
ffffffff8001f1e1: 41 bc 01 00 00 00    	mov	r12d, 0x1
ffffffff8001f1e7: 41 81 fd 80 00 00 00 	cmp	r13d, 0x80
ffffffff8001f1ee: 72 20                	jb	0xffffffff8001f210 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x280>
ffffffff8001f1f0: 41 bc 02 00 00 00    	mov	r12d, 0x2
ffffffff8001f1f6: 41 81 fd 00 08 00 00 	cmp	r13d, 0x800
ffffffff8001f1fd: 72 11                	jb	0xffffffff8001f210 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x280>
ffffffff8001f1ff: 41 81 fd 00 00 01 00 	cmp	r13d, 0x10000
ffffffff8001f206: 41 bc 04 00 00 00    	mov	r12d, 0x4
ffffffff8001f20c: 49 83 dc 00          	sbb	r12, 0x0
ffffffff8001f210: 49 01 ec             	add	r12, rbp
ffffffff8001f213: 48 8b 5c 24 20       	mov	rbx, qword ptr [rsp + 0x20]
ffffffff8001f218: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff8001f21d: 41 81 fd 80 00 00 00 	cmp	r13d, 0x80
ffffffff8001f224: 0f 82 d6 fd ff ff    	jb	0xffffffff8001f000 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001f22a: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff8001f22f: 41 81 fd 00 08 00 00 	cmp	r13d, 0x800
ffffffff8001f236: 0f 82 c4 fd ff ff    	jb	0xffffffff8001f000 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001f23c: 41 81 fd 00 00 01 00 	cmp	r13d, 0x10000
ffffffff8001f243: b9 04 00 00 00       	mov	ecx, 0x4
ffffffff8001f248: 48 83 d9 00          	sbb	rcx, 0x0
ffffffff8001f24c: e9 af fd ff ff       	jmp	0xffffffff8001f000 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001f251: 48 01 e8             	add	rax, rbp
ffffffff8001f254: 48 89 c1             	mov	rcx, rax
ffffffff8001f257: 49 39 cc             	cmp	r12, rcx
ffffffff8001f25a: 4c 8b 74 24 38       	mov	r14, qword ptr [rsp + 0x38]
ffffffff8001f25f: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f262: 48 8b 54 24 28       	mov	rdx, qword ptr [rsp + 0x28]
ffffffff8001f267: 0f 87 8b 00 00 00    	ja	0xffffffff8001f2f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001f26d: 4d 85 e4             	test	r12, r12
ffffffff8001f270: 74 1c                	je	0xffffffff8001f28e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fe>
ffffffff8001f272: 49 39 d4             	cmp	r12, rdx
ffffffff8001f275: 73 15                	jae	0xffffffff8001f28c <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fc>
ffffffff8001f277: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f27c: 42 80 3c 20 bf       	cmp	byte ptr [rax + r12], -0x41
ffffffff8001f281: 7f 0b                	jg	0xffffffff8001f28e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fe>
ffffffff8001f283: eb 73                	jmp	0xffffffff8001f2f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001f285: 31 d2                	xor	edx, edx
ffffffff8001f287: 45 31 e4             	xor	r12d, r12d
ffffffff8001f28a: eb 22                	jmp	0xffffffff8001f2ae <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001f28c: 75 6a                	jne	0xffffffff8001f2f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001f28e: 48 85 c9             	test	rcx, rcx
ffffffff8001f291: 74 15                	je	0xffffffff8001f2a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x318>
ffffffff8001f293: 48 39 d1             	cmp	rcx, rdx
ffffffff8001f296: 73 14                	jae	0xffffffff8001f2ac <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31c>
ffffffff8001f298: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f29d: 80 3c 08 bf          	cmp	byte ptr [rax + rcx], -0x41
ffffffff8001f2a1: 7e 55                	jle	0xffffffff8001f2f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001f2a3: 48 89 ca             	mov	rdx, rcx
ffffffff8001f2a6: eb 06                	jmp	0xffffffff8001f2ae <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001f2a8: 31 d2                	xor	edx, edx
ffffffff8001f2aa: eb 02                	jmp	0xffffffff8001f2ae <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001f2ac: 75 4a                	jne	0xffffffff8001f2f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001f2ae: 4c 29 e2             	sub	rdx, r12
ffffffff8001f2b1: 48 8b 74 24 08       	mov	rsi, qword ptr [rsp + 0x8]
ffffffff8001f2b6: 4c 01 e6             	add	rsi, r12
ffffffff8001f2b9: 48 89 df             	mov	rdi, rbx
ffffffff8001f2bc: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001f2c1: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f2c4: 84 c0                	test	al, al
ffffffff8001f2c6: 75 0d                	jne	0xffffffff8001f2d5 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001f2c8: 48 89 df             	mov	rdi, rbx
ffffffff8001f2cb: be 22 00 00 00       	mov	esi, 0x22
ffffffff8001f2d0: 41 ff d6             	call	r14
ffffffff8001f2d3: 89 c5                	mov	ebp, eax
ffffffff8001f2d5: 89 e8                	mov	eax, ebp
ffffffff8001f2d7: 48 83 c4 58          	add	rsp, 0x58
ffffffff8001f2db: 5b                   	pop	rbx
ffffffff8001f2dc: 41 5c                	pop	r12
ffffffff8001f2de: 41 5d                	pop	r13
ffffffff8001f2e0: 41 5e                	pop	r14
ffffffff8001f2e2: 41 5f                	pop	r15
ffffffff8001f2e4: 5d                   	pop	rbp
ffffffff8001f2e5: c3                   	ret
ffffffff8001f2e6: 48 03 4c 24 30       	add	rcx, qword ptr [rsp + 0x30]
ffffffff8001f2eb: 4c 01 f9             	add	rcx, r15
ffffffff8001f2ee: e9 64 ff ff ff       	jmp	0xffffffff8001f257 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2c7>
ffffffff8001f2f3: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f2f6: eb dd                	jmp	0xffffffff8001f2d5 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001f2f8: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001f2fd: 48 89 d6             	mov	rsi, rdx
ffffffff8001f300: 4c 89 e2             	mov	rdx, r12
ffffffff8001f303: 49 c7 c0 08 9a 02 80 	mov	r8, -0x7ffd65f8
ffffffff8001f30a: e8 e1 1e 00 00       	call	0xffffffff800211f0 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001f30f: 48 8b 7c 24 08       	mov	rdi, qword ptr [rsp + 0x8]
ffffffff8001f314: 48 8b 74 24 28       	mov	rsi, qword ptr [rsp + 0x28]
ffffffff8001f319: 4c 89 e2             	mov	rdx, r12
ffffffff8001f31c: 48 89 e9             	mov	rcx, rbp
ffffffff8001f31f: 49 c7 c0 f0 99 02 80 	mov	r8, -0x7ffd6610
ffffffff8001f326: e8 c5 1e 00 00       	call	0xffffffff800211f0 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001f32b: cc                   	int3
ffffffff8001f32c: cc                   	int3
ffffffff8001f32d: cc                   	int3
ffffffff8001f32e: cc                   	int3
ffffffff8001f32f: cc                   	int3

ffffffff8001f330 <<str as core::fmt::Display>::fmt::h8862704feddd2413>:
ffffffff8001f330: 48 89 d0             	mov	rax, rdx
ffffffff8001f333: 48 89 f2             	mov	rdx, rsi
ffffffff8001f336: 48 89 fe             	mov	rsi, rdi
ffffffff8001f339: 48 89 c7             	mov	rdi, rax
ffffffff8001f33c: e9 6f f4 ff ff       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001f341: cc                   	int3
ffffffff8001f342: cc                   	int3
ffffffff8001f343: cc                   	int3
ffffffff8001f344: cc                   	int3
ffffffff8001f345: cc                   	int3
ffffffff8001f346: cc                   	int3
ffffffff8001f347: cc                   	int3
ffffffff8001f348: cc                   	int3
ffffffff8001f349: cc                   	int3
ffffffff8001f34a: cc                   	int3
ffffffff8001f34b: cc                   	int3
ffffffff8001f34c: cc                   	int3
ffffffff8001f34d: cc                   	int3
ffffffff8001f34e: cc                   	int3
ffffffff8001f34f: cc                   	int3

ffffffff8001f350 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4>:
ffffffff8001f350: 41 57                	push	r15
ffffffff8001f352: 41 56                	push	r14
ffffffff8001f354: 41 54                	push	r12
ffffffff8001f356: 53                   	push	rbx
ffffffff8001f357: 48 83 ec 18          	sub	rsp, 0x18
ffffffff8001f35b: 49 89 fe             	mov	r14, rdi
ffffffff8001f35e: 48 8b 5e 30          	mov	rbx, qword ptr [rsi + 0x30]
ffffffff8001f362: 4c 8b 66 38          	mov	r12, qword ptr [rsi + 0x38]
ffffffff8001f366: 4d 8b 7c 24 20       	mov	r15, qword ptr [r12 + 0x20]
ffffffff8001f36b: 48 89 df             	mov	rdi, rbx
ffffffff8001f36e: be 27 00 00 00       	mov	esi, 0x27
ffffffff8001f373: 41 ff d7             	call	r15
ffffffff8001f376: 89 c1                	mov	ecx, eax
ffffffff8001f378: b0 01                	mov	al, 0x1
ffffffff8001f37a: 84 c9                	test	cl, cl
ffffffff8001f37c: 75 58                	jne	0xffffffff8001f3d6 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x86>
ffffffff8001f37e: 41 8b 36             	mov	esi, dword ptr [r14]
ffffffff8001f381: 48 8d 7c 24 0c       	lea	rdi, [rsp + 0xc]
ffffffff8001f386: ba 01 01 00 00       	mov	edx, 0x101
ffffffff8001f38b: e8 e0 eb ff ff       	call	0xffffffff8001df70 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>
ffffffff8001f390: 31 c0                	xor	eax, eax
ffffffff8001f392: 3a 44 24 0c          	cmp	al, byte ptr [rsp + 0xc]
ffffffff8001f396: 71 1b                	jno	0xffffffff8001f3b3 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x63>
ffffffff8001f398: 8b 74 24 10          	mov	esi, dword ptr [rsp + 0x10]
ffffffff8001f39c: 48 89 df             	mov	rdi, rbx
ffffffff8001f39f: 41 ff d7             	call	r15
ffffffff8001f3a2: 84 c0                	test	al, al
ffffffff8001f3a4: 75 2e                	jne	0xffffffff8001f3d4 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x84>
ffffffff8001f3a6: 48 89 df             	mov	rdi, rbx
ffffffff8001f3a9: be 27 00 00 00       	mov	esi, 0x27
ffffffff8001f3ae: 41 ff d7             	call	r15
ffffffff8001f3b1: eb 23                	jmp	0xffffffff8001f3d6 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x86>
ffffffff8001f3b3: 0f b6 44 24 16       	movzx	eax, byte ptr [rsp + 0x16]
ffffffff8001f3b8: 0f b6 54 24 17       	movzx	edx, byte ptr [rsp + 0x17]
ffffffff8001f3bd: 48 29 c2             	sub	rdx, rax
ffffffff8001f3c0: 48 8d 34 04          	lea	rsi, [rsp + rax]
ffffffff8001f3c4: 48 83 c6 0c          	add	rsi, 0xc
ffffffff8001f3c8: 48 89 df             	mov	rdi, rbx
ffffffff8001f3cb: 41 ff 54 24 18       	call	qword ptr [r12 + 0x18]
ffffffff8001f3d0: 84 c0                	test	al, al
ffffffff8001f3d2: 74 d2                	je	0xffffffff8001f3a6 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x56>
ffffffff8001f3d4: b0 01                	mov	al, 0x1
ffffffff8001f3d6: 48 83 c4 18          	add	rsp, 0x18
ffffffff8001f3da: 5b                   	pop	rbx
ffffffff8001f3db: 41 5c                	pop	r12
ffffffff8001f3dd: 41 5e                	pop	r14
ffffffff8001f3df: 41 5f                	pop	r15
ffffffff8001f3e1: c3                   	ret
ffffffff8001f3e2: cc                   	int3
ffffffff8001f3e3: cc                   	int3
ffffffff8001f3e4: cc                   	int3
ffffffff8001f3e5: cc                   	int3
ffffffff8001f3e6: cc                   	int3
ffffffff8001f3e7: cc                   	int3
ffffffff8001f3e8: cc                   	int3
ffffffff8001f3e9: cc                   	int3
ffffffff8001f3ea: cc                   	int3
ffffffff8001f3eb: cc                   	int3
ffffffff8001f3ec: cc                   	int3
ffffffff8001f3ed: cc                   	int3
ffffffff8001f3ee: cc                   	int3
ffffffff8001f3ef: cc                   	int3

ffffffff8001f3f0 <<&T as core::fmt::Debug>::fmt::hfde5ca57d3930bd4>:
ffffffff8001f3f0: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001f3f3: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff8001f3f7: 48 8b 49 18          	mov	rcx, qword ptr [rcx + 0x18]
ffffffff8001f3fb: 48 89 c7             	mov	rdi, rax
ffffffff8001f3fe: ff e1                	jmp	rcx

ffffffff8001f400 <<&T as core::fmt::Display>::fmt::h9caa31ed2d31ce39>:
ffffffff8001f400: 48 89 f0             	mov	rax, rsi
ffffffff8001f403: 48 8b 37             	mov	rsi, qword ptr [rdi]
ffffffff8001f406: 48 8b 57 08          	mov	rdx, qword ptr [rdi + 0x8]
ffffffff8001f40a: 48 89 c7             	mov	rdi, rax
ffffffff8001f40d: e9 9e f3 ff ff       	jmp	0xffffffff8001e7b0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001f412: cc                   	int3
ffffffff8001f413: cc                   	int3
ffffffff8001f414: cc                   	int3
ffffffff8001f415: cc                   	int3
ffffffff8001f416: cc                   	int3
ffffffff8001f417: cc                   	int3
ffffffff8001f418: cc                   	int3
ffffffff8001f419: cc                   	int3
ffffffff8001f41a: cc                   	int3
ffffffff8001f41b: cc                   	int3
ffffffff8001f41c: cc                   	int3
ffffffff8001f41d: cc                   	int3
ffffffff8001f41e: cc                   	int3
ffffffff8001f41f: cc                   	int3

ffffffff8001f420 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>:
ffffffff8001f420: 55                   	push	rbp
ffffffff8001f421: 41 57                	push	r15
ffffffff8001f423: 41 56                	push	r14
ffffffff8001f425: 41 55                	push	r13
ffffffff8001f427: 41 54                	push	r12
ffffffff8001f429: 53                   	push	rbx
ffffffff8001f42a: 48 83 ec 28          	sub	rsp, 0x28
ffffffff8001f42e: 48 89 34 24          	mov	qword ptr [rsp], rsi
ffffffff8001f432: 49 bd 80 80 80 80 80 80 80 80	movabs	r13, -0x7f7f7f7f7f7f7f80
ffffffff8001f43c: 48 8b 47 10          	mov	rax, qword ptr [rdi + 0x10]
ffffffff8001f440: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001f445: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001f448: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001f44d: 48 8b 47 08          	mov	rax, qword ptr [rdi + 0x8]
ffffffff8001f451: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001f456: 31 ed                	xor	ebp, ebp
ffffffff8001f458: 45 31 ff             	xor	r15d, r15d
ffffffff8001f45b: 45 31 f6             	xor	r14d, r14d
ffffffff8001f45e: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff8001f463: eb 47                	jmp	0xffffffff8001f4ac <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x8c>
ffffffff8001f465: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8001f470: 43 80 7c 2b ff 0a    	cmp	byte ptr [r11 + r13 - 0x1], 0xa
ffffffff8001f476: 0f 94 c0             	sete	al
ffffffff8001f479: 4d 29 fd             	sub	r13, r15
ffffffff8001f47c: 4d 01 df             	add	r15, r11
ffffffff8001f47f: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8001f484: 88 01                	mov	byte ptr [rcx], al
ffffffff8001f486: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff8001f48b: 4c 89 fe             	mov	rsi, r15
ffffffff8001f48e: 4c 89 ea             	mov	rdx, r13
ffffffff8001f491: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001f496: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f499: 4d 89 e7             	mov	r15, r12
ffffffff8001f49c: 84 c0                	test	al, al
ffffffff8001f49e: 49 89 dd             	mov	r13, rbx
ffffffff8001f4a1: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8001f4a6: 0f 85 ca 01 00 00    	jne	0xffffffff8001f676 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x256>
ffffffff8001f4ac: 41 f6 c6 01          	test	r14b, 0x1
ffffffff8001f4b0: 0f 85 bc 01 00 00    	jne	0xffffffff8001f672 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x252>
ffffffff8001f4b6: 48 39 d5             	cmp	rbp, rdx
ffffffff8001f4b9: 76 15                	jbe	0xffffffff8001f4d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xb0>
ffffffff8001f4bb: 49 89 ec             	mov	r12, rbp
ffffffff8001f4be: 4c 8b 1c 24          	mov	r11, qword ptr [rsp]
ffffffff8001f4c2: e9 5c 01 00 00       	jmp	0xffffffff8001f623 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x203>
ffffffff8001f4c7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001f4d0: 4c 8b 1c 24          	mov	r11, qword ptr [rsp]
ffffffff8001f4d4: 49 be 00 01 01 01 01 01 01 01	movabs	r14, 0x101010101010100
ffffffff8001f4de: eb 0c                	jmp	0xffffffff8001f4ec <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xcc>
ffffffff8001f4e0: 4c 89 e5             	mov	rbp, r12
ffffffff8001f4e3: 49 39 d4             	cmp	r12, rdx
ffffffff8001f4e6: 0f 87 37 01 00 00    	ja	0xffffffff8001f623 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x203>
ffffffff8001f4ec: 48 89 d1             	mov	rcx, rdx
ffffffff8001f4ef: 48 29 e9             	sub	rcx, rbp
ffffffff8001f4f2: 49 8d 04 2b          	lea	rax, [r11 + rbp]
ffffffff8001f4f6: 48 83 f9 0f          	cmp	rcx, 0xf
ffffffff8001f4fa: 77 34                	ja	0xffffffff8001f530 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x110>
ffffffff8001f4fc: 48 39 ea             	cmp	rdx, rbp
ffffffff8001f4ff: 0f 84 1b 01 00 00    	je	0xffffffff8001f620 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001f505: 31 ff                	xor	edi, edi
ffffffff8001f507: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001f510: 80 3c 38 0a          	cmp	byte ptr [rax + rdi], 0xa
ffffffff8001f514: 0f 84 d6 00 00 00    	je	0xffffffff8001f5f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001f51a: 48 ff c7             	inc	rdi
ffffffff8001f51d: 48 39 f9             	cmp	rcx, rdi
ffffffff8001f520: 75 ee                	jne	0xffffffff8001f510 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xf0>
ffffffff8001f522: e9 f9 00 00 00       	jmp	0xffffffff8001f620 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001f527: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001f530: 48 8d 70 07          	lea	rsi, [rax + 0x7]
ffffffff8001f534: 48 83 e6 f8          	and	rsi, -0x8
ffffffff8001f538: 48 89 f3             	mov	rbx, rsi
ffffffff8001f53b: 48 29 c3             	sub	rbx, rax
ffffffff8001f53e: 74 2d                	je	0xffffffff8001f56d <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x14d>
ffffffff8001f540: 31 ff                	xor	edi, edi
ffffffff8001f542: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8001f550: 80 3c 38 0a          	cmp	byte ptr [rax + rdi], 0xa
ffffffff8001f554: 0f 84 96 00 00 00    	je	0xffffffff8001f5f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001f55a: 48 ff c7             	inc	rdi
ffffffff8001f55d: 48 39 fb             	cmp	rbx, rdi
ffffffff8001f560: 75 ee                	jne	0xffffffff8001f550 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x130>
ffffffff8001f562: 48 8d 79 f0          	lea	rdi, [rcx - 0x10]
ffffffff8001f566: 48 39 fb             	cmp	rbx, rdi
ffffffff8001f569: 76 06                	jbe	0xffffffff8001f571 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x151>
ffffffff8001f56b: eb 5d                	jmp	0xffffffff8001f5ca <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1aa>
ffffffff8001f56d: 48 8d 79 f0          	lea	rdi, [rcx - 0x10]
ffffffff8001f571: ba 08 00 00 00       	mov	edx, 0x8
ffffffff8001f576: 48 01 d6             	add	rsi, rdx
ffffffff8001f579: 48 ba 0a 0a 0a 0a 0a 0a 0a 0a	movabs	rdx, 0xa0a0a0a0a0a0a0a
ffffffff8001f583: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8001f590: 4c 8b 46 f8          	mov	r8, qword ptr [rsi - 0x8]
ffffffff8001f594: 4d 89 c1             	mov	r9, r8
ffffffff8001f597: 49 31 d1             	xor	r9, rdx
ffffffff8001f59a: 4d 89 f2             	mov	r10, r14
ffffffff8001f59d: 4d 29 ca             	sub	r10, r9
ffffffff8001f5a0: 4d 09 c2             	or	r10, r8
ffffffff8001f5a3: 4c 8b 06             	mov	r8, qword ptr [rsi]
ffffffff8001f5a6: 49 31 d0             	xor	r8, rdx
ffffffff8001f5a9: 4d 89 f1             	mov	r9, r14
ffffffff8001f5ac: 4d 29 c1             	sub	r9, r8
ffffffff8001f5af: 4d 09 c1             	or	r9, r8
ffffffff8001f5b2: 4d 21 ea             	and	r10, r13
ffffffff8001f5b5: 4d 21 ca             	and	r10, r9
ffffffff8001f5b8: 4d 39 ea             	cmp	r10, r13
ffffffff8001f5bb: 75 0d                	jne	0xffffffff8001f5ca <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1aa>
ffffffff8001f5bd: 48 83 c3 10          	add	rbx, 0x10
ffffffff8001f5c1: 48 83 c6 10          	add	rsi, 0x10
ffffffff8001f5c5: 48 39 fb             	cmp	rbx, rdi
ffffffff8001f5c8: 76 c6                	jbe	0xffffffff8001f590 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x170>
ffffffff8001f5ca: 48 89 df             	mov	rdi, rbx
ffffffff8001f5cd: 48 39 cb             	cmp	rbx, rcx
ffffffff8001f5d0: 48 8b 54 24 08       	mov	rdx, qword ptr [rsp + 0x8]
ffffffff8001f5d5: 74 49                	je	0xffffffff8001f620 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001f5d7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff8001f5e0: 80 3c 38 0a          	cmp	byte ptr [rax + rdi], 0xa
ffffffff8001f5e4: 74 0a                	je	0xffffffff8001f5f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001f5e6: 48 ff c7             	inc	rdi
ffffffff8001f5e9: 48 39 f9             	cmp	rcx, rdi
ffffffff8001f5ec: 75 f2                	jne	0xffffffff8001f5e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1c0>
ffffffff8001f5ee: eb 30                	jmp	0xffffffff8001f620 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001f5f0: 4c 8d 24 2f          	lea	r12, [rdi + rbp]
ffffffff8001f5f4: 49 ff c4             	inc	r12
ffffffff8001f5f7: 48 01 fd             	add	rbp, rdi
ffffffff8001f5fa: 48 39 d5             	cmp	rbp, rdx
ffffffff8001f5fd: 0f 83 dd fe ff ff    	jae	0xffffffff8001f4e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xc0>
ffffffff8001f603: 80 3c 38 0a          	cmp	byte ptr [rax + rdi], 0xa
ffffffff8001f607: 0f 85 d3 fe ff ff    	jne	0xffffffff8001f4e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xc0>
ffffffff8001f60d: 4c 89 eb             	mov	rbx, r13
ffffffff8001f610: 45 31 f6             	xor	r14d, r14d
ffffffff8001f613: 4c 89 e5             	mov	rbp, r12
ffffffff8001f616: 4d 89 e5             	mov	r13, r12
ffffffff8001f619: eb 1c                	jmp	0xffffffff8001f637 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x217>
ffffffff8001f61b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001f620: 49 89 d4             	mov	r12, rdx
ffffffff8001f623: 4c 89 eb             	mov	rbx, r13
ffffffff8001f626: 41 b6 01             	mov	r14b, 0x1
ffffffff8001f629: 4c 89 e5             	mov	rbp, r12
ffffffff8001f62c: 4d 89 fc             	mov	r12, r15
ffffffff8001f62f: 49 89 d5             	mov	r13, rdx
ffffffff8001f632: 49 39 d7             	cmp	r15, rdx
ffffffff8001f635: 74 3b                	je	0xffffffff8001f672 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x252>
ffffffff8001f637: 48 8b 44 24 20       	mov	rax, qword ptr [rsp + 0x20]
ffffffff8001f63c: 80 38 00             	cmp	byte ptr [rax], 0x0
ffffffff8001f63f: 74 21                	je	0xffffffff8001f662 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x242>
ffffffff8001f641: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8001f646: 48 8b 7c 24 18       	mov	rdi, qword ptr [rsp + 0x18]
ffffffff8001f64b: 48 c7 c6 70 20 02 80 	mov	rsi, -0x7ffddf90
ffffffff8001f652: 48 8b 44 24 10       	mov	rax, qword ptr [rsp + 0x10]
ffffffff8001f657: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f65a: 4c 8b 1c 24          	mov	r11, qword ptr [rsp]
ffffffff8001f65e: 84 c0                	test	al, al
ffffffff8001f660: 75 14                	jne	0xffffffff8001f676 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x256>
ffffffff8001f662: 4d 39 fd             	cmp	r13, r15
ffffffff8001f665: 0f 85 05 fe ff ff    	jne	0xffffffff8001f470 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x50>
ffffffff8001f66b: 31 c0                	xor	eax, eax
ffffffff8001f66d: e9 07 fe ff ff       	jmp	0xffffffff8001f479 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x59>
ffffffff8001f672: 31 c0                	xor	eax, eax
ffffffff8001f674: eb 02                	jmp	0xffffffff8001f678 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x258>
ffffffff8001f676: b0 01                	mov	al, 0x1
ffffffff8001f678: 48 83 c4 28          	add	rsp, 0x28
ffffffff8001f67c: 5b                   	pop	rbx
ffffffff8001f67d: 41 5c                	pop	r12
ffffffff8001f67f: 41 5d                	pop	r13
ffffffff8001f681: 41 5e                	pop	r14
ffffffff8001f683: 41 5f                	pop	r15
ffffffff8001f685: 5d                   	pop	rbp
ffffffff8001f686: c3                   	ret
ffffffff8001f687: cc                   	int3
ffffffff8001f688: cc                   	int3
ffffffff8001f689: cc                   	int3
ffffffff8001f68a: cc                   	int3
ffffffff8001f68b: cc                   	int3
ffffffff8001f68c: cc                   	int3
ffffffff8001f68d: cc                   	int3
ffffffff8001f68e: cc                   	int3
ffffffff8001f68f: cc                   	int3

ffffffff8001f690 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853>:
ffffffff8001f690: 55                   	push	rbp
ffffffff8001f691: 41 57                	push	r15
ffffffff8001f693: 41 56                	push	r14
ffffffff8001f695: 53                   	push	rbx
ffffffff8001f696: 50                   	push	rax
ffffffff8001f697: 4c 8b 77 10          	mov	r14, qword ptr [rdi + 0x10]
ffffffff8001f69b: 48 8b 1f             	mov	rbx, qword ptr [rdi]
ffffffff8001f69e: 4c 8b 7f 08          	mov	r15, qword ptr [rdi + 0x8]
ffffffff8001f6a2: 41 80 3e 00          	cmp	byte ptr [r14], 0x0
ffffffff8001f6a6: 74 28                	je	0xffffffff8001f6d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853+0x40>
ffffffff8001f6a8: ba 04 00 00 00       	mov	edx, 0x4
ffffffff8001f6ad: 48 89 df             	mov	rdi, rbx
ffffffff8001f6b0: 89 f5                	mov	ebp, esi
ffffffff8001f6b2: 48 c7 c6 70 20 02 80 	mov	rsi, -0x7ffddf90
ffffffff8001f6b9: 41 ff 57 18          	call	qword ptr [r15 + 0x18]
ffffffff8001f6bd: 89 ee                	mov	esi, ebp
ffffffff8001f6bf: 84 c0                	test	al, al
ffffffff8001f6c1: 74 0d                	je	0xffffffff8001f6d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853+0x40>
ffffffff8001f6c3: b0 01                	mov	al, 0x1
ffffffff8001f6c5: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001f6c9: 5b                   	pop	rbx
ffffffff8001f6ca: 41 5e                	pop	r14
ffffffff8001f6cc: 41 5f                	pop	r15
ffffffff8001f6ce: 5d                   	pop	rbp
ffffffff8001f6cf: c3                   	ret
ffffffff8001f6d0: 83 fe 0a             	cmp	esi, 0xa
ffffffff8001f6d3: 41 0f 94 06          	sete	byte ptr [r14]
ffffffff8001f6d7: 49 8b 47 20          	mov	rax, qword ptr [r15 + 0x20]
ffffffff8001f6db: 48 89 df             	mov	rdi, rbx
ffffffff8001f6de: 48 83 c4 08          	add	rsp, 0x8
ffffffff8001f6e2: 5b                   	pop	rbx
ffffffff8001f6e3: 41 5e                	pop	r14
ffffffff8001f6e5: 41 5f                	pop	r15
ffffffff8001f6e7: 5d                   	pop	rbp
ffffffff8001f6e8: ff e0                	jmp	rax
ffffffff8001f6ea: cc                   	int3
ffffffff8001f6eb: cc                   	int3
ffffffff8001f6ec: cc                   	int3
ffffffff8001f6ed: cc                   	int3
ffffffff8001f6ee: cc                   	int3
ffffffff8001f6ef: cc                   	int3

ffffffff8001f6f0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>:
ffffffff8001f6f0: 55                   	push	rbp
ffffffff8001f6f1: 41 57                	push	r15
ffffffff8001f6f3: 41 56                	push	r14
ffffffff8001f6f5: 41 55                	push	r13
ffffffff8001f6f7: 41 54                	push	r12
ffffffff8001f6f9: 53                   	push	rbx
ffffffff8001f6fa: 48 83 ec 68          	sub	rsp, 0x68
ffffffff8001f6fe: 48 89 fb             	mov	rbx, rdi
ffffffff8001f701: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f704: 80 7f 08 00          	cmp	byte ptr [rdi + 0x8], 0x0
ffffffff8001f708: 0f 85 73 01 00 00    	jne	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f70e: 49 89 ce             	mov	r14, rcx
ffffffff8001f711: 4c 89 44 24 08       	mov	qword ptr [rsp + 0x8], r8
ffffffff8001f716: 4c 8b 3b             	mov	r15, qword ptr [rbx]
ffffffff8001f719: 41 f6 47 24 04       	test	byte ptr [r15 + 0x24], 0x4
ffffffff8001f71e: 0f b6 43 09          	movzx	eax, byte ptr [rbx + 0x9]
ffffffff8001f722: 0f 85 84 00 00 00    	jne	0xffffffff8001f7ac <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0xbc>
ffffffff8001f728: 49 89 f5             	mov	r13, rsi
ffffffff8001f72b: 49 89 d4             	mov	r12, rdx
ffffffff8001f72e: 48 c7 c1 53 9a 02 80 	mov	rcx, -0x7ffd65ad
ffffffff8001f735: 48 c7 c6 50 9a 02 80 	mov	rsi, -0x7ffd65b0
ffffffff8001f73c: 84 c0                	test	al, al
ffffffff8001f73e: 48 0f 45 f1          	cmovne	rsi, rcx
ffffffff8001f742: 0f b6 d0             	movzx	edx, al
ffffffff8001f745: 48 83 f2 03          	xor	rdx, 0x3
ffffffff8001f749: 49 8b 7f 30          	mov	rdi, qword ptr [r15 + 0x30]
ffffffff8001f74d: 49 8b 47 38          	mov	rax, qword ptr [r15 + 0x38]
ffffffff8001f751: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f754: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f757: 84 c0                	test	al, al
ffffffff8001f759: 0f 85 22 01 00 00    	jne	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f75f: 49 8b 7f 30          	mov	rdi, qword ptr [r15 + 0x30]
ffffffff8001f763: 49 8b 47 38          	mov	rax, qword ptr [r15 + 0x38]
ffffffff8001f767: 4c 89 ee             	mov	rsi, r13
ffffffff8001f76a: 4c 89 e2             	mov	rdx, r12
ffffffff8001f76d: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f770: 84 c0                	test	al, al
ffffffff8001f772: 0f 85 09 01 00 00    	jne	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f778: 49 8b 7f 30          	mov	rdi, qword ptr [r15 + 0x30]
ffffffff8001f77c: 49 8b 47 38          	mov	rax, qword ptr [r15 + 0x38]
ffffffff8001f780: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001f785: 48 c7 c6 55 9a 02 80 	mov	rsi, -0x7ffd65ab
ffffffff8001f78c: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f78f: 84 c0                	test	al, al
ffffffff8001f791: 0f 85 ea 00 00 00    	jne	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f797: 4c 89 f7             	mov	rdi, r14
ffffffff8001f79a: 4c 89 fe             	mov	rsi, r15
ffffffff8001f79d: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f7a2: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f7a5: 89 c5                	mov	ebp, eax
ffffffff8001f7a7: e9 d5 00 00 00       	jmp	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f7ac: 84 c0                	test	al, al
ffffffff8001f7ae: 75 2e                	jne	0xffffffff8001f7de <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0xee>
ffffffff8001f7b0: 49 8b 7f 30          	mov	rdi, qword ptr [r15 + 0x30]
ffffffff8001f7b4: 49 8b 47 38          	mov	rax, qword ptr [r15 + 0x38]
ffffffff8001f7b8: 49 89 d4             	mov	r12, rdx
ffffffff8001f7bb: ba 03 00 00 00       	mov	edx, 0x3
ffffffff8001f7c0: 49 89 f5             	mov	r13, rsi
ffffffff8001f7c3: 48 c7 c6 57 9a 02 80 	mov	rsi, -0x7ffd65a9
ffffffff8001f7ca: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f7cd: 4c 89 ee             	mov	rsi, r13
ffffffff8001f7d0: 4c 89 e2             	mov	rdx, r12
ffffffff8001f7d3: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f7d6: 84 c0                	test	al, al
ffffffff8001f7d8: 0f 85 a3 00 00 00    	jne	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f7de: c6 44 24 07 01       	mov	byte ptr [rsp + 0x7], 0x1
ffffffff8001f7e3: 49 8b 47 30          	mov	rax, qword ptr [r15 + 0x30]
ffffffff8001f7e7: 49 8b 4f 38          	mov	rcx, qword ptr [r15 + 0x38]
ffffffff8001f7eb: 48 89 44 24 10       	mov	qword ptr [rsp + 0x10], rax
ffffffff8001f7f0: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff8001f7f5: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001f7fa: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001f7ff: 49 8b 07             	mov	rax, qword ptr [r15]
ffffffff8001f802: 49 8b 4f 08          	mov	rcx, qword ptr [r15 + 0x8]
ffffffff8001f806: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001f80b: 48 89 4c 24 30       	mov	qword ptr [rsp + 0x30], rcx
ffffffff8001f810: 49 8b 47 10          	mov	rax, qword ptr [r15 + 0x10]
ffffffff8001f814: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001f819: 49 8b 47 18          	mov	rax, qword ptr [r15 + 0x18]
ffffffff8001f81d: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8001f822: 49 8b 47 20          	mov	rax, qword ptr [r15 + 0x20]
ffffffff8001f826: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8001f82b: 49 8b 47 28          	mov	rax, qword ptr [r15 + 0x28]
ffffffff8001f82f: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8001f834: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001f839: 48 89 7c 24 58       	mov	qword ptr [rsp + 0x58], rdi
ffffffff8001f83e: 48 c7 44 24 60 20 9a 02 80   	mov	qword ptr [rsp + 0x60], -0x7ffd65e0
ffffffff8001f847: e8 d4 fb ff ff       	call	0xffffffff8001f420 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>
ffffffff8001f84c: 84 c0                	test	al, al
ffffffff8001f84e: 75 2e                	jne	0xffffffff8001f87e <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x18e>
ffffffff8001f850: 48 8d 7c 24 10       	lea	rdi, [rsp + 0x10]
ffffffff8001f855: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001f85a: 48 c7 c6 55 9a 02 80 	mov	rsi, -0x7ffd65ab
ffffffff8001f861: e8 ba fb ff ff       	call	0xffffffff8001f420 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>
ffffffff8001f866: 84 c0                	test	al, al
ffffffff8001f868: 75 14                	jne	0xffffffff8001f87e <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x18e>
ffffffff8001f86a: 48 8d 74 24 28       	lea	rsi, [rsp + 0x28]
ffffffff8001f86f: 4c 89 f7             	mov	rdi, r14
ffffffff8001f872: 48 8b 44 24 08       	mov	rax, qword ptr [rsp + 0x8]
ffffffff8001f877: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f87a: 84 c0                	test	al, al
ffffffff8001f87c: 74 1d                	je	0xffffffff8001f89b <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x1ab>
ffffffff8001f87e: 40 b5 01             	mov	bpl, 0x1
ffffffff8001f881: 40 88 6b 08          	mov	byte ptr [rbx + 0x8], bpl
ffffffff8001f885: c6 43 09 01          	mov	byte ptr [rbx + 0x9], 0x1
ffffffff8001f889: 48 89 d8             	mov	rax, rbx
ffffffff8001f88c: 48 83 c4 68          	add	rsp, 0x68
ffffffff8001f890: 5b                   	pop	rbx
ffffffff8001f891: 41 5c                	pop	r12
ffffffff8001f893: 41 5d                	pop	r13
ffffffff8001f895: 41 5e                	pop	r14
ffffffff8001f897: 41 5f                	pop	r15
ffffffff8001f899: 5d                   	pop	rbp
ffffffff8001f89a: c3                   	ret
ffffffff8001f89b: 48 8b 7c 24 58       	mov	rdi, qword ptr [rsp + 0x58]
ffffffff8001f8a0: 48 8b 44 24 60       	mov	rax, qword ptr [rsp + 0x60]
ffffffff8001f8a5: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001f8aa: 48 c7 c6 5a 9a 02 80 	mov	rsi, -0x7ffd65a6
ffffffff8001f8b1: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f8b4: 89 c5                	mov	ebp, eax
ffffffff8001f8b6: eb c9                	jmp	0xffffffff8001f881 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001f8b8: cc                   	int3
ffffffff8001f8b9: cc                   	int3
ffffffff8001f8ba: cc                   	int3
ffffffff8001f8bb: cc                   	int3
ffffffff8001f8bc: cc                   	int3
ffffffff8001f8bd: cc                   	int3
ffffffff8001f8be: cc                   	int3
ffffffff8001f8bf: cc                   	int3

ffffffff8001f8c0 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>:
ffffffff8001f8c0: 0f b6 47 08          	movzx	eax, byte ptr [rdi + 0x8]
ffffffff8001f8c4: 80 7f 09 00          	cmp	byte ptr [rdi + 0x9], 0x0
ffffffff8001f8c8: 74 47                	je	0xffffffff8001f911 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x51>
ffffffff8001f8ca: a8 01                	test	al, 0x1
ffffffff8001f8cc: b0 01                	mov	al, 0x1
ffffffff8001f8ce: 75 3e                	jne	0xffffffff8001f90e <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x4e>
ffffffff8001f8d0: 53                   	push	rbx
ffffffff8001f8d1: 48 89 fb             	mov	rbx, rdi
ffffffff8001f8d4: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff8001f8d7: f6 40 24 04          	test	byte ptr [rax + 0x24], 0x4
ffffffff8001f8db: 75 16                	jne	0xffffffff8001f8f3 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x33>
ffffffff8001f8dd: 48 8b 78 30          	mov	rdi, qword ptr [rax + 0x30]
ffffffff8001f8e1: 48 8b 40 38          	mov	rax, qword ptr [rax + 0x38]
ffffffff8001f8e5: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001f8ea: 48 c7 c6 5d 9a 02 80 	mov	rsi, -0x7ffd65a3
ffffffff8001f8f1: eb 14                	jmp	0xffffffff8001f907 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x47>
ffffffff8001f8f3: 48 8b 78 30          	mov	rdi, qword ptr [rax + 0x30]
ffffffff8001f8f7: 48 8b 40 38          	mov	rax, qword ptr [rax + 0x38]
ffffffff8001f8fb: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001f900: 48 c7 c6 5c 9a 02 80 	mov	rsi, -0x7ffd65a4
ffffffff8001f907: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f90a: 48 89 df             	mov	rdi, rbx
ffffffff8001f90d: 5b                   	pop	rbx
ffffffff8001f90e: 88 47 08             	mov	byte ptr [rdi + 0x8], al
ffffffff8001f911: 24 01                	and	al, 0x1
ffffffff8001f913: c3                   	ret
ffffffff8001f914: cc                   	int3
ffffffff8001f915: cc                   	int3
ffffffff8001f916: cc                   	int3
ffffffff8001f917: cc                   	int3
ffffffff8001f918: cc                   	int3
ffffffff8001f919: cc                   	int3
ffffffff8001f91a: cc                   	int3
ffffffff8001f91b: cc                   	int3
ffffffff8001f91c: cc                   	int3
ffffffff8001f91d: cc                   	int3
ffffffff8001f91e: cc                   	int3
ffffffff8001f91f: cc                   	int3

ffffffff8001f920 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>:
ffffffff8001f920: 41 57                	push	r15
ffffffff8001f922: 41 56                	push	r14
ffffffff8001f924: 41 55                	push	r13
ffffffff8001f926: 41 54                	push	r12
ffffffff8001f928: 53                   	push	rbx
ffffffff8001f929: 48 83 ec 60          	sub	rsp, 0x60
ffffffff8001f92d: 48 89 fb             	mov	rbx, rdi
ffffffff8001f930: 4c 8b 3f             	mov	r15, qword ptr [rdi]
ffffffff8001f933: b0 01                	mov	al, 0x1
ffffffff8001f935: 80 7f 10 00          	cmp	byte ptr [rdi + 0x10], 0x0
ffffffff8001f939: 74 1a                	je	0xffffffff8001f955 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x35>
ffffffff8001f93b: 88 43 10             	mov	byte ptr [rbx + 0x10], al
ffffffff8001f93e: 49 ff c7             	inc	r15
ffffffff8001f941: 4c 89 3b             	mov	qword ptr [rbx], r15
ffffffff8001f944: 48 89 d8             	mov	rax, rbx
ffffffff8001f947: 48 83 c4 60          	add	rsp, 0x60
ffffffff8001f94b: 5b                   	pop	rbx
ffffffff8001f94c: 41 5c                	pop	r12
ffffffff8001f94e: 41 5d                	pop	r13
ffffffff8001f950: 41 5e                	pop	r14
ffffffff8001f952: 41 5f                	pop	r15
ffffffff8001f954: c3                   	ret
ffffffff8001f955: 4c 8b 73 08          	mov	r14, qword ptr [rbx + 0x8]
ffffffff8001f959: 41 f6 46 24 04       	test	byte ptr [r14 + 0x24], 0x4
ffffffff8001f95e: 75 49                	jne	0xffffffff8001f9a9 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x89>
ffffffff8001f960: 31 c0                	xor	eax, eax
ffffffff8001f962: 4d 85 ff             	test	r15, r15
ffffffff8001f965: 48 c7 c7 5f 9a 02 80 	mov	rdi, -0x7ffd65a1
ffffffff8001f96c: 48 c7 c1 53 9a 02 80 	mov	rcx, -0x7ffd65ad
ffffffff8001f973: 48 0f 44 cf          	cmove	rcx, rdi
ffffffff8001f977: 0f 95 c0             	setne	al
ffffffff8001f97a: 48 ff c0             	inc	rax
ffffffff8001f97d: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001f981: 4d 8b 46 38          	mov	r8, qword ptr [r14 + 0x38]
ffffffff8001f985: 49 89 f4             	mov	r12, rsi
ffffffff8001f988: 48 89 ce             	mov	rsi, rcx
ffffffff8001f98b: 49 89 d5             	mov	r13, rdx
ffffffff8001f98e: 48 89 c2             	mov	rdx, rax
ffffffff8001f991: 41 ff 50 18          	call	qword ptr [r8 + 0x18]
ffffffff8001f995: 89 c1                	mov	ecx, eax
ffffffff8001f997: b0 01                	mov	al, 0x1
ffffffff8001f999: 84 c9                	test	cl, cl
ffffffff8001f99b: 75 9e                	jne	0xffffffff8001f93b <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001f99d: 4c 89 e7             	mov	rdi, r12
ffffffff8001f9a0: 4c 89 f6             	mov	rsi, r14
ffffffff8001f9a3: 41 ff 55 18          	call	qword ptr [r13 + 0x18]
ffffffff8001f9a7: eb 92                	jmp	0xffffffff8001f93b <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001f9a9: 4d 85 ff             	test	r15, r15
ffffffff8001f9ac: 75 2f                	jne	0xffffffff8001f9dd <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0xbd>
ffffffff8001f9ae: 49 8b 7e 30          	mov	rdi, qword ptr [r14 + 0x30]
ffffffff8001f9b2: 49 8b 46 38          	mov	rax, qword ptr [r14 + 0x38]
ffffffff8001f9b6: 49 89 d4             	mov	r12, rdx
ffffffff8001f9b9: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001f9be: 49 89 f5             	mov	r13, rsi
ffffffff8001f9c1: 48 c7 c6 60 9a 02 80 	mov	rsi, -0x7ffd65a0
ffffffff8001f9c8: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001f9cb: 4c 89 ee             	mov	rsi, r13
ffffffff8001f9ce: 4c 89 e2             	mov	rdx, r12
ffffffff8001f9d1: 89 c1                	mov	ecx, eax
ffffffff8001f9d3: b0 01                	mov	al, 0x1
ffffffff8001f9d5: 84 c9                	test	cl, cl
ffffffff8001f9d7: 0f 85 5e ff ff ff    	jne	0xffffffff8001f93b <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001f9dd: c6 44 24 07 01       	mov	byte ptr [rsp + 0x7], 0x1
ffffffff8001f9e2: 49 8b 46 30          	mov	rax, qword ptr [r14 + 0x30]
ffffffff8001f9e6: 49 8b 4e 38          	mov	rcx, qword ptr [r14 + 0x38]
ffffffff8001f9ea: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff8001f9ef: 48 89 4c 24 50       	mov	qword ptr [rsp + 0x50], rcx
ffffffff8001f9f4: 48 8d 44 24 07       	lea	rax, [rsp + 0x7]
ffffffff8001f9f9: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff8001f9fe: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8001fa01: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff8001fa05: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff8001fa0a: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff8001fa0f: 49 8b 46 10          	mov	rax, qword ptr [r14 + 0x10]
ffffffff8001fa13: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8001fa18: 49 8b 46 18          	mov	rax, qword ptr [r14 + 0x18]
ffffffff8001fa1c: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff8001fa21: 49 8b 46 20          	mov	rax, qword ptr [r14 + 0x20]
ffffffff8001fa25: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8001fa2a: 49 8b 46 28          	mov	rax, qword ptr [r14 + 0x28]
ffffffff8001fa2e: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8001fa33: 48 8d 44 24 48       	lea	rax, [rsp + 0x48]
ffffffff8001fa38: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff8001fa3d: 48 c7 44 24 40 20 9a 02 80   	mov	qword ptr [rsp + 0x40], -0x7ffd65e0
ffffffff8001fa46: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8001fa4b: 48 89 f7             	mov	rdi, rsi
ffffffff8001fa4e: 48 89 c6             	mov	rsi, rax
ffffffff8001fa51: ff 52 18             	call	qword ptr [rdx + 0x18]
ffffffff8001fa54: 84 c0                	test	al, al
ffffffff8001fa56: 74 07                	je	0xffffffff8001fa5f <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x13f>
ffffffff8001fa58: b0 01                	mov	al, 0x1
ffffffff8001fa5a: e9 dc fe ff ff       	jmp	0xffffffff8001f93b <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001fa5f: 48 8b 7c 24 38       	mov	rdi, qword ptr [rsp + 0x38]
ffffffff8001fa64: 48 8b 44 24 40       	mov	rax, qword ptr [rsp + 0x40]
ffffffff8001fa69: ba 02 00 00 00       	mov	edx, 0x2
ffffffff8001fa6e: 48 c7 c6 5a 9a 02 80 	mov	rsi, -0x7ffd65a6
ffffffff8001fa75: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff8001fa78: e9 be fe ff ff       	jmp	0xffffffff8001f93b <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001fa7d: cc                   	int3
ffffffff8001fa7e: cc                   	int3
ffffffff8001fa7f: cc                   	int3

ffffffff8001fa80 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>:
ffffffff8001fa80: 48 8b 17             	mov	rdx, qword ptr [rdi]
ffffffff8001fa83: 0f b6 4f 10          	movzx	ecx, byte ptr [rdi + 0x10]
ffffffff8001fa87: 48 85 d2             	test	rdx, rdx
ffffffff8001fa8a: 74 70                	je	0xffffffff8001fafc <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x7c>
ffffffff8001fa8c: b0 01                	mov	al, 0x1
ffffffff8001fa8e: f6 c1 01             	test	cl, 0x1
ffffffff8001fa91: 75 64                	jne	0xffffffff8001faf7 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x77>
ffffffff8001fa93: 53                   	push	rbx
ffffffff8001fa94: 48 83 fa 01          	cmp	rdx, 0x1
ffffffff8001fa98: 75 38                	jne	0xffffffff8001fad2 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001fa9a: 80 7f 11 00          	cmp	byte ptr [rdi + 0x11], 0x0
ffffffff8001fa9e: 74 32                	je	0xffffffff8001fad2 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001faa0: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff8001faa4: f6 41 24 04          	test	byte ptr [rcx + 0x24], 0x4
ffffffff8001faa8: 75 28                	jne	0xffffffff8001fad2 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001faaa: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff8001faae: 48 8b 49 38          	mov	rcx, qword ptr [rcx + 0x38]
ffffffff8001fab2: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001fab7: 48 89 fb             	mov	rbx, rdi
ffffffff8001faba: 48 89 c7             	mov	rdi, rax
ffffffff8001fabd: 48 c7 c6 63 9a 02 80 	mov	rsi, -0x7ffd659d
ffffffff8001fac4: ff 51 18             	call	qword ptr [rcx + 0x18]
ffffffff8001fac7: 48 89 df             	mov	rdi, rbx
ffffffff8001faca: 89 c1                	mov	ecx, eax
ffffffff8001facc: b0 01                	mov	al, 0x1
ffffffff8001face: 84 c9                	test	cl, cl
ffffffff8001fad0: 75 24                	jne	0xffffffff8001faf6 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x76>
ffffffff8001fad2: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff8001fad6: 48 8b 41 30          	mov	rax, qword ptr [rcx + 0x30]
ffffffff8001fada: 48 8b 49 38          	mov	rcx, qword ptr [rcx + 0x38]
ffffffff8001fade: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8001fae3: 48 89 fb             	mov	rbx, rdi
ffffffff8001fae6: 48 89 c7             	mov	rdi, rax
ffffffff8001fae9: 48 c7 c6 62 9a 02 80 	mov	rsi, -0x7ffd659e
ffffffff8001faf0: ff 51 18             	call	qword ptr [rcx + 0x18]
ffffffff8001faf3: 48 89 df             	mov	rdi, rbx
ffffffff8001faf6: 5b                   	pop	rbx
ffffffff8001faf7: 88 47 10             	mov	byte ptr [rdi + 0x10], al
ffffffff8001fafa: 89 c1                	mov	ecx, eax
ffffffff8001fafc: 80 e1 01             	and	cl, 0x1
ffffffff8001faff: 89 c8                	mov	eax, ecx
ffffffff8001fb01: c3                   	ret
ffffffff8001fb02: cc                   	int3
ffffffff8001fb03: cc                   	int3
ffffffff8001fb04: cc                   	int3
ffffffff8001fb05: cc                   	int3
ffffffff8001fb06: cc                   	int3
ffffffff8001fb07: cc                   	int3
ffffffff8001fb08: cc                   	int3
ffffffff8001fb09: cc                   	int3
ffffffff8001fb0a: cc                   	int3
ffffffff8001fb0b: cc                   	int3
ffffffff8001fb0c: cc                   	int3
ffffffff8001fb0d: cc                   	int3
ffffffff8001fb0e: cc                   	int3
ffffffff8001fb0f: cc                   	int3

ffffffff8001fb10 <core::fmt::Write::write_fmt::h4496ab276a54b47f.llvm.12673182610765218689>:
ffffffff8001fb10: 48 89 f2             	mov	rdx, rsi
ffffffff8001fb13: 48 c7 c6 20 9a 02 80 	mov	rsi, -0x7ffd65e0
ffffffff8001fb1a: e9 b1 e6 ff ff       	jmp	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff8001fb1f: cc                   	int3

ffffffff8001fb20 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>:
ffffffff8001fb20: 41 57                	push	r15
ffffffff8001fb22: 41 56                	push	r14
ffffffff8001fb24: 53                   	push	rbx
ffffffff8001fb25: 48 85 d2             	test	rdx, rdx
ffffffff8001fb28: 74 70                	je	0xffffffff8001fb9a <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x7a>
ffffffff8001fb2a: 41 89 fa             	mov	r10d, edi
ffffffff8001fb2d: 41 c1 ea 08          	shr	r10d, 0x8
ffffffff8001fb31: 4c 8d 1c 56          	lea	r11, [rsi + 2*rdx]
ffffffff8001fb35: 31 c0                	xor	eax, eax
ffffffff8001fb37: 49 89 f6             	mov	r14, rsi
ffffffff8001fb3a: 0f b6 5e 01          	movzx	ebx, byte ptr [rsi + 0x1]
ffffffff8001fb3e: 48 83 c6 02          	add	rsi, 0x2
ffffffff8001fb42: 48 8d 14 18          	lea	rdx, [rax + rbx]
ffffffff8001fb46: 45 38 16             	cmp	byte ptr [r14], r10b
ffffffff8001fb49: 75 45                	jne	0xffffffff8001fb90 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x70>
ffffffff8001fb4b: 48 39 c2             	cmp	rdx, rax
ffffffff8001fb4e: 0f 82 ad 00 00 00    	jb	0xffffffff8001fc01 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xe1>
ffffffff8001fb54: 4c 39 c2             	cmp	rdx, r8
ffffffff8001fb57: 0f 87 b6 00 00 00    	ja	0xffffffff8001fc13 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xf3>
ffffffff8001fb5d: 48 01 c8             	add	rax, rcx
ffffffff8001fb60: 45 31 f6             	xor	r14d, r14d
ffffffff8001fb63: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff8001fb70: 4c 39 f3             	cmp	rbx, r14
ffffffff8001fb73: 74 1d                	je	0xffffffff8001fb92 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x72>
ffffffff8001fb75: 4d 8d 7e 01          	lea	r15, [r14 + 0x1]
ffffffff8001fb79: 42 38 3c 30          	cmp	byte ptr [rax + r14], dil
ffffffff8001fb7d: 4d 89 fe             	mov	r14, r15
ffffffff8001fb80: 75 ee                	jne	0xffffffff8001fb70 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x50>
ffffffff8001fb82: eb 6f                	jmp	0xffffffff8001fbf3 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd3>
ffffffff8001fb84: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff8001fb90: 77 08                	ja	0xffffffff8001fb9a <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x7a>
ffffffff8001fb92: 48 89 d0             	mov	rax, rdx
ffffffff8001fb95: 4c 39 de             	cmp	rsi, r11
ffffffff8001fb98: 75 9d                	jne	0xffffffff8001fb37 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x17>
ffffffff8001fb9a: 48 8b 4c 24 20       	mov	rcx, qword ptr [rsp + 0x20]
ffffffff8001fb9f: 48 85 c9             	test	rcx, rcx
ffffffff8001fba2: 74 53                	je	0xffffffff8001fbf7 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd7>
ffffffff8001fba4: 4c 01 c9             	add	rcx, r9
ffffffff8001fba7: 0f b7 d7             	movzx	edx, di
ffffffff8001fbaa: b0 01                	mov	al, 0x1
ffffffff8001fbac: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff8001fbb0: 49 8d 79 01          	lea	rdi, [r9 + 0x1]
ffffffff8001fbb4: 41 0f be 31          	movsx	esi, byte ptr [r9]
ffffffff8001fbb8: 85 f6                	test	esi, esi
ffffffff8001fbba: 78 14                	js	0xffffffff8001fbd0 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xb0>
ffffffff8001fbbc: 49 89 f9             	mov	r9, rdi
ffffffff8001fbbf: 29 f2                	sub	edx, esi
ffffffff8001fbc1: 79 27                	jns	0xffffffff8001fbea <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xca>
ffffffff8001fbc3: eb 34                	jmp	0xffffffff8001fbf9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001fbc5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nop	word ptr cs:[rax + rax]
ffffffff8001fbd0: 48 39 cf             	cmp	rdi, rcx
ffffffff8001fbd3: 74 50                	je	0xffffffff8001fc25 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x105>
ffffffff8001fbd5: 41 0f b6 79 01       	movzx	edi, byte ptr [r9 + 0x1]
ffffffff8001fbda: 49 83 c1 02          	add	r9, 0x2
ffffffff8001fbde: 83 e6 7f             	and	esi, 0x7f
ffffffff8001fbe1: c1 e6 08             	shl	esi, 0x8
ffffffff8001fbe4: 09 fe                	or	esi, edi
ffffffff8001fbe6: 29 f2                	sub	edx, esi
ffffffff8001fbe8: 78 0f                	js	0xffffffff8001fbf9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001fbea: 34 01                	xor	al, 0x1
ffffffff8001fbec: 49 39 c9             	cmp	r9, rcx
ffffffff8001fbef: 75 bf                	jne	0xffffffff8001fbb0 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x90>
ffffffff8001fbf1: eb 06                	jmp	0xffffffff8001fbf9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001fbf3: 31 c0                	xor	eax, eax
ffffffff8001fbf5: eb 02                	jmp	0xffffffff8001fbf9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001fbf7: b0 01                	mov	al, 0x1
ffffffff8001fbf9: 24 01                	and	al, 0x1
ffffffff8001fbfb: 5b                   	pop	rbx
ffffffff8001fbfc: 41 5e                	pop	r14
ffffffff8001fbfe: 41 5f                	pop	r15
ffffffff8001fc00: c3                   	ret
ffffffff8001fc01: 48 89 c7             	mov	rdi, rax
ffffffff8001fc04: 48 89 d6             	mov	rsi, rdx
ffffffff8001fc07: 48 c7 c2 00 9b 02 80 	mov	rdx, -0x7ffd6500
ffffffff8001fc0e: e8 fd 0f 00 00       	call	0xffffffff80020c10 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff8001fc13: 48 89 d7             	mov	rdi, rdx
ffffffff8001fc16: 4c 89 c6             	mov	rsi, r8
ffffffff8001fc19: 48 c7 c2 00 9b 02 80 	mov	rdx, -0x7ffd6500
ffffffff8001fc20: e8 db 0f 00 00       	call	0xffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8001fc25: 48 c7 c7 e8 9a 02 80 	mov	rdi, -0x7ffd6518
ffffffff8001fc2c: e8 0f 1a 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8001fc31: cc                   	int3
ffffffff8001fc32: cc                   	int3
ffffffff8001fc33: cc                   	int3
ffffffff8001fc34: cc                   	int3
ffffffff8001fc35: cc                   	int3
ffffffff8001fc36: cc                   	int3
ffffffff8001fc37: cc                   	int3
ffffffff8001fc38: cc                   	int3
ffffffff8001fc39: cc                   	int3
ffffffff8001fc3a: cc                   	int3
ffffffff8001fc3b: cc                   	int3
ffffffff8001fc3c: cc                   	int3
ffffffff8001fc3d: cc                   	int3
ffffffff8001fc3e: cc                   	int3
ffffffff8001fc3f: cc                   	int3

ffffffff8001fc40 <core::unicode::printable::is_printable::hdd600e6e9a348a8e>:
ffffffff8001fc40: 50                   	push	rax
ffffffff8001fc41: 83 ff 20             	cmp	edi, 0x20
ffffffff8001fc44: 73 04                	jae	0xffffffff8001fc4a <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0xa>
ffffffff8001fc46: 31 c0                	xor	eax, eax
ffffffff8001fc48: 59                   	pop	rcx
ffffffff8001fc49: c3                   	ret
ffffffff8001fc4a: b0 01                	mov	al, 0x1
ffffffff8001fc4c: 83 ff 7f             	cmp	edi, 0x7f
ffffffff8001fc4f: 73 02                	jae	0xffffffff8001fc53 <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x13>
ffffffff8001fc51: 59                   	pop	rcx
ffffffff8001fc52: c3                   	ret
ffffffff8001fc53: 81 ff 00 00 01 00    	cmp	edi, 0x10000
ffffffff8001fc59: 73 2f                	jae	0xffffffff8001fc8a <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x4a>
ffffffff8001fc5b: 48 c7 04 24 29 01 00 00      	mov	qword ptr [rsp], 0x129
ffffffff8001fc63: ba 28 00 00 00       	mov	edx, 0x28
ffffffff8001fc68: 41 b8 22 01 00 00    	mov	r8d, 0x122
ffffffff8001fc6e: 48 c7 c6 26 9e 02 80 	mov	rsi, -0x7ffd61da
ffffffff8001fc75: 48 c7 c1 76 9e 02 80 	mov	rcx, -0x7ffd618a
ffffffff8001fc7c: 49 c7 c1 98 9f 02 80 	mov	r9, -0x7ffd6068
ffffffff8001fc83: e8 98 fe ff ff       	call	0xffffffff8001fb20 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>
ffffffff8001fc88: 59                   	pop	rcx
ffffffff8001fc89: c3                   	ret
ffffffff8001fc8a: 81 ff 00 00 02 00    	cmp	edi, 0x20000
ffffffff8001fc90: 73 2f                	jae	0xffffffff8001fcc1 <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x81>
ffffffff8001fc92: 48 c7 04 24 e6 01 00 00      	mov	qword ptr [rsp], 0x1e6
ffffffff8001fc9a: ba 2c 00 00 00       	mov	edx, 0x2c
ffffffff8001fc9f: 41 b8 d0 00 00 00    	mov	r8d, 0xd0
ffffffff8001fca5: 48 c7 c6 18 9b 02 80 	mov	rsi, -0x7ffd64e8
ffffffff8001fcac: 48 c7 c1 70 9b 02 80 	mov	rcx, -0x7ffd6490
ffffffff8001fcb3: 49 c7 c1 40 9c 02 80 	mov	r9, -0x7ffd63c0
ffffffff8001fcba: e8 61 fe ff ff       	call	0xffffffff8001fb20 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>
ffffffff8001fcbf: 59                   	pop	rcx
ffffffff8001fcc0: c3                   	ret
ffffffff8001fcc1: 89 f8                	mov	eax, edi
ffffffff8001fcc3: 25 e0 ff 1f 00       	and	eax, 0x1fffe0
ffffffff8001fcc8: 3d e0 a6 02 00       	cmp	eax, 0x2a6e0
ffffffff8001fccd: 0f 95 c0             	setne	al
ffffffff8001fcd0: 8d 8f c0 48 fd ff    	lea	ecx, [rdi - 0x2b740]
ffffffff8001fcd6: 83 f9 fa             	cmp	ecx, -0x6
ffffffff8001fcd9: 0f 92 c1             	setb	cl
ffffffff8001fcdc: 89 fa                	mov	edx, edi
ffffffff8001fcde: 81 e2 fe ff 1f 00    	and	edx, 0x1ffffe
ffffffff8001fce4: 81 fa 1e b8 02 00    	cmp	edx, 0x2b81e
ffffffff8001fcea: 0f 95 c2             	setne	dl
ffffffff8001fced: 20 c2                	and	dl, al
ffffffff8001fcef: 8d 87 50 31 fd ff    	lea	eax, [rdi - 0x2ceb0]
ffffffff8001fcf5: 83 f8 f2             	cmp	eax, -0xe
ffffffff8001fcf8: 0f 92 c0             	setb	al
ffffffff8001fcfb: 20 c8                	and	al, cl
ffffffff8001fcfd: 20 d0                	and	al, dl
ffffffff8001fcff: 8d 8f 10 14 fd ff    	lea	ecx, [rdi - 0x2ebf0]
ffffffff8001fd05: 83 f9 f1             	cmp	ecx, -0xf
ffffffff8001fd08: 0f 92 c1             	setb	cl
ffffffff8001fd0b: 8d 97 00 08 fd ff    	lea	edx, [rdi - 0x2f800]
ffffffff8001fd11: 81 fa 5e f6 ff ff    	cmp	edx, 0xfffff65e
ffffffff8001fd17: 0f 92 c2             	setb	dl
ffffffff8001fd1a: 20 ca                	and	dl, cl
ffffffff8001fd1c: 8d 8f 00 00 fd ff    	lea	ecx, [rdi - 0x30000]
ffffffff8001fd22: 81 f9 1e fa ff ff    	cmp	ecx, 0xfffffa1e
ffffffff8001fd28: 0f 92 c1             	setb	cl
ffffffff8001fd2b: 20 d1                	and	cl, dl
ffffffff8001fd2d: 20 c1                	and	cl, al
ffffffff8001fd2f: 8d 87 b0 ec fc ff    	lea	eax, [rdi - 0x31350]
ffffffff8001fd35: 83 f8 fb             	cmp	eax, -0x5
ffffffff8001fd38: 0f 92 c0             	setb	al
ffffffff8001fd3b: 8d 97 00 ff f1 ff    	lea	edx, [rdi - 0xe0100]
ffffffff8001fd41: 81 fa b0 22 f5 ff    	cmp	edx, 0xfff522b0
ffffffff8001fd47: 0f 92 c2             	setb	dl
ffffffff8001fd4a: 20 c2                	and	dl, al
ffffffff8001fd4c: 81 ff f0 01 0e 00    	cmp	edi, 0xe01f0
ffffffff8001fd52: 0f 92 c0             	setb	al
ffffffff8001fd55: 20 d0                	and	al, dl
ffffffff8001fd57: 20 c8                	and	al, cl
ffffffff8001fd59: 59                   	pop	rcx
ffffffff8001fd5a: c3                   	ret
ffffffff8001fd5b: cc                   	int3
ffffffff8001fd5c: cc                   	int3
ffffffff8001fd5d: cc                   	int3
ffffffff8001fd5e: cc                   	int3
ffffffff8001fd5f: cc                   	int3

ffffffff8001fd60 <core::panicking::panic_const::panic_const_div_by_zero::h64ab67691243fe14>:
ffffffff8001fd60: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001fd64: 48 89 fe             	mov	rsi, rdi
ffffffff8001fd67: 48 c7 44 24 08 e0 a0 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd5f20
ffffffff8001fd70: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001fd79: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001fd82: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001fd8b: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001fd94: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001fd99: e8 d2 12 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001fd9e: cc                   	int3
ffffffff8001fd9f: cc                   	int3

ffffffff8001fda0 <core::panicking::panic_const::panic_const_async_fn_resumed::hdbc599b673c0925f>:
ffffffff8001fda0: 48 83 ec 38          	sub	rsp, 0x38
ffffffff8001fda4: 48 89 fe             	mov	rsi, rdi
ffffffff8001fda7: 48 c7 44 24 08 18 a1 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd5ee8
ffffffff8001fdb0: 48 c7 44 24 10 01 00 00 00   	mov	qword ptr [rsp + 0x10], 0x1
ffffffff8001fdb9: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 0x28], 0x0
ffffffff8001fdc2: 48 c7 44 24 18 08 00 00 00   	mov	qword ptr [rsp + 0x18], 0x8
ffffffff8001fdcb: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 0x20], 0x0
ffffffff8001fdd4: 48 8d 7c 24 08       	lea	rdi, [rsp + 0x8]
ffffffff8001fdd9: e8 92 12 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001fdde: cc                   	int3
ffffffff8001fddf: cc                   	int3

ffffffff8001fde0 <core::str::count::do_count_chars::h06cfda6302d02fdc>:
ffffffff8001fde0: 4c 8d 4f 07          	lea	r9, [rdi + 0x7]
ffffffff8001fde4: 49 83 e1 f8          	and	r9, -0x8
ffffffff8001fde8: 4c 89 c8             	mov	rax, r9
ffffffff8001fdeb: 48 29 f8             	sub	rax, rdi
ffffffff8001fdee: 48 89 f1             	mov	rcx, rsi
ffffffff8001fdf1: 48 29 c1             	sub	rcx, rax
ffffffff8001fdf4: 73 19                	jae	0xffffffff8001fe0f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x2f>
ffffffff8001fdf6: 48 85 f6             	test	rsi, rsi
ffffffff8001fdf9: 74 55                	je	0xffffffff8001fe50 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x70>
ffffffff8001fdfb: 89 f1                	mov	ecx, esi
ffffffff8001fdfd: 83 e1 03             	and	ecx, 0x3
ffffffff8001fe00: 48 83 fe 04          	cmp	rsi, 0x4
ffffffff8001fe04: 73 4d                	jae	0xffffffff8001fe53 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x73>
ffffffff8001fe06: 31 c0                	xor	eax, eax
ffffffff8001fe08: 31 d2                	xor	edx, edx
ffffffff8001fe0a: e9 91 00 00 00       	jmp	0xffffffff8001fea0 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xc0>
ffffffff8001fe0f: 48 83 f9 08          	cmp	rcx, 0x8
ffffffff8001fe13: 72 e1                	jb	0xffffffff8001fdf6 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x16>
ffffffff8001fe15: 41 57                	push	r15
ffffffff8001fe17: 41 56                	push	r14
ffffffff8001fe19: 41 55                	push	r13
ffffffff8001fe1b: 41 54                	push	r12
ffffffff8001fe1d: 53                   	push	rbx
ffffffff8001fe1e: 89 ca                	mov	edx, ecx
ffffffff8001fe20: 83 e2 07             	and	edx, 0x7
ffffffff8001fe23: 49 39 f9             	cmp	r9, rdi
ffffffff8001fe26: 75 07                	jne	0xffffffff8001fe2f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x4f>
ffffffff8001fe28: 31 f6                	xor	esi, esi
ffffffff8001fe2a: e9 18 01 00 00       	jmp	0xffffffff8001ff47 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x167>
ffffffff8001fe2f: 41 89 c0             	mov	r8d, eax
ffffffff8001fe32: 41 83 e0 03          	and	r8d, 0x3
ffffffff8001fe36: 48 89 fe             	mov	rsi, rdi
ffffffff8001fe39: 4c 29 ce             	sub	rsi, r9
ffffffff8001fe3c: 48 83 fe fc          	cmp	rsi, -0x4
ffffffff8001fe40: 0f 86 80 00 00 00    	jbe	0xffffffff8001fec6 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xe6>
ffffffff8001fe46: 31 f6                	xor	esi, esi
ffffffff8001fe48: 45 31 c9             	xor	r9d, r9d
ffffffff8001fe4b: e9 d4 00 00 00       	jmp	0xffffffff8001ff24 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x144>
ffffffff8001fe50: 31 c0                	xor	eax, eax
ffffffff8001fe52: c3                   	ret
ffffffff8001fe53: 48 83 e6 fc          	and	rsi, -0x4
ffffffff8001fe57: 31 c0                	xor	eax, eax
ffffffff8001fe59: 31 d2                	xor	edx, edx
ffffffff8001fe5b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff8001fe60: 45 31 c0             	xor	r8d, r8d
ffffffff8001fe63: 80 3c 17 c0          	cmp	byte ptr [rdi + rdx], -0x40
ffffffff8001fe67: 41 0f 9d c0          	setge	r8b
ffffffff8001fe6b: 49 01 c0             	add	r8, rax
ffffffff8001fe6e: 31 c0                	xor	eax, eax
ffffffff8001fe70: 80 7c 17 01 c0       	cmp	byte ptr [rdi + rdx + 0x1], -0x40
ffffffff8001fe75: 0f 9d c0             	setge	al
ffffffff8001fe78: 45 31 c9             	xor	r9d, r9d
ffffffff8001fe7b: 80 7c 17 02 c0       	cmp	byte ptr [rdi + rdx + 0x2], -0x40
ffffffff8001fe80: 41 0f 9d c1          	setge	r9b
ffffffff8001fe84: 49 01 c1             	add	r9, rax
ffffffff8001fe87: 4d 01 c1             	add	r9, r8
ffffffff8001fe8a: 31 c0                	xor	eax, eax
ffffffff8001fe8c: 80 7c 17 03 c0       	cmp	byte ptr [rdi + rdx + 0x3], -0x40
ffffffff8001fe91: 0f 9d c0             	setge	al
ffffffff8001fe94: 4c 01 c8             	add	rax, r9
ffffffff8001fe97: 48 83 c2 04          	add	rdx, 0x4
ffffffff8001fe9b: 48 39 d6             	cmp	rsi, rdx
ffffffff8001fe9e: 75 c0                	jne	0xffffffff8001fe60 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x80>
ffffffff8001fea0: 48 85 c9             	test	rcx, rcx
ffffffff8001fea3: 74 20                	je	0xffffffff8001fec5 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xe5>
ffffffff8001fea5: 48 01 d7             	add	rdi, rdx
ffffffff8001fea8: 31 d2                	xor	edx, edx
ffffffff8001feaa: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff8001feb0: 31 f6                	xor	esi, esi
ffffffff8001feb2: 80 3c 17 c0          	cmp	byte ptr [rdi + rdx], -0x40
ffffffff8001feb6: 40 0f 9d c6          	setge	sil
ffffffff8001feba: 48 01 f0             	add	rax, rsi
ffffffff8001febd: 48 ff c2             	inc	rdx
ffffffff8001fec0: 48 39 d1             	cmp	rcx, rdx
ffffffff8001fec3: 75 eb                	jne	0xffffffff8001feb0 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xd0>
ffffffff8001fec5: c3                   	ret
ffffffff8001fec6: 41 89 c2             	mov	r10d, eax
ffffffff8001fec9: 41 83 e2 04          	and	r10d, 0x4
ffffffff8001fecd: 31 f6                	xor	esi, esi
ffffffff8001fecf: 45 31 c9             	xor	r9d, r9d
ffffffff8001fed2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff8001fee0: 45 31 db             	xor	r11d, r11d
ffffffff8001fee3: 42 80 3c 0f c0       	cmp	byte ptr [rdi + r9], -0x40
ffffffff8001fee8: 41 0f 9d c3          	setge	r11b
ffffffff8001feec: 49 01 f3             	add	r11, rsi
ffffffff8001feef: 31 f6                	xor	esi, esi
ffffffff8001fef1: 42 80 7c 0f 01 c0    	cmp	byte ptr [rdi + r9 + 0x1], -0x40
ffffffff8001fef7: 40 0f 9d c6          	setge	sil
ffffffff8001fefb: 31 db                	xor	ebx, ebx
ffffffff8001fefd: 42 80 7c 0f 02 c0    	cmp	byte ptr [rdi + r9 + 0x2], -0x40
ffffffff8001ff03: 0f 9d c3             	setge	bl
ffffffff8001ff06: 48 01 f3             	add	rbx, rsi
ffffffff8001ff09: 4c 01 db             	add	rbx, r11
ffffffff8001ff0c: 31 f6                	xor	esi, esi
ffffffff8001ff0e: 42 80 7c 0f 03 c0    	cmp	byte ptr [rdi + r9 + 0x3], -0x40
ffffffff8001ff14: 40 0f 9d c6          	setge	sil
ffffffff8001ff18: 48 01 de             	add	rsi, rbx
ffffffff8001ff1b: 49 83 c1 04          	add	r9, 0x4
ffffffff8001ff1f: 4d 39 ca             	cmp	r10, r9
ffffffff8001ff22: 75 bc                	jne	0xffffffff8001fee0 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x100>
ffffffff8001ff24: 4d 85 c0             	test	r8, r8
ffffffff8001ff27: 74 1e                	je	0xffffffff8001ff47 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x167>
ffffffff8001ff29: 49 01 f9             	add	r9, rdi
ffffffff8001ff2c: 45 31 d2             	xor	r10d, r10d
ffffffff8001ff2f: 90                   	nop
ffffffff8001ff30: 45 31 db             	xor	r11d, r11d
ffffffff8001ff33: 43 80 3c 11 c0       	cmp	byte ptr [r9 + r10], -0x40
ffffffff8001ff38: 41 0f 9d c3          	setge	r11b
ffffffff8001ff3c: 4c 01 de             	add	rsi, r11
ffffffff8001ff3f: 49 ff c2             	inc	r10
ffffffff8001ff42: 4d 39 d0             	cmp	r8, r10
ffffffff8001ff45: 75 e9                	jne	0xffffffff8001ff30 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x150>
ffffffff8001ff47: 48 01 c7             	add	rdi, rax
ffffffff8001ff4a: 48 85 d2             	test	rdx, rdx
ffffffff8001ff4d: 0f 84 8f 00 00 00    	je	0xffffffff8001ffe2 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x202>
ffffffff8001ff53: 49 89 c8             	mov	r8, rcx
ffffffff8001ff56: 49 83 e0 f8          	and	r8, -0x8
ffffffff8001ff5a: 31 c0                	xor	eax, eax
ffffffff8001ff5c: 42 80 3c 07 c0       	cmp	byte ptr [rdi + r8], -0x40
ffffffff8001ff61: 0f 9d c0             	setge	al
ffffffff8001ff64: 83 fa 01             	cmp	edx, 0x1
ffffffff8001ff67: 74 7b                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ff69: 45 31 c9             	xor	r9d, r9d
ffffffff8001ff6c: 42 80 7c 07 01 c0    	cmp	byte ptr [rdi + r8 + 0x1], -0x40
ffffffff8001ff72: 41 0f 9d c1          	setge	r9b
ffffffff8001ff76: 4c 01 c8             	add	rax, r9
ffffffff8001ff79: 83 fa 02             	cmp	edx, 0x2
ffffffff8001ff7c: 74 66                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ff7e: 45 31 c9             	xor	r9d, r9d
ffffffff8001ff81: 42 80 7c 07 02 c0    	cmp	byte ptr [rdi + r8 + 0x2], -0x40
ffffffff8001ff87: 41 0f 9d c1          	setge	r9b
ffffffff8001ff8b: 4c 01 c8             	add	rax, r9
ffffffff8001ff8e: 83 fa 03             	cmp	edx, 0x3
ffffffff8001ff91: 74 51                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ff93: 45 31 c9             	xor	r9d, r9d
ffffffff8001ff96: 42 80 7c 07 03 c0    	cmp	byte ptr [rdi + r8 + 0x3], -0x40
ffffffff8001ff9c: 41 0f 9d c1          	setge	r9b
ffffffff8001ffa0: 4c 01 c8             	add	rax, r9
ffffffff8001ffa3: 83 fa 04             	cmp	edx, 0x4
ffffffff8001ffa6: 74 3c                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ffa8: 45 31 c9             	xor	r9d, r9d
ffffffff8001ffab: 42 80 7c 07 04 c0    	cmp	byte ptr [rdi + r8 + 0x4], -0x40
ffffffff8001ffb1: 41 0f 9d c1          	setge	r9b
ffffffff8001ffb5: 4c 01 c8             	add	rax, r9
ffffffff8001ffb8: 83 fa 05             	cmp	edx, 0x5
ffffffff8001ffbb: 74 27                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ffbd: 45 31 c9             	xor	r9d, r9d
ffffffff8001ffc0: 42 80 7c 07 05 c0    	cmp	byte ptr [rdi + r8 + 0x5], -0x40
ffffffff8001ffc6: 41 0f 9d c1          	setge	r9b
ffffffff8001ffca: 4c 01 c8             	add	rax, r9
ffffffff8001ffcd: 83 fa 06             	cmp	edx, 0x6
ffffffff8001ffd0: 74 12                	je	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ffd2: 31 d2                	xor	edx, edx
ffffffff8001ffd4: 42 80 7c 07 06 c0    	cmp	byte ptr [rdi + r8 + 0x6], -0x40
ffffffff8001ffda: 0f 9d c2             	setge	dl
ffffffff8001ffdd: 48 01 d0             	add	rax, rdx
ffffffff8001ffe0: eb 02                	jmp	0xffffffff8001ffe4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001ffe2: 31 c0                	xor	eax, eax
ffffffff8001ffe4: 48 01 f0             	add	rax, rsi
ffffffff8001ffe7: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff8001ffeb: 49 b8 01 01 01 01 01 01 01 01	movabs	r8, 0x101010101010101
ffffffff8001fff5: 48 be ff 00 ff 00 ff 00 ff 00	movabs	rsi, 0xff00ff00ff00ff
ffffffff8001ffff: 48 ba 01 00 01 00 01 00 01 00	movabs	rdx, 0x1000100010001
ffffffff80020009: eb 38                	jmp	0xffffffff80020043 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x263>
ffffffff8002000b: 0f 1f 44 00 00       	nop	dword ptr [rax + rax]
ffffffff80020010: 31 db                	xor	ebx, ebx
ffffffff80020012: 4c 01 cf             	add	rdi, r9
ffffffff80020015: 4c 29 d1             	sub	rcx, r10
ffffffff80020018: 45 89 d3             	mov	r11d, r10d
ffffffff8002001b: 41 83 e3 03          	and	r11d, 0x3
ffffffff8002001f: 49 89 de             	mov	r14, rbx
ffffffff80020022: 49 21 f6             	and	r14, rsi
ffffffff80020025: 48 c1 eb 08          	shr	rbx, 0x8
ffffffff80020029: 48 21 f3             	and	rbx, rsi
ffffffff8002002c: 4c 01 f3             	add	rbx, r14
ffffffff8002002f: 48 0f af da          	imul	rbx, rdx
ffffffff80020033: 48 c1 eb 30          	shr	rbx, 0x30
ffffffff80020037: 48 01 d8             	add	rax, rbx
ffffffff8002003a: 4d 85 db             	test	r11, r11
ffffffff8002003d: 0f 85 b6 00 00 00    	jne	0xffffffff800200f9 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x319>
ffffffff80020043: 48 85 c9             	test	rcx, rcx
ffffffff80020046: 0f 84 2e 01 00 00    	je	0xffffffff8002017a <core::str::count::do_count_chars::h06cfda6302d02fdc+0x39a>
ffffffff8002004c: 49 89 f9             	mov	r9, rdi
ffffffff8002004f: 48 81 f9 c0 00 00 00 	cmp	rcx, 0xc0
ffffffff80020056: 41 ba c0 00 00 00    	mov	r10d, 0xc0
ffffffff8002005c: 4c 0f 42 d1          	cmovb	r10, rcx
ffffffff80020060: 42 8d 3c d5 00 00 00 00      	lea	edi, [8*r10]
ffffffff80020068: 48 83 f9 04          	cmp	rcx, 0x4
ffffffff8002006c: 72 a2                	jb	0xffffffff80020010 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x230>
ffffffff8002006e: 41 89 fb             	mov	r11d, edi
ffffffff80020071: 41 81 e3 e0 07 00 00 	and	r11d, 0x7e0
ffffffff80020078: 4d 01 cb             	add	r11, r9
ffffffff8002007b: 31 db                	xor	ebx, ebx
ffffffff8002007d: 4d 89 ce             	mov	r14, r9
ffffffff80020080: 4d 8b 3e             	mov	r15, qword ptr [r14]
ffffffff80020083: 4d 8b 66 08          	mov	r12, qword ptr [r14 + 0x8]
ffffffff80020087: 4d 89 fd             	mov	r13, r15
ffffffff8002008a: 49 f7 d5             	not	r13
ffffffff8002008d: 49 c1 ed 07          	shr	r13, 0x7
ffffffff80020091: 49 c1 ef 06          	shr	r15, 0x6
ffffffff80020095: 4d 09 ef             	or	r15, r13
ffffffff80020098: 4d 21 c7             	and	r15, r8
ffffffff8002009b: 49 01 df             	add	r15, rbx
ffffffff8002009e: 4c 89 e3             	mov	rbx, r12
ffffffff800200a1: 48 f7 d3             	not	rbx
ffffffff800200a4: 48 c1 eb 07          	shr	rbx, 0x7
ffffffff800200a8: 49 c1 ec 06          	shr	r12, 0x6
ffffffff800200ac: 49 09 dc             	or	r12, rbx
ffffffff800200af: 4d 21 c4             	and	r12, r8
ffffffff800200b2: 4d 8b 6e 10          	mov	r13, qword ptr [r14 + 0x10]
ffffffff800200b6: 4c 89 eb             	mov	rbx, r13
ffffffff800200b9: 48 f7 d3             	not	rbx
ffffffff800200bc: 48 c1 eb 07          	shr	rbx, 0x7
ffffffff800200c0: 49 c1 ed 06          	shr	r13, 0x6
ffffffff800200c4: 49 09 dd             	or	r13, rbx
ffffffff800200c7: 4d 21 c5             	and	r13, r8
ffffffff800200ca: 4d 01 e5             	add	r13, r12
ffffffff800200cd: 4d 01 fd             	add	r13, r15
ffffffff800200d0: 49 8b 5e 18          	mov	rbx, qword ptr [r14 + 0x18]
ffffffff800200d4: 49 89 df             	mov	r15, rbx
ffffffff800200d7: 49 f7 d7             	not	r15
ffffffff800200da: 49 c1 ef 07          	shr	r15, 0x7
ffffffff800200de: 48 c1 eb 06          	shr	rbx, 0x6
ffffffff800200e2: 4c 09 fb             	or	rbx, r15
ffffffff800200e5: 4c 21 c3             	and	rbx, r8
ffffffff800200e8: 4c 01 eb             	add	rbx, r13
ffffffff800200eb: 49 83 c6 20          	add	r14, 0x20
ffffffff800200ef: 4d 39 de             	cmp	r14, r11
ffffffff800200f2: 75 8c                	jne	0xffffffff80020080 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x2a0>
ffffffff800200f4: e9 19 ff ff ff       	jmp	0xffffffff80020012 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x232>
ffffffff800200f9: 41 81 e2 fc 00 00 00 	and	r10d, 0xfc
ffffffff80020100: 44 89 d1             	mov	ecx, r10d
ffffffff80020103: 49 8b 0c c9          	mov	rcx, qword ptr [r9 + 8*rcx]
ffffffff80020107: 48 89 cf             	mov	rdi, rcx
ffffffff8002010a: 48 f7 d7             	not	rdi
ffffffff8002010d: 48 c1 ef 07          	shr	rdi, 0x7
ffffffff80020111: 48 c1 e9 06          	shr	rcx, 0x6
ffffffff80020115: 48 09 f9             	or	rcx, rdi
ffffffff80020118: 4c 21 c1             	and	rcx, r8
ffffffff8002011b: 41 83 fb 01          	cmp	r11d, 0x1
ffffffff8002011f: 74 3e                	je	0xffffffff8002015f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x37f>
ffffffff80020121: 4b 8b 7c d1 08       	mov	rdi, qword ptr [r9 + 8*r10 + 0x8]
ffffffff80020126: 48 89 fb             	mov	rbx, rdi
ffffffff80020129: 48 f7 d3             	not	rbx
ffffffff8002012c: 48 c1 eb 07          	shr	rbx, 0x7
ffffffff80020130: 48 c1 ef 06          	shr	rdi, 0x6
ffffffff80020134: 48 09 df             	or	rdi, rbx
ffffffff80020137: 4c 21 c7             	and	rdi, r8
ffffffff8002013a: 48 01 f9             	add	rcx, rdi
ffffffff8002013d: 41 83 fb 02          	cmp	r11d, 0x2
ffffffff80020141: 74 1c                	je	0xffffffff8002015f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x37f>
ffffffff80020143: 4b 8b 7c d1 10       	mov	rdi, qword ptr [r9 + 8*r10 + 0x10]
ffffffff80020148: 49 89 f9             	mov	r9, rdi
ffffffff8002014b: 49 f7 d1             	not	r9
ffffffff8002014e: 49 c1 e9 07          	shr	r9, 0x7
ffffffff80020152: 48 c1 ef 06          	shr	rdi, 0x6
ffffffff80020156: 4c 09 cf             	or	rdi, r9
ffffffff80020159: 4c 21 c7             	and	rdi, r8
ffffffff8002015c: 48 01 f9             	add	rcx, rdi
ffffffff8002015f: 48 89 cf             	mov	rdi, rcx
ffffffff80020162: 48 21 f7             	and	rdi, rsi
ffffffff80020165: 48 c1 e9 08          	shr	rcx, 0x8
ffffffff80020169: 48 21 f1             	and	rcx, rsi
ffffffff8002016c: 48 01 f9             	add	rcx, rdi
ffffffff8002016f: 48 0f af ca          	imul	rcx, rdx
ffffffff80020173: 48 c1 e9 30          	shr	rcx, 0x30
ffffffff80020177: 48 01 c8             	add	rax, rcx
ffffffff8002017a: 5b                   	pop	rbx
ffffffff8002017b: 41 5c                	pop	r12
ffffffff8002017d: 41 5d                	pop	r13
ffffffff8002017f: 41 5e                	pop	r14
ffffffff80020181: 41 5f                	pop	r15
ffffffff80020183: c3                   	ret
ffffffff80020184: cc                   	int3
ffffffff80020185: cc                   	int3
ffffffff80020186: cc                   	int3
ffffffff80020187: cc                   	int3
ffffffff80020188: cc                   	int3
ffffffff80020189: cc                   	int3
ffffffff8002018a: cc                   	int3
ffffffff8002018b: cc                   	int3
ffffffff8002018c: cc                   	int3
ffffffff8002018d: cc                   	int3
ffffffff8002018e: cc                   	int3
ffffffff8002018f: cc                   	int3

ffffffff80020190 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b>:
ffffffff80020190: 50                   	push	rax
ffffffff80020191: 0f b6 07             	movzx	eax, byte ptr [rdi]
ffffffff80020194: 48 83 f8 64          	cmp	rax, 0x64
ffffffff80020198: 72 28                	jb	0xffffffff800201c2 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x32>
ffffffff8002019a: 0f b6 c8             	movzx	ecx, al
ffffffff8002019d: 8d 14 89             	lea	edx, [rcx + 4*rcx]
ffffffff800201a0: 8d 0c d1             	lea	ecx, [rcx + 8*rdx]
ffffffff800201a3: c1 e9 0c             	shr	ecx, 0xc
ffffffff800201a6: 6b d1 64             	imul	edx, ecx, 0x64
ffffffff800201a9: 28 d0                	sub	al, dl
ffffffff800201ab: 0f b6 c0             	movzx	eax, al
ffffffff800201ae: 0f b7 84 00 6a 97 02 80      	movzx	eax, word ptr [rax + rax - 0x7ffd6896]
ffffffff800201b6: 66 89 44 24 06       	mov	word ptr [rsp + 0x6], ax
ffffffff800201bb: 45 31 c9             	xor	r9d, r9d
ffffffff800201be: 89 c8                	mov	eax, ecx
ffffffff800201c0: eb 0a                	jmp	0xffffffff800201cc <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x3c>
ffffffff800201c2: 41 b9 02 00 00 00    	mov	r9d, 0x2
ffffffff800201c8: 3c 0a                	cmp	al, 0xa
ffffffff800201ca: 73 09                	jae	0xffffffff800201d5 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x45>
ffffffff800201cc: 0c 30                	or	al, 0x30
ffffffff800201ce: 42 88 44 0c 05       	mov	byte ptr [rsp + r9 + 0x5], al
ffffffff800201d3: eb 13                	jmp	0xffffffff800201e8 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x58>
ffffffff800201d5: 0f b7 84 00 6a 97 02 80      	movzx	eax, word ptr [rax + rax - 0x7ffd6896]
ffffffff800201dd: 66 89 44 24 06       	mov	word ptr [rsp + 0x6], ax
ffffffff800201e2: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff800201e8: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff800201ec: 49 83 c0 05          	add	r8, 0x5
ffffffff800201f0: 49 83 f1 03          	xor	r9, 0x3
ffffffff800201f4: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800201f9: 48 89 f7             	mov	rdi, rsi
ffffffff800201fc: be 01 00 00 00       	mov	esi, 0x1
ffffffff80020201: 31 c9                	xor	ecx, ecx
ffffffff80020203: e8 e8 e1 ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80020208: 59                   	pop	rcx
ffffffff80020209: c3                   	ret
ffffffff8002020a: cc                   	int3
ffffffff8002020b: cc                   	int3
ffffffff8002020c: cc                   	int3
ffffffff8002020d: cc                   	int3
ffffffff8002020e: cc                   	int3
ffffffff8002020f: cc                   	int3

ffffffff80020210 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002>:
ffffffff80020210: 50                   	push	rax
ffffffff80020211: 0f b7 07             	movzx	eax, word ptr [rdi]
ffffffff80020214: 3d 10 27 00 00       	cmp	eax, 0x2710
ffffffff80020219: 72 51                	jb	0xffffffff8002026c <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x5c>
ffffffff8002021b: 0f b7 c8             	movzx	ecx, ax
ffffffff8002021e: c1 e9 04             	shr	ecx, 0x4
ffffffff80020221: 69 d1 47 03 00 00    	imul	edx, ecx, 0x347
ffffffff80020227: c1 ea 13             	shr	edx, 0x13
ffffffff8002022a: 69 ca 10 27 00 00    	imul	ecx, edx, 0x2710
ffffffff80020230: 29 c8                	sub	eax, ecx
ffffffff80020232: 0f b7 c8             	movzx	ecx, ax
ffffffff80020235: c1 e9 02             	shr	ecx, 0x2
ffffffff80020238: 69 c9 7b 14 00 00    	imul	ecx, ecx, 0x147b
ffffffff8002023e: c1 e9 11             	shr	ecx, 0x11
ffffffff80020241: 6b f9 64             	imul	edi, ecx, 0x64
ffffffff80020244: 29 f8                	sub	eax, edi
ffffffff80020246: 0f b7 c0             	movzx	eax, ax
ffffffff80020249: 0f b7 8c 09 6a 97 02 80      	movzx	ecx, word ptr [rcx + rcx - 0x7ffd6896]
ffffffff80020251: 66 89 4c 24 04       	mov	word ptr [rsp + 0x4], cx
ffffffff80020256: 0f b7 84 00 6a 97 02 80      	movzx	eax, word ptr [rax + rax - 0x7ffd6896]
ffffffff8002025e: 66 89 44 24 06       	mov	word ptr [rsp + 0x6], ax
ffffffff80020263: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80020268: 89 d0                	mov	eax, edx
ffffffff8002026a: eb 3c                	jmp	0xffffffff800202a8 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x98>
ffffffff8002026c: b9 05 00 00 00       	mov	ecx, 0x5
ffffffff80020271: 66 83 f8 64          	cmp	ax, 0x64
ffffffff80020275: 72 2b                	jb	0xffffffff800202a2 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x92>
ffffffff80020277: 0f b7 c8             	movzx	ecx, ax
ffffffff8002027a: c1 e9 02             	shr	ecx, 0x2
ffffffff8002027d: 69 d1 7b 14 00 00    	imul	edx, ecx, 0x147b
ffffffff80020283: c1 ea 11             	shr	edx, 0x11
ffffffff80020286: 6b ca 64             	imul	ecx, edx, 0x64
ffffffff80020289: 29 c8                	sub	eax, ecx
ffffffff8002028b: 0f b7 c0             	movzx	eax, ax
ffffffff8002028e: 0f b7 84 00 6a 97 02 80      	movzx	eax, word ptr [rax + rax - 0x7ffd6896]
ffffffff80020296: 66 89 44 24 06       	mov	word ptr [rsp + 0x6], ax
ffffffff8002029b: b9 03 00 00 00       	mov	ecx, 0x3
ffffffff800202a0: 89 d0                	mov	eax, edx
ffffffff800202a2: 66 83 f8 0a          	cmp	ax, 0xa
ffffffff800202a6: 73 0b                	jae	0xffffffff800202b3 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0xa3>
ffffffff800202a8: 0c 30                	or	al, 0x30
ffffffff800202aa: 88 44 0c 02          	mov	byte ptr [rsp + rcx + 0x2], al
ffffffff800202ae: 48 ff c9             	dec	rcx
ffffffff800202b1: eb 14                	jmp	0xffffffff800202c7 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0xb7>
ffffffff800202b3: 0f b7 c0             	movzx	eax, ax
ffffffff800202b6: 0f b7 84 00 6a 97 02 80      	movzx	eax, word ptr [rax + rax - 0x7ffd6896]
ffffffff800202be: 66 89 44 0c 01       	mov	word ptr [rsp + rcx + 0x1], ax
ffffffff800202c3: 48 83 c1 fe          	add	rcx, -0x2
ffffffff800202c7: 4c 8d 04 0c          	lea	r8, [rsp + rcx]
ffffffff800202cb: 49 83 c0 03          	add	r8, 0x3
ffffffff800202cf: 41 b9 05 00 00 00    	mov	r9d, 0x5
ffffffff800202d5: 49 29 c9             	sub	r9, rcx
ffffffff800202d8: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800202dd: 48 89 f7             	mov	rdi, rsi
ffffffff800202e0: be 01 00 00 00       	mov	esi, 0x1
ffffffff800202e5: 31 c9                	xor	ecx, ecx
ffffffff800202e7: e8 04 e1 ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff800202ec: 59                   	pop	rcx
ffffffff800202ed: c3                   	ret
ffffffff800202ee: cc                   	int3
ffffffff800202ef: cc                   	int3

ffffffff800202f0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be>:
ffffffff800202f0: 48 83 ec 18          	sub	rsp, 0x18
ffffffff800202f4: 8b 0f                	mov	ecx, dword ptr [rdi]
ffffffff800202f6: b8 0a 00 00 00       	mov	eax, 0xa
ffffffff800202fb: 81 f9 10 27 00 00    	cmp	ecx, 0x2710
ffffffff80020301: 0f 82 b7 00 00 00    	jb	0xffffffff800203be <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xce>
ffffffff80020307: 41 b8 0a 00 00 00    	mov	r8d, 0xa
ffffffff8002030d: ba 59 17 b7 d1       	mov	edx, 0xd1b71759
ffffffff80020312: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nop	word ptr cs:[rax + rax]
ffffffff80020320: 89 cf                	mov	edi, ecx
ffffffff80020322: 48 0f af fa          	imul	rdi, rdx
ffffffff80020326: 48 c1 ef 2d          	shr	rdi, 0x2d
ffffffff8002032a: 69 c7 10 27 00 00    	imul	eax, edi, 0x2710
ffffffff80020330: 41 89 c9             	mov	r9d, ecx
ffffffff80020333: 41 29 c1             	sub	r9d, eax
ffffffff80020336: 45 69 d1 7b 14 00 00 	imul	r10d, r9d, 0x147b
ffffffff8002033d: 41 c1 ea 13          	shr	r10d, 0x13
ffffffff80020341: 41 6b c2 64          	imul	eax, r10d, 0x64
ffffffff80020345: 41 29 c1             	sub	r9d, eax
ffffffff80020348: 45 0f b7 c9          	movzx	r9d, r9w
ffffffff8002034c: 49 8d 40 fc          	lea	rax, [r8 - 0x4]
ffffffff80020350: 47 0f b7 94 12 6a 97 02 80   	movzx	r10d, word ptr [r10 + r10 - 0x7ffd6896]
ffffffff80020359: 66 46 89 54 04 0a    	mov	word ptr [rsp + r8 + 0xa], r10w
ffffffff8002035f: 47 0f b7 8c 09 6a 97 02 80   	movzx	r9d, word ptr [r9 + r9 - 0x7ffd6896]
ffffffff80020368: 66 46 89 4c 04 0c    	mov	word ptr [rsp + r8 + 0xc], r9w
ffffffff8002036e: 49 89 c0             	mov	r8, rax
ffffffff80020371: 81 f9 ff e0 f5 05    	cmp	ecx, 0x5f5e0ff
ffffffff80020377: 89 f9                	mov	ecx, edi
ffffffff80020379: 77 a5                	ja	0xffffffff80020320 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0x30>
ffffffff8002037b: 89 f9                	mov	ecx, edi
ffffffff8002037d: 83 ff 63             	cmp	edi, 0x63
ffffffff80020380: 76 2b                	jbe	0xffffffff800203ad <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xbd>
ffffffff80020382: 0f b7 d1             	movzx	edx, cx
ffffffff80020385: c1 ea 02             	shr	edx, 0x2
ffffffff80020388: 69 d2 7b 14 00 00    	imul	edx, edx, 0x147b
ffffffff8002038e: c1 ea 11             	shr	edx, 0x11
ffffffff80020391: 6b fa 64             	imul	edi, edx, 0x64
ffffffff80020394: 29 f9                	sub	ecx, edi
ffffffff80020396: 0f b7 c9             	movzx	ecx, cx
ffffffff80020399: 0f b7 8c 09 6a 97 02 80      	movzx	ecx, word ptr [rcx + rcx - 0x7ffd6896]
ffffffff800203a1: 66 89 4c 04 0c       	mov	word ptr [rsp + rax + 0xc], cx
ffffffff800203a6: 48 83 c0 fe          	add	rax, -0x2
ffffffff800203aa: 48 89 d1             	mov	rcx, rdx
ffffffff800203ad: 83 f9 0a             	cmp	ecx, 0xa
ffffffff800203b0: 73 17                	jae	0xffffffff800203c9 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xd9>
ffffffff800203b2: 80 c9 30             	or	cl, 0x30
ffffffff800203b5: 88 4c 04 0d          	mov	byte ptr [rsp + rax + 0xd], cl
ffffffff800203b9: 48 ff c8             	dec	rax
ffffffff800203bc: eb 1c                	jmp	0xffffffff800203da <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xea>
ffffffff800203be: 89 cf                	mov	edi, ecx
ffffffff800203c0: 89 f9                	mov	ecx, edi
ffffffff800203c2: 83 ff 63             	cmp	edi, 0x63
ffffffff800203c5: 77 bb                	ja	0xffffffff80020382 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0x92>
ffffffff800203c7: eb e4                	jmp	0xffffffff800203ad <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xbd>
ffffffff800203c9: 0f b7 8c 09 6a 97 02 80      	movzx	ecx, word ptr [rcx + rcx - 0x7ffd6896]
ffffffff800203d1: 66 89 4c 04 0c       	mov	word ptr [rsp + rax + 0xc], cx
ffffffff800203d6: 48 83 c0 fe          	add	rax, -0x2
ffffffff800203da: 4c 8d 04 04          	lea	r8, [rsp + rax]
ffffffff800203de: 49 83 c0 0e          	add	r8, 0xe
ffffffff800203e2: 41 b9 0a 00 00 00    	mov	r9d, 0xa
ffffffff800203e8: 49 29 c1             	sub	r9, rax
ffffffff800203eb: ba 01 00 00 00       	mov	edx, 0x1
ffffffff800203f0: 48 89 f7             	mov	rdi, rsi
ffffffff800203f3: be 01 00 00 00       	mov	esi, 0x1
ffffffff800203f8: 31 c9                	xor	ecx, ecx
ffffffff800203fa: e8 f1 df ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff800203ff: 48 83 c4 18          	add	rsp, 0x18
ffffffff80020403: c3                   	ret
ffffffff80020404: cc                   	int3
ffffffff80020405: cc                   	int3
ffffffff80020406: cc                   	int3
ffffffff80020407: cc                   	int3
ffffffff80020408: cc                   	int3
ffffffff80020409: cc                   	int3
ffffffff8002040a: cc                   	int3
ffffffff8002040b: cc                   	int3
ffffffff8002040c: cc                   	int3
ffffffff8002040d: cc                   	int3
ffffffff8002040e: cc                   	int3
ffffffff8002040f: cc                   	int3

ffffffff80020410 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>:
ffffffff80020410: 48 83 ec 18          	sub	rsp, 0x18
ffffffff80020414: 48 8b 0f             	mov	rcx, qword ptr [rdi]
ffffffff80020417: b8 14 00 00 00       	mov	eax, 0x14
ffffffff8002041c: 48 81 f9 10 27 00 00 	cmp	rcx, 0x2710
ffffffff80020423: 0f 82 b6 00 00 00    	jb	0xffffffff800204df <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xcf>
ffffffff80020429: 41 b8 14 00 00 00    	mov	r8d, 0x14
ffffffff8002042f: 48 bf 4b 59 86 38 d6 c5 6d 34	movabs	rdi, 0x346dc5d63886594b
ffffffff80020439: 0f 1f 80 00 00 00 00 	nop	dword ptr [rax]
ffffffff80020440: 48 89 c8             	mov	rax, rcx
ffffffff80020443: 48 f7 e7             	mul	rdi
ffffffff80020446: 48 c1 ea 0b          	shr	rdx, 0xb
ffffffff8002044a: 69 c2 10 27 00 00    	imul	eax, edx, 0x2710
ffffffff80020450: 41 89 c9             	mov	r9d, ecx
ffffffff80020453: 41 29 c1             	sub	r9d, eax
ffffffff80020456: 45 69 d1 7b 14 00 00 	imul	r10d, r9d, 0x147b
ffffffff8002045d: 41 c1 ea 13          	shr	r10d, 0x13
ffffffff80020461: 41 6b c2 64          	imul	eax, r10d, 0x64
ffffffff80020465: 41 29 c1             	sub	r9d, eax
ffffffff80020468: 45 0f b7 c9          	movzx	r9d, r9w
ffffffff8002046c: 49 8d 40 fc          	lea	rax, [r8 - 0x4]
ffffffff80020470: 47 0f b7 94 12 6a 97 02 80   	movzx	r10d, word ptr [r10 + r10 - 0x7ffd6896]
ffffffff80020479: 66 46 89 14 04       	mov	word ptr [rsp + r8], r10w
ffffffff8002047e: 47 0f b7 8c 09 6a 97 02 80   	movzx	r9d, word ptr [r9 + r9 - 0x7ffd6896]
ffffffff80020487: 66 46 89 4c 04 02    	mov	word ptr [rsp + r8 + 0x2], r9w
ffffffff8002048d: 49 89 c0             	mov	r8, rax
ffffffff80020490: 48 81 f9 ff e0 f5 05 	cmp	rcx, 0x5f5e0ff
ffffffff80020497: 48 89 d1             	mov	rcx, rdx
ffffffff8002049a: 77 a4                	ja	0xffffffff80020440 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0x30>
ffffffff8002049c: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff800204a0: 76 2b                	jbe	0xffffffff800204cd <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xbd>
ffffffff800204a2: 0f b7 ca             	movzx	ecx, dx
ffffffff800204a5: c1 e9 02             	shr	ecx, 0x2
ffffffff800204a8: 69 c9 7b 14 00 00    	imul	ecx, ecx, 0x147b
ffffffff800204ae: c1 e9 11             	shr	ecx, 0x11
ffffffff800204b1: 6b f9 64             	imul	edi, ecx, 0x64
ffffffff800204b4: 29 fa                	sub	edx, edi
ffffffff800204b6: 0f b7 d2             	movzx	edx, dx
ffffffff800204b9: 0f b7 94 12 6a 97 02 80      	movzx	edx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff800204c1: 66 89 54 04 02       	mov	word ptr [rsp + rax + 0x2], dx
ffffffff800204c6: 48 83 c0 fe          	add	rax, -0x2
ffffffff800204ca: 48 89 ca             	mov	rdx, rcx
ffffffff800204cd: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff800204d1: 73 17                	jae	0xffffffff800204ea <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xda>
ffffffff800204d3: 80 ca 30             	or	dl, 0x30
ffffffff800204d6: 88 54 04 03          	mov	byte ptr [rsp + rax + 0x3], dl
ffffffff800204da: 48 ff c8             	dec	rax
ffffffff800204dd: eb 1c                	jmp	0xffffffff800204fb <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xeb>
ffffffff800204df: 48 89 ca             	mov	rdx, rcx
ffffffff800204e2: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff800204e6: 77 ba                	ja	0xffffffff800204a2 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0x92>
ffffffff800204e8: eb e3                	jmp	0xffffffff800204cd <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xbd>
ffffffff800204ea: 0f b7 8c 12 6a 97 02 80      	movzx	ecx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff800204f2: 66 89 4c 04 02       	mov	word ptr [rsp + rax + 0x2], cx
ffffffff800204f7: 48 83 c0 fe          	add	rax, -0x2
ffffffff800204fb: 4c 8d 04 04          	lea	r8, [rsp + rax]
ffffffff800204ff: 49 83 c0 04          	add	r8, 0x4
ffffffff80020503: 41 b9 14 00 00 00    	mov	r9d, 0x14
ffffffff80020509: 49 29 c1             	sub	r9, rax
ffffffff8002050c: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80020511: 48 89 f7             	mov	rdi, rsi
ffffffff80020514: be 01 00 00 00       	mov	esi, 0x1
ffffffff80020519: 31 c9                	xor	ecx, ecx
ffffffff8002051b: e8 d0 de ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80020520: 48 83 c4 18          	add	rsp, 0x18
ffffffff80020524: c3                   	ret
ffffffff80020525: cc                   	int3
ffffffff80020526: cc                   	int3
ffffffff80020527: cc                   	int3
ffffffff80020528: cc                   	int3
ffffffff80020529: cc                   	int3
ffffffff8002052a: cc                   	int3
ffffffff8002052b: cc                   	int3
ffffffff8002052c: cc                   	int3
ffffffff8002052d: cc                   	int3
ffffffff8002052e: cc                   	int3
ffffffff8002052f: cc                   	int3

ffffffff80020530 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88>:
ffffffff80020530: 48 83 ec 18          	sub	rsp, 0x18
ffffffff80020534: 49 89 f2             	mov	r10, rsi
ffffffff80020537: 48 8b 3f             	mov	rdi, qword ptr [rdi]
ffffffff8002053a: 48 89 f9             	mov	rcx, rdi
ffffffff8002053d: 48 f7 d9             	neg	rcx
ffffffff80020540: 48 0f 48 cf          	cmovs	rcx, rdi
ffffffff80020544: b8 14 00 00 00       	mov	eax, 0x14
ffffffff80020549: 48 81 f9 10 27 00 00 	cmp	rcx, 0x2710
ffffffff80020550: 0f 82 b9 00 00 00    	jb	0xffffffff8002060f <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xdf>
ffffffff80020556: 41 b8 14 00 00 00    	mov	r8d, 0x14
ffffffff8002055c: 48 be 4b 59 86 38 d6 c5 6d 34	movabs	rsi, 0x346dc5d63886594b
ffffffff80020566: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80020570: 48 89 c8             	mov	rax, rcx
ffffffff80020573: 48 f7 e6             	mul	rsi
ffffffff80020576: 48 c1 ea 0b          	shr	rdx, 0xb
ffffffff8002057a: 69 c2 10 27 00 00    	imul	eax, edx, 0x2710
ffffffff80020580: 41 89 c9             	mov	r9d, ecx
ffffffff80020583: 41 29 c1             	sub	r9d, eax
ffffffff80020586: 45 69 d9 7b 14 00 00 	imul	r11d, r9d, 0x147b
ffffffff8002058d: 41 c1 eb 13          	shr	r11d, 0x13
ffffffff80020591: 41 6b c3 64          	imul	eax, r11d, 0x64
ffffffff80020595: 41 29 c1             	sub	r9d, eax
ffffffff80020598: 45 0f b7 c9          	movzx	r9d, r9w
ffffffff8002059c: 49 8d 40 fc          	lea	rax, [r8 - 0x4]
ffffffff800205a0: 47 0f b7 9c 1b 6a 97 02 80   	movzx	r11d, word ptr [r11 + r11 - 0x7ffd6896]
ffffffff800205a9: 66 46 89 1c 04       	mov	word ptr [rsp + r8], r11w
ffffffff800205ae: 47 0f b7 8c 09 6a 97 02 80   	movzx	r9d, word ptr [r9 + r9 - 0x7ffd6896]
ffffffff800205b7: 66 46 89 4c 04 02    	mov	word ptr [rsp + r8 + 0x2], r9w
ffffffff800205bd: 49 89 c0             	mov	r8, rax
ffffffff800205c0: 48 81 f9 ff e0 f5 05 	cmp	rcx, 0x5f5e0ff
ffffffff800205c7: 48 89 d1             	mov	rcx, rdx
ffffffff800205ca: 77 a4                	ja	0xffffffff80020570 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0x40>
ffffffff800205cc: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff800205d0: 76 2b                	jbe	0xffffffff800205fd <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xcd>
ffffffff800205d2: 0f b7 ca             	movzx	ecx, dx
ffffffff800205d5: c1 e9 02             	shr	ecx, 0x2
ffffffff800205d8: 69 c9 7b 14 00 00    	imul	ecx, ecx, 0x147b
ffffffff800205de: c1 e9 11             	shr	ecx, 0x11
ffffffff800205e1: 6b f1 64             	imul	esi, ecx, 0x64
ffffffff800205e4: 29 f2                	sub	edx, esi
ffffffff800205e6: 0f b7 d2             	movzx	edx, dx
ffffffff800205e9: 0f b7 94 12 6a 97 02 80      	movzx	edx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff800205f1: 66 89 54 04 02       	mov	word ptr [rsp + rax + 0x2], dx
ffffffff800205f6: 48 83 c0 fe          	add	rax, -0x2
ffffffff800205fa: 48 89 ca             	mov	rdx, rcx
ffffffff800205fd: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff80020601: 73 17                	jae	0xffffffff8002061a <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xea>
ffffffff80020603: 80 ca 30             	or	dl, 0x30
ffffffff80020606: 88 54 04 03          	mov	byte ptr [rsp + rax + 0x3], dl
ffffffff8002060a: 48 ff c8             	dec	rax
ffffffff8002060d: eb 1c                	jmp	0xffffffff8002062b <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xfb>
ffffffff8002060f: 48 89 ca             	mov	rdx, rcx
ffffffff80020612: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff80020616: 77 ba                	ja	0xffffffff800205d2 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xa2>
ffffffff80020618: eb e3                	jmp	0xffffffff800205fd <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hda1498929279fb88+0xcd>
ffffffff8002061a: 0f b7 8c 12 6a 97 02 80      	movzx	ecx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff80020622: 66 89 4c 04 02       	mov	word ptr [rsp + rax + 0x2], cx
ffffffff80020627: 48 83 c0 fe          	add	rax, -0x2
ffffffff8002062b: 31 f6                	xor	esi, esi
ffffffff8002062d: 48 85 ff             	test	rdi, rdi
ffffffff80020630: 40 0f 99 c6          	setns	sil
ffffffff80020634: 4c 8d 04 04          	lea	r8, [rsp + rax]
ffffffff80020638: 49 83 c0 04          	add	r8, 0x4
ffffffff8002063c: 41 b9 14 00 00 00    	mov	r9d, 0x14
ffffffff80020642: 49 29 c1             	sub	r9, rax
ffffffff80020645: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8002064a: 4c 89 d7             	mov	rdi, r10
ffffffff8002064d: 31 c9                	xor	ecx, ecx
ffffffff8002064f: e8 9c dd ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80020654: 48 83 c4 18          	add	rsp, 0x18
ffffffff80020658: c3                   	ret
ffffffff80020659: cc                   	int3
ffffffff8002065a: cc                   	int3
ffffffff8002065b: cc                   	int3
ffffffff8002065c: cc                   	int3
ffffffff8002065d: cc                   	int3
ffffffff8002065e: cc                   	int3
ffffffff8002065f: cc                   	int3

ffffffff80020660 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d>:
ffffffff80020660: 41 56                	push	r14
ffffffff80020662: 53                   	push	rbx
ffffffff80020663: 48 81 ec 88 00 00 00 	sub	rsp, 0x88
ffffffff8002066a: 48 89 f3             	mov	rbx, rsi
ffffffff8002066d: 49 89 fe             	mov	r14, rdi
ffffffff80020670: 8b 46 24             	mov	eax, dword ptr [rsi + 0x24]
ffffffff80020673: a8 10                	test	al, 0x10
ffffffff80020675: 0f 85 dc 00 00 00    	jne	0xffffffff80020757 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xf7>
ffffffff8002067b: a8 20                	test	al, 0x20
ffffffff8002067d: 0f 85 10 01 00 00    	jne	0xffffffff80020793 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x133>
ffffffff80020683: 49 8b 0e             	mov	rcx, qword ptr [r14]
ffffffff80020686: b8 14 00 00 00       	mov	eax, 0x14
ffffffff8002068b: 48 81 f9 10 27 00 00 	cmp	rcx, 0x2710
ffffffff80020692: 0f 82 5d 01 00 00    	jb	0xffffffff800207f5 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x195>
ffffffff80020698: bf 14 00 00 00       	mov	edi, 0x14
ffffffff8002069d: 48 be 4b 59 86 38 d6 c5 6d 34	movabs	rsi, 0x346dc5d63886594b
ffffffff800206a7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
ffffffff800206b0: 48 89 c8             	mov	rax, rcx
ffffffff800206b3: 48 f7 e6             	mul	rsi
ffffffff800206b6: 48 c1 ea 0b          	shr	rdx, 0xb
ffffffff800206ba: 69 c2 10 27 00 00    	imul	eax, edx, 0x2710
ffffffff800206c0: 41 89 c8             	mov	r8d, ecx
ffffffff800206c3: 41 29 c0             	sub	r8d, eax
ffffffff800206c6: 45 69 c8 7b 14 00 00 	imul	r9d, r8d, 0x147b
ffffffff800206cd: 41 c1 e9 13          	shr	r9d, 0x13
ffffffff800206d1: 41 6b c1 64          	imul	eax, r9d, 0x64
ffffffff800206d5: 41 29 c0             	sub	r8d, eax
ffffffff800206d8: 45 0f b7 c0          	movzx	r8d, r8w
ffffffff800206dc: 48 8d 47 fc          	lea	rax, [rdi - 0x4]
ffffffff800206e0: 47 0f b7 8c 09 6a 97 02 80   	movzx	r9d, word ptr [r9 + r9 - 0x7ffd6896]
ffffffff800206e9: 66 44 89 4c 3c 04    	mov	word ptr [rsp + rdi + 0x4], r9w
ffffffff800206ef: 47 0f b7 84 00 6a 97 02 80   	movzx	r8d, word ptr [r8 + r8 - 0x7ffd6896]
ffffffff800206f8: 66 44 89 44 3c 06    	mov	word ptr [rsp + rdi + 0x6], r8w
ffffffff800206fe: 48 89 c7             	mov	rdi, rax
ffffffff80020701: 48 81 f9 ff e0 f5 05 	cmp	rcx, 0x5f5e0ff
ffffffff80020708: 48 89 d1             	mov	rcx, rdx
ffffffff8002070b: 77 a3                	ja	0xffffffff800206b0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x50>
ffffffff8002070d: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff80020711: 76 2b                	jbe	0xffffffff8002073e <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xde>
ffffffff80020713: 0f b7 ca             	movzx	ecx, dx
ffffffff80020716: c1 e9 02             	shr	ecx, 0x2
ffffffff80020719: 69 c9 7b 14 00 00    	imul	ecx, ecx, 0x147b
ffffffff8002071f: c1 e9 11             	shr	ecx, 0x11
ffffffff80020722: 6b f1 64             	imul	esi, ecx, 0x64
ffffffff80020725: 29 f2                	sub	edx, esi
ffffffff80020727: 0f b7 d2             	movzx	edx, dx
ffffffff8002072a: 0f b7 94 12 6a 97 02 80      	movzx	edx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff80020732: 66 89 54 04 06       	mov	word ptr [rsp + rax + 0x6], dx
ffffffff80020737: 48 83 c0 fe          	add	rax, -0x2
ffffffff8002073b: 48 89 ca             	mov	rdx, rcx
ffffffff8002073e: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff80020742: 0f 83 bf 00 00 00    	jae	0xffffffff80020807 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1a7>
ffffffff80020748: 80 ca 30             	or	dl, 0x30
ffffffff8002074b: 88 54 04 07          	mov	byte ptr [rsp + rax + 0x7], dl
ffffffff8002074f: 48 ff c8             	dec	rax
ffffffff80020752: e9 c1 00 00 00       	jmp	0xffffffff80020818 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1b8>
ffffffff80020757: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff8002075a: 45 31 c9             	xor	r9d, r9d
ffffffff8002075d: 48 89 c1             	mov	rcx, rax
ffffffff80020760: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff80020764: 89 c2                	mov	edx, eax
ffffffff80020766: 80 e2 0f             	and	dl, 0xf
ffffffff80020769: 8d 72 30             	lea	esi, [rdx + 0x30]
ffffffff8002076c: 8d 7a 57             	lea	edi, [rdx + 0x57]
ffffffff8002076f: 80 fa 0a             	cmp	dl, 0xa
ffffffff80020772: 40 0f b6 d6          	movzx	edx, sil
ffffffff80020776: 40 0f b6 f7          	movzx	esi, dil
ffffffff8002077a: 0f 42 f2             	cmovb	esi, edx
ffffffff8002077d: 42 88 b4 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], sil
ffffffff80020785: 49 ff c9             	dec	r9
ffffffff80020788: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff8002078c: 48 89 c8             	mov	rax, rcx
ffffffff8002078f: 77 cf                	ja	0xffffffff80020760 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x100>
ffffffff80020791: eb 3e                	jmp	0xffffffff800207d1 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x171>
ffffffff80020793: 49 8b 06             	mov	rax, qword ptr [r14]
ffffffff80020796: 45 31 c9             	xor	r9d, r9d
ffffffff80020799: 48 89 c1             	mov	rcx, rax
ffffffff8002079c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff800207a0: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff800207a4: 89 c2                	mov	edx, eax
ffffffff800207a6: 80 e2 0f             	and	dl, 0xf
ffffffff800207a9: 8d 72 30             	lea	esi, [rdx + 0x30]
ffffffff800207ac: 8d 7a 37             	lea	edi, [rdx + 0x37]
ffffffff800207af: 80 fa 0a             	cmp	dl, 0xa
ffffffff800207b2: 40 0f b6 d6          	movzx	edx, sil
ffffffff800207b6: 40 0f b6 f7          	movzx	esi, dil
ffffffff800207ba: 0f 42 f2             	cmovb	esi, edx
ffffffff800207bd: 42 88 b4 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], sil
ffffffff800207c5: 49 ff c9             	dec	r9
ffffffff800207c8: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff800207cc: 48 89 c8             	mov	rax, rcx
ffffffff800207cf: 77 cf                	ja	0xffffffff800207a0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x140>
ffffffff800207d1: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff800207d5: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff800207dc: 49 f7 d9             	neg	r9
ffffffff800207df: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff800207e4: 48 89 df             	mov	rdi, rbx
ffffffff800207e7: be 01 00 00 00       	mov	esi, 0x1
ffffffff800207ec: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff800207f3: eb 43                	jmp	0xffffffff80020838 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1d8>
ffffffff800207f5: 48 89 ca             	mov	rdx, rcx
ffffffff800207f8: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff800207fc: 0f 87 11 ff ff ff    	ja	0xffffffff80020713 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xb3>
ffffffff80020802: e9 37 ff ff ff       	jmp	0xffffffff8002073e <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xde>
ffffffff80020807: 0f b7 8c 12 6a 97 02 80      	movzx	ecx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff8002080f: 66 89 4c 04 06       	mov	word ptr [rsp + rax + 0x6], cx
ffffffff80020814: 48 83 c0 fe          	add	rax, -0x2
ffffffff80020818: 4c 8d 04 04          	lea	r8, [rsp + rax]
ffffffff8002081c: 49 83 c0 08          	add	r8, 0x8
ffffffff80020820: 41 b9 14 00 00 00    	mov	r9d, 0x14
ffffffff80020826: 49 29 c1             	sub	r9, rax
ffffffff80020829: ba 01 00 00 00       	mov	edx, 0x1
ffffffff8002082e: 48 89 df             	mov	rdi, rbx
ffffffff80020831: be 01 00 00 00       	mov	esi, 0x1
ffffffff80020836: 31 c9                	xor	ecx, ecx
ffffffff80020838: e8 b3 db ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8002083d: 89 c1                	mov	ecx, eax
ffffffff8002083f: b0 01                	mov	al, 0x1
ffffffff80020841: 84 c9                	test	cl, cl
ffffffff80020843: 0f 85 e8 01 00 00    	jne	0xffffffff80020a31 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3d1>
ffffffff80020849: 48 8b 7b 30          	mov	rdi, qword ptr [rbx + 0x30]
ffffffff8002084d: 48 8b 43 38          	mov	rax, qword ptr [rbx + 0x38]
ffffffff80020851: ba 02 00 00 00       	mov	edx, 0x2
ffffffff80020856: 48 c7 c6 28 a1 02 80 	mov	rsi, -0x7ffd5ed8
ffffffff8002085d: ff 50 18             	call	qword ptr [rax + 0x18]
ffffffff80020860: 89 c1                	mov	ecx, eax
ffffffff80020862: b0 01                	mov	al, 0x1
ffffffff80020864: 84 c9                	test	cl, cl
ffffffff80020866: 0f 85 c5 01 00 00    	jne	0xffffffff80020a31 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3d1>
ffffffff8002086c: 8b 43 24             	mov	eax, dword ptr [rbx + 0x24]
ffffffff8002086f: a8 10                	test	al, 0x10
ffffffff80020871: 0f 85 9b 00 00 00    	jne	0xffffffff80020912 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2b2>
ffffffff80020877: a8 20                	test	al, 0x20
ffffffff80020879: 0f 85 d4 00 00 00    	jne	0xffffffff80020953 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2f3>
ffffffff8002087f: 49 8b 4e 08          	mov	rcx, qword ptr [r14 + 0x8]
ffffffff80020883: b8 14 00 00 00       	mov	eax, 0x14
ffffffff80020888: 48 81 f9 10 27 00 00 	cmp	rcx, 0x2710
ffffffff8002088f: 0f 82 20 01 00 00    	jb	0xffffffff800209b5 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x355>
ffffffff80020895: bf 14 00 00 00       	mov	edi, 0x14
ffffffff8002089a: 48 be 4b 59 86 38 d6 c5 6d 34	movabs	rsi, 0x346dc5d63886594b
ffffffff800208a4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff800208b0: 48 89 c8             	mov	rax, rcx
ffffffff800208b3: 48 f7 e6             	mul	rsi
ffffffff800208b6: 48 c1 ea 0b          	shr	rdx, 0xb
ffffffff800208ba: 69 c2 10 27 00 00    	imul	eax, edx, 0x2710
ffffffff800208c0: 41 89 c8             	mov	r8d, ecx
ffffffff800208c3: 41 29 c0             	sub	r8d, eax
ffffffff800208c6: 45 69 c8 7b 14 00 00 	imul	r9d, r8d, 0x147b
ffffffff800208cd: 41 c1 e9 13          	shr	r9d, 0x13
ffffffff800208d1: 41 6b c1 64          	imul	eax, r9d, 0x64
ffffffff800208d5: 41 29 c0             	sub	r8d, eax
ffffffff800208d8: 45 0f b7 c0          	movzx	r8d, r8w
ffffffff800208dc: 48 8d 47 fc          	lea	rax, [rdi - 0x4]
ffffffff800208e0: 47 0f b7 8c 09 6a 97 02 80   	movzx	r9d, word ptr [r9 + r9 - 0x7ffd6896]
ffffffff800208e9: 66 44 89 4c 3c 04    	mov	word ptr [rsp + rdi + 0x4], r9w
ffffffff800208ef: 47 0f b7 84 00 6a 97 02 80   	movzx	r8d, word ptr [r8 + r8 - 0x7ffd6896]
ffffffff800208f8: 66 44 89 44 3c 06    	mov	word ptr [rsp + rdi + 0x6], r8w
ffffffff800208fe: 48 89 c7             	mov	rdi, rax
ffffffff80020901: 48 81 f9 ff e0 f5 05 	cmp	rcx, 0x5f5e0ff
ffffffff80020908: 48 89 d1             	mov	rcx, rdx
ffffffff8002090b: 77 a3                	ja	0xffffffff800208b0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x250>
ffffffff8002090d: e9 a6 00 00 00       	jmp	0xffffffff800209b8 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x358>
ffffffff80020912: 49 8b 46 08          	mov	rax, qword ptr [r14 + 0x8]
ffffffff80020916: 45 31 c9             	xor	r9d, r9d
ffffffff80020919: 48 89 c1             	mov	rcx, rax
ffffffff8002091c: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80020920: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff80020924: 89 c2                	mov	edx, eax
ffffffff80020926: 80 e2 0f             	and	dl, 0xf
ffffffff80020929: 8d 72 30             	lea	esi, [rdx + 0x30]
ffffffff8002092c: 8d 7a 57             	lea	edi, [rdx + 0x57]
ffffffff8002092f: 80 fa 0a             	cmp	dl, 0xa
ffffffff80020932: 40 0f b6 d6          	movzx	edx, sil
ffffffff80020936: 40 0f b6 f7          	movzx	esi, dil
ffffffff8002093a: 0f 42 f2             	cmovb	esi, edx
ffffffff8002093d: 42 88 b4 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], sil
ffffffff80020945: 49 ff c9             	dec	r9
ffffffff80020948: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff8002094c: 48 89 c8             	mov	rax, rcx
ffffffff8002094f: 77 cf                	ja	0xffffffff80020920 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2c0>
ffffffff80020951: eb 3e                	jmp	0xffffffff80020991 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x331>
ffffffff80020953: 49 8b 46 08          	mov	rax, qword ptr [r14 + 0x8]
ffffffff80020957: 45 31 c9             	xor	r9d, r9d
ffffffff8002095a: 48 89 c1             	mov	rcx, rax
ffffffff8002095d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80020960: 48 c1 e9 04          	shr	rcx, 0x4
ffffffff80020964: 89 c2                	mov	edx, eax
ffffffff80020966: 80 e2 0f             	and	dl, 0xf
ffffffff80020969: 8d 72 30             	lea	esi, [rdx + 0x30]
ffffffff8002096c: 8d 7a 37             	lea	edi, [rdx + 0x37]
ffffffff8002096f: 80 fa 0a             	cmp	dl, 0xa
ffffffff80020972: 40 0f b6 d6          	movzx	edx, sil
ffffffff80020976: 40 0f b6 f7          	movzx	esi, dil
ffffffff8002097a: 0f 42 f2             	cmovb	esi, edx
ffffffff8002097d: 42 88 b4 0c 87 00 00 00      	mov	byte ptr [rsp + r9 + 0x87], sil
ffffffff80020985: 49 ff c9             	dec	r9
ffffffff80020988: 48 83 f8 0f          	cmp	rax, 0xf
ffffffff8002098c: 48 89 c8             	mov	rax, rcx
ffffffff8002098f: 77 cf                	ja	0xffffffff80020960 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x300>
ffffffff80020991: 4e 8d 04 0c          	lea	r8, [rsp + r9]
ffffffff80020995: 49 81 c0 88 00 00 00 	add	r8, 0x88
ffffffff8002099c: 49 f7 d9             	neg	r9
ffffffff8002099f: b9 02 00 00 00       	mov	ecx, 0x2
ffffffff800209a4: 48 89 df             	mov	rdi, rbx
ffffffff800209a7: be 01 00 00 00       	mov	esi, 0x1
ffffffff800209ac: 48 c7 c2 68 97 02 80 	mov	rdx, -0x7ffd6898
ffffffff800209b3: eb 77                	jmp	0xffffffff80020a2c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3cc>
ffffffff800209b5: 48 89 ca             	mov	rdx, rcx
ffffffff800209b8: 48 83 fa 63          	cmp	rdx, 0x63
ffffffff800209bc: 76 2b                	jbe	0xffffffff800209e9 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x389>
ffffffff800209be: 0f b7 ca             	movzx	ecx, dx
ffffffff800209c1: c1 e9 02             	shr	ecx, 0x2
ffffffff800209c4: 69 c9 7b 14 00 00    	imul	ecx, ecx, 0x147b
ffffffff800209ca: c1 e9 11             	shr	ecx, 0x11
ffffffff800209cd: 6b f1 64             	imul	esi, ecx, 0x64
ffffffff800209d0: 29 f2                	sub	edx, esi
ffffffff800209d2: 0f b7 d2             	movzx	edx, dx
ffffffff800209d5: 0f b7 94 12 6a 97 02 80      	movzx	edx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff800209dd: 66 89 54 04 06       	mov	word ptr [rsp + rax + 0x6], dx
ffffffff800209e2: 48 83 c0 fe          	add	rax, -0x2
ffffffff800209e6: 48 89 ca             	mov	rdx, rcx
ffffffff800209e9: 48 83 fa 0a          	cmp	rdx, 0xa
ffffffff800209ed: 73 0c                	jae	0xffffffff800209fb <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x39b>
ffffffff800209ef: 80 ca 30             	or	dl, 0x30
ffffffff800209f2: 88 54 04 07          	mov	byte ptr [rsp + rax + 0x7], dl
ffffffff800209f6: 48 ff c8             	dec	rax
ffffffff800209f9: eb 11                	jmp	0xffffffff80020a0c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3ac>
ffffffff800209fb: 0f b7 8c 12 6a 97 02 80      	movzx	ecx, word ptr [rdx + rdx - 0x7ffd6896]
ffffffff80020a03: 66 89 4c 04 06       	mov	word ptr [rsp + rax + 0x6], cx
ffffffff80020a08: 48 83 c0 fe          	add	rax, -0x2
ffffffff80020a0c: 4c 8d 04 04          	lea	r8, [rsp + rax]
ffffffff80020a10: 49 83 c0 08          	add	r8, 0x8
ffffffff80020a14: 41 b9 14 00 00 00    	mov	r9d, 0x14
ffffffff80020a1a: 49 29 c1             	sub	r9, rax
ffffffff80020a1d: ba 01 00 00 00       	mov	edx, 0x1
ffffffff80020a22: 48 89 df             	mov	rdi, rbx
ffffffff80020a25: be 01 00 00 00       	mov	esi, 0x1
ffffffff80020a2a: 31 c9                	xor	ecx, ecx
ffffffff80020a2c: e8 bf d9 ff ff       	call	0xffffffff8001e3f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80020a31: 48 81 c4 88 00 00 00 	add	rsp, 0x88
ffffffff80020a38: 5b                   	pop	rbx
ffffffff80020a39: 41 5e                	pop	r14
ffffffff80020a3b: c3                   	ret
ffffffff80020a3c: cc                   	int3
ffffffff80020a3d: cc                   	int3
ffffffff80020a3e: cc                   	int3
ffffffff80020a3f: cc                   	int3

ffffffff80020a40 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74>:
ffffffff80020a40: 55                   	push	rbp
ffffffff80020a41: 41 57                	push	r15
ffffffff80020a43: 41 56                	push	r14
ffffffff80020a45: 41 54                	push	r12
ffffffff80020a47: 53                   	push	rbx
ffffffff80020a48: 48 83 ec 60          	sub	rsp, 0x60
ffffffff80020a4c: 49 89 ff             	mov	r15, rdi
ffffffff80020a4f: 48 8b 5e 30          	mov	rbx, qword ptr [rsi + 0x30]
ffffffff80020a53: 4c 8b 76 38          	mov	r14, qword ptr [rsi + 0x38]
ffffffff80020a57: 4d 8b 66 18          	mov	r12, qword ptr [r14 + 0x18]
ffffffff80020a5b: ba 0c 00 00 00       	mov	edx, 0xc
ffffffff80020a60: 48 89 df             	mov	rdi, rbx
ffffffff80020a63: 48 c7 c6 60 a1 02 80 	mov	rsi, -0x7ffd5ea0
ffffffff80020a6a: 41 ff d4             	call	r12
ffffffff80020a6d: 40 b5 01             	mov	bpl, 0x1
ffffffff80020a70: 84 c0                	test	al, al
ffffffff80020a72: 0f 85 d2 00 00 00    	jne	0xffffffff80020b4a <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff80020a78: 49 8b 47 08          	mov	rax, qword ptr [r15 + 0x8]
ffffffff80020a7c: 48 8d 48 10          	lea	rcx, [rax + 0x10]
ffffffff80020a80: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff80020a84: 48 83 c0 14          	add	rax, 0x14
ffffffff80020a88: 48 c7 44 24 08 00 f4 01 80   	mov	qword ptr [rsp + 0x8], -0x7ffe0c00
ffffffff80020a91: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80020a96: 48 c7 44 24 18 f0 02 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdfd10
ffffffff80020a9f: 48 89 44 24 20       	mov	qword ptr [rsp + 0x20], rax
ffffffff80020aa4: 48 c7 44 24 28 f0 02 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdfd10
ffffffff80020aad: 48 c7 44 24 30 30 a1 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffd5ed0
ffffffff80020ab6: 48 c7 44 24 38 03 00 00 00   	mov	qword ptr [rsp + 0x38], 0x3
ffffffff80020abf: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 0x50], 0x0
ffffffff80020ac8: 48 89 e0             	mov	rax, rsp
ffffffff80020acb: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff80020ad0: 48 c7 44 24 48 03 00 00 00   	mov	qword ptr [rsp + 0x48], 0x3
ffffffff80020ad9: 48 8d 54 24 30       	lea	rdx, [rsp + 0x30]
ffffffff80020ade: 48 89 df             	mov	rdi, rbx
ffffffff80020ae1: 4c 89 f6             	mov	rsi, r14
ffffffff80020ae4: e8 e7 d6 ff ff       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80020ae9: 84 c0                	test	al, al
ffffffff80020aeb: 75 5d                	jne	0xffffffff80020b4a <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff80020aed: ba 02 00 00 00       	mov	edx, 0x2
ffffffff80020af2: 48 89 df             	mov	rdi, rbx
ffffffff80020af5: 48 c7 c6 6c a1 02 80 	mov	rsi, -0x7ffd5e94
ffffffff80020afc: 41 ff d4             	call	r12
ffffffff80020aff: 84 c0                	test	al, al
ffffffff80020b01: 75 47                	jne	0xffffffff80020b4a <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff80020b03: 49 8b 07             	mov	rax, qword ptr [r15]
ffffffff80020b06: 48 8b 48 28          	mov	rcx, qword ptr [rax + 0x28]
ffffffff80020b0a: 48 89 4c 24 28       	mov	qword ptr [rsp + 0x28], rcx
ffffffff80020b0f: 48 8b 48 20          	mov	rcx, qword ptr [rax + 0x20]
ffffffff80020b13: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff80020b18: 48 8b 48 18          	mov	rcx, qword ptr [rax + 0x18]
ffffffff80020b1c: 48 89 4c 24 18       	mov	qword ptr [rsp + 0x18], rcx
ffffffff80020b21: 48 8b 48 10          	mov	rcx, qword ptr [rax + 0x10]
ffffffff80020b25: 48 89 4c 24 10       	mov	qword ptr [rsp + 0x10], rcx
ffffffff80020b2a: 48 8b 08             	mov	rcx, qword ptr [rax]
ffffffff80020b2d: 48 8b 40 08          	mov	rax, qword ptr [rax + 0x8]
ffffffff80020b31: 48 89 44 24 08       	mov	qword ptr [rsp + 0x8], rax
ffffffff80020b36: 48 89 0c 24          	mov	qword ptr [rsp], rcx
ffffffff80020b3a: 48 89 e2             	mov	rdx, rsp
ffffffff80020b3d: 48 89 df             	mov	rdi, rbx
ffffffff80020b40: 4c 89 f6             	mov	rsi, r14
ffffffff80020b43: e8 88 d6 ff ff       	call	0xffffffff8001e1d0 <core::fmt::write::h1a05140646fc4354>
ffffffff80020b48: 89 c5                	mov	ebp, eax
ffffffff80020b4a: 89 e8                	mov	eax, ebp
ffffffff80020b4c: 48 83 c4 60          	add	rsp, 0x60
ffffffff80020b50: 5b                   	pop	rbx
ffffffff80020b51: 41 5c                	pop	r12
ffffffff80020b53: 41 5e                	pop	r14
ffffffff80020b55: 41 5f                	pop	r15
ffffffff80020b57: 5d                   	pop	rbp
ffffffff80020b58: c3                   	ret
ffffffff80020b59: cc                   	int3
ffffffff80020b5a: cc                   	int3
ffffffff80020b5b: cc                   	int3
ffffffff80020b5c: cc                   	int3
ffffffff80020b5d: cc                   	int3
ffffffff80020b5e: cc                   	int3
ffffffff80020b5f: cc                   	int3

ffffffff80020b60 <core::result::unwrap_failed::hf66f866f6b418554>:
ffffffff80020b60: 48 83 ec 78          	sub	rsp, 0x78
ffffffff80020b64: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80020b69: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff80020b6e: 48 89 54 24 18       	mov	qword ptr [rsp + 0x18], rdx
ffffffff80020b73: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff80020b78: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80020b7d: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80020b82: 48 c7 44 24 30 00 f4 01 80   	mov	qword ptr [rsp + 0x30], -0x7ffe0c00
ffffffff80020b8b: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80020b90: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff80020b95: 48 c7 44 24 40 f0 f3 01 80   	mov	qword ptr [rsp + 0x40], -0x7ffe0c10
ffffffff80020b9e: 48 c7 44 24 48 70 a1 02 80   	mov	qword ptr [rsp + 0x48], -0x7ffd5e90
ffffffff80020ba7: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff80020bb0: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 0x68], 0x0
ffffffff80020bb9: 48 8d 44 24 28       	lea	rax, [rsp + 0x28]
ffffffff80020bbe: 48 89 44 24 58       	mov	qword ptr [rsp + 0x58], rax
ffffffff80020bc3: 48 c7 44 24 60 02 00 00 00   	mov	qword ptr [rsp + 0x60], 0x2
ffffffff80020bcc: 48 8d 7c 24 48       	lea	rdi, [rsp + 0x48]
ffffffff80020bd1: 4c 89 c6             	mov	rsi, r8
ffffffff80020bd4: e8 97 04 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80020bd9: cc                   	int3
ffffffff80020bda: cc                   	int3
ffffffff80020bdb: cc                   	int3
ffffffff80020bdc: cc                   	int3
ffffffff80020bdd: cc                   	int3
ffffffff80020bde: cc                   	int3
ffffffff80020bdf: cc                   	int3

ffffffff80020be0 <core::ffi::c_str::CStr::to_str::hb93d7efd1cbb2ca0>:
ffffffff80020be0: 53                   	push	rbx
ffffffff80020be1: 48 89 fb             	mov	rbx, rdi
ffffffff80020be4: 48 ff ca             	dec	rdx
ffffffff80020be7: e8 34 00 00 00       	call	0xffffffff80020c20 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff80020bec: 48 89 d8             	mov	rax, rbx
ffffffff80020bef: 5b                   	pop	rbx
ffffffff80020bf0: c3                   	ret
ffffffff80020bf1: cc                   	int3
ffffffff80020bf2: cc                   	int3
ffffffff80020bf3: cc                   	int3
ffffffff80020bf4: cc                   	int3
ffffffff80020bf5: cc                   	int3
ffffffff80020bf6: cc                   	int3
ffffffff80020bf7: cc                   	int3
ffffffff80020bf8: cc                   	int3
ffffffff80020bf9: cc                   	int3
ffffffff80020bfa: cc                   	int3
ffffffff80020bfb: cc                   	int3
ffffffff80020bfc: cc                   	int3
ffffffff80020bfd: cc                   	int3
ffffffff80020bfe: cc                   	int3
ffffffff80020bff: cc                   	int3

ffffffff80020c00 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>:
ffffffff80020c00: 50                   	push	rax
ffffffff80020c01: e8 1a 02 00 00       	call	0xffffffff80020e20 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hf422cc9558ab796f>
ffffffff80020c06: cc                   	int3
ffffffff80020c07: cc                   	int3
ffffffff80020c08: cc                   	int3
ffffffff80020c09: cc                   	int3
ffffffff80020c0a: cc                   	int3
ffffffff80020c0b: cc                   	int3
ffffffff80020c0c: cc                   	int3
ffffffff80020c0d: cc                   	int3
ffffffff80020c0e: cc                   	int3
ffffffff80020c0f: cc                   	int3

ffffffff80020c10 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>:
ffffffff80020c10: 50                   	push	rax
ffffffff80020c11: e8 7a 02 00 00       	call	0xffffffff80020e90 <core::slice::index::slice_index_order_fail::do_panic::runtime::h5dcd4177f85ee9e4>
ffffffff80020c16: cc                   	int3
ffffffff80020c17: cc                   	int3
ffffffff80020c18: cc                   	int3
ffffffff80020c19: cc                   	int3
ffffffff80020c1a: cc                   	int3
ffffffff80020c1b: cc                   	int3
ffffffff80020c1c: cc                   	int3
ffffffff80020c1d: cc                   	int3
ffffffff80020c1e: cc                   	int3
ffffffff80020c1f: cc                   	int3

ffffffff80020c20 <core::str::converts::from_utf8::h68e3eef28d6cf63d>:
ffffffff80020c20: 55                   	push	rbp
ffffffff80020c21: 53                   	push	rbx
ffffffff80020c22: 48 89 f8             	mov	rax, rdi
ffffffff80020c25: 31 ff                	xor	edi, edi
ffffffff80020c27: 48 89 d1             	mov	rcx, rdx
ffffffff80020c2a: 48 83 e9 0f          	sub	rcx, 0xf
ffffffff80020c2e: 48 0f 43 f9          	cmovae	rdi, rcx
ffffffff80020c32: 48 85 d2             	test	rdx, rdx
ffffffff80020c35: 0f 84 a8 01 00 00    	je	0xffffffff80020de3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff80020c3b: 4c 8d 46 07          	lea	r8, [rsi + 0x7]
ffffffff80020c3f: 49 83 e0 f8          	and	r8, -0x8
ffffffff80020c43: 49 29 f0             	sub	r8, rsi
ffffffff80020c46: 31 c9                	xor	ecx, ecx
ffffffff80020c48: 49 ba 80 80 80 80 80 80 80 80	movabs	r10, -0x7f7f7f7f7f7f7f80
ffffffff80020c52: eb 1b                	jmp	0xffffffff80020c6f <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x4f>
ffffffff80020c54: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nop	word ptr cs:[rax + rax]
ffffffff80020c60: 48 ff c3             	inc	rbx
ffffffff80020c63: 48 89 d9             	mov	rcx, rbx
ffffffff80020c66: 48 39 d1             	cmp	rcx, rdx
ffffffff80020c69: 0f 83 74 01 00 00    	jae	0xffffffff80020de3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff80020c6f: 44 0f b6 1c 0e       	movzx	r11d, byte ptr [rsi + rcx]
ffffffff80020c74: 45 84 db             	test	r11b, r11b
ffffffff80020c77: 78 57                	js	0xffffffff80020cd0 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0xb0>
ffffffff80020c79: 45 89 c1             	mov	r9d, r8d
ffffffff80020c7c: 41 29 c9             	sub	r9d, ecx
ffffffff80020c7f: 41 f6 c1 07          	test	r9b, 0x7
ffffffff80020c83: 74 0f                	je	0xffffffff80020c94 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x74>
ffffffff80020c85: 48 ff c1             	inc	rcx
ffffffff80020c88: eb dc                	jmp	0xffffffff80020c66 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff80020c8a: 66 0f 1f 44 00 00    	nop	word ptr [rax + rax]
ffffffff80020c90: 48 83 c1 10          	add	rcx, 0x10
ffffffff80020c94: 48 39 f9             	cmp	rcx, rdi
ffffffff80020c97: 73 0e                	jae	0xffffffff80020ca7 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x87>
ffffffff80020c99: 4c 8b 4c 0e 08       	mov	r9, qword ptr [rsi + rcx + 0x8]
ffffffff80020c9e: 4c 0b 0c 0e          	or	r9, qword ptr [rsi + rcx]
ffffffff80020ca2: 4d 85 d1             	test	r9, r10
ffffffff80020ca5: 74 e9                	je	0xffffffff80020c90 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x70>
ffffffff80020ca7: 48 39 d1             	cmp	rcx, rdx
ffffffff80020caa: 73 ba                	jae	0xffffffff80020c66 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff80020cac: 0f 1f 40 00          	nop	dword ptr [rax]
ffffffff80020cb0: 80 3c 0e 00          	cmp	byte ptr [rsi + rcx], 0x0
ffffffff80020cb4: 78 b0                	js	0xffffffff80020c66 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff80020cb6: 48 ff c1             	inc	rcx
ffffffff80020cb9: 48 39 ca             	cmp	rdx, rcx
ffffffff80020cbc: 75 f2                	jne	0xffffffff80020cb0 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x90>
ffffffff80020cbe: e9 20 01 00 00       	jmp	0xffffffff80020de3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff80020cc3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80020cd0: 41 0f b6 9b 90 a1 02 80      	movzx	ebx, byte ptr [r11 - 0x7ffd5e70]
ffffffff80020cd8: 41 b1 01             	mov	r9b, 0x1
ffffffff80020cdb: 83 fb 04             	cmp	ebx, 0x4
ffffffff80020cde: 74 5a                	je	0xffffffff80020d3a <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x11a>
ffffffff80020ce0: 83 fb 03             	cmp	ebx, 0x3
ffffffff80020ce3: 74 28                	je	0xffffffff80020d0d <core::str::converts::from_utf8::h68e3eef28d6cf63d+0xed>
ffffffff80020ce5: 83 fb 02             	cmp	ebx, 0x2
ffffffff80020ce8: 0f 85 0a 01 00 00    	jne	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020cee: 48 8d 59 01          	lea	rbx, [rcx + 0x1]
ffffffff80020cf2: 48 39 d3             	cmp	rbx, rdx
ffffffff80020cf5: 0f 83 f8 00 00 00    	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020cfb: 80 3c 1e bf          	cmp	byte ptr [rsi + rbx], -0x41
ffffffff80020cff: 41 b3 01             	mov	r11b, 0x1
ffffffff80020d02: 0f 8e 58 ff ff ff    	jle	0xffffffff80020c60 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff80020d08: e9 f3 00 00 00       	jmp	0xffffffff80020e00 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff80020d0d: 48 8d 59 01          	lea	rbx, [rcx + 0x1]
ffffffff80020d11: 48 39 d3             	cmp	rbx, rdx
ffffffff80020d14: 0f 83 d9 00 00 00    	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020d1a: 0f b6 1c 1e          	movzx	ebx, byte ptr [rsi + rbx]
ffffffff80020d1e: 49 81 fb e0 00 00 00 	cmp	r11, 0xe0
ffffffff80020d25: 74 40                	je	0xffffffff80020d67 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x147>
ffffffff80020d27: 41 81 fb ed 00 00 00 	cmp	r11d, 0xed
ffffffff80020d2e: 75 4e                	jne	0xffffffff80020d7e <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x15e>
ffffffff80020d30: 80 fb 9f             	cmp	bl, -0x61
ffffffff80020d33: 7e 62                	jle	0xffffffff80020d97 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x177>
ffffffff80020d35: e9 be 00 00 00       	jmp	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d3a: 48 8d 59 01          	lea	rbx, [rcx + 0x1]
ffffffff80020d3e: 48 39 d3             	cmp	rbx, rdx
ffffffff80020d41: 0f 83 ac 00 00 00    	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020d47: 0f b6 1c 1e          	movzx	ebx, byte ptr [rsi + rbx]
ffffffff80020d4b: 49 81 fb f0 00 00 00 	cmp	r11, 0xf0
ffffffff80020d52: 74 20                	je	0xffffffff80020d74 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x154>
ffffffff80020d54: 41 81 fb f4 00 00 00 	cmp	r11d, 0xf4
ffffffff80020d5b: 75 4f                	jne	0xffffffff80020dac <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x18c>
ffffffff80020d5d: 80 fb 8f             	cmp	bl, -0x71
ffffffff80020d60: 7e 59                	jle	0xffffffff80020dbb <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x19b>
ffffffff80020d62: e9 91 00 00 00       	jmp	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d67: 80 e3 e0             	and	bl, -0x20
ffffffff80020d6a: 80 fb a0             	cmp	bl, -0x60
ffffffff80020d6d: 74 28                	je	0xffffffff80020d97 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x177>
ffffffff80020d6f: e9 84 00 00 00       	jmp	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d74: 80 c3 70             	add	bl, 0x70
ffffffff80020d77: 80 fb 30             	cmp	bl, 0x30
ffffffff80020d7a: 72 3f                	jb	0xffffffff80020dbb <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x19b>
ffffffff80020d7c: eb 7a                	jmp	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d7e: 41 8d 6b 1f          	lea	ebp, [r11 + 0x1f]
ffffffff80020d82: 40 80 fd 0c          	cmp	bpl, 0xc
ffffffff80020d86: 72 0a                	jb	0xffffffff80020d92 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x172>
ffffffff80020d88: 41 80 e3 fe          	and	r11b, -0x2
ffffffff80020d8c: 41 80 fb ee          	cmp	r11b, -0x12
ffffffff80020d90: 75 66                	jne	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d92: 80 fb c0             	cmp	bl, -0x40
ffffffff80020d95: 7d 61                	jge	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020d97: 48 8d 59 02          	lea	rbx, [rcx + 0x2]
ffffffff80020d9b: 48 39 d3             	cmp	rbx, rdx
ffffffff80020d9e: 73 53                	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020da0: 80 3c 1e bf          	cmp	byte ptr [rsi + rbx], -0x41
ffffffff80020da4: 0f 8e b6 fe ff ff    	jle	0xffffffff80020c60 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff80020daa: eb 51                	jmp	0xffffffff80020dfd <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1dd>
ffffffff80020dac: 41 80 c3 0f          	add	r11b, 0xf
ffffffff80020db0: 41 80 fb 02          	cmp	r11b, 0x2
ffffffff80020db4: 77 42                	ja	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020db6: 80 fb c0             	cmp	bl, -0x40
ffffffff80020db9: 7d 3d                	jge	0xffffffff80020df8 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff80020dbb: 4c 8d 59 02          	lea	r11, [rcx + 0x2]
ffffffff80020dbf: 49 39 d3             	cmp	r11, rdx
ffffffff80020dc2: 73 2f                	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020dc4: 42 80 3c 1e bf       	cmp	byte ptr [rsi + r11], -0x41
ffffffff80020dc9: 7f 32                	jg	0xffffffff80020dfd <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1dd>
ffffffff80020dcb: 48 8d 59 03          	lea	rbx, [rcx + 0x3]
ffffffff80020dcf: 48 39 d3             	cmp	rbx, rdx
ffffffff80020dd2: 73 1f                	jae	0xffffffff80020df3 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff80020dd4: 80 3c 1e bf          	cmp	byte ptr [rsi + rbx], -0x41
ffffffff80020dd8: 0f 8e 82 fe ff ff    	jle	0xffffffff80020c60 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff80020dde: 41 b3 03             	mov	r11b, 0x3
ffffffff80020de1: eb 1d                	jmp	0xffffffff80020e00 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff80020de3: 48 89 70 08          	mov	qword ptr [rax + 0x8], rsi
ffffffff80020de7: 48 89 50 10          	mov	qword ptr [rax + 0x10], rdx
ffffffff80020deb: 31 c9                	xor	ecx, ecx
ffffffff80020ded: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff80020df0: 5b                   	pop	rbx
ffffffff80020df1: 5d                   	pop	rbp
ffffffff80020df2: c3                   	ret
ffffffff80020df3: 45 31 c9             	xor	r9d, r9d
ffffffff80020df6: eb 08                	jmp	0xffffffff80020e00 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff80020df8: 41 b3 01             	mov	r11b, 0x1
ffffffff80020dfb: eb 03                	jmp	0xffffffff80020e00 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff80020dfd: 41 b3 02             	mov	r11b, 0x2
ffffffff80020e00: 48 89 48 08          	mov	qword ptr [rax + 0x8], rcx
ffffffff80020e04: 44 88 48 10          	mov	byte ptr [rax + 0x10], r9b
ffffffff80020e08: 44 88 58 11          	mov	byte ptr [rax + 0x11], r11b
ffffffff80020e0c: b9 01 00 00 00       	mov	ecx, 0x1
ffffffff80020e11: 48 89 08             	mov	qword ptr [rax], rcx
ffffffff80020e14: 5b                   	pop	rbx
ffffffff80020e15: 5d                   	pop	rbp
ffffffff80020e16: c3                   	ret
ffffffff80020e17: cc                   	int3
ffffffff80020e18: cc                   	int3
ffffffff80020e19: cc                   	int3
ffffffff80020e1a: cc                   	int3
ffffffff80020e1b: cc                   	int3
ffffffff80020e1c: cc                   	int3
ffffffff80020e1d: cc                   	int3
ffffffff80020e1e: cc                   	int3
ffffffff80020e1f: cc                   	int3

ffffffff80020e20 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hf422cc9558ab796f>:
ffffffff80020e20: 48 83 ec 68          	sub	rsp, 0x68
ffffffff80020e24: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80020e29: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff80020e2e: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80020e33: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80020e38: 48 c7 44 24 20 10 04 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffdfbf0
ffffffff80020e41: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80020e46: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80020e4b: 48 c7 44 24 30 10 04 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffdfbf0
ffffffff80020e54: 48 c7 44 24 38 b8 a2 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffd5d48
ffffffff80020e5d: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff80020e66: 48 c7 44 24 58 00 00 00 00   	mov	qword ptr [rsp + 0x58], 0x0
ffffffff80020e6f: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80020e74: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80020e79: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff80020e82: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff80020e87: 48 89 d6             	mov	rsi, rdx
ffffffff80020e8a: e8 e1 01 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80020e8f: cc                   	int3

ffffffff80020e90 <core::slice::index::slice_index_order_fail::do_panic::runtime::h5dcd4177f85ee9e4>:
ffffffff80020e90: 48 83 ec 68          	sub	rsp, 0x68
ffffffff80020e94: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80020e99: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff80020e9e: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80020ea3: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80020ea8: 48 c7 44 24 20 10 04 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffdfbf0
ffffffff80020eb1: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80020eb6: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff80020ebb: 48 c7 44 24 30 10 04 02 80   	mov	qword ptr [rsp + 0x30], -0x7ffdfbf0
ffffffff80020ec4: 48 c7 44 24 38 00 a3 02 80   	mov	qword ptr [rsp + 0x38], -0x7ffd5d00
ffffffff80020ecd: 48 c7 44 24 40 02 00 00 00   	mov	qword ptr [rsp + 0x40], 0x2
ffffffff80020ed6: 48 c7 44 24 58 00 00 00 00   	mov	qword ptr [rsp + 0x58], 0x0
ffffffff80020edf: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff80020ee4: 48 89 44 24 48       	mov	qword ptr [rsp + 0x48], rax
ffffffff80020ee9: 48 c7 44 24 50 02 00 00 00   	mov	qword ptr [rsp + 0x50], 0x2
ffffffff80020ef2: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff80020ef7: 48 89 d6             	mov	rsi, rdx
ffffffff80020efa: e8 71 01 00 00       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80020eff: cc                   	int3

ffffffff80020f00 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb>:
ffffffff80020f00: 50                   	push	rax
ffffffff80020f01: 89 f8                	mov	eax, edi
ffffffff80020f03: c1 e0 0b             	shl	eax, 0xb
ffffffff80020f06: 31 c9                	xor	ecx, ecx
ffffffff80020f08: 81 ff 2f 18 01 00    	cmp	edi, 0x1182f
ffffffff80020f0e: ba 11 00 00 00       	mov	edx, 0x11
ffffffff80020f13: 48 0f 42 d1          	cmovb	rdx, rcx
ffffffff80020f17: 48 8d 4a 08          	lea	rcx, [rdx + 0x8]
ffffffff80020f1b: 8b 34 95 f0 a3 02 80 	mov	esi, dword ptr [4*rdx - 0x7ffd5c10]
ffffffff80020f22: c1 e6 0b             	shl	esi, 0xb
ffffffff80020f25: 39 c6                	cmp	esi, eax
ffffffff80020f27: 48 0f 47 ca          	cmova	rcx, rdx
ffffffff80020f2b: 48 8d 51 04          	lea	rdx, [rcx + 0x4]
ffffffff80020f2f: 8b 34 8d e0 a3 02 80 	mov	esi, dword ptr [4*rcx - 0x7ffd5c20]
ffffffff80020f36: c1 e6 0b             	shl	esi, 0xb
ffffffff80020f39: 39 c6                	cmp	esi, eax
ffffffff80020f3b: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff80020f3f: 48 8d 4a 02          	lea	rcx, [rdx + 0x2]
ffffffff80020f43: 8b 34 95 d8 a3 02 80 	mov	esi, dword ptr [4*rdx - 0x7ffd5c28]
ffffffff80020f4a: c1 e6 0b             	shl	esi, 0xb
ffffffff80020f4d: 39 c6                	cmp	esi, eax
ffffffff80020f4f: 48 0f 47 ca          	cmova	rcx, rdx
ffffffff80020f53: 48 8d 51 01          	lea	rdx, [rcx + 0x1]
ffffffff80020f57: 8b 34 8d d4 a3 02 80 	mov	esi, dword ptr [4*rcx - 0x7ffd5c2c]
ffffffff80020f5e: c1 e6 0b             	shl	esi, 0xb
ffffffff80020f61: 39 c6                	cmp	esi, eax
ffffffff80020f63: 48 0f 47 d1          	cmova	rdx, rcx
ffffffff80020f67: 48 8d 72 01          	lea	rsi, [rdx + 0x1]
ffffffff80020f6b: 8b 0c 95 d4 a3 02 80 	mov	ecx, dword ptr [4*rdx - 0x7ffd5c2c]
ffffffff80020f72: c1 e1 0b             	shl	ecx, 0xb
ffffffff80020f75: 39 c1                	cmp	ecx, eax
ffffffff80020f77: 48 0f 47 f2          	cmova	rsi, rdx
ffffffff80020f7b: 8b 14 b5 d0 a3 02 80 	mov	edx, dword ptr [4*rsi - 0x7ffd5c30]
ffffffff80020f82: c1 e2 0b             	shl	edx, 0xb
ffffffff80020f85: 31 c9                	xor	ecx, ecx
ffffffff80020f87: 39 c2                	cmp	edx, eax
ffffffff80020f89: 0f 94 c1             	sete	cl
ffffffff80020f8c: 48 11 f1             	adc	rcx, rsi
ffffffff80020f8f: 48 83 f9 21          	cmp	rcx, 0x21
ffffffff80020f93: 0f 87 b4 00 00 00    	ja	0xffffffff8002104d <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x14d>
ffffffff80020f99: 8b 04 8d d0 a3 02 80 	mov	eax, dword ptr [4*rcx - 0x7ffd5c30]
ffffffff80020fa0: c1 e8 15             	shr	eax, 0x15
ffffffff80020fa3: ba ef 02 00 00       	mov	edx, 0x2ef
ffffffff80020fa8: 48 83 f9 21          	cmp	rcx, 0x21
ffffffff80020fac: 74 0f                	je	0xffffffff80020fbd <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xbd>
ffffffff80020fae: 8b 14 8d d4 a3 02 80 	mov	edx, dword ptr [4*rcx - 0x7ffd5c2c]
ffffffff80020fb5: c1 ea 15             	shr	edx, 0x15
ffffffff80020fb8: 48 85 c9             	test	rcx, rcx
ffffffff80020fbb: 74 61                	je	0xffffffff8002101e <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x11e>
ffffffff80020fbd: 49 c7 c0 fc ff ff ff 	mov	r8, -0x4
ffffffff80020fc4: be ff ff 1f 00       	mov	esi, 0x1fffff
ffffffff80020fc9: 41 23 b4 88 d0 a3 02 80      	and	esi, dword ptr [r8 + 4*rcx - 0x7ffd5c30]
ffffffff80020fd1: 48 89 c1             	mov	rcx, rax
ffffffff80020fd4: 48 f7 d1             	not	rcx
ffffffff80020fd7: 48 01 d1             	add	rcx, rdx
ffffffff80020fda: 74 37                	je	0xffffffff80021013 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x113>
ffffffff80020fdc: 29 f7                	sub	edi, esi
ffffffff80020fde: 48 ff ca             	dec	rdx
ffffffff80020fe1: 31 c9                	xor	ecx, ecx
ffffffff80020fe3: 48 89 c6             	mov	rsi, rax
ffffffff80020fe6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
ffffffff80020ff0: 48 81 fe ee 02 00 00 	cmp	rsi, 0x2ee
ffffffff80020ff7: 77 34                	ja	0xffffffff8002102d <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x12d>
ffffffff80020ff9: 44 0f b6 86 58 a4 02 80      	movzx	r8d, byte ptr [rsi - 0x7ffd5ba8]
ffffffff80021001: 44 01 c1             	add	ecx, r8d
ffffffff80021004: 39 f9                	cmp	ecx, edi
ffffffff80021006: 77 0f                	ja	0xffffffff80021017 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x117>
ffffffff80021008: 48 ff c6             	inc	rsi
ffffffff8002100b: 48 39 f2             	cmp	rdx, rsi
ffffffff8002100e: 75 e0                	jne	0xffffffff80020ff0 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xf0>
ffffffff80021010: 48 89 d0             	mov	rax, rdx
ffffffff80021013: 24 01                	and	al, 0x1
ffffffff80021015: 59                   	pop	rcx
ffffffff80021016: c3                   	ret
ffffffff80021017: 48 89 f0             	mov	rax, rsi
ffffffff8002101a: 24 01                	and	al, 0x1
ffffffff8002101c: 59                   	pop	rcx
ffffffff8002101d: c3                   	ret
ffffffff8002101e: 31 f6                	xor	esi, esi
ffffffff80021020: 48 89 c1             	mov	rcx, rax
ffffffff80021023: 48 f7 d1             	not	rcx
ffffffff80021026: 48 01 d1             	add	rcx, rdx
ffffffff80021029: 75 b1                	jne	0xffffffff80020fdc <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xdc>
ffffffff8002102b: eb e6                	jmp	0xffffffff80021013 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x113>
ffffffff8002102d: 48 3d f0 02 00 00    	cmp	rax, 0x2f0
ffffffff80021033: bf ef 02 00 00       	mov	edi, 0x2ef
ffffffff80021038: 48 0f 43 f8          	cmovae	rdi, rax
ffffffff8002103c: be ef 02 00 00       	mov	esi, 0x2ef
ffffffff80021041: 48 c7 c2 b8 a3 02 80 	mov	rdx, -0x7ffd5c48
ffffffff80021048: e8 44 01 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8002104d: be 22 00 00 00       	mov	esi, 0x22
ffffffff80021052: 48 89 cf             	mov	rdi, rcx
ffffffff80021055: 48 c7 c2 a0 a3 02 80 	mov	rdx, -0x7ffd5c60
ffffffff8002105c: e8 30 01 00 00       	call	0xffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80021061: cc                   	int3
ffffffff80021062: cc                   	int3
ffffffff80021063: cc                   	int3
ffffffff80021064: cc                   	int3
ffffffff80021065: cc                   	int3
ffffffff80021066: cc                   	int3
ffffffff80021067: cc                   	int3
ffffffff80021068: cc                   	int3
ffffffff80021069: cc                   	int3
ffffffff8002106a: cc                   	int3
ffffffff8002106b: cc                   	int3
ffffffff8002106c: cc                   	int3
ffffffff8002106d: cc                   	int3
ffffffff8002106e: cc                   	int3
ffffffff8002106f: cc                   	int3

ffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>:
ffffffff80021070: 48 83 ec 18          	sub	rsp, 0x18
ffffffff80021074: 48 89 3c 24          	mov	qword ptr [rsp], rdi
ffffffff80021078: 48 89 74 24 08       	mov	qword ptr [rsp + 0x8], rsi
ffffffff8002107d: 66 c7 44 24 10 01 00 	mov	word ptr [rsp + 0x10], 0x1
ffffffff80021084: 48 89 e7             	mov	rdi, rsp
ffffffff80021087: e8 24 f0 fd ff       	call	0xffffffff800000b0 <rust_begin_unwind>
ffffffff8002108c: cc                   	int3
ffffffff8002108d: cc                   	int3
ffffffff8002108e: cc                   	int3
ffffffff8002108f: cc                   	int3

ffffffff80021090 <core::panicking::panic_nounwind_fmt::hfff70d18e33a2d27>:
ffffffff80021090: 48 83 ec 48          	sub	rsp, 0x48
ffffffff80021094: 48 8b 47 28          	mov	rax, qword ptr [rdi + 0x28]
ffffffff80021098: 48 89 44 24 40       	mov	qword ptr [rsp + 0x40], rax
ffffffff8002109d: 48 8b 47 20          	mov	rax, qword ptr [rdi + 0x20]
ffffffff800210a1: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800210a6: 48 8b 47 18          	mov	rax, qword ptr [rdi + 0x18]
ffffffff800210aa: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800210af: 48 8b 47 10          	mov	rax, qword ptr [rdi + 0x10]
ffffffff800210b3: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff800210b8: 48 8b 07             	mov	rax, qword ptr [rdi]
ffffffff800210bb: 48 8b 4f 08          	mov	rcx, qword ptr [rdi + 0x8]
ffffffff800210bf: 48 89 4c 24 20       	mov	qword ptr [rsp + 0x20], rcx
ffffffff800210c4: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff800210c9: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff800210ce: 48 89 04 24          	mov	qword ptr [rsp], rax
ffffffff800210d2: 48 89 54 24 08       	mov	qword ptr [rsp + 0x8], rdx
ffffffff800210d7: c6 44 24 10 00       	mov	byte ptr [rsp + 0x10], 0x0
ffffffff800210dc: 40 88 74 24 11       	mov	byte ptr [rsp + 0x11], sil
ffffffff800210e1: 48 89 e7             	mov	rdi, rsp
ffffffff800210e4: e8 c7 ef fd ff       	call	0xffffffff800000b0 <rust_begin_unwind>
ffffffff800210e9: cc                   	int3
ffffffff800210ea: cc                   	int3
ffffffff800210eb: cc                   	int3
ffffffff800210ec: cc                   	int3
ffffffff800210ed: cc                   	int3
ffffffff800210ee: cc                   	int3
ffffffff800210ef: cc                   	int3

ffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>:
ffffffff800210f0: 48 83 ec 48          	sub	rsp, 0x48
ffffffff800210f4: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff800210f9: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff800210fe: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80021103: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80021108: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff80021111: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff8002111a: 48 c7 44 24 28 08 00 00 00   	mov	qword ptr [rsp + 0x28], 0x8
ffffffff80021123: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 0x30], 0x0
ffffffff8002112c: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff80021131: 48 89 d6             	mov	rsi, rdx
ffffffff80021134: e8 37 ff ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80021139: cc                   	int3
ffffffff8002113a: cc                   	int3
ffffffff8002113b: cc                   	int3
ffffffff8002113c: cc                   	int3
ffffffff8002113d: cc                   	int3
ffffffff8002113e: cc                   	int3
ffffffff8002113f: cc                   	int3

ffffffff80021140 <core::panicking::panic_explicit::h5f61e47075b4a264>:
ffffffff80021140: 48 83 ec 48          	sub	rsp, 0x48
ffffffff80021144: 48 89 fe             	mov	rsi, rdi
ffffffff80021147: 48 c7 44 24 08 58 a7 02 80   	mov	qword ptr [rsp + 0x8], -0x7ffd58a8
ffffffff80021150: 48 c7 44 24 10 00 f4 01 80   	mov	qword ptr [rsp + 0x10], -0x7ffe0c00
ffffffff80021159: 48 c7 44 24 18 e0 36 02 80   	mov	qword ptr [rsp + 0x18], -0x7ffdc920
ffffffff80021162: 48 c7 44 24 20 01 00 00 00   	mov	qword ptr [rsp + 0x20], 0x1
ffffffff8002116b: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 0x38], 0x0
ffffffff80021174: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80021179: 48 89 44 24 28       	mov	qword ptr [rsp + 0x28], rax
ffffffff8002117e: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff80021187: 48 8d 7c 24 18       	lea	rdi, [rsp + 0x18]
ffffffff8002118c: e8 df fe ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>

ffffffff80021191 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>:
ffffffff80021191: 48 83 ec 68          	sub	rsp, 0x68
ffffffff80021195: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff8002119a: 48 89 38             	mov	qword ptr [rax], rdi
ffffffff8002119d: 48 8d 4c 24 10       	lea	rcx, [rsp + 0x10]
ffffffff800211a2: 48 89 31             	mov	qword ptr [rcx], rsi
ffffffff800211a5: 48 8d 74 24 18       	lea	rsi, [rsp + 0x18]
ffffffff800211aa: 48 89 0e             	mov	qword ptr [rsi], rcx
ffffffff800211ad: 48 c7 46 08 10 04 02 80      	mov	qword ptr [rsi + 0x8], -0x7ffdfbf0
ffffffff800211b5: 48 8d 7c 24 38       	lea	rdi, [rsp + 0x38]
ffffffff800211ba: 48 c7 07 80 a7 02 80 	mov	qword ptr [rdi], -0x7ffd5880
ffffffff800211c1: 6a 02                	push	0x2
ffffffff800211c3: 59                   	pop	rcx
ffffffff800211c4: 48 89 4f 08          	mov	qword ptr [rdi + 0x8], rcx
ffffffff800211c8: 48 83 67 20 00       	and	qword ptr [rdi + 0x20], 0x0
ffffffff800211cd: 48 89 46 10          	mov	qword ptr [rsi + 0x10], rax
ffffffff800211d1: 48 c7 46 18 10 04 02 80      	mov	qword ptr [rsi + 0x18], -0x7ffdfbf0
ffffffff800211d9: 48 89 77 10          	mov	qword ptr [rdi + 0x10], rsi
ffffffff800211dd: 48 89 4f 18          	mov	qword ptr [rdi + 0x18], rcx
ffffffff800211e1: 48 89 d6             	mov	rsi, rdx
ffffffff800211e4: e8 87 fe ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff800211e9: cc                   	int3
ffffffff800211ea: cc                   	int3
ffffffff800211eb: cc                   	int3
ffffffff800211ec: cc                   	int3
ffffffff800211ed: cc                   	int3
ffffffff800211ee: cc                   	int3
ffffffff800211ef: cc                   	int3

ffffffff800211f0 <core::str::slice_error_fail::h119858e2b5d21404>:
ffffffff800211f0: 50                   	push	rax
ffffffff800211f1: e8 0a 00 00 00       	call	0xffffffff80021200 <core::str::slice_error_fail_rt::h16b33285e184e925>
ffffffff800211f6: cc                   	int3
ffffffff800211f7: cc                   	int3
ffffffff800211f8: cc                   	int3
ffffffff800211f9: cc                   	int3
ffffffff800211fa: cc                   	int3
ffffffff800211fb: cc                   	int3
ffffffff800211fc: cc                   	int3
ffffffff800211fd: cc                   	int3
ffffffff800211fe: cc                   	int3
ffffffff800211ff: cc                   	int3

ffffffff80021200 <core::str::slice_error_fail_rt::h16b33285e184e925>:
ffffffff80021200: 48 81 ec d8 00 00 00 	sub	rsp, 0xd8
ffffffff80021207: 48 89 94 24 c0 00 00 00      	mov	qword ptr [rsp + 0xc0], rdx
ffffffff8002120f: 48 89 8c 24 c8 00 00 00      	mov	qword ptr [rsp + 0xc8], rcx
ffffffff80021217: 48 81 fe 01 01 00 00 	cmp	rsi, 0x101
ffffffff8002121e: 72 5a                	jb	0xffffffff8002127a <core::str::slice_error_fail_rt::h16b33285e184e925+0x7a>
ffffffff80021220: 41 b9 03 00 00 00    	mov	r9d, 0x3
ffffffff80021226: 80 bf 00 01 00 00 bf 	cmp	byte ptr [rdi + 0x100], -0x41
ffffffff8002122d: 7f 1d                	jg	0xffffffff8002124c <core::str::slice_error_fail_rt::h16b33285e184e925+0x4c>
ffffffff8002122f: 41 b9 02 00 00 00    	mov	r9d, 0x2
ffffffff80021235: 80 bf ff 00 00 00 bf 	cmp	byte ptr [rdi + 0xff], -0x41
ffffffff8002123c: 7f 0e                	jg	0xffffffff8002124c <core::str::slice_error_fail_rt::h16b33285e184e925+0x4c>
ffffffff8002123e: 45 31 c9             	xor	r9d, r9d
ffffffff80021241: 80 bf fe 00 00 00 c0 	cmp	byte ptr [rdi + 0xfe], -0x40
ffffffff80021248: 41 0f 9d c1          	setge	r9b
ffffffff8002124c: 49 8d 81 fd 00 00 00 	lea	rax, [r9 + 0xfd]
ffffffff80021253: 42 80 bc 0f fd 00 00 00 bf   	cmp	byte ptr [rdi + r9 + 0xfd], -0x41
ffffffff8002125c: 0f 8e b0 00 00 00    	jle	0xffffffff80021312 <core::str::slice_error_fail_rt::h16b33285e184e925+0x112>
ffffffff80021262: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff80021267: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff8002126c: b8 05 00 00 00       	mov	eax, 0x5
ffffffff80021271: 49 c7 c1 13 a8 02 80 	mov	r9, -0x7ffd57ed
ffffffff80021278: eb 12                	jmp	0xffffffff8002128c <core::str::slice_error_fail_rt::h16b33285e184e925+0x8c>
ffffffff8002127a: 48 89 7c 24 10       	mov	qword ptr [rsp + 0x10], rdi
ffffffff8002127f: 48 89 74 24 18       	mov	qword ptr [rsp + 0x18], rsi
ffffffff80021284: 41 b9 01 00 00 00    	mov	r9d, 0x1
ffffffff8002128a: 31 c0                	xor	eax, eax
ffffffff8002128c: 4c 89 8c 24 a0 00 00 00      	mov	qword ptr [rsp + 0xa0], r9
ffffffff80021294: 48 89 84 24 a8 00 00 00      	mov	qword ptr [rsp + 0xa8], rax
ffffffff8002129c: 48 39 f2             	cmp	rdx, rsi
ffffffff8002129f: 0f 87 63 02 00 00    	ja	0xffffffff80021508 <core::str::slice_error_fail_rt::h16b33285e184e925+0x308>
ffffffff800212a5: 48 39 f1             	cmp	rcx, rsi
ffffffff800212a8: 0f 87 5a 02 00 00    	ja	0xffffffff80021508 <core::str::slice_error_fail_rt::h16b33285e184e925+0x308>
ffffffff800212ae: 48 39 ca             	cmp	rdx, rcx
ffffffff800212b1: 0f 87 da 02 00 00    	ja	0xffffffff80021591 <core::str::slice_error_fail_rt::h16b33285e184e925+0x391>
ffffffff800212b7: 48 85 d2             	test	rdx, rdx
ffffffff800212ba: 0f 94 c0             	sete	al
ffffffff800212bd: 48 39 f2             	cmp	rdx, rsi
ffffffff800212c0: 41 0f 93 c1          	setae	r9b
ffffffff800212c4: 41 08 c1             	or	r9b, al
ffffffff800212c7: 75 08                	jne	0xffffffff800212d1 <core::str::slice_error_fail_rt::h16b33285e184e925+0xd1>
ffffffff800212c9: 80 3c 17 c0          	cmp	byte ptr [rdi + rdx], -0x40
ffffffff800212cd: 48 0f 4c ca          	cmovl	rcx, rdx
ffffffff800212d1: 48 89 8c 24 d0 00 00 00      	mov	qword ptr [rsp + 0xd0], rcx
ffffffff800212d9: 48 89 f2             	mov	rdx, rsi
ffffffff800212dc: 48 39 f1             	cmp	rcx, rsi
ffffffff800212df: 0f 83 8c 00 00 00    	jae	0xffffffff80021371 <core::str::slice_error_fail_rt::h16b33285e184e925+0x171>
ffffffff800212e5: 31 c0                	xor	eax, eax
ffffffff800212e7: 48 89 ca             	mov	rdx, rcx
ffffffff800212ea: 48 83 ea 03          	sub	rdx, 0x3
ffffffff800212ee: 48 0f 43 c2          	cmovae	rax, rdx
ffffffff800212f2: 4c 8d 49 01          	lea	r9, [rcx + 0x1]
ffffffff800212f6: 49 39 c1             	cmp	r9, rax
ffffffff800212f9: 0f 82 28 03 00 00    	jb	0xffffffff80021627 <core::str::slice_error_fail_rt::h16b33285e184e925+0x427>
ffffffff800212ff: 4c 89 ca             	mov	rdx, r9
ffffffff80021302: 48 29 c2             	sub	rdx, rax
ffffffff80021305: 74 67                	je	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021307: 80 3c 0f bf          	cmp	byte ptr [rdi + rcx], -0x41
ffffffff8002130b: 7e 0f                	jle	0xffffffff8002131c <core::str::slice_error_fail_rt::h16b33285e184e925+0x11c>
ffffffff8002130d: 48 ff ca             	dec	rdx
ffffffff80021310: eb 5c                	jmp	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021312: 31 d2                	xor	edx, edx
ffffffff80021314: 48 89 c1             	mov	rcx, rax
ffffffff80021317: e8 d4 fe ff ff       	call	0xffffffff800211f0 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8002131c: 48 39 c8             	cmp	rax, rcx
ffffffff8002131f: 74 4d                	je	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021321: 49 01 f9             	add	r9, rdi
ffffffff80021324: 41 80 79 fe bf       	cmp	byte ptr [r9 - 0x2], -0x41
ffffffff80021329: 7e 06                	jle	0xffffffff80021331 <core::str::slice_error_fail_rt::h16b33285e184e925+0x131>
ffffffff8002132b: 48 83 c2 fe          	add	rdx, -0x2
ffffffff8002132f: eb 3d                	jmp	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021331: 48 8d 0c 07          	lea	rcx, [rdi + rax]
ffffffff80021335: 4d 8d 51 fe          	lea	r10, [r9 - 0x2]
ffffffff80021339: 4c 39 d1             	cmp	rcx, r10
ffffffff8002133c: 74 30                	je	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8002133e: 41 80 79 fd bf       	cmp	byte ptr [r9 - 0x3], -0x41
ffffffff80021343: 7e 06                	jle	0xffffffff8002134b <core::str::slice_error_fail_rt::h16b33285e184e925+0x14b>
ffffffff80021345: 48 83 c2 fd          	add	rdx, -0x3
ffffffff80021349: eb 23                	jmp	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8002134b: 4d 8d 51 fd          	lea	r10, [r9 - 0x3]
ffffffff8002134f: 4c 39 d1             	cmp	rcx, r10
ffffffff80021352: 74 1a                	je	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021354: 41 80 79 fc bf       	cmp	byte ptr [r9 - 0x4], -0x41
ffffffff80021359: 7e 06                	jle	0xffffffff80021361 <core::str::slice_error_fail_rt::h16b33285e184e925+0x161>
ffffffff8002135b: 48 83 c2 fc          	add	rdx, -0x4
ffffffff8002135f: eb 0d                	jmp	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff80021361: 49 83 c1 fc          	add	r9, -0x4
ffffffff80021365: 4c 39 c9             	cmp	rcx, r9
ffffffff80021368: 74 04                	je	0xffffffff8002136e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8002136a: 48 83 c2 fb          	add	rdx, -0x5
ffffffff8002136e: 48 01 c2             	add	rdx, rax
ffffffff80021371: 48 85 d2             	test	rdx, rdx
ffffffff80021374: 75 0d                	jne	0xffffffff80021383 <core::str::slice_error_fail_rt::h16b33285e184e925+0x183>
ffffffff80021376: 48 39 f2             	cmp	rdx, rsi
ffffffff80021379: 75 15                	jne	0xffffffff80021390 <core::str::slice_error_fail_rt::h16b33285e184e925+0x190>
ffffffff8002137b: 4c 89 c7             	mov	rdi, r8
ffffffff8002137e: e8 bd 02 00 00       	call	0xffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80021383: 48 39 f2             	cmp	rdx, rsi
ffffffff80021386: 73 1e                	jae	0xffffffff800213a6 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1a6>
ffffffff80021388: 80 3c 17 bf          	cmp	byte ptr [rdi + rdx], -0x41
ffffffff8002138c: 7f e8                	jg	0xffffffff80021376 <core::str::slice_error_fail_rt::h16b33285e184e925+0x176>
ffffffff8002138e: eb 18                	jmp	0xffffffff800213a8 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1a8>
ffffffff80021390: 0f b6 0c 17          	movzx	ecx, byte ptr [rdi + rdx]
ffffffff80021394: 84 c9                	test	cl, cl
ffffffff80021396: 78 18                	js	0xffffffff800213b0 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1b0>
ffffffff80021398: 89 4c 24 0c          	mov	dword ptr [rsp + 0xc], ecx
ffffffff8002139c: b8 01 00 00 00       	mov	eax, 0x1
ffffffff800213a1: e9 a0 00 00 00       	jmp	0xffffffff80021446 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff800213a6: 74 ce                	je	0xffffffff80021376 <core::str::slice_error_fail_rt::h16b33285e184e925+0x176>
ffffffff800213a8: 48 89 f1             	mov	rcx, rsi
ffffffff800213ab: e8 40 fe ff ff       	call	0xffffffff800211f0 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff800213b0: 89 c8                	mov	eax, ecx
ffffffff800213b2: 83 e0 1f             	and	eax, 0x1f
ffffffff800213b5: 44 0f b6 4c 17 01    	movzx	r9d, byte ptr [rdi + rdx + 0x1]
ffffffff800213bb: 41 83 e1 3f          	and	r9d, 0x3f
ffffffff800213bf: 80 f9 df             	cmp	cl, -0x21
ffffffff800213c2: 76 33                	jbe	0xffffffff800213f7 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1f7>
ffffffff800213c4: 0f b6 74 17 02       	movzx	esi, byte ptr [rdi + rdx + 0x2]
ffffffff800213c9: 41 c1 e1 06          	shl	r9d, 0x6
ffffffff800213cd: 83 e6 3f             	and	esi, 0x3f
ffffffff800213d0: 44 09 ce             	or	esi, r9d
ffffffff800213d3: 80 f9 f0             	cmp	cl, -0x10
ffffffff800213d6: 72 3a                	jb	0xffffffff80021412 <core::str::slice_error_fail_rt::h16b33285e184e925+0x212>
ffffffff800213d8: 0f b6 4c 17 03       	movzx	ecx, byte ptr [rdi + rdx + 0x3]
ffffffff800213dd: 83 e0 07             	and	eax, 0x7
ffffffff800213e0: c1 e0 12             	shl	eax, 0x12
ffffffff800213e3: c1 e6 06             	shl	esi, 0x6
ffffffff800213e6: 83 e1 3f             	and	ecx, 0x3f
ffffffff800213e9: 09 f1                	or	ecx, esi
ffffffff800213eb: 09 c1                	or	ecx, eax
ffffffff800213ed: 81 f9 00 00 11 00    	cmp	ecx, 0x110000
ffffffff800213f3: 74 86                	je	0xffffffff8002137b <core::str::slice_error_fail_rt::h16b33285e184e925+0x17b>
ffffffff800213f5: eb 08                	jmp	0xffffffff800213ff <core::str::slice_error_fail_rt::h16b33285e184e925+0x1ff>
ffffffff800213f7: c1 e0 06             	shl	eax, 0x6
ffffffff800213fa: 44 09 c8             	or	eax, r9d
ffffffff800213fd: 89 c1                	mov	ecx, eax
ffffffff800213ff: 89 4c 24 0c          	mov	dword ptr [rsp + 0xc], ecx
ffffffff80021403: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80021408: 81 f9 80 00 00 00    	cmp	ecx, 0x80
ffffffff8002140e: 73 1a                	jae	0xffffffff8002142a <core::str::slice_error_fail_rt::h16b33285e184e925+0x22a>
ffffffff80021410: eb 34                	jmp	0xffffffff80021446 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff80021412: c1 e0 0c             	shl	eax, 0xc
ffffffff80021415: 09 c6                	or	esi, eax
ffffffff80021417: 89 f1                	mov	ecx, esi
ffffffff80021419: 89 4c 24 0c          	mov	dword ptr [rsp + 0xc], ecx
ffffffff8002141d: b8 01 00 00 00       	mov	eax, 0x1
ffffffff80021422: 81 f9 80 00 00 00    	cmp	ecx, 0x80
ffffffff80021428: 72 1c                	jb	0xffffffff80021446 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff8002142a: b8 02 00 00 00       	mov	eax, 0x2
ffffffff8002142f: 81 f9 00 08 00 00    	cmp	ecx, 0x800
ffffffff80021435: 72 0f                	jb	0xffffffff80021446 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff80021437: 81 f9 00 00 01 00    	cmp	ecx, 0x10000
ffffffff8002143d: b8 04 00 00 00       	mov	eax, 0x4
ffffffff80021442: 48 83 d8 00          	sbb	rax, 0x0
ffffffff80021446: 48 01 d0             	add	rax, rdx
ffffffff80021449: 48 89 94 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rdx
ffffffff80021451: 48 89 84 24 b8 00 00 00      	mov	qword ptr [rsp + 0xb8], rax
ffffffff80021459: 48 8d 84 24 d0 00 00 00      	lea	rax, [rsp + 0xd0]
ffffffff80021461: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff80021466: 48 c7 44 24 58 10 04 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfbf0
ffffffff8002146f: 48 8d 44 24 0c       	lea	rax, [rsp + 0xc]
ffffffff80021474: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff80021479: 48 c7 44 24 68 50 f3 01 80   	mov	qword ptr [rsp + 0x68], -0x7ffe0cb0
ffffffff80021482: 48 8d 84 24 b0 00 00 00      	lea	rax, [rsp + 0xb0]
ffffffff8002148a: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8002148f: 48 c7 44 24 78 60 06 02 80   	mov	qword ptr [rsp + 0x78], -0x7ffdf9a0
ffffffff80021498: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff8002149d: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff800214a5: 48 c7 84 24 88 00 00 00 00 f4 01 80  	mov	qword ptr [rsp + 0x88], -0x7ffe0c00
ffffffff800214b1: 48 8d 84 24 a0 00 00 00      	lea	rax, [rsp + 0xa0]
ffffffff800214b9: 48 89 84 24 90 00 00 00      	mov	qword ptr [rsp + 0x90], rax
ffffffff800214c1: 48 c7 84 24 98 00 00 00 00 f4 01 80  	mov	qword ptr [rsp + 0x98], -0x7ffe0c00
ffffffff800214cd: 48 c7 44 24 20 a0 a8 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffd5760
ffffffff800214d6: 48 c7 44 24 28 05 00 00 00   	mov	qword ptr [rsp + 0x28], 0x5
ffffffff800214df: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff800214e8: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff800214ed: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff800214f2: 48 c7 44 24 38 05 00 00 00   	mov	qword ptr [rsp + 0x38], 0x5
ffffffff800214fb: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80021500: 4c 89 c6             	mov	rsi, r8
ffffffff80021503: e8 68 fb ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80021508: 48 39 f2             	cmp	rdx, rsi
ffffffff8002150b: 48 0f 47 ca          	cmova	rcx, rdx
ffffffff8002150f: 48 89 8c 24 b0 00 00 00      	mov	qword ptr [rsp + 0xb0], rcx
ffffffff80021517: 48 8d 84 24 b0 00 00 00      	lea	rax, [rsp + 0xb0]
ffffffff8002151f: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff80021524: 48 c7 44 24 58 10 04 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfbf0
ffffffff8002152d: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff80021532: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff80021537: 48 c7 44 24 68 00 f4 01 80   	mov	qword ptr [rsp + 0x68], -0x7ffe0c00
ffffffff80021540: 48 8d 84 24 a0 00 00 00      	lea	rax, [rsp + 0xa0]
ffffffff80021548: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff8002154d: 48 c7 44 24 78 00 f4 01 80   	mov	qword ptr [rsp + 0x78], -0x7ffe0c00
ffffffff80021556: 48 c7 44 24 20 08 a9 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffd56f8
ffffffff8002155f: 48 c7 44 24 28 03 00 00 00   	mov	qword ptr [rsp + 0x28], 0x3
ffffffff80021568: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff80021571: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff80021576: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff8002157b: 48 c7 44 24 38 03 00 00 00   	mov	qword ptr [rsp + 0x38], 0x3
ffffffff80021584: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff80021589: 4c 89 c6             	mov	rsi, r8
ffffffff8002158c: e8 df fa ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80021591: 48 8d 84 24 c0 00 00 00      	lea	rax, [rsp + 0xc0]
ffffffff80021599: 48 89 44 24 50       	mov	qword ptr [rsp + 0x50], rax
ffffffff8002159e: 48 c7 44 24 58 10 04 02 80   	mov	qword ptr [rsp + 0x58], -0x7ffdfbf0
ffffffff800215a7: 48 8d 84 24 c8 00 00 00      	lea	rax, [rsp + 0xc8]
ffffffff800215af: 48 89 44 24 60       	mov	qword ptr [rsp + 0x60], rax
ffffffff800215b4: 48 c7 44 24 68 10 04 02 80   	mov	qword ptr [rsp + 0x68], -0x7ffdfbf0
ffffffff800215bd: 48 8d 44 24 10       	lea	rax, [rsp + 0x10]
ffffffff800215c2: 48 89 44 24 70       	mov	qword ptr [rsp + 0x70], rax
ffffffff800215c7: 48 c7 44 24 78 00 f4 01 80   	mov	qword ptr [rsp + 0x78], -0x7ffe0c00
ffffffff800215d0: 48 8d 84 24 a0 00 00 00      	lea	rax, [rsp + 0xa0]
ffffffff800215d8: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 0x80], rax
ffffffff800215e0: 48 c7 84 24 88 00 00 00 00 f4 01 80  	mov	qword ptr [rsp + 0x88], -0x7ffe0c00
ffffffff800215ec: 48 c7 44 24 20 28 a8 02 80   	mov	qword ptr [rsp + 0x20], -0x7ffd57d8
ffffffff800215f5: 48 c7 44 24 28 04 00 00 00   	mov	qword ptr [rsp + 0x28], 0x4
ffffffff800215fe: 48 c7 44 24 40 00 00 00 00   	mov	qword ptr [rsp + 0x40], 0x0
ffffffff80021607: 48 8d 44 24 50       	lea	rax, [rsp + 0x50]
ffffffff8002160c: 48 89 44 24 30       	mov	qword ptr [rsp + 0x30], rax
ffffffff80021611: 48 c7 44 24 38 04 00 00 00   	mov	qword ptr [rsp + 0x38], 0x4
ffffffff8002161a: 48 8d 7c 24 20       	lea	rdi, [rsp + 0x20]
ffffffff8002161f: 4c 89 c6             	mov	rsi, r8
ffffffff80021622: e8 49 fa ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80021627: 48 89 c7             	mov	rdi, rax
ffffffff8002162a: 4c 89 ce             	mov	rsi, r9
ffffffff8002162d: 48 c7 c2 38 a9 02 80 	mov	rdx, -0x7ffd56c8
ffffffff80021634: e8 d7 f5 ff ff       	call	0xffffffff80020c10 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff80021639: cc                   	int3
ffffffff8002163a: cc                   	int3
ffffffff8002163b: cc                   	int3
ffffffff8002163c: cc                   	int3
ffffffff8002163d: cc                   	int3
ffffffff8002163e: cc                   	int3
ffffffff8002163f: cc                   	int3

ffffffff80021640 <core::option::unwrap_failed::hd8ef34c781aa10a4>:
ffffffff80021640: 50                   	push	rax
ffffffff80021641: 48 89 fa             	mov	rdx, rdi
ffffffff80021644: be 2b 00 00 00       	mov	esi, 0x2b
ffffffff80021649: 48 c7 c7 50 a9 02 80 	mov	rdi, -0x7ffd56b0
ffffffff80021650: e8 9b fa ff ff       	call	0xffffffff800210f0 <core::panicking::panic::h8fe0944795198edd>
ffffffff80021655: cc                   	int3
ffffffff80021656: cc                   	int3
ffffffff80021657: cc                   	int3
ffffffff80021658: cc                   	int3
ffffffff80021659: cc                   	int3
ffffffff8002165a: cc                   	int3
ffffffff8002165b: cc                   	int3
ffffffff8002165c: cc                   	int3
ffffffff8002165d: cc                   	int3
ffffffff8002165e: cc                   	int3
ffffffff8002165f: cc                   	int3

ffffffff80021660 <core::option::expect_failed::h9503e6b4ddc453dd>:
ffffffff80021660: 48 83 ec 58          	sub	rsp, 0x58
ffffffff80021664: 48 89 7c 24 08       	mov	qword ptr [rsp + 0x8], rdi
ffffffff80021669: 48 89 74 24 10       	mov	qword ptr [rsp + 0x10], rsi
ffffffff8002166e: 48 8d 44 24 08       	lea	rax, [rsp + 0x8]
ffffffff80021673: 48 89 44 24 18       	mov	qword ptr [rsp + 0x18], rax
ffffffff80021678: 48 c7 44 24 20 00 f4 01 80   	mov	qword ptr [rsp + 0x20], -0x7ffe0c00
ffffffff80021681: 48 c7 44 24 28 e0 36 02 80   	mov	qword ptr [rsp + 0x28], -0x7ffdc920
ffffffff8002168a: 48 c7 44 24 30 01 00 00 00   	mov	qword ptr [rsp + 0x30], 0x1
ffffffff80021693: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 0x48], 0x0
ffffffff8002169c: 48 8d 44 24 18       	lea	rax, [rsp + 0x18]
ffffffff800216a1: 48 89 44 24 38       	mov	qword ptr [rsp + 0x38], rax
ffffffff800216a6: 48 c7 44 24 40 01 00 00 00   	mov	qword ptr [rsp + 0x40], 0x1
ffffffff800216af: 48 8d 7c 24 28       	lea	rdi, [rsp + 0x28]
ffffffff800216b4: 48 89 d6             	mov	rsi, rdx
ffffffff800216b7: e8 b4 f9 ff ff       	call	0xffffffff80021070 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff800216bc: cc                   	int3
ffffffff800216bd: cc                   	int3
ffffffff800216be: cc                   	int3
ffffffff800216bf: cc                   	int3

ffffffff800216c0 <memmove>:
ffffffff800216c0: 48 89 f8             	mov	rax, rdi
ffffffff800216c3: 48 89 f9             	mov	rcx, rdi
ffffffff800216c6: 48 29 f1             	sub	rcx, rsi
ffffffff800216c9: 41 89 c1             	mov	r9d, eax
ffffffff800216cc: 41 f7 d9             	neg	r9d
ffffffff800216cf: 41 83 e1 07          	and	r9d, 0x7
ffffffff800216d3: 49 39 d1             	cmp	r9, rdx
ffffffff800216d6: 4c 0f 43 ca          	cmovae	r9, rdx
ffffffff800216da: 49 89 d2             	mov	r10, rdx
ffffffff800216dd: 4d 29 ca             	sub	r10, r9
ffffffff800216e0: 4d 89 d0             	mov	r8, r10
ffffffff800216e3: 49 c1 e8 03          	shr	r8, 0x3
ffffffff800216e7: 41 83 e2 07          	and	r10d, 0x7
ffffffff800216eb: 48 39 d1             	cmp	rcx, rdx
ffffffff800216ee: 73 33                	jae	0xffffffff80021723 <memmove+0x63>
ffffffff800216f0: 48 8d 3c 10          	lea	rdi, [rax + rdx]
ffffffff800216f4: 48 ff cf             	dec	rdi
ffffffff800216f7: 48 01 d6             	add	rsi, rdx
ffffffff800216fa: 48 ff ce             	dec	rsi
ffffffff800216fd: 4c 89 d1             	mov	rcx, r10
ffffffff80021700: fd                   	std
ffffffff80021701: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff80021703: 48 83 ee 07          	sub	rsi, 0x7
ffffffff80021707: 48 83 ef 07          	sub	rdi, 0x7
ffffffff8002170b: 4c 89 c1             	mov	rcx, r8
ffffffff8002170e: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80021711: 45 85 c9             	test	r9d, r9d
ffffffff80021714: 48 83 c6 07          	add	rsi, 0x7
ffffffff80021718: 48 83 c7 07          	add	rdi, 0x7
ffffffff8002171c: 44 89 c9             	mov	ecx, r9d
ffffffff8002171f: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff80021721: fc                   	cld
ffffffff80021722: c3                   	ret
ffffffff80021723: 4c 89 c9             	mov	rcx, r9
ffffffff80021726: 48 89 c7             	mov	rdi, rax
ffffffff80021729: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff8002172b: 4c 89 c1             	mov	rcx, r8
ffffffff8002172e: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff80021731: 4c 89 d1             	mov	rcx, r10
ffffffff80021734: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff80021736: c3                   	ret
ffffffff80021737: cc                   	int3
ffffffff80021738: cc                   	int3
ffffffff80021739: cc                   	int3
ffffffff8002173a: cc                   	int3
ffffffff8002173b: cc                   	int3
ffffffff8002173c: cc                   	int3
ffffffff8002173d: cc                   	int3
ffffffff8002173e: cc                   	int3
ffffffff8002173f: cc                   	int3

ffffffff80021740 <strlen>:
ffffffff80021740: 48 89 f9             	mov	rcx, rdi
ffffffff80021743: 48 83 e1 07          	and	rcx, 0x7
ffffffff80021747: 0f 84 8f 00 00 00    	je	0xffffffff800217dc <strlen+0x9c>
ffffffff8002174d: 80 3f 00             	cmp	byte ptr [rdi], 0x0
ffffffff80021750: 0f 84 fd 00 00 00    	je	0xffffffff80021853 <strlen+0x113>
ffffffff80021756: b8 08 00 00 00       	mov	eax, 0x8
ffffffff8002175b: 48 29 c8             	sub	rax, rcx
ffffffff8002175e: 48 f7 d9             	neg	rcx
ffffffff80021761: 48 01 f9             	add	rcx, rdi
ffffffff80021764: 48 83 c1 08          	add	rcx, 0x8
ffffffff80021768: 89 fa                	mov	edx, edi
ffffffff8002176a: f6 d2                	not	dl
ffffffff8002176c: f6 c2 07             	test	dl, 0x7
ffffffff8002176f: 74 70                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff80021771: 80 7f 01 00          	cmp	byte ptr [rdi + 0x1], 0x0
ffffffff80021775: 0f 84 db 00 00 00    	je	0xffffffff80021856 <strlen+0x116>
ffffffff8002177b: 89 fa                	mov	edx, edi
ffffffff8002177d: 80 e2 07             	and	dl, 0x7
ffffffff80021780: 80 fa 06             	cmp	dl, 0x6
ffffffff80021783: 74 5c                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff80021785: 80 7f 02 00          	cmp	byte ptr [rdi + 0x2], 0x0
ffffffff80021789: 0f 84 cd 00 00 00    	je	0xffffffff8002185c <strlen+0x11c>
ffffffff8002178f: 80 fa 05             	cmp	dl, 0x5
ffffffff80021792: 74 4d                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff80021794: 80 7f 03 00          	cmp	byte ptr [rdi + 0x3], 0x0
ffffffff80021798: 0f 84 c4 00 00 00    	je	0xffffffff80021862 <strlen+0x122>
ffffffff8002179e: 80 fa 04             	cmp	dl, 0x4
ffffffff800217a1: 74 3e                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff800217a3: 80 7f 04 00          	cmp	byte ptr [rdi + 0x4], 0x0
ffffffff800217a7: 0f 84 bb 00 00 00    	je	0xffffffff80021868 <strlen+0x128>
ffffffff800217ad: 80 fa 03             	cmp	dl, 0x3
ffffffff800217b0: 74 2f                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff800217b2: 80 7f 05 00          	cmp	byte ptr [rdi + 0x5], 0x0
ffffffff800217b6: 0f 84 b2 00 00 00    	je	0xffffffff8002186e <strlen+0x12e>
ffffffff800217bc: 80 fa 02             	cmp	dl, 0x2
ffffffff800217bf: 74 20                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff800217c1: 80 7f 06 00          	cmp	byte ptr [rdi + 0x6], 0x0
ffffffff800217c5: 0f 84 a9 00 00 00    	je	0xffffffff80021874 <strlen+0x134>
ffffffff800217cb: 80 fa 01             	cmp	dl, 0x1
ffffffff800217ce: 74 11                	je	0xffffffff800217e1 <strlen+0xa1>
ffffffff800217d0: 80 7f 07 00          	cmp	byte ptr [rdi + 0x7], 0x0
ffffffff800217d4: 75 0b                	jne	0xffffffff800217e1 <strlen+0xa1>
ffffffff800217d6: b8 07 00 00 00       	mov	eax, 0x7
ffffffff800217db: c3                   	ret
ffffffff800217dc: 31 c0                	xor	eax, eax
ffffffff800217de: 48 89 f9             	mov	rcx, rdi
ffffffff800217e1: 48 be 80 80 80 80 80 80 80 80	movabs	rsi, -0x7f7f7f7f7f7f7f80
ffffffff800217eb: 48 bf 00 01 01 01 01 01 01 01	movabs	rdi, 0x101010101010100
ffffffff800217f5: 48 8b 11             	mov	rdx, qword ptr [rcx]
ffffffff800217f8: 49 89 f8             	mov	r8, rdi
ffffffff800217fb: 49 29 d0             	sub	r8, rdx
ffffffff800217fe: 49 09 d0             	or	r8, rdx
ffffffff80021801: 49 f7 d0             	not	r8
ffffffff80021804: 49 85 f0             	test	r8, rsi
ffffffff80021807: 75 23                	jne	0xffffffff8002182c <strlen+0xec>
ffffffff80021809: 48 83 c1 08          	add	rcx, 0x8
ffffffff8002180d: 0f 1f 00             	nop	dword ptr [rax]
ffffffff80021810: 48 83 c0 08          	add	rax, 0x8
ffffffff80021814: 48 8b 11             	mov	rdx, qword ptr [rcx]
ffffffff80021817: 49 89 f8             	mov	r8, rdi
ffffffff8002181a: 49 29 d0             	sub	r8, rdx
ffffffff8002181d: 49 09 d0             	or	r8, rdx
ffffffff80021820: 49 f7 d0             	not	r8
ffffffff80021823: 48 83 c1 08          	add	rcx, 0x8
ffffffff80021827: 4c 85 c6             	test	rsi, r8
ffffffff8002182a: 74 e4                	je	0xffffffff80021810 <strlen+0xd0>
ffffffff8002182c: 84 d2                	test	dl, dl
ffffffff8002182e: 74 22                	je	0xffffffff80021852 <strlen+0x112>
ffffffff80021830: 48 89 d1             	mov	rcx, rdx
ffffffff80021833: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nop	word ptr cs:[rax + rax]
ffffffff80021840: 48 c1 e9 08          	shr	rcx, 0x8
ffffffff80021844: 48 ff c0             	inc	rax
ffffffff80021847: f7 c2 00 ff 00 00    	test	edx, 0xff00
ffffffff8002184d: 48 89 ca             	mov	rdx, rcx
ffffffff80021850: 75 ee                	jne	0xffffffff80021840 <strlen+0x100>
ffffffff80021852: c3                   	ret
ffffffff80021853: 31 c0                	xor	eax, eax
ffffffff80021855: c3                   	ret
ffffffff80021856: b8 01 00 00 00       	mov	eax, 0x1
ffffffff8002185b: c3                   	ret
ffffffff8002185c: b8 02 00 00 00       	mov	eax, 0x2
ffffffff80021861: c3                   	ret
ffffffff80021862: b8 03 00 00 00       	mov	eax, 0x3
ffffffff80021867: c3                   	ret
ffffffff80021868: b8 04 00 00 00       	mov	eax, 0x4
ffffffff8002186d: c3                   	ret
ffffffff8002186e: b8 05 00 00 00       	mov	eax, 0x5
ffffffff80021873: c3                   	ret
ffffffff80021874: b8 06 00 00 00       	mov	eax, 0x6
ffffffff80021879: c3                   	ret
ffffffff8002187a: cc                   	int3
ffffffff8002187b: cc                   	int3
ffffffff8002187c: cc                   	int3
ffffffff8002187d: cc                   	int3
ffffffff8002187e: cc                   	int3
ffffffff8002187f: cc                   	int3

ffffffff80021880 <memcpy>:
ffffffff80021880: 48 89 f8             	mov	rax, rdi
ffffffff80021883: 41 89 c0             	mov	r8d, eax
ffffffff80021886: 41 f7 d8             	neg	r8d
ffffffff80021889: 41 83 e0 07          	and	r8d, 0x7
ffffffff8002188d: 49 39 d0             	cmp	r8, rdx
ffffffff80021890: 4c 0f 43 c2          	cmovae	r8, rdx
ffffffff80021894: 4c 89 c1             	mov	rcx, r8
ffffffff80021897: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff80021899: 4c 29 c2             	sub	rdx, r8
ffffffff8002189c: 48 89 d1             	mov	rcx, rdx
ffffffff8002189f: 48 c1 e9 03          	shr	rcx, 0x3
ffffffff800218a3: f3 48 a5             	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
ffffffff800218a6: 83 e2 07             	and	edx, 0x7
ffffffff800218a9: 48 89 d1             	mov	rcx, rdx
ffffffff800218ac: f3 a4                	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
ffffffff800218ae: c3                   	ret
ffffffff800218af: cc                   	int3

ffffffff800218b0 <memset>:
ffffffff800218b0: 49 89 d0             	mov	r8, rdx
ffffffff800218b3: 48 89 fa             	mov	rdx, rdi
ffffffff800218b6: 89 d1                	mov	ecx, edx
ffffffff800218b8: f7 d9                	neg	ecx
ffffffff800218ba: 83 e1 07             	and	ecx, 0x7
ffffffff800218bd: 4c 39 c1             	cmp	rcx, r8
ffffffff800218c0: 49 0f 43 c8          	cmovae	rcx, r8
ffffffff800218c4: 40 0f b6 f6          	movzx	esi, sil
ffffffff800218c8: 48 b8 01 01 01 01 01 01 01 01	movabs	rax, 0x101010101010101
ffffffff800218d2: 48 0f af c6          	imul	rax, rsi
ffffffff800218d6: 49 29 c8             	sub	r8, rcx
ffffffff800218d9: 4c 89 c6             	mov	rsi, r8
ffffffff800218dc: 48 c1 ee 03          	shr	rsi, 0x3
ffffffff800218e0: 41 83 e0 07          	and	r8d, 0x7
ffffffff800218e4: f3 aa                	rep		stosb	byte ptr es:[rdi], al
ffffffff800218e6: 48 89 f1             	mov	rcx, rsi
ffffffff800218e9: f3 48 ab             	rep		stosq	qword ptr es:[rdi], rax
ffffffff800218ec: 4c 89 c1             	mov	rcx, r8
ffffffff800218ef: f3 aa                	rep		stosb	byte ptr es:[rdi], al
ffffffff800218f1: 48 89 d0             	mov	rax, rdx
ffffffff800218f4: c3                   	ret
